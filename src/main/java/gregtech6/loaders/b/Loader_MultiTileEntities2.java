/**
 * Copyright (c) 2020 Gregorius Techneticies
 *
 * This file is part of gregtech6.
 *
 * GregTech is free software: you can redistribute it and/or modify
 * it under the terms of the GNU Lesser General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * GregTech is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
 * GNU Lesser General Public License for more details.
 *
 * You should have received a copy of the GNU Lesser General Public License
 * along with gregtech6. If not, see <http://www.gnu.org/licenses/>.
 */

package gregtech6.loaders.b;

import static gregapi6.data.CS.*;

import gregapi6.block.multitileentity.MultiTileEntityBlock;
import gregapi6.block.multitileentity.MultiTileEntityRegistry;
import gregapi6.cover.CoverRegistry;
import gregapi6.cover.covers.CoverAsphalt;
import gregapi6.cover.covers.CoverTextureSimple;
import gregapi6.data.ANY;
import gregapi6.data.CS;
import gregapi6.data.CS.BlocksGT;
import gregapi6.data.CS.GarbageGT;
import gregapi6.data.CS.ItemsGT;
import gregapi6.data.CS.PlankData;
import gregapi6.data.CS.SFX;
import gregapi6.data.IL;
import gregapi6.data.MD;
import gregapi6.data.MT;
import gregapi6.data.OD;
import gregapi6.data.OP;
import gregapi6.data.RM;
import gregapi6.data.TD;
import gregapi6.old.Textures;
import gregapi6.oredict.OreDictItemData;
import gregapi6.oredict.OreDictManager;
import gregapi6.oredict.OreDictMaterial;
import gregapi6.render.BlockTextureCopied;
import gregapi6.render.BlockTextureDefault;
import gregapi6.tileentity.connectors.ITileEntityRedstoneWire;
import gregapi6.tileentity.connectors.MultiTileEntityAxle;
import gregapi6.tileentity.connectors.MultiTileEntityOpticalFiber;
import gregapi6.tileentity.connectors.MultiTileEntityPipeFluid;
import gregapi6.tileentity.connectors.MultiTileEntityPipeItem;
import gregapi6.tileentity.connectors.MultiTileEntityWireElectric;
import gregapi6.tileentity.connectors.MultiTileEntityWireLaser;
import gregapi6.tileentity.connectors.MultiTileEntityWireLogistics;
import gregapi6.tileentity.connectors.MultiTileEntityWireRedstone;
import gregapi6.tileentity.connectors.MultiTileEntityWireRedstoneInsulated;
import gregapi6.tileentity.machines.MultiTileEntityBasicMachine;
import gregapi6.tileentity.machines.MultiTileEntityBasicMachineElectric;
import gregapi6.util.CR;
import gregapi6.util.OM;
import gregapi6.util.ST;
import gregapi6.util.UT;
import gregtech6.tileentity.energy.converters.MultiTileEntityEngineRotation;
import gregtech6.tileentity.energy.transformers.MultiTileEntityGearBox;
import gregtech6.tileentity.energy.transformers.MultiTileEntityTransformerRotation;
import gregtech6.tileentity.extenders.MultiTileEntityExtender;
import gregtech6.tileentity.extenders.MultiTileEntityExtenderController;
import gregtech6.tileentity.extenders.MultiTileEntityFilter;
import gregtech6.tileentity.extenders.MultiTileEntityFilterPrefix;
import gregtech6.tileentity.inventories.MultiTileEntityEnderGarbageBin;
import gregtech6.tileentity.inventories.MultiTileEntityEnderGarbageDump;
import gregtech6.tileentity.misc.MultiTileEntityBumbleHive;
import gregtech6.tileentity.misc.MultiTileEntityCFoam;
import gregtech6.tileentity.misc.MultiTileEntityCertificate;
import gregtech6.tileentity.misc.MultiTileEntityCoin;
import gregtech6.tileentity.misc.MultiTileEntityFluidSpring;
import gregtech6.tileentity.misc.MultiTileEntityGregOLantern;
import gregtech6.tileentity.misc.MultiTileEntityIngot;
import gregtech6.tileentity.misc.MultiTileEntityPlate;
import gregtech6.tileentity.misc.MultiTileEntityPlateGem;
import gregtech6.tileentity.misc.MultiTileEntityRock;
import gregtech6.tileentity.misc.MultiTileEntityRockPlaced;
import gregtech6.tileentity.misc.MultiTileEntityStick;
import gregtech6.tileentity.misc.MultiTileEntityStickPlaced;
import gregtech6.tileentity.panels.MultiTileEntityPanelAsphalt;
import gregtech6.tileentity.panels.MultiTileEntityPanelCFoam;
import gregtech6.tileentity.panels.MultiTileEntityPanelConcrete;
import gregtech6.tileentity.panels.MultiTileEntityPanelWood;
import gregtech6.tileentity.plants.MultiTileEntityBush;
import gregtech6.tileentity.plants.MultiTileEntityResinHoleRubber;
import gregtech6.tileentity.plants.MultiTileEntitySapHoleMaple;
import gregtech6.tileentity.plants.MultiTileEntitySapHoleRainbowood;
import gregtech6.tileentity.portals.MultiTileEntityMiniPortalAether;
import gregtech6.tileentity.portals.MultiTileEntityMiniPortalAlfheim;
import gregtech6.tileentity.portals.MultiTileEntityMiniPortalAtum;
import gregtech6.tileentity.portals.MultiTileEntityMiniPortalBetweenlands;
import gregtech6.tileentity.portals.MultiTileEntityMiniPortalCandyCraft;
import gregtech6.tileentity.portals.MultiTileEntityMiniPortalDeepDark;
import gregtech6.tileentity.portals.MultiTileEntityMiniPortalEnd;
import gregtech6.tileentity.portals.MultiTileEntityMiniPortalEndOfTime;
import gregtech6.tileentity.portals.MultiTileEntityMiniPortalEnviromine;
import gregtech6.tileentity.portals.MultiTileEntityMiniPortalErebus;
import gregtech6.tileentity.portals.MultiTileEntityMiniPortalNether;
import gregtech6.tileentity.portals.MultiTileEntityMiniPortalTropics;
import gregtech6.tileentity.portals.MultiTileEntityMiniPortalTwilight;
import gregtech6.tileentity.redstone.MultiTileEntityButtonAdvanced;
import gregtech6.tileentity.sensors.MultiTileEntityBucketometer;
import gregtech6.tileentity.sensors.MultiTileEntityChronometer;
import gregtech6.tileentity.sensors.MultiTileEntityElectrometer;
import gregtech6.tileentity.sensors.MultiTileEntityFluidometer;
import gregtech6.tileentity.sensors.MultiTileEntityGeigerCounter;
import gregtech6.tileentity.sensors.MultiTileEntityGibblometer;
import gregtech6.tileentity.sensors.MultiTileEntityItemometer;
import gregtech6.tileentity.sensors.MultiTileEntityLuminometer;
import gregtech6.tileentity.sensors.MultiTileEntityPlayerCounter;
import gregtech6.tileentity.sensors.MultiTileEntityProgressmeter;
import gregtech6.tileentity.sensors.MultiTileEntityStackometer;
import gregtech6.tileentity.sensors.MultiTileEntityTPSmeter;
import gregtech6.tileentity.sensors.MultiTileEntityTachometer;
import gregtech6.tileentity.sensors.MultiTileEntityThermometer;
import gregtech6.tileentity.sensors.MultiTileEntityWeightometerHeavy;
import gregtech6.tileentity.sensors.MultiTileEntityWeightometerLight;
import gregtech6.tileentity.sensors.MultiTileEntityWeightometerMedium;
import gregtech6.tileentity.sensors.MultiTileEntityWeightometerSuperHeavy;
import gregtech6.tileentity.tanks.MultiTileEntityBarometerGasCylinder;
import gregtech6.tileentity.tanks.MultiTileEntityBarrelLogistics;
import gregtech6.tileentity.tanks.MultiTileEntityBarrelMetal;
import gregtech6.tileentity.tanks.MultiTileEntityBarrelPlastic;
import gregtech6.tileentity.tanks.MultiTileEntityBarrelWood;
import gregtech6.tileentity.tanks.MultiTileEntityCell;
import gregtech6.tileentity.tanks.MultiTileEntityCup;
import gregtech6.tileentity.tanks.MultiTileEntityJug;
import gregtech6.tileentity.tanks.MultiTileEntityMeasuringPot;
import gregtech6.tileentity.tanks.MultiTileEntityThermos;
import gregtech6.tileentity.tools.MultiTileEntityAnvil;
import gregtech6.tileentity.tools.MultiTileEntityBathingPot;
import gregtech6.tileentity.tools.MultiTileEntityBathingPotTable;
import gregtech6.tileentity.tools.MultiTileEntityBathingPotTableWood;
import gregtech6.tileentity.tools.MultiTileEntityBathingPotWood;
import gregtech6.tileentity.tools.MultiTileEntityBumbliary;
import gregtech6.tileentity.tools.MultiTileEntityBumbliaryAdvanced;
import gregtech6.tileentity.tools.MultiTileEntityDustFunnel;
import gregtech6.tileentity.tools.MultiTileEntityDynamite;
import gregtech6.tileentity.tools.MultiTileEntityFluidCapNozzle;
import gregtech6.tileentity.tools.MultiTileEntityFluidFunnel;
import gregtech6.tileentity.tools.MultiTileEntityFluidNozzle;
import gregtech6.tileentity.tools.MultiTileEntityFluidTap;
import gregtech6.tileentity.tools.MultiTileEntityGrindStone;
import gregtech6.tileentity.tools.MultiTileEntityJuicer;
import gregtech6.tileentity.tools.MultiTileEntityMixingBowl;
import gregtech6.tileentity.tools.MultiTileEntityMixingBowlTable;
import gregtech6.tileentity.tools.MultiTileEntityMoldCoinage;
import gregtech6.tileentity.tools.MultiTileEntityMortar;
import gregtech6.tileentity.tools.MultiTileEntityPlantPot;
import gregtech6.tileentity.tools.MultiTileEntityRope;
import gregtech6.tileentity.tools.MultiTileEntitySapBag;
import gregtech6.tileentity.tools.MultiTileEntitySiftingTable;
import net.minecraft.init.Blocks;
import net.minecraft.init.Items;
import net.minecraft.item.ItemStack;
import net.minecraft.tileentity.TileEntity;

public class Loader_MultiTileEntities2 {

	public static void run(MultiTileEntityRegistry aRegistry, MultiTileEntityBlock aMetal, MultiTileEntityBlock aMetalChips, MultiTileEntityBlock aMetalWires, MultiTileEntityBlock aMachine, MultiTileEntityBlock aWooden, MultiTileEntityBlock aBush, MultiTileEntityBlock aStone, MultiTileEntityBlock aWool, MultiTileEntityBlock aTNT, MultiTileEntityBlock aHive, MultiTileEntityBlock aUtilMetal, MultiTileEntityBlock aUtilStone, MultiTileEntityBlock aUtilWood, MultiTileEntityBlock aUtilWool, OreDictMaterial aMat, Class<? extends TileEntity> aClass) {

		machines1  (aRegistry, aMetal, aMetalChips, aMetalWires, aMachine, aWooden, aBush, aStone, aWool, aTNT, aHive, aUtilMetal, aUtilStone, aUtilWood, aUtilWool, MT.NULL, null);
		machines1_2  (aRegistry, aMetal, aMetalChips, aMetalWires, aMachine, aWooden, aBush, aStone, aWool, aTNT, aHive, aUtilMetal, aUtilStone, aUtilWood, aUtilWool, MT.NULL, null);
		machines2  (aRegistry, aMetal, aMetalChips, aMetalWires, aMachine, aWooden, aBush, aStone, aWool, aTNT, aHive, aUtilMetal, aUtilStone, aUtilWood, aUtilWool, MT.NULL, null);
		machines2_2  (aRegistry, aMetal, aMetalChips, aMetalWires, aMachine, aWooden, aBush, aStone, aWool, aTNT, aHive, aUtilMetal, aUtilStone, aUtilWood, aUtilWool, MT.NULL, null);
		machines3  (aRegistry, aMetal, aMetalChips, aMetalWires, aMachine, aWooden, aBush, aStone, aWool, aTNT, aHive, aUtilMetal, aUtilStone, aUtilWood, aUtilWool, MT.NULL, null);
		machines3_2  (aRegistry, aMetal, aMetalChips, aMetalWires, aMachine, aWooden, aBush, aStone, aWool, aTNT, aHive, aUtilMetal, aUtilStone, aUtilWood, aUtilWool, MT.NULL, null);
		machines4  (aRegistry, aMetal, aMetalChips, aMetalWires, aMachine, aWooden, aBush, aStone, aWool, aTNT, aHive, aUtilMetal, aUtilStone, aUtilWood, aUtilWool, MT.NULL, null);
		kinetic    (aRegistry, aMetal, aMetalChips, aMetalWires, aMachine, aWooden, aBush, aStone, aWool, aTNT, aHive, aUtilMetal, aUtilStone, aUtilWood, aUtilWool, MT.NULL, null);
		connectors (aRegistry, aMetal, aMetalChips, aMetalWires, aMachine, aWooden, aBush, aStone, aWool, aTNT, aHive, aUtilMetal, aUtilStone, aUtilWood, aUtilWool, MT.NULL, null);
		extenders  (aRegistry, aMetal, aMetalChips, aMetalWires, aMachine, aWooden, aBush, aStone, aWool, aTNT, aHive, aUtilMetal, aUtilStone, aUtilWood, aUtilWool, MT.NULL, null);
		sensors    (aRegistry, aMetal, aMetalChips, aMetalWires, aMachine, aWooden, aBush, aStone, aWool, aTNT, aHive, aUtilMetal, aUtilStone, aUtilWood, aUtilWool, MT.NULL, null);
		misc       (aRegistry, aMetal, aMetalChips, aMetalWires, aMachine, aWooden, aBush, aStone, aWool, aTNT, aHive, aUtilMetal, aUtilStone, aUtilWood, aUtilWool, MT.NULL, null);
	}

	private static void machines1(MultiTileEntityRegistry aRegistry, MultiTileEntityBlock aMetal, MultiTileEntityBlock aMetalChips, MultiTileEntityBlock aMetalWires, MultiTileEntityBlock aMachine, MultiTileEntityBlock aWooden, MultiTileEntityBlock aBush, MultiTileEntityBlock aStone, MultiTileEntityBlock aWool, MultiTileEntityBlock aTNT, MultiTileEntityBlock aHive, MultiTileEntityBlock aUtilMetal, MultiTileEntityBlock aUtilStone, MultiTileEntityBlock aUtilWood, MultiTileEntityBlock aUtilWool, OreDictMaterial aMat, Class<? extends TileEntity> aClass) {
		aClass = MultiTileEntityBasicMachine.class;
		aMat = MT.DATA.Heat_T[0];       aRegistry.add("Oven (" + aMat.getLocal() + ")"                      , "Basic Machines"                      , 20001, 20001, aClass, aMat.mToolQuality, 16, aMachine     , UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS, HARDNESS[0], NBT_RESISTANCE, HARDNESS[0], NBT_COLOR, UT.Code.getRGBInt(aMat.fRGBaSolid), NBT_INPUT, V[0], NBT_TEXTURE, "oven", NBT_ENERGY_ACCEPTED, TD.Energy.HU, NBT_RECIPEMAP, RM.Furnace, NBT_INV_SIDE_IN, SBIT_L, NBT_INV_SIDE_AUTO_IN, SIDE_LEFT, NBT_INV_SIDE_OUT, SBIT_R, NBT_INV_SIDE_AUTO_OUT, SIDE_RIGHT, NBT_ENERGY_ACCEPTED_SIDES, SBIT_D), "wMh", "BCB", "BCB", 'M', OP.casingMachine.dat(aMat), 'C', OP.plateDouble.dat(ANY.Cu), 'B', OP.plateDouble.dat(MT.Stone));
		aMat = MT.DATA.Heat_T[1];       aRegistry.add("Oven (" + aMat.getLocal() + ")"                      , "Basic Machines"                      , 20002, 20001, aClass, aMat.mToolQuality, 16, aMachine     , UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS, HARDNESS[1], NBT_RESISTANCE, HARDNESS[1], NBT_COLOR, UT.Code.getRGBInt(aMat.fRGBaSolid), NBT_INPUT, V[1], NBT_TEXTURE, "oven", NBT_ENERGY_ACCEPTED, TD.Energy.HU, NBT_RECIPEMAP, RM.Furnace, NBT_INV_SIDE_IN, SBIT_L, NBT_INV_SIDE_AUTO_IN, SIDE_LEFT, NBT_INV_SIDE_OUT, SBIT_R, NBT_INV_SIDE_AUTO_OUT, SIDE_RIGHT, NBT_ENERGY_ACCEPTED_SIDES, SBIT_D), "wMh", "BCB", "BCB", 'M', OP.casingMachine.dat(aMat), 'C', OP.plateDouble.dat(ANY.Cu), 'B', Blocks.brick_block);
		aMat = MT.DATA.Heat_T[2];       aRegistry.add("Oven (" + aMat.getLocal() + ")"                      , "Basic Machines"                      , 20003, 20001, aClass, aMat.mToolQuality, 16, aMachine     , UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS, HARDNESS[2], NBT_RESISTANCE, HARDNESS[2], NBT_COLOR, UT.Code.getRGBInt(aMat.fRGBaSolid), NBT_INPUT, V[2], NBT_TEXTURE, "oven", NBT_ENERGY_ACCEPTED, TD.Energy.HU, NBT_RECIPEMAP, RM.Furnace, NBT_INV_SIDE_IN, SBIT_L, NBT_INV_SIDE_AUTO_IN, SIDE_LEFT, NBT_INV_SIDE_OUT, SBIT_R, NBT_INV_SIDE_AUTO_OUT, SIDE_RIGHT, NBT_ENERGY_ACCEPTED_SIDES, SBIT_D), "wMh", "BCB", "BCB", 'M', OP.casingMachine.dat(aMat), 'C', OP.plateDouble.dat(ANY.Cu), 'B', Blocks.brick_block);
		aMat = MT.DATA.Heat_T[3];       aRegistry.add("Oven (" + aMat.getLocal() + ")"                      , "Basic Machines"                      , 20004, 20001, aClass, aMat.mToolQuality, 16, aMachine     , UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS, HARDNESS[3], NBT_RESISTANCE, HARDNESS[3], NBT_COLOR, UT.Code.getRGBInt(aMat.fRGBaSolid), NBT_INPUT, V[3], NBT_TEXTURE, "oven", NBT_ENERGY_ACCEPTED, TD.Energy.HU, NBT_RECIPEMAP, RM.Furnace, NBT_INV_SIDE_IN, SBIT_L, NBT_INV_SIDE_AUTO_IN, SIDE_LEFT, NBT_INV_SIDE_OUT, SBIT_R, NBT_INV_SIDE_AUTO_OUT, SIDE_RIGHT, NBT_ENERGY_ACCEPTED_SIDES, SBIT_D), "wMh", "BCB", "BCB", 'M', OP.casingMachine.dat(aMat), 'C', OP.plateDouble.dat(ANY.Cu), 'B', Blocks.brick_block);
		aMat = MT.DATA.Heat_T[4];       aRegistry.add("Oven (" + aMat.getLocal() + ")"                      , "Basic Machines"                      , 20005, 20001, aClass, aMat.mToolQuality, 16, aMachine     , UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS, HARDNESS[4], NBT_RESISTANCE, HARDNESS[4], NBT_COLOR, UT.Code.getRGBInt(aMat.fRGBaSolid), NBT_INPUT, V[4], NBT_TEXTURE, "oven", NBT_ENERGY_ACCEPTED, TD.Energy.HU, NBT_RECIPEMAP, RM.Furnace, NBT_INV_SIDE_IN, SBIT_L, NBT_INV_SIDE_AUTO_IN, SIDE_LEFT, NBT_INV_SIDE_OUT, SBIT_R, NBT_INV_SIDE_AUTO_OUT, SIDE_RIGHT, NBT_ENERGY_ACCEPTED_SIDES, SBIT_D), "wMh", "BCB", "BCB", 'M', OP.casingMachine.dat(aMat), 'C', OP.plateDouble.dat(ANY.Cu), 'B', Blocks.brick_block);
		aMat = MT.DATA.Heat_T[5];       aRegistry.add("Oven (" + aMat.getLocal() + ")"                      , "Basic Machines"                      , 20006, 20001, aClass, aMat.mToolQuality, 16, aMachine     , UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS, HARDNESS[5], NBT_RESISTANCE, HARDNESS[5], NBT_COLOR, UT.Code.getRGBInt(aMat.fRGBaSolid), NBT_INPUT, V[5], NBT_TEXTURE, "oven", NBT_ENERGY_ACCEPTED, TD.Energy.HU, NBT_RECIPEMAP, RM.Furnace, NBT_INV_SIDE_IN, SBIT_L, NBT_INV_SIDE_AUTO_IN, SIDE_LEFT, NBT_INV_SIDE_OUT, SBIT_R, NBT_INV_SIDE_AUTO_OUT, SIDE_RIGHT, NBT_ENERGY_ACCEPTED_SIDES, SBIT_D), "wMh", "BCB", "BCB", 'M', OP.casingMachine.dat(aMat), 'C', OP.plateDouble.dat(ANY.Cu), 'B', Blocks.brick_block);
		aMat = MT.DATA.Heat_T[6];       aRegistry.add("Oven (" + aMat.getLocal() + ")"                      , "Basic Machines"                      , 20007, 20001, aClass, aMat.mToolQuality, 16, aMachine     , UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS, HARDNESS[6], NBT_RESISTANCE, HARDNESS[6], NBT_COLOR, UT.Code.getRGBInt(aMat.fRGBaSolid), NBT_INPUT, V[6], NBT_TEXTURE, "oven", NBT_ENERGY_ACCEPTED, TD.Energy.HU, NBT_RECIPEMAP, RM.Furnace, NBT_INV_SIDE_IN, SBIT_L, NBT_INV_SIDE_AUTO_IN, SIDE_LEFT, NBT_INV_SIDE_OUT, SBIT_R, NBT_INV_SIDE_AUTO_OUT, SIDE_RIGHT, NBT_ENERGY_ACCEPTED_SIDES, SBIT_D), "wMh", "BCB", "BCB", 'M', OP.casingMachine.dat(aMat), 'C', OP.plateDouble.dat(ANY.Cu), 'B', Blocks.brick_block);
		aMat = MT.DATA.Heat_T[7];       aRegistry.add("Oven (" + aMat.getLocal() + ")"                      , "Basic Machines"                      , 20008, 20001, aClass, aMat.mToolQuality, 16, aMachine     , UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS, HARDNESS[7], NBT_RESISTANCE, HARDNESS[7], NBT_COLOR, UT.Code.getRGBInt(aMat.fRGBaSolid), NBT_INPUT, V[7], NBT_TEXTURE, "oven", NBT_ENERGY_ACCEPTED, TD.Energy.HU, NBT_RECIPEMAP, RM.Furnace, NBT_INV_SIDE_IN, SBIT_L, NBT_INV_SIDE_AUTO_IN, SIDE_LEFT, NBT_INV_SIDE_OUT, SBIT_R, NBT_INV_SIDE_AUTO_OUT, SIDE_RIGHT, NBT_ENERGY_ACCEPTED_SIDES, SBIT_D), "wMh", "BCB", "BCB", 'M', OP.casingMachine.dat(aMat), 'C', OP.plateDouble.dat(ANY.Cu), 'B', Blocks.brick_block);
		aMat = MT.DATA.Heat_T[8];       aRegistry.add("Oven (" + aMat.getLocal() + ")"                      , "Basic Machines"                      , 20009, 20001, aClass, aMat.mToolQuality, 16, aMachine     , UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS, HARDNESS[8], NBT_RESISTANCE, HARDNESS[8], NBT_COLOR, UT.Code.getRGBInt(aMat.fRGBaSolid), NBT_INPUT, V[8], NBT_TEXTURE, "oven", NBT_ENERGY_ACCEPTED, TD.Energy.HU, NBT_RECIPEMAP, RM.Furnace, NBT_INV_SIDE_IN, SBIT_L, NBT_INV_SIDE_AUTO_IN, SIDE_LEFT, NBT_INV_SIDE_OUT, SBIT_R, NBT_INV_SIDE_AUTO_OUT, SIDE_RIGHT, NBT_ENERGY_ACCEPTED_SIDES, SBIT_D), "wMh", "BCB", "BCB", 'M', OP.casingMachine.dat(aMat), 'C', OP.plateDouble.dat(ANY.Cu), 'B', Blocks.brick_block);
		aMat = MT.DATA.Heat_T[9];       aRegistry.add("Oven (" + aMat.getLocal() + ")"                      , "Basic Machines"                      , 20010, 20001, aClass, aMat.mToolQuality, 16, aMachine     , UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS, HARDNESS[9], NBT_RESISTANCE, HARDNESS[9], NBT_COLOR, UT.Code.getRGBInt(aMat.fRGBaSolid), NBT_INPUT, V[9], NBT_TEXTURE, "oven", NBT_ENERGY_ACCEPTED, TD.Energy.HU, NBT_RECIPEMAP, RM.Furnace, NBT_INV_SIDE_IN, SBIT_L, NBT_INV_SIDE_AUTO_IN, SIDE_LEFT, NBT_INV_SIDE_OUT, SBIT_R, NBT_INV_SIDE_AUTO_OUT, SIDE_RIGHT, NBT_ENERGY_ACCEPTED_SIDES, SBIT_D), "wMh", "BCB", "BCB", 'M', OP.casingMachine.dat(aMat), 'C', OP.plateDouble.dat(ANY.Cu), 'B', Blocks.brick_block);
		aMat = MT.DATA.Heat_T[10];       aRegistry.add("Oven (" + aMat.getLocal() + ")"                      , "Basic Machines"                      , 20011, 20001, aClass, aMat.mToolQuality, 16, aMachine     , UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS, HARDNESS[10], NBT_RESISTANCE, HARDNESS[10], NBT_COLOR, UT.Code.getRGBInt(aMat.fRGBaSolid), NBT_INPUT, V[10], NBT_TEXTURE, "oven", NBT_ENERGY_ACCEPTED, TD.Energy.HU, NBT_RECIPEMAP, RM.Furnace, NBT_INV_SIDE_IN, SBIT_L, NBT_INV_SIDE_AUTO_IN, SIDE_LEFT, NBT_INV_SIDE_OUT, SBIT_R, NBT_INV_SIDE_AUTO_OUT, SIDE_RIGHT, NBT_ENERGY_ACCEPTED_SIDES, SBIT_D), "wMh", "BCB", 'M', OP.casingMachine.dat(aMat), 'C', OP.plateDouble.dat(ANY.Cu), 'B', Blocks.brick_block);
		aMat = MT.DATA.Heat_T[11];       aRegistry.add("Oven (" + aMat.getLocal() + ")"                      , "Basic Machines"                      , 20012, 20001, aClass, aMat.mToolQuality, 16, aMachine     , UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS, HARDNESS[11], NBT_RESISTANCE, HARDNESS[11], NBT_COLOR, UT.Code.getRGBInt(aMat.fRGBaSolid), NBT_INPUT, V[11], NBT_TEXTURE, "oven", NBT_ENERGY_ACCEPTED, TD.Energy.HU, NBT_RECIPEMAP, RM.Furnace, NBT_INV_SIDE_IN, SBIT_L, NBT_INV_SIDE_AUTO_IN, SIDE_LEFT, NBT_INV_SIDE_OUT, SBIT_R, NBT_INV_SIDE_AUTO_OUT, SIDE_RIGHT, NBT_ENERGY_ACCEPTED_SIDES, SBIT_D), "wMh", "BCB", 'M', OP.casingMachine.dat(aMat), 'C', OP.plateDouble.dat(ANY.Cu), 'B', Blocks.brick_block);
		aMat = MT.DATA.Heat_T[12];       aRegistry.add("Oven (" + aMat.getLocal() + ")"                      , "Basic Machines"                      , 20013, 20001, aClass, aMat.mToolQuality, 16, aMachine     , UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS, HARDNESS[12], NBT_RESISTANCE, HARDNESS[12], NBT_COLOR, UT.Code.getRGBInt(aMat.fRGBaSolid), NBT_INPUT, V[12], NBT_TEXTURE, "oven", NBT_ENERGY_ACCEPTED, TD.Energy.HU, NBT_RECIPEMAP, RM.Furnace, NBT_INV_SIDE_IN, SBIT_L, NBT_INV_SIDE_AUTO_IN, SIDE_LEFT, NBT_INV_SIDE_OUT, SBIT_R, NBT_INV_SIDE_AUTO_OUT, SIDE_RIGHT, NBT_ENERGY_ACCEPTED_SIDES, SBIT_D), "wMh", "BCB", 'M', OP.casingMachine.dat(aMat), 'C', OP.plateDouble.dat(ANY.Cu), 'B', Blocks.brick_block);
		aMat = MT.DATA.Heat_T[13];       aRegistry.add("Oven (" + aMat.getLocal() + ")"                      , "Basic Machines"                      , 20014, 20001, aClass, aMat.mToolQuality, 16, aMachine     , UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS, HARDNESS[13], NBT_RESISTANCE, HARDNESS[13], NBT_COLOR, UT.Code.getRGBInt(aMat.fRGBaSolid), NBT_INPUT, V[13], NBT_TEXTURE, "oven", NBT_ENERGY_ACCEPTED, TD.Energy.HU, NBT_RECIPEMAP, RM.Furnace, NBT_INV_SIDE_IN, SBIT_L, NBT_INV_SIDE_AUTO_IN, SIDE_LEFT, NBT_INV_SIDE_OUT, SBIT_R, NBT_INV_SIDE_AUTO_OUT, SIDE_RIGHT, NBT_ENERGY_ACCEPTED_SIDES, SBIT_D), "wMh", "BCB", 'M', OP.casingMachine.dat(aMat), 'C', OP.plateDouble.dat(ANY.Cu), 'B', Blocks.brick_block);
		aMat = MT.DATA.Heat_T[14];       aRegistry.add("Oven (" + aMat.getLocal() + ")"                      , "Basic Machines"                      , 20015, 20001, aClass, aMat.mToolQuality, 16, aMachine     , UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS, HARDNESS[14], NBT_RESISTANCE, HARDNESS[14], NBT_COLOR, UT.Code.getRGBInt(aMat.fRGBaSolid), NBT_INPUT, V[14], NBT_TEXTURE, "oven", NBT_ENERGY_ACCEPTED, TD.Energy.HU, NBT_RECIPEMAP, RM.Furnace, NBT_INV_SIDE_IN, SBIT_L, NBT_INV_SIDE_AUTO_IN, SIDE_LEFT, NBT_INV_SIDE_OUT, SBIT_R, NBT_INV_SIDE_AUTO_OUT, SIDE_RIGHT, NBT_ENERGY_ACCEPTED_SIDES, SBIT_D), "wMh", "BCB", 'M', OP.casingMachine.dat(aMat), 'C', OP.plateDouble.dat(ANY.Cu), 'B', Blocks.brick_block);
		aMat = MT.DATA.Heat_T[15];       aRegistry.add("Oven (" + aMat.getLocal() + ")"                      , "Basic Machines"                      , 20016, 20001, aClass, aMat.mToolQuality, 16, aMachine     , UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS, HARDNESS[15], NBT_RESISTANCE, HARDNESS[15], NBT_COLOR, UT.Code.getRGBInt(aMat.fRGBaSolid), NBT_INPUT, V[15], NBT_TEXTURE, "oven", NBT_ENERGY_ACCEPTED, TD.Energy.HU, NBT_RECIPEMAP, RM.Furnace, NBT_INV_SIDE_IN, SBIT_L, NBT_INV_SIDE_AUTO_IN, SIDE_LEFT, NBT_INV_SIDE_OUT, SBIT_R, NBT_INV_SIDE_AUTO_OUT, SIDE_RIGHT, NBT_ENERGY_ACCEPTED_SIDES, SBIT_D), "wMh", "BCB", 'M', OP.casingMachine.dat(aMat), 'C', OP.plateDouble.dat(ANY.Cu), 'B', Blocks.brick_block);
		//Stone Age
		aMat = MT.Stone;       aRegistry.add("Oven (" + aMat.getLocal() + ")"                      , "Basic Machines"                      , 20019, 20001, aClass, aMat.mToolQuality, 16, aMachine     , UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS, HARDNESS[0], NBT_RESISTANCE, HARDNESS[0], NBT_COLOR, UT.Code.getRGBInt(aMat.fRGBaSolid), NBT_INPUT, V[0]/2, NBT_TEXTURE, "oven", NBT_ENERGY_ACCEPTED, TD.Energy.HU, NBT_RECIPEMAP, RM.Furnace, NBT_INV_SIDE_IN, SBIT_L, NBT_INV_SIDE_AUTO_IN, SIDE_LEFT, NBT_INV_SIDE_OUT, SBIT_R, NBT_INV_SIDE_AUTO_OUT, SIDE_RIGHT, NBT_ENERGY_ACCEPTED_SIDES, SBIT_D), "wMh", "BCB", "BCB", 'M', OP.casingMachine.dat(aMat), 'C', OP.plateDouble.dat(MT.Bronze), 'B', OP.plateDouble.dat(MT.Stone));

		aClass = MultiTileEntityBasicMachine.class;
		aMat = MT.DATA.Heat_T[0];    aRegistry.add("Shredder (" + aMat.getLocal() + ")"                  , "Basic Machines"                      , 20021, 20001, aClass, aMat.mToolQuality, 16, aMachine     , UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS, HARDNESS[0], NBT_RESISTANCE, HARDNESS[0], NBT_COLOR, UT.Code.getRGBInt(aMat.fRGBaSolid), NBT_INPUT, V[0], NBT_TEXTURE, "shredder", NBT_ENERGY_ACCEPTED, TD.Energy.RU, NBT_RECIPEMAP, RM.Shredder, NBT_INV_SIDE_IN, SBIT_U, NBT_INV_SIDE_AUTO_IN, SIDE_TOP, NBT_INV_SIDE_OUT, SBIT_D, NBT_INV_SIDE_AUTO_OUT, SIDE_BOTTOM, NBT_ENERGY_ACCEPTED_SIDES, SBIT_L|SBIT_R), "GDG", "hMw", 'M', OP.casingMachineDouble.dat(aMat), 'G', OP.gearGt.dat(aMat), 'D', OP.plateGem.dat(ANY.Diamond));
		aMat = MT.DATA.Heat_T[1];    aRegistry.add("Shredder (" + aMat.getLocal() + ")"                  , "Basic Machines"                      , 20022, 20001, aClass, aMat.mToolQuality, 16, aMachine     , UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS, HARDNESS[1], NBT_RESISTANCE, HARDNESS[1], NBT_COLOR, UT.Code.getRGBInt(aMat.fRGBaSolid), NBT_INPUT, V[1], NBT_TEXTURE, "shredder", NBT_ENERGY_ACCEPTED, TD.Energy.RU, NBT_RECIPEMAP, RM.Shredder, NBT_INV_SIDE_IN, SBIT_U, NBT_INV_SIDE_AUTO_IN, SIDE_TOP, NBT_INV_SIDE_OUT, SBIT_D, NBT_INV_SIDE_AUTO_OUT, SIDE_BOTTOM, NBT_ENERGY_ACCEPTED_SIDES, SBIT_L|SBIT_R), "GDG", "hMw", 'M', OP.casingMachineDouble.dat(aMat), 'G', OP.gearGt.dat(aMat), 'D', OP.plateGem.dat(ANY.Diamond));
		aMat = MT.DATA.Heat_T[2];    aRegistry.add("Shredder (" + aMat.getLocal() + ")"                  , "Basic Machines"                      , 20023, 20001, aClass, aMat.mToolQuality, 16, aMachine     , UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS, HARDNESS[2], NBT_RESISTANCE, HARDNESS[2], NBT_COLOR, UT.Code.getRGBInt(aMat.fRGBaSolid), NBT_INPUT, V[2], NBT_TEXTURE, "shredder", NBT_ENERGY_ACCEPTED, TD.Energy.RU, NBT_RECIPEMAP, RM.Shredder, NBT_INV_SIDE_IN, SBIT_U, NBT_INV_SIDE_AUTO_IN, SIDE_TOP, NBT_INV_SIDE_OUT, SBIT_D, NBT_INV_SIDE_AUTO_OUT, SIDE_BOTTOM, NBT_ENERGY_ACCEPTED_SIDES, SBIT_L|SBIT_R), "GDG", "hMw", 'M', OP.casingMachineDouble.dat(aMat), 'G', OP.gearGt.dat(aMat), 'D', OP.plateGem.dat(ANY.Diamond));
		aMat = MT.DATA.Heat_T[3];    aRegistry.add("Shredder (" + aMat.getLocal() + ")"                  , "Basic Machines"                      , 20024, 20001, aClass, aMat.mToolQuality, 16, aMachine     , UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS, HARDNESS[3], NBT_RESISTANCE, HARDNESS[3], NBT_COLOR, UT.Code.getRGBInt(aMat.fRGBaSolid), NBT_INPUT, V[3], NBT_TEXTURE, "shredder", NBT_ENERGY_ACCEPTED, TD.Energy.RU, NBT_RECIPEMAP, RM.Shredder, NBT_INV_SIDE_IN, SBIT_U, NBT_INV_SIDE_AUTO_IN, SIDE_TOP, NBT_INV_SIDE_OUT, SBIT_D, NBT_INV_SIDE_AUTO_OUT, SIDE_BOTTOM, NBT_ENERGY_ACCEPTED_SIDES, SBIT_L|SBIT_R), "GDG", "hMw", 'M', OP.casingMachineDouble.dat(aMat), 'G', OP.gearGt.dat(aMat), 'D', OP.plateGem.dat(ANY.Diamond));
		aMat = MT.DATA.Heat_T[4];    aRegistry.add("Shredder (" + aMat.getLocal() + ")"                  , "Basic Machines"                      , 20025, 20001, aClass, aMat.mToolQuality, 16, aMachine     , UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS, HARDNESS[4], NBT_RESISTANCE, HARDNESS[4], NBT_COLOR, UT.Code.getRGBInt(aMat.fRGBaSolid), NBT_INPUT, V[4], NBT_TEXTURE, "shredder", NBT_ENERGY_ACCEPTED, TD.Energy.RU, NBT_RECIPEMAP, RM.Shredder, NBT_INV_SIDE_IN, SBIT_U, NBT_INV_SIDE_AUTO_IN, SIDE_TOP, NBT_INV_SIDE_OUT, SBIT_D, NBT_INV_SIDE_AUTO_OUT, SIDE_BOTTOM, NBT_ENERGY_ACCEPTED_SIDES, SBIT_L|SBIT_R), "GDG", "hMw", 'M', OP.casingMachineDouble.dat(aMat), 'G', OP.gearGt.dat(aMat), 'D', OP.plateGem.dat(ANY.Diamond));
		aMat = MT.DATA.Heat_T[5];    aRegistry.add("Shredder (" + aMat.getLocal() + ")"                  , "Basic Machines"                      , 20026, 20001, aClass, aMat.mToolQuality, 16, aMachine     , UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS, HARDNESS[5], NBT_RESISTANCE, HARDNESS[5], NBT_COLOR, UT.Code.getRGBInt(aMat.fRGBaSolid), NBT_INPUT, V[5], NBT_TEXTURE, "shredder", NBT_ENERGY_ACCEPTED, TD.Energy.RU, NBT_RECIPEMAP, RM.Shredder, NBT_INV_SIDE_IN, SBIT_U, NBT_INV_SIDE_AUTO_IN, SIDE_TOP, NBT_INV_SIDE_OUT, SBIT_D, NBT_INV_SIDE_AUTO_OUT, SIDE_BOTTOM, NBT_ENERGY_ACCEPTED_SIDES, SBIT_L|SBIT_R), "GDG", "hMw", 'M', OP.casingMachineDouble.dat(aMat), 'G', OP.gearGt.dat(aMat), 'D', OP.plateGem.dat(ANY.Diamond));
		aMat = MT.DATA.Heat_T[6];    aRegistry.add("Shredder (" + aMat.getLocal() + ")"                  , "Basic Machines"                      , 20027, 20001, aClass, aMat.mToolQuality, 16, aMachine     , UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS, HARDNESS[6], NBT_RESISTANCE, HARDNESS[6], NBT_COLOR, UT.Code.getRGBInt(aMat.fRGBaSolid), NBT_INPUT, V[6], NBT_TEXTURE, "shredder", NBT_ENERGY_ACCEPTED, TD.Energy.RU, NBT_RECIPEMAP, RM.Shredder, NBT_INV_SIDE_IN, SBIT_U, NBT_INV_SIDE_AUTO_IN, SIDE_TOP, NBT_INV_SIDE_OUT, SBIT_D, NBT_INV_SIDE_AUTO_OUT, SIDE_BOTTOM, NBT_ENERGY_ACCEPTED_SIDES, SBIT_L|SBIT_R), "GDG", "hMw", 'M', OP.casingMachineDouble.dat(aMat), 'G', OP.gearGt.dat(aMat), 'D', OP.plateGem.dat(ANY.Diamond));
		aMat = MT.DATA.Heat_T[7];    aRegistry.add("Shredder (" + aMat.getLocal() + ")"                  , "Basic Machines"                      , 20028, 20001, aClass, aMat.mToolQuality, 16, aMachine     , UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS, HARDNESS[7], NBT_RESISTANCE, HARDNESS[7], NBT_COLOR, UT.Code.getRGBInt(aMat.fRGBaSolid), NBT_INPUT, V[7], NBT_TEXTURE, "shredder", NBT_ENERGY_ACCEPTED, TD.Energy.RU, NBT_RECIPEMAP, RM.Shredder, NBT_INV_SIDE_IN, SBIT_U, NBT_INV_SIDE_AUTO_IN, SIDE_TOP, NBT_INV_SIDE_OUT, SBIT_D, NBT_INV_SIDE_AUTO_OUT, SIDE_BOTTOM, NBT_ENERGY_ACCEPTED_SIDES, SBIT_L|SBIT_R), "GDG", "hMw", 'M', OP.casingMachineDouble.dat(aMat), 'G', OP.gearGt.dat(aMat), 'D', OP.plateGem.dat(ANY.Diamond));
		aMat = MT.DATA.Heat_T[8];    aRegistry.add("Shredder (" + aMat.getLocal() + ")"                  , "Basic Machines"                      , 20029, 20001, aClass, aMat.mToolQuality, 16, aMachine     , UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS, HARDNESS[8], NBT_RESISTANCE, HARDNESS[8], NBT_COLOR, UT.Code.getRGBInt(aMat.fRGBaSolid), NBT_INPUT, V[8], NBT_TEXTURE, "shredder", NBT_ENERGY_ACCEPTED, TD.Energy.RU, NBT_RECIPEMAP, RM.Shredder, NBT_INV_SIDE_IN, SBIT_U, NBT_INV_SIDE_AUTO_IN, SIDE_TOP, NBT_INV_SIDE_OUT, SBIT_D, NBT_INV_SIDE_AUTO_OUT, SIDE_BOTTOM, NBT_ENERGY_ACCEPTED_SIDES, SBIT_L|SBIT_R), "GDG", "hMw", 'M', OP.casingMachineDouble.dat(aMat), 'G', OP.gearGt.dat(aMat), 'D', OP.plateGem.dat(ANY.Diamond));
		aMat = MT.DATA.Heat_T[9];    aRegistry.add("Shredder (" + aMat.getLocal() + ")"                  , "Basic Machines"                      , 20030, 20001, aClass, aMat.mToolQuality, 16, aMachine     , UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS, HARDNESS[9], NBT_RESISTANCE, HARDNESS[9], NBT_COLOR, UT.Code.getRGBInt(aMat.fRGBaSolid), NBT_INPUT, V[9], NBT_TEXTURE, "shredder", NBT_ENERGY_ACCEPTED, TD.Energy.RU, NBT_RECIPEMAP, RM.Shredder, NBT_INV_SIDE_IN, SBIT_U, NBT_INV_SIDE_AUTO_IN, SIDE_TOP, NBT_INV_SIDE_OUT, SBIT_D, NBT_INV_SIDE_AUTO_OUT, SIDE_BOTTOM, NBT_ENERGY_ACCEPTED_SIDES, SBIT_L|SBIT_R), "GDG", "hMw", 'M', OP.casingMachineDouble.dat(aMat), 'G', OP.gearGt.dat(aMat), 'D', OP.plateGem.dat(ANY.Diamond));
		aMat = MT.DATA.Heat_T[10];    aRegistry.add("Shredder (" + aMat.getLocal() + ")"                  , "Basic Machines"                      , 20031, 20001, aClass, aMat.mToolQuality, 16, aMachine     , UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS, HARDNESS[10], NBT_RESISTANCE, HARDNESS[10], NBT_COLOR, UT.Code.getRGBInt(aMat.fRGBaSolid), NBT_INPUT, V[10], NBT_TEXTURE, "shredder", NBT_ENERGY_ACCEPTED, TD.Energy.RU, NBT_RECIPEMAP, RM.Shredder, NBT_INV_SIDE_IN, SBIT_U, NBT_INV_SIDE_AUTO_IN, SIDE_TOP, NBT_INV_SIDE_OUT, SBIT_D, NBT_INV_SIDE_AUTO_OUT, SIDE_BOTTOM, NBT_ENERGY_ACCEPTED_SIDES, SBIT_L|SBIT_R), "GDG", "hMw", 'M', OP.casingMachineDouble.dat(aMat), 'G', OP.gearGt.dat(aMat), 'D', OP.plateGem.dat(ANY.Diamond));
		aMat = MT.DATA.Heat_T[11];    aRegistry.add("Shredder (" + aMat.getLocal() + ")"                  , "Basic Machines"                      , 20032, 20001, aClass, aMat.mToolQuality, 16, aMachine     , UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS, HARDNESS[11], NBT_RESISTANCE, HARDNESS[11], NBT_COLOR, UT.Code.getRGBInt(aMat.fRGBaSolid), NBT_INPUT, V[11], NBT_TEXTURE, "shredder", NBT_ENERGY_ACCEPTED, TD.Energy.RU, NBT_RECIPEMAP, RM.Shredder, NBT_INV_SIDE_IN, SBIT_U, NBT_INV_SIDE_AUTO_IN, SIDE_TOP, NBT_INV_SIDE_OUT, SBIT_D, NBT_INV_SIDE_AUTO_OUT, SIDE_BOTTOM, NBT_ENERGY_ACCEPTED_SIDES, SBIT_L|SBIT_R), "GDG", "hMw", 'M', OP.casingMachineDouble.dat(aMat), 'G', OP.gearGt.dat(aMat), 'D', OP.plateGem.dat(ANY.Diamond));
		aMat = MT.DATA.Heat_T[12];    aRegistry.add("Shredder (" + aMat.getLocal() + ")"                  , "Basic Machines"                      , 20033, 20001, aClass, aMat.mToolQuality, 16, aMachine     , UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS, HARDNESS[12], NBT_RESISTANCE, HARDNESS[12], NBT_COLOR, UT.Code.getRGBInt(aMat.fRGBaSolid), NBT_INPUT, V[12], NBT_TEXTURE, "shredder", NBT_ENERGY_ACCEPTED, TD.Energy.RU, NBT_RECIPEMAP, RM.Shredder, NBT_INV_SIDE_IN, SBIT_U, NBT_INV_SIDE_AUTO_IN, SIDE_TOP, NBT_INV_SIDE_OUT, SBIT_D, NBT_INV_SIDE_AUTO_OUT, SIDE_BOTTOM, NBT_ENERGY_ACCEPTED_SIDES, SBIT_L|SBIT_R), "GDG", "hMw", 'M', OP.casingMachineDouble.dat(aMat), 'G', OP.gearGt.dat(aMat), 'D', OP.plateGem.dat(ANY.Diamond));
		aMat = MT.DATA.Heat_T[13];    aRegistry.add("Shredder (" + aMat.getLocal() + ")"                  , "Basic Machines"                      , 20034, 20001, aClass, aMat.mToolQuality, 16, aMachine     , UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS, HARDNESS[13], NBT_RESISTANCE, HARDNESS[13], NBT_COLOR, UT.Code.getRGBInt(aMat.fRGBaSolid), NBT_INPUT, V[13], NBT_TEXTURE, "shredder", NBT_ENERGY_ACCEPTED, TD.Energy.RU, NBT_RECIPEMAP, RM.Shredder, NBT_INV_SIDE_IN, SBIT_U, NBT_INV_SIDE_AUTO_IN, SIDE_TOP, NBT_INV_SIDE_OUT, SBIT_D, NBT_INV_SIDE_AUTO_OUT, SIDE_BOTTOM, NBT_ENERGY_ACCEPTED_SIDES, SBIT_L|SBIT_R), "GDG", "hMw", 'M', OP.casingMachineDouble.dat(aMat), 'G', OP.gearGt.dat(aMat), 'D', OP.plateGem.dat(ANY.Diamond));
		aMat = MT.DATA.Heat_T[14];    aRegistry.add("Shredder (" + aMat.getLocal() + ")"                  , "Basic Machines"                      , 20035, 20001, aClass, aMat.mToolQuality, 16, aMachine     , UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS, HARDNESS[14], NBT_RESISTANCE, HARDNESS[14], NBT_COLOR, UT.Code.getRGBInt(aMat.fRGBaSolid), NBT_INPUT, V[14], NBT_TEXTURE, "shredder", NBT_ENERGY_ACCEPTED, TD.Energy.RU, NBT_RECIPEMAP, RM.Shredder, NBT_INV_SIDE_IN, SBIT_U, NBT_INV_SIDE_AUTO_IN, SIDE_TOP, NBT_INV_SIDE_OUT, SBIT_D, NBT_INV_SIDE_AUTO_OUT, SIDE_BOTTOM, NBT_ENERGY_ACCEPTED_SIDES, SBIT_L|SBIT_R), "GDG", "hMw", 'M', OP.casingMachineDouble.dat(aMat), 'G', OP.gearGt.dat(aMat), 'D', OP.plateGem.dat(ANY.Diamond));
		aMat = MT.DATA.Heat_T[15];    aRegistry.add("Shredder (" + aMat.getLocal() + ")"                  , "Basic Machines"                      , 20036, 20001, aClass, aMat.mToolQuality, 16, aMachine     , UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS, HARDNESS[15], NBT_RESISTANCE, HARDNESS[15], NBT_COLOR, UT.Code.getRGBInt(aMat.fRGBaSolid), NBT_INPUT, V[15], NBT_TEXTURE, "shredder", NBT_ENERGY_ACCEPTED, TD.Energy.RU, NBT_RECIPEMAP, RM.Shredder, NBT_INV_SIDE_IN, SBIT_U, NBT_INV_SIDE_AUTO_IN, SIDE_TOP, NBT_INV_SIDE_OUT, SBIT_D, NBT_INV_SIDE_AUTO_OUT, SIDE_BOTTOM, NBT_ENERGY_ACCEPTED_SIDES, SBIT_L|SBIT_R), "GDG", "hMw", 'M', OP.casingMachineDouble.dat(aMat), 'G', OP.gearGt.dat(aMat), 'D', OP.plateGem.dat(ANY.Diamond));

		aClass = MultiTileEntityBasicMachine.class;
		aMat = MT.DATA.Heat_T[0];    aRegistry.add("Crusher (" + aMat.getLocal() + ")"                   , "Basic Machines"                      , 20041, 20001, aClass, aMat.mToolQuality, 16, aMachine     , UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS, HARDNESS[0], NBT_RESISTANCE, HARDNESS[0], NBT_COLOR, UT.Code.getRGBInt(aMat.fRGBaSolid), NBT_INPUT, V[0], NBT_TEXTURE, "crusher", NBT_ENERGY_ACCEPTED, TD.Energy.KU, NBT_RECIPEMAP, RM.Crusher, NBT_INV_SIDE_IN, SBIT_U, NBT_INV_SIDE_AUTO_IN, SIDE_TOP, NBT_INV_SIDE_OUT, SBIT_D, NBT_INV_SIDE_AUTO_OUT, SIDE_BOTTOM, NBT_ENERGY_ACCEPTED_SIDES, SBIT_B, NBT_PARALLEL, 1, NBT_PARALLEL_DURATION, T), "DMD", "hSw", 'M', OP.casingMachineDouble.dat(aMat), 'S', OP.spring.dat(aMat), 'D', OP.gem.dat(ANY.Diamond));
		aMat = MT.DATA.Heat_T[1];    aRegistry.add("Crusher (" + aMat.getLocal() + ")"                   , "Basic Machines"                      , 20042, 20001, aClass, aMat.mToolQuality, 16, aMachine     , UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS, HARDNESS[1], NBT_RESISTANCE, HARDNESS[1], NBT_COLOR, UT.Code.getRGBInt(aMat.fRGBaSolid), NBT_INPUT, V[1], NBT_TEXTURE, "crusher", NBT_ENERGY_ACCEPTED, TD.Energy.KU, NBT_RECIPEMAP, RM.Crusher, NBT_INV_SIDE_IN, SBIT_U, NBT_INV_SIDE_AUTO_IN, SIDE_TOP, NBT_INV_SIDE_OUT, SBIT_D, NBT_INV_SIDE_AUTO_OUT, SIDE_BOTTOM, NBT_ENERGY_ACCEPTED_SIDES, SBIT_B, NBT_PARALLEL, 1, NBT_PARALLEL_DURATION, T), "DMD", "hSw", 'M', OP.casingMachineDouble.dat(aMat), 'S', OP.spring.dat(aMat), 'D', OP.gem.dat(ANY.Diamond));
		aMat = MT.DATA.Heat_T[2];    aRegistry.add("Crusher (" + aMat.getLocal() + ")"                   , "Basic Machines"                      , 20043, 20001, aClass, aMat.mToolQuality, 16, aMachine     , UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS, HARDNESS[2], NBT_RESISTANCE, HARDNESS[2], NBT_COLOR, UT.Code.getRGBInt(aMat.fRGBaSolid), NBT_INPUT, V[2], NBT_TEXTURE, "crusher", NBT_ENERGY_ACCEPTED, TD.Energy.KU, NBT_RECIPEMAP, RM.Crusher, NBT_INV_SIDE_IN, SBIT_U, NBT_INV_SIDE_AUTO_IN, SIDE_TOP, NBT_INV_SIDE_OUT, SBIT_D, NBT_INV_SIDE_AUTO_OUT, SIDE_BOTTOM, NBT_ENERGY_ACCEPTED_SIDES, SBIT_B, NBT_PARALLEL, 2, NBT_PARALLEL_DURATION, T), "DMD", "hSw", 'M', OP.casingMachineDouble.dat(aMat), 'S', OP.spring.dat(aMat), 'D', OP.gem.dat(ANY.Diamond));
		aMat = MT.DATA.Heat_T[3];    aRegistry.add("Crusher (" + aMat.getLocal() + ")"                   , "Basic Machines"                      , 20044, 20001, aClass, aMat.mToolQuality, 16, aMachine     , UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS, HARDNESS[3], NBT_RESISTANCE, HARDNESS[3], NBT_COLOR, UT.Code.getRGBInt(aMat.fRGBaSolid), NBT_INPUT, V[3], NBT_TEXTURE, "crusher", NBT_ENERGY_ACCEPTED, TD.Energy.KU, NBT_RECIPEMAP, RM.Crusher, NBT_INV_SIDE_IN, SBIT_U, NBT_INV_SIDE_AUTO_IN, SIDE_TOP, NBT_INV_SIDE_OUT, SBIT_D, NBT_INV_SIDE_AUTO_OUT, SIDE_BOTTOM, NBT_ENERGY_ACCEPTED_SIDES, SBIT_B, NBT_PARALLEL, 4, NBT_PARALLEL_DURATION, T), "DMD", "hSw", 'M', OP.casingMachineDouble.dat(aMat), 'S', OP.spring.dat(aMat), 'D', OP.gem.dat(ANY.Diamond));
		aMat = MT.DATA.Heat_T[4];    aRegistry.add("Crusher (" + aMat.getLocal() + ")"                   , "Basic Machines"                      , 20045, 20001, aClass, aMat.mToolQuality, 16, aMachine     , UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS, HARDNESS[4], NBT_RESISTANCE, HARDNESS[4], NBT_COLOR, UT.Code.getRGBInt(aMat.fRGBaSolid), NBT_INPUT, V[4], NBT_TEXTURE, "crusher", NBT_ENERGY_ACCEPTED, TD.Energy.KU, NBT_RECIPEMAP, RM.Crusher, NBT_INV_SIDE_IN, SBIT_U, NBT_INV_SIDE_AUTO_IN, SIDE_TOP, NBT_INV_SIDE_OUT, SBIT_D, NBT_INV_SIDE_AUTO_OUT, SIDE_BOTTOM, NBT_ENERGY_ACCEPTED_SIDES, SBIT_B, NBT_PARALLEL,8, NBT_PARALLEL_DURATION, T), "DMD", "hSw", 'M', OP.casingMachineDouble.dat(aMat), 'S', OP.spring.dat(aMat), 'D', OP.gem.dat(ANY.Diamond));
		aMat = MT.DATA.Heat_T[5];    aRegistry.add("Crusher (" + aMat.getLocal() + ")"                   , "Basic Machines"                      , 20046, 20001, aClass, aMat.mToolQuality, 16, aMachine     , UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS, HARDNESS[5], NBT_RESISTANCE, HARDNESS[5], NBT_COLOR, UT.Code.getRGBInt(aMat.fRGBaSolid), NBT_INPUT, V[5], NBT_TEXTURE, "crusher", NBT_ENERGY_ACCEPTED, TD.Energy.KU, NBT_RECIPEMAP, RM.Crusher, NBT_INV_SIDE_IN, SBIT_U, NBT_INV_SIDE_AUTO_IN, SIDE_TOP, NBT_INV_SIDE_OUT, SBIT_D, NBT_INV_SIDE_AUTO_OUT, SIDE_BOTTOM, NBT_ENERGY_ACCEPTED_SIDES, SBIT_B, NBT_PARALLEL,16, NBT_PARALLEL_DURATION, T), "DMD", "hSw", 'M', OP.casingMachineDouble.dat(aMat), 'S', OP.spring.dat(aMat), 'D', OP.gem.dat(ANY.Diamond));
		aMat = MT.DATA.Heat_T[6];    aRegistry.add("Crusher (" + aMat.getLocal() + ")"                   , "Basic Machines"                      , 20047, 20001, aClass, aMat.mToolQuality, 16, aMachine     , UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS, HARDNESS[6], NBT_RESISTANCE, HARDNESS[6], NBT_COLOR, UT.Code.getRGBInt(aMat.fRGBaSolid), NBT_INPUT, V[6], NBT_TEXTURE, "crusher", NBT_ENERGY_ACCEPTED, TD.Energy.KU, NBT_RECIPEMAP, RM.Crusher, NBT_INV_SIDE_IN, SBIT_U, NBT_INV_SIDE_AUTO_IN, SIDE_TOP, NBT_INV_SIDE_OUT, SBIT_D, NBT_INV_SIDE_AUTO_OUT, SIDE_BOTTOM, NBT_ENERGY_ACCEPTED_SIDES, SBIT_B, NBT_PARALLEL,32, NBT_PARALLEL_DURATION, T), "DMD", "hSw", 'M', OP.casingMachineDouble.dat(aMat), 'S', OP.spring.dat(aMat), 'D', OP.gem.dat(ANY.Diamond));
		aMat = MT.DATA.Heat_T[7];    aRegistry.add("Crusher (" + aMat.getLocal() + ")"                   , "Basic Machines"                      , 20048, 20001, aClass, aMat.mToolQuality, 16, aMachine     , UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS, HARDNESS[7], NBT_RESISTANCE, HARDNESS[7], NBT_COLOR, UT.Code.getRGBInt(aMat.fRGBaSolid), NBT_INPUT, V[7], NBT_TEXTURE, "crusher", NBT_ENERGY_ACCEPTED, TD.Energy.KU, NBT_RECIPEMAP, RM.Crusher, NBT_INV_SIDE_IN, SBIT_U, NBT_INV_SIDE_AUTO_IN, SIDE_TOP, NBT_INV_SIDE_OUT, SBIT_D, NBT_INV_SIDE_AUTO_OUT, SIDE_BOTTOM, NBT_ENERGY_ACCEPTED_SIDES, SBIT_B, NBT_PARALLEL,64, NBT_PARALLEL_DURATION, T), "DMD", "hSw", 'M', OP.casingMachineDouble.dat(aMat), 'S', OP.spring.dat(aMat), 'D', OP.gem.dat(ANY.Diamond));
		aMat = MT.DATA.Heat_T[8];    aRegistry.add("Crusher (" + aMat.getLocal() + ")"                   , "Basic Machines"                      , 20049, 20001, aClass, aMat.mToolQuality, 16, aMachine     , UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS, HARDNESS[8], NBT_RESISTANCE, HARDNESS[8], NBT_COLOR, UT.Code.getRGBInt(aMat.fRGBaSolid), NBT_INPUT, V[8], NBT_TEXTURE, "crusher", NBT_ENERGY_ACCEPTED, TD.Energy.KU, NBT_RECIPEMAP, RM.Crusher, NBT_INV_SIDE_IN, SBIT_U, NBT_INV_SIDE_AUTO_IN, SIDE_TOP, NBT_INV_SIDE_OUT, SBIT_D, NBT_INV_SIDE_AUTO_OUT, SIDE_BOTTOM, NBT_ENERGY_ACCEPTED_SIDES, SBIT_B, NBT_PARALLEL,64, NBT_PARALLEL_DURATION, T), "DMD", "hSw", 'M', OP.casingMachineDouble.dat(aMat), 'S', OP.spring.dat(aMat), 'D', OP.gem.dat(ANY.Diamond));
		aMat = MT.DATA.Heat_T[9];    aRegistry.add("Crusher (" + aMat.getLocal() + ")"                   , "Basic Machines"                      , 20050, 20001, aClass, aMat.mToolQuality, 16, aMachine     , UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS, HARDNESS[9], NBT_RESISTANCE, HARDNESS[9], NBT_COLOR, UT.Code.getRGBInt(aMat.fRGBaSolid), NBT_INPUT, V[9], NBT_TEXTURE, "crusher", NBT_ENERGY_ACCEPTED, TD.Energy.KU, NBT_RECIPEMAP, RM.Crusher, NBT_INV_SIDE_IN, SBIT_U, NBT_INV_SIDE_AUTO_IN, SIDE_TOP, NBT_INV_SIDE_OUT, SBIT_D, NBT_INV_SIDE_AUTO_OUT, SIDE_BOTTOM, NBT_ENERGY_ACCEPTED_SIDES, SBIT_B, NBT_PARALLEL,64, NBT_PARALLEL_DURATION, T), "DMD", "hSw", 'M', OP.casingMachineDouble.dat(aMat), 'S', OP.spring.dat(aMat), 'D', OP.gem.dat(ANY.Diamond));
		aMat = MT.DATA.Heat_T[10];    aRegistry.add("Crusher (" + aMat.getLocal() + ")"                   , "Basic Machines"                      , 20051, 20001, aClass, aMat.mToolQuality, 16, aMachine     , UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS, HARDNESS[10], NBT_RESISTANCE, HARDNESS[10], NBT_COLOR, UT.Code.getRGBInt(aMat.fRGBaSolid), NBT_INPUT, V[10], NBT_TEXTURE, "crusher", NBT_ENERGY_ACCEPTED, TD.Energy.KU, NBT_RECIPEMAP, RM.Crusher, NBT_INV_SIDE_IN, SBIT_U, NBT_INV_SIDE_AUTO_IN, SIDE_TOP, NBT_INV_SIDE_OUT, SBIT_D, NBT_INV_SIDE_AUTO_OUT, SIDE_BOTTOM, NBT_ENERGY_ACCEPTED_SIDES, SBIT_B, NBT_PARALLEL,64, NBT_PARALLEL_DURATION, T), "DMD", "hSw", 'M', OP.casingMachineDouble.dat(aMat), 'S', OP.spring.dat(aMat), 'D', OP.gem.dat(ANY.Diamond));
		aMat = MT.DATA.Heat_T[11];    aRegistry.add("Crusher (" + aMat.getLocal() + ")"                   , "Basic Machines"                      , 20052, 20001, aClass, aMat.mToolQuality, 16, aMachine     , UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS, HARDNESS[11], NBT_RESISTANCE, HARDNESS[11], NBT_COLOR, UT.Code.getRGBInt(aMat.fRGBaSolid), NBT_INPUT, V[11], NBT_TEXTURE, "crusher", NBT_ENERGY_ACCEPTED, TD.Energy.KU, NBT_RECIPEMAP, RM.Crusher, NBT_INV_SIDE_IN, SBIT_U, NBT_INV_SIDE_AUTO_IN, SIDE_TOP, NBT_INV_SIDE_OUT, SBIT_D, NBT_INV_SIDE_AUTO_OUT, SIDE_BOTTOM, NBT_ENERGY_ACCEPTED_SIDES, SBIT_B, NBT_PARALLEL,64, NBT_PARALLEL_DURATION, T), "DMD", "hSw", 'M', OP.casingMachineDouble.dat(aMat), 'S', OP.spring.dat(aMat), 'D', OP.gem.dat(ANY.Diamond));
		aMat = MT.DATA.Heat_T[12];    aRegistry.add("Crusher (" + aMat.getLocal() + ")"                   , "Basic Machines"                      , 20053, 20001, aClass, aMat.mToolQuality, 16, aMachine     , UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS, HARDNESS[12], NBT_RESISTANCE, HARDNESS[12], NBT_COLOR, UT.Code.getRGBInt(aMat.fRGBaSolid), NBT_INPUT, V[12], NBT_TEXTURE, "crusher", NBT_ENERGY_ACCEPTED, TD.Energy.KU, NBT_RECIPEMAP, RM.Crusher, NBT_INV_SIDE_IN, SBIT_U, NBT_INV_SIDE_AUTO_IN, SIDE_TOP, NBT_INV_SIDE_OUT, SBIT_D, NBT_INV_SIDE_AUTO_OUT, SIDE_BOTTOM, NBT_ENERGY_ACCEPTED_SIDES, SBIT_B, NBT_PARALLEL,64, NBT_PARALLEL_DURATION, T), "DMD", "hSw", 'M', OP.casingMachineDouble.dat(aMat), 'S', OP.spring.dat(aMat), 'D', OP.gem.dat(ANY.Diamond));
		aMat = MT.DATA.Heat_T[13];    aRegistry.add("Crusher (" + aMat.getLocal() + ")"                   , "Basic Machines"                      , 20054, 20001, aClass, aMat.mToolQuality, 16, aMachine     , UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS, HARDNESS[13], NBT_RESISTANCE, HARDNESS[13], NBT_COLOR, UT.Code.getRGBInt(aMat.fRGBaSolid), NBT_INPUT, V[13], NBT_TEXTURE, "crusher", NBT_ENERGY_ACCEPTED, TD.Energy.KU, NBT_RECIPEMAP, RM.Crusher, NBT_INV_SIDE_IN, SBIT_U, NBT_INV_SIDE_AUTO_IN, SIDE_TOP, NBT_INV_SIDE_OUT, SBIT_D, NBT_INV_SIDE_AUTO_OUT, SIDE_BOTTOM, NBT_ENERGY_ACCEPTED_SIDES, SBIT_B, NBT_PARALLEL,64, NBT_PARALLEL_DURATION, T), "DMD", "hSw", 'M', OP.casingMachineDouble.dat(aMat), 'S', OP.spring.dat(aMat), 'D', OP.gem.dat(ANY.Diamond));
		aMat = MT.DATA.Heat_T[14];    aRegistry.add("Crusher (" + aMat.getLocal() + ")"                   , "Basic Machines"                      , 20055, 20001, aClass, aMat.mToolQuality, 16, aMachine     , UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS, HARDNESS[14], NBT_RESISTANCE, HARDNESS[14], NBT_COLOR, UT.Code.getRGBInt(aMat.fRGBaSolid), NBT_INPUT, V[14], NBT_TEXTURE, "crusher", NBT_ENERGY_ACCEPTED, TD.Energy.KU, NBT_RECIPEMAP, RM.Crusher, NBT_INV_SIDE_IN, SBIT_U, NBT_INV_SIDE_AUTO_IN, SIDE_TOP, NBT_INV_SIDE_OUT, SBIT_D, NBT_INV_SIDE_AUTO_OUT, SIDE_BOTTOM, NBT_ENERGY_ACCEPTED_SIDES, SBIT_B, NBT_PARALLEL,64, NBT_PARALLEL_DURATION, T), "DMD", "hSw", 'M', OP.casingMachineDouble.dat(aMat), 'S', OP.spring.dat(aMat), 'D', OP.gem.dat(ANY.Diamond));
		aMat = MT.DATA.Heat_T[15];    aRegistry.add("Crusher (" + aMat.getLocal() + ")"                   , "Basic Machines"                      , 20056, 20001, aClass, aMat.mToolQuality, 16, aMachine     , UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS, HARDNESS[15], NBT_RESISTANCE, HARDNESS[15], NBT_COLOR, UT.Code.getRGBInt(aMat.fRGBaSolid), NBT_INPUT, V[15], NBT_TEXTURE, "crusher", NBT_ENERGY_ACCEPTED, TD.Energy.KU, NBT_RECIPEMAP, RM.Crusher, NBT_INV_SIDE_IN, SBIT_U, NBT_INV_SIDE_AUTO_IN, SIDE_TOP, NBT_INV_SIDE_OUT, SBIT_D, NBT_INV_SIDE_AUTO_OUT, SIDE_BOTTOM, NBT_ENERGY_ACCEPTED_SIDES, SBIT_B, NBT_PARALLEL,64, NBT_PARALLEL_DURATION, T), "DMD", "hSw", 'M', OP.casingMachineDouble.dat(aMat), 'S', OP.spring.dat(aMat), 'D', OP.gem.dat(ANY.Diamond));

		aClass = MultiTileEntityBasicMachine.class;
		aMat = MT.DATA.Heat_T[0];    aRegistry.add("Lathe (" + aMat.getLocal() + ")"                     , "Basic Machines"                      , 20061, 20001, aClass, aMat.mToolQuality, 16, aMachine     , UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS, HARDNESS[0], NBT_RESISTANCE, HARDNESS[0], NBT_COLOR, UT.Code.getRGBInt(aMat.fRGBaSolid), NBT_INPUT, V[0], NBT_TEXTURE, "lathe", NBT_ENERGY_ACCEPTED, TD.Energy.RU, NBT_RECIPEMAP, RM.Lathe, NBT_INV_SIDE_IN, SBIT_L, NBT_INV_SIDE_AUTO_IN, SIDE_LEFT, NBT_INV_SIDE_OUT, SBIT_R, NBT_INV_SIDE_AUTO_OUT, SIDE_RIGHT, NBT_ENERGY_ACCEPTED_SIDES, SBIT_D), "TDS", "dMG", 'M', OP.casingMachineDouble.dat(aMat), 'T', OP.screw.dat(aMat), 'G', OP.gearGt.dat(aMat), 'S', OP.gearGtSmall.dat(aMat), 'D', OP.plateGemTiny.dat(ANY.Diamond));
		aMat = MT.DATA.Heat_T[1];    aRegistry.add("Lathe (" + aMat.getLocal() + ")"                     , "Basic Machines"                      , 20062, 20001, aClass, aMat.mToolQuality, 16, aMachine     , UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS, HARDNESS[1], NBT_RESISTANCE, HARDNESS[1], NBT_COLOR, UT.Code.getRGBInt(aMat.fRGBaSolid), NBT_INPUT, V[1], NBT_TEXTURE, "lathe", NBT_ENERGY_ACCEPTED, TD.Energy.RU, NBT_RECIPEMAP, RM.Lathe, NBT_INV_SIDE_IN, SBIT_L, NBT_INV_SIDE_AUTO_IN, SIDE_LEFT, NBT_INV_SIDE_OUT, SBIT_R, NBT_INV_SIDE_AUTO_OUT, SIDE_RIGHT, NBT_ENERGY_ACCEPTED_SIDES, SBIT_D), "TDS", "dMG", 'M', OP.casingMachineDouble.dat(aMat), 'T', OP.screw.dat(aMat), 'G', OP.gearGt.dat(aMat), 'S', OP.gearGtSmall.dat(aMat), 'D', OP.plateGemTiny.dat(ANY.Diamond));
		aMat = MT.DATA.Heat_T[2];    aRegistry.add("Lathe (" + aMat.getLocal() + ")"                     , "Basic Machines"                      , 20063, 20001, aClass, aMat.mToolQuality, 16, aMachine     , UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS, HARDNESS[2], NBT_RESISTANCE, HARDNESS[2], NBT_COLOR, UT.Code.getRGBInt(aMat.fRGBaSolid), NBT_INPUT, V[2], NBT_TEXTURE, "lathe", NBT_ENERGY_ACCEPTED, TD.Energy.RU, NBT_RECIPEMAP, RM.Lathe, NBT_INV_SIDE_IN, SBIT_L, NBT_INV_SIDE_AUTO_IN, SIDE_LEFT, NBT_INV_SIDE_OUT, SBIT_R, NBT_INV_SIDE_AUTO_OUT, SIDE_RIGHT, NBT_ENERGY_ACCEPTED_SIDES, SBIT_D), "TDS", "dMG", 'M', OP.casingMachineDouble.dat(aMat), 'T', OP.screw.dat(aMat), 'G', OP.gearGt.dat(aMat), 'S', OP.gearGtSmall.dat(aMat), 'D', OP.plateGemTiny.dat(ANY.Diamond));
		aMat = MT.DATA.Heat_T[3];    aRegistry.add("Lathe (" + aMat.getLocal() + ")"                     , "Basic Machines"                      , 20064, 20001, aClass, aMat.mToolQuality, 16, aMachine     , UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS, HARDNESS[3], NBT_RESISTANCE, HARDNESS[3], NBT_COLOR, UT.Code.getRGBInt(aMat.fRGBaSolid), NBT_INPUT, V[3], NBT_TEXTURE, "lathe", NBT_ENERGY_ACCEPTED, TD.Energy.RU, NBT_RECIPEMAP, RM.Lathe, NBT_INV_SIDE_IN, SBIT_L, NBT_INV_SIDE_AUTO_IN, SIDE_LEFT, NBT_INV_SIDE_OUT, SBIT_R, NBT_INV_SIDE_AUTO_OUT, SIDE_RIGHT, NBT_ENERGY_ACCEPTED_SIDES, SBIT_D), "TDS", "dMG", 'M', OP.casingMachineDouble.dat(aMat), 'T', OP.screw.dat(aMat), 'G', OP.gearGt.dat(aMat), 'S', OP.gearGtSmall.dat(aMat), 'D', OP.plateGemTiny.dat(ANY.Diamond));
		aMat = MT.DATA.Heat_T[4];    aRegistry.add("Lathe (" + aMat.getLocal() + ")"                     , "Basic Machines"                      , 20065, 20001, aClass, aMat.mToolQuality, 16, aMachine     , UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS, HARDNESS[4], NBT_RESISTANCE, HARDNESS[4], NBT_COLOR, UT.Code.getRGBInt(aMat.fRGBaSolid), NBT_INPUT, V[4], NBT_TEXTURE, "lathe", NBT_ENERGY_ACCEPTED, TD.Energy.RU, NBT_RECIPEMAP, RM.Lathe, NBT_INV_SIDE_IN, SBIT_L, NBT_INV_SIDE_AUTO_IN, SIDE_LEFT, NBT_INV_SIDE_OUT, SBIT_R, NBT_INV_SIDE_AUTO_OUT, SIDE_RIGHT, NBT_ENERGY_ACCEPTED_SIDES, SBIT_D), "TDS", "dMG", 'M', OP.casingMachineDouble.dat(aMat), 'T', OP.screw.dat(aMat), 'G', OP.gearGt.dat(aMat), 'S', OP.gearGtSmall.dat(aMat), 'D', OP.plateGemTiny.dat(ANY.Diamond));
		aMat = MT.DATA.Heat_T[5];    aRegistry.add("Lathe (" + aMat.getLocal() + ")"                     , "Basic Machines"                      , 20066, 20001, aClass, aMat.mToolQuality, 16, aMachine     , UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS, HARDNESS[5], NBT_RESISTANCE, HARDNESS[5], NBT_COLOR, UT.Code.getRGBInt(aMat.fRGBaSolid), NBT_INPUT, V[5], NBT_TEXTURE, "lathe", NBT_ENERGY_ACCEPTED, TD.Energy.RU, NBT_RECIPEMAP, RM.Lathe, NBT_INV_SIDE_IN, SBIT_L, NBT_INV_SIDE_AUTO_IN, SIDE_LEFT, NBT_INV_SIDE_OUT, SBIT_R, NBT_INV_SIDE_AUTO_OUT, SIDE_RIGHT, NBT_ENERGY_ACCEPTED_SIDES, SBIT_D), "TDS", "dMG", 'M', OP.casingMachineDouble.dat(aMat), 'T', OP.screw.dat(aMat), 'G', OP.gearGt.dat(aMat), 'S', OP.gearGtSmall.dat(aMat), 'D', OP.plateGemTiny.dat(ANY.Diamond));
		aMat = MT.DATA.Heat_T[6];    aRegistry.add("Lathe (" + aMat.getLocal() + ")"                     , "Basic Machines"                      , 20067, 20001, aClass, aMat.mToolQuality, 16, aMachine     , UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS, HARDNESS[6], NBT_RESISTANCE, HARDNESS[6], NBT_COLOR, UT.Code.getRGBInt(aMat.fRGBaSolid), NBT_INPUT, V[6], NBT_TEXTURE, "lathe", NBT_ENERGY_ACCEPTED, TD.Energy.RU, NBT_RECIPEMAP, RM.Lathe, NBT_INV_SIDE_IN, SBIT_L, NBT_INV_SIDE_AUTO_IN, SIDE_LEFT, NBT_INV_SIDE_OUT, SBIT_R, NBT_INV_SIDE_AUTO_OUT, SIDE_RIGHT, NBT_ENERGY_ACCEPTED_SIDES, SBIT_D), "TDS", "dMG", 'M', OP.casingMachineDouble.dat(aMat), 'T', OP.screw.dat(aMat), 'G', OP.gearGt.dat(aMat), 'S', OP.gearGtSmall.dat(aMat), 'D', OP.plateGemTiny.dat(ANY.Diamond));
		aMat = MT.DATA.Heat_T[7];    aRegistry.add("Lathe (" + aMat.getLocal() + ")"                     , "Basic Machines"                      , 20068, 20001, aClass, aMat.mToolQuality, 16, aMachine     , UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS, HARDNESS[7], NBT_RESISTANCE, HARDNESS[7], NBT_COLOR, UT.Code.getRGBInt(aMat.fRGBaSolid), NBT_INPUT, V[7], NBT_TEXTURE, "lathe", NBT_ENERGY_ACCEPTED, TD.Energy.RU, NBT_RECIPEMAP, RM.Lathe, NBT_INV_SIDE_IN, SBIT_L, NBT_INV_SIDE_AUTO_IN, SIDE_LEFT, NBT_INV_SIDE_OUT, SBIT_R, NBT_INV_SIDE_AUTO_OUT, SIDE_RIGHT, NBT_ENERGY_ACCEPTED_SIDES, SBIT_D), "TDS", "dMG", 'M', OP.casingMachineDouble.dat(aMat), 'T', OP.screw.dat(aMat), 'G', OP.gearGt.dat(aMat), 'S', OP.gearGtSmall.dat(aMat), 'D', OP.plateGemTiny.dat(ANY.Diamond));
		aMat = MT.DATA.Heat_T[8];    aRegistry.add("Lathe (" + aMat.getLocal() + ")"                     , "Basic Machines"                      , 20069, 20001, aClass, aMat.mToolQuality, 16, aMachine     , UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS, HARDNESS[8], NBT_RESISTANCE, HARDNESS[8], NBT_COLOR, UT.Code.getRGBInt(aMat.fRGBaSolid), NBT_INPUT, V[8], NBT_TEXTURE, "lathe", NBT_ENERGY_ACCEPTED, TD.Energy.RU, NBT_RECIPEMAP, RM.Lathe, NBT_INV_SIDE_IN, SBIT_L, NBT_INV_SIDE_AUTO_IN, SIDE_LEFT, NBT_INV_SIDE_OUT, SBIT_R, NBT_INV_SIDE_AUTO_OUT, SIDE_RIGHT, NBT_ENERGY_ACCEPTED_SIDES, SBIT_D), "TDS", "dMG", 'M', OP.casingMachineDouble.dat(aMat), 'T', OP.screw.dat(aMat), 'G', OP.gearGt.dat(aMat), 'S', OP.gearGtSmall.dat(aMat), 'D', OP.plateGemTiny.dat(ANY.Diamond));
		aMat = MT.DATA.Heat_T[9];    aRegistry.add("Lathe (" + aMat.getLocal() + ")"                     , "Basic Machines"                      , 20070, 20001, aClass, aMat.mToolQuality, 16, aMachine     , UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS, HARDNESS[9], NBT_RESISTANCE, HARDNESS[9], NBT_COLOR, UT.Code.getRGBInt(aMat.fRGBaSolid), NBT_INPUT, V[9], NBT_TEXTURE, "lathe", NBT_ENERGY_ACCEPTED, TD.Energy.RU, NBT_RECIPEMAP, RM.Lathe, NBT_INV_SIDE_IN, SBIT_L, NBT_INV_SIDE_AUTO_IN, SIDE_LEFT, NBT_INV_SIDE_OUT, SBIT_R, NBT_INV_SIDE_AUTO_OUT, SIDE_RIGHT, NBT_ENERGY_ACCEPTED_SIDES, SBIT_D), "TDS", "dMG", 'M', OP.casingMachineDouble.dat(aMat), 'T', OP.screw.dat(aMat), 'G', OP.gearGt.dat(aMat), 'S', OP.gearGtSmall.dat(aMat), 'D', OP.plateGemTiny.dat(ANY.Diamond));
		aMat = MT.DATA.Heat_T[10];    aRegistry.add("Lathe (" + aMat.getLocal() + ")"                     , "Basic Machines"                      , 20071, 20001, aClass, aMat.mToolQuality, 16, aMachine     , UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS, HARDNESS[10], NBT_RESISTANCE, HARDNESS[10], NBT_COLOR, UT.Code.getRGBInt(aMat.fRGBaSolid), NBT_INPUT, V[10], NBT_TEXTURE, "lathe", NBT_ENERGY_ACCEPTED, TD.Energy.RU, NBT_RECIPEMAP, RM.Lathe, NBT_INV_SIDE_IN, SBIT_L, NBT_INV_SIDE_AUTO_IN, SIDE_LEFT, NBT_INV_SIDE_OUT, SBIT_R, NBT_INV_SIDE_AUTO_OUT, SIDE_RIGHT, NBT_ENERGY_ACCEPTED_SIDES, SBIT_D), "TDS", "dMG", 'M', OP.casingMachineDouble.dat(aMat), 'T', OP.screw.dat(aMat), 'G', OP.gearGt.dat(aMat), 'S', OP.gearGtSmall.dat(aMat), 'D', OP.plateGemTiny.dat(ANY.Diamond));
		aMat = MT.DATA.Heat_T[11];    aRegistry.add("Lathe (" + aMat.getLocal() + ")"                     , "Basic Machines"                      , 20072, 20001, aClass, aMat.mToolQuality, 16, aMachine     , UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS, HARDNESS[11], NBT_RESISTANCE, HARDNESS[11], NBT_COLOR, UT.Code.getRGBInt(aMat.fRGBaSolid), NBT_INPUT, V[11], NBT_TEXTURE, "lathe", NBT_ENERGY_ACCEPTED, TD.Energy.RU, NBT_RECIPEMAP, RM.Lathe, NBT_INV_SIDE_IN, SBIT_L, NBT_INV_SIDE_AUTO_IN, SIDE_LEFT, NBT_INV_SIDE_OUT, SBIT_R, NBT_INV_SIDE_AUTO_OUT, SIDE_RIGHT, NBT_ENERGY_ACCEPTED_SIDES, SBIT_D), "TDS", "dMG", 'M', OP.casingMachineDouble.dat(aMat), 'T', OP.screw.dat(aMat), 'G', OP.gearGt.dat(aMat), 'S', OP.gearGtSmall.dat(aMat), 'D', OP.plateGemTiny.dat(ANY.Diamond));
		aMat = MT.DATA.Heat_T[12];    aRegistry.add("Lathe (" + aMat.getLocal() + ")"                     , "Basic Machines"                      , 20073, 20001, aClass, aMat.mToolQuality, 16, aMachine     , UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS, HARDNESS[12], NBT_RESISTANCE, HARDNESS[12], NBT_COLOR, UT.Code.getRGBInt(aMat.fRGBaSolid), NBT_INPUT, V[12], NBT_TEXTURE, "lathe", NBT_ENERGY_ACCEPTED, TD.Energy.RU, NBT_RECIPEMAP, RM.Lathe, NBT_INV_SIDE_IN, SBIT_L, NBT_INV_SIDE_AUTO_IN, SIDE_LEFT, NBT_INV_SIDE_OUT, SBIT_R, NBT_INV_SIDE_AUTO_OUT, SIDE_RIGHT, NBT_ENERGY_ACCEPTED_SIDES, SBIT_D), "TDS", "dMG", 'M', OP.casingMachineDouble.dat(aMat), 'T', OP.screw.dat(aMat), 'G', OP.gearGt.dat(aMat), 'S', OP.gearGtSmall.dat(aMat), 'D', OP.plateGemTiny.dat(ANY.Diamond));
		aMat = MT.DATA.Heat_T[13];    aRegistry.add("Lathe (" + aMat.getLocal() + ")"                     , "Basic Machines"                      , 20074, 20001, aClass, aMat.mToolQuality, 16, aMachine     , UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS, HARDNESS[13], NBT_RESISTANCE, HARDNESS[13], NBT_COLOR, UT.Code.getRGBInt(aMat.fRGBaSolid), NBT_INPUT, V[13], NBT_TEXTURE, "lathe", NBT_ENERGY_ACCEPTED, TD.Energy.RU, NBT_RECIPEMAP, RM.Lathe, NBT_INV_SIDE_IN, SBIT_L, NBT_INV_SIDE_AUTO_IN, SIDE_LEFT, NBT_INV_SIDE_OUT, SBIT_R, NBT_INV_SIDE_AUTO_OUT, SIDE_RIGHT, NBT_ENERGY_ACCEPTED_SIDES, SBIT_D), "TDS", "dMG", 'M', OP.casingMachineDouble.dat(aMat), 'T', OP.screw.dat(aMat), 'G', OP.gearGt.dat(aMat), 'S', OP.gearGtSmall.dat(aMat), 'D', OP.plateGemTiny.dat(ANY.Diamond));
		aMat = MT.DATA.Heat_T[14];    aRegistry.add("Lathe (" + aMat.getLocal() + ")"                     , "Basic Machines"                      , 20075, 20001, aClass, aMat.mToolQuality, 16, aMachine     , UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS, HARDNESS[14], NBT_RESISTANCE, HARDNESS[14], NBT_COLOR, UT.Code.getRGBInt(aMat.fRGBaSolid), NBT_INPUT, V[14], NBT_TEXTURE, "lathe", NBT_ENERGY_ACCEPTED, TD.Energy.RU, NBT_RECIPEMAP, RM.Lathe, NBT_INV_SIDE_IN, SBIT_L, NBT_INV_SIDE_AUTO_IN, SIDE_LEFT, NBT_INV_SIDE_OUT, SBIT_R, NBT_INV_SIDE_AUTO_OUT, SIDE_RIGHT, NBT_ENERGY_ACCEPTED_SIDES, SBIT_D), "TDS", "dMG", 'M', OP.casingMachineDouble.dat(aMat), 'T', OP.screw.dat(aMat), 'G', OP.gearGt.dat(aMat), 'S', OP.gearGtSmall.dat(aMat), 'D', OP.plateGemTiny.dat(ANY.Diamond));
		aMat = MT.DATA.Heat_T[15];    aRegistry.add("Lathe (" + aMat.getLocal() + ")"                     , "Basic Machines"                      , 20076, 20001, aClass, aMat.mToolQuality, 16, aMachine     , UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS, HARDNESS[15], NBT_RESISTANCE, HARDNESS[15], NBT_COLOR, UT.Code.getRGBInt(aMat.fRGBaSolid), NBT_INPUT, V[15], NBT_TEXTURE, "lathe", NBT_ENERGY_ACCEPTED, TD.Energy.RU, NBT_RECIPEMAP, RM.Lathe, NBT_INV_SIDE_IN, SBIT_L, NBT_INV_SIDE_AUTO_IN, SIDE_LEFT, NBT_INV_SIDE_OUT, SBIT_R, NBT_INV_SIDE_AUTO_OUT, SIDE_RIGHT, NBT_ENERGY_ACCEPTED_SIDES, SBIT_D), "TDS", "dMG", 'M', OP.casingMachineDouble.dat(aMat), 'T', OP.screw.dat(aMat), 'G', OP.gearGt.dat(aMat), 'S', OP.gearGtSmall.dat(aMat), 'D', OP.plateGemTiny.dat(ANY.Diamond));

		aClass = MultiTileEntityBasicMachine.class;
		aMat = MT.DATA.Heat_T[0];    aRegistry.add("Sifter (" + aMat.getLocal() + ")"                    , "Basic Machines"                      , 20081, 20001, aClass, aMat.mToolQuality, 16, aMachine     , UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS, HARDNESS[0], NBT_RESISTANCE, HARDNESS[0], NBT_COLOR, UT.Code.getRGBInt(aMat.fRGBaSolid), NBT_INPUT, V[0], NBT_TEXTURE, "sifter", NBT_ENERGY_ACCEPTED, TD.Energy.KU, NBT_RECIPEMAP, RM.Sifting, NBT_INV_SIDE_IN, SBIT_U, NBT_INV_SIDE_AUTO_IN, SIDE_TOP, NBT_INV_SIDE_OUT, SBIT_D, NBT_INV_SIDE_AUTO_OUT, SIDE_BOTTOM, NBT_ENERGY_ACCEPTED_SIDES, SBIT_B, NBT_PARALLEL, 1, NBT_PARALLEL_DURATION, T), "WxW", "RMR", "SwS", 'M', OP.casingMachineDouble.dat(aMat), 'S', OP.spring.dat(aMat), 'W', OP.wireFine.dat(aMat), 'R', OP.stick.dat(aMat));
		aMat = MT.DATA.Heat_T[1];    aRegistry.add("Sifter (" + aMat.getLocal() + ")"                    , "Basic Machines"                      , 20082, 20001, aClass, aMat.mToolQuality, 16, aMachine     , UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS, HARDNESS[1], NBT_RESISTANCE, HARDNESS[1], NBT_COLOR, UT.Code.getRGBInt(aMat.fRGBaSolid), NBT_INPUT, V[1], NBT_TEXTURE, "sifter", NBT_ENERGY_ACCEPTED, TD.Energy.KU, NBT_RECIPEMAP, RM.Sifting, NBT_INV_SIDE_IN, SBIT_U, NBT_INV_SIDE_AUTO_IN, SIDE_TOP, NBT_INV_SIDE_OUT, SBIT_D, NBT_INV_SIDE_AUTO_OUT, SIDE_BOTTOM, NBT_ENERGY_ACCEPTED_SIDES, SBIT_B, NBT_PARALLEL, 1, NBT_PARALLEL_DURATION, T), "WxW", "RMR", "SwS", 'M', OP.casingMachineDouble.dat(aMat), 'S', OP.spring.dat(aMat), 'W', OP.wireFine.dat(aMat), 'R', OP.stick.dat(aMat));
		aMat = MT.DATA.Heat_T[2];    aRegistry.add("Sifter (" + aMat.getLocal() + ")"                    , "Basic Machines"                      , 20083, 20001, aClass, aMat.mToolQuality, 16, aMachine     , UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS, HARDNESS[2], NBT_RESISTANCE, HARDNESS[2], NBT_COLOR, UT.Code.getRGBInt(aMat.fRGBaSolid), NBT_INPUT, V[2], NBT_TEXTURE, "sifter", NBT_ENERGY_ACCEPTED, TD.Energy.KU, NBT_RECIPEMAP, RM.Sifting, NBT_INV_SIDE_IN, SBIT_U, NBT_INV_SIDE_AUTO_IN, SIDE_TOP, NBT_INV_SIDE_OUT, SBIT_D, NBT_INV_SIDE_AUTO_OUT, SIDE_BOTTOM, NBT_ENERGY_ACCEPTED_SIDES, SBIT_B, NBT_PARALLEL, 2, NBT_PARALLEL_DURATION, T), "WxW", "RMR", "SwS", 'M', OP.casingMachineDouble.dat(aMat), 'S', OP.spring.dat(aMat), 'W', OP.wireFine.dat(aMat), 'R', OP.stick.dat(aMat));
		aMat = MT.DATA.Heat_T[3];    aRegistry.add("Sifter (" + aMat.getLocal() + ")"                    , "Basic Machines"                      , 20084, 20001, aClass, aMat.mToolQuality, 16, aMachine     , UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS, HARDNESS[3], NBT_RESISTANCE, HARDNESS[3], NBT_COLOR, UT.Code.getRGBInt(aMat.fRGBaSolid), NBT_INPUT, V[3], NBT_TEXTURE, "sifter", NBT_ENERGY_ACCEPTED, TD.Energy.KU, NBT_RECIPEMAP, RM.Sifting, NBT_INV_SIDE_IN, SBIT_U, NBT_INV_SIDE_AUTO_IN, SIDE_TOP, NBT_INV_SIDE_OUT, SBIT_D, NBT_INV_SIDE_AUTO_OUT, SIDE_BOTTOM, NBT_ENERGY_ACCEPTED_SIDES, SBIT_B, NBT_PARALLEL, 4, NBT_PARALLEL_DURATION, T), "WxW", "RMR", "SwS", 'M', OP.casingMachineDouble.dat(aMat), 'S', OP.spring.dat(aMat), 'W', OP.wireFine.dat(aMat), 'R', OP.stick.dat(aMat));
		aMat = MT.DATA.Heat_T[4];    aRegistry.add("Sifter (" + aMat.getLocal() + ")"                    , "Basic Machines"                      , 20085, 20001, aClass, aMat.mToolQuality, 16, aMachine     , UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS, HARDNESS[4], NBT_RESISTANCE, HARDNESS[4], NBT_COLOR, UT.Code.getRGBInt(aMat.fRGBaSolid), NBT_INPUT, V[4], NBT_TEXTURE, "sifter", NBT_ENERGY_ACCEPTED, TD.Energy.KU, NBT_RECIPEMAP, RM.Sifting, NBT_INV_SIDE_IN, SBIT_U, NBT_INV_SIDE_AUTO_IN, SIDE_TOP, NBT_INV_SIDE_OUT, SBIT_D, NBT_INV_SIDE_AUTO_OUT, SIDE_BOTTOM, NBT_ENERGY_ACCEPTED_SIDES, SBIT_B, NBT_PARALLEL,8, NBT_PARALLEL_DURATION, T), "WxW", "RMR", "SwS", 'M', OP.casingMachineDouble.dat(aMat), 'S', OP.spring.dat(aMat), 'W', OP.wireFine.dat(aMat), 'R', OP.stick.dat(aMat));
		aMat = MT.DATA.Heat_T[5];    aRegistry.add("Sifter (" + aMat.getLocal() + ")"                    , "Basic Machines"                      , 20086, 20001, aClass, aMat.mToolQuality, 16, aMachine     , UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS, HARDNESS[5], NBT_RESISTANCE, HARDNESS[5], NBT_COLOR, UT.Code.getRGBInt(aMat.fRGBaSolid), NBT_INPUT, V[5], NBT_TEXTURE, "sifter", NBT_ENERGY_ACCEPTED, TD.Energy.KU, NBT_RECIPEMAP, RM.Sifting, NBT_INV_SIDE_IN, SBIT_U, NBT_INV_SIDE_AUTO_IN, SIDE_TOP, NBT_INV_SIDE_OUT, SBIT_D, NBT_INV_SIDE_AUTO_OUT, SIDE_BOTTOM, NBT_ENERGY_ACCEPTED_SIDES, SBIT_B, NBT_PARALLEL,16, NBT_PARALLEL_DURATION, T), "WxW", "RMR", "SwS", 'M', OP.casingMachineDouble.dat(aMat), 'S', OP.spring.dat(aMat), 'W', OP.wireFine.dat(aMat), 'R', OP.stick.dat(aMat));
		aMat = MT.DATA.Heat_T[6];    aRegistry.add("Sifter (" + aMat.getLocal() + ")"                    , "Basic Machines"                      , 20087, 20001, aClass, aMat.mToolQuality, 16, aMachine     , UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS, HARDNESS[6], NBT_RESISTANCE, HARDNESS[6], NBT_COLOR, UT.Code.getRGBInt(aMat.fRGBaSolid), NBT_INPUT, V[6], NBT_TEXTURE, "sifter", NBT_ENERGY_ACCEPTED, TD.Energy.KU, NBT_RECIPEMAP, RM.Sifting, NBT_INV_SIDE_IN, SBIT_U, NBT_INV_SIDE_AUTO_IN, SIDE_TOP, NBT_INV_SIDE_OUT, SBIT_D, NBT_INV_SIDE_AUTO_OUT, SIDE_BOTTOM, NBT_ENERGY_ACCEPTED_SIDES, SBIT_B, NBT_PARALLEL,32, NBT_PARALLEL_DURATION, T), "WxW", "RMR", "SwS", 'M', OP.casingMachineDouble.dat(aMat), 'S', OP.spring.dat(aMat), 'W', OP.wireFine.dat(aMat), 'R', OP.stick.dat(aMat));
		aMat = MT.DATA.Heat_T[7];    aRegistry.add("Sifter (" + aMat.getLocal() + ")"                    , "Basic Machines"                      , 20088, 20001, aClass, aMat.mToolQuality, 16, aMachine     , UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS, HARDNESS[7], NBT_RESISTANCE, HARDNESS[7], NBT_COLOR, UT.Code.getRGBInt(aMat.fRGBaSolid), NBT_INPUT, V[7], NBT_TEXTURE, "sifter", NBT_ENERGY_ACCEPTED, TD.Energy.KU, NBT_RECIPEMAP, RM.Sifting, NBT_INV_SIDE_IN, SBIT_U, NBT_INV_SIDE_AUTO_IN, SIDE_TOP, NBT_INV_SIDE_OUT, SBIT_D, NBT_INV_SIDE_AUTO_OUT, SIDE_BOTTOM, NBT_ENERGY_ACCEPTED_SIDES, SBIT_B, NBT_PARALLEL,64, NBT_PARALLEL_DURATION, T), "WxW", "RMR", "SwS", 'M', OP.casingMachineDouble.dat(aMat), 'S', OP.spring.dat(aMat), 'W', OP.wireFine.dat(aMat), 'R', OP.stick.dat(aMat));
		aMat = MT.DATA.Heat_T[8];    aRegistry.add("Sifter (" + aMat.getLocal() + ")"                    , "Basic Machines"                      , 20089, 20001, aClass, aMat.mToolQuality, 16, aMachine     , UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS, HARDNESS[8], NBT_RESISTANCE, HARDNESS[8], NBT_COLOR, UT.Code.getRGBInt(aMat.fRGBaSolid), NBT_INPUT, V[8], NBT_TEXTURE, "sifter", NBT_ENERGY_ACCEPTED, TD.Energy.KU, NBT_RECIPEMAP, RM.Sifting, NBT_INV_SIDE_IN, SBIT_U, NBT_INV_SIDE_AUTO_IN, SIDE_TOP, NBT_INV_SIDE_OUT, SBIT_D, NBT_INV_SIDE_AUTO_OUT, SIDE_BOTTOM, NBT_ENERGY_ACCEPTED_SIDES, SBIT_B, NBT_PARALLEL,64, NBT_PARALLEL_DURATION, T), "WxW", "RMR", "SwS", 'M', OP.casingMachineDouble.dat(aMat), 'S', OP.spring.dat(aMat), 'W', OP.wireFine.dat(aMat), 'R', OP.stick.dat(aMat));
		aMat = MT.DATA.Heat_T[9];    aRegistry.add("Sifter (" + aMat.getLocal() + ")"                    , "Basic Machines"                      , 20090, 20001, aClass, aMat.mToolQuality, 16, aMachine     , UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS, HARDNESS[9], NBT_RESISTANCE, HARDNESS[9], NBT_COLOR, UT.Code.getRGBInt(aMat.fRGBaSolid), NBT_INPUT, V[9], NBT_TEXTURE, "sifter", NBT_ENERGY_ACCEPTED, TD.Energy.KU, NBT_RECIPEMAP, RM.Sifting, NBT_INV_SIDE_IN, SBIT_U, NBT_INV_SIDE_AUTO_IN, SIDE_TOP, NBT_INV_SIDE_OUT, SBIT_D, NBT_INV_SIDE_AUTO_OUT, SIDE_BOTTOM, NBT_ENERGY_ACCEPTED_SIDES, SBIT_B, NBT_PARALLEL,64, NBT_PARALLEL_DURATION, T), "WxW", "RMR", "SwS", 'M', OP.casingMachineDouble.dat(aMat), 'S', OP.spring.dat(aMat), 'W', OP.wireFine.dat(aMat), 'R', OP.stick.dat(aMat));
		aMat = MT.DATA.Heat_T[10];    aRegistry.add("Sifter (" + aMat.getLocal() + ")"                    , "Basic Machines"                      , 20091, 20001, aClass, aMat.mToolQuality, 16, aMachine     , UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS, HARDNESS[10], NBT_RESISTANCE, HARDNESS[10], NBT_COLOR, UT.Code.getRGBInt(aMat.fRGBaSolid), NBT_INPUT, V[10], NBT_TEXTURE, "sifter", NBT_ENERGY_ACCEPTED, TD.Energy.KU, NBT_RECIPEMAP, RM.Sifting, NBT_INV_SIDE_IN, SBIT_U, NBT_INV_SIDE_AUTO_IN, SIDE_TOP, NBT_INV_SIDE_OUT, SBIT_D, NBT_INV_SIDE_AUTO_OUT, SIDE_BOTTOM, NBT_ENERGY_ACCEPTED_SIDES, SBIT_B, NBT_PARALLEL, 64, NBT_PARALLEL_DURATION, T), "WxW", "RMR", "SwS", 'M', OP.casingMachineDouble.dat(aMat), 'S', OP.spring.dat(aMat), 'W', OP.wireFine.dat(aMat), 'R', OP.stick.dat(aMat));
		aMat = MT.DATA.Heat_T[11];    aRegistry.add("Sifter (" + aMat.getLocal() + ")"                    , "Basic Machines"                      , 20092, 20001, aClass, aMat.mToolQuality, 16, aMachine     , UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS, HARDNESS[11], NBT_RESISTANCE, HARDNESS[11], NBT_COLOR, UT.Code.getRGBInt(aMat.fRGBaSolid), NBT_INPUT, V[11], NBT_TEXTURE, "sifter", NBT_ENERGY_ACCEPTED, TD.Energy.KU, NBT_RECIPEMAP, RM.Sifting, NBT_INV_SIDE_IN, SBIT_U, NBT_INV_SIDE_AUTO_IN, SIDE_TOP, NBT_INV_SIDE_OUT, SBIT_D, NBT_INV_SIDE_AUTO_OUT, SIDE_BOTTOM, NBT_ENERGY_ACCEPTED_SIDES, SBIT_B, NBT_PARALLEL, 64, NBT_PARALLEL_DURATION, T), "WxW", "RMR", "SwS", 'M', OP.casingMachineDouble.dat(aMat), 'S', OP.spring.dat(aMat), 'W', OP.wireFine.dat(aMat), 'R', OP.stick.dat(aMat));
		aMat = MT.DATA.Heat_T[12];    aRegistry.add("Sifter (" + aMat.getLocal() + ")"                    , "Basic Machines"                      , 20093, 20001, aClass, aMat.mToolQuality, 16, aMachine     , UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS, HARDNESS[12], NBT_RESISTANCE, HARDNESS[12], NBT_COLOR, UT.Code.getRGBInt(aMat.fRGBaSolid), NBT_INPUT, V[12], NBT_TEXTURE, "sifter", NBT_ENERGY_ACCEPTED, TD.Energy.KU, NBT_RECIPEMAP, RM.Sifting, NBT_INV_SIDE_IN, SBIT_U, NBT_INV_SIDE_AUTO_IN, SIDE_TOP, NBT_INV_SIDE_OUT, SBIT_D, NBT_INV_SIDE_AUTO_OUT, SIDE_BOTTOM, NBT_ENERGY_ACCEPTED_SIDES, SBIT_B, NBT_PARALLEL, 64, NBT_PARALLEL_DURATION, T), "WxW", "RMR", "SwS", 'M', OP.casingMachineDouble.dat(aMat), 'S', OP.spring.dat(aMat), 'W', OP.wireFine.dat(aMat), 'R', OP.stick.dat(aMat));
		aMat = MT.DATA.Heat_T[13];    aRegistry.add("Sifter (" + aMat.getLocal() + ")"                    , "Basic Machines"                      , 20094, 20001, aClass, aMat.mToolQuality, 16, aMachine     , UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS, HARDNESS[13], NBT_RESISTANCE, HARDNESS[13], NBT_COLOR, UT.Code.getRGBInt(aMat.fRGBaSolid), NBT_INPUT, V[13], NBT_TEXTURE, "sifter", NBT_ENERGY_ACCEPTED, TD.Energy.KU, NBT_RECIPEMAP, RM.Sifting, NBT_INV_SIDE_IN, SBIT_U, NBT_INV_SIDE_AUTO_IN, SIDE_TOP, NBT_INV_SIDE_OUT, SBIT_D, NBT_INV_SIDE_AUTO_OUT, SIDE_BOTTOM, NBT_ENERGY_ACCEPTED_SIDES, SBIT_B, NBT_PARALLEL,64, NBT_PARALLEL_DURATION, T), "WxW", "RMR", "SwS", 'M', OP.casingMachineDouble.dat(aMat), 'S', OP.spring.dat(aMat), 'W', OP.wireFine.dat(aMat), 'R', OP.stick.dat(aMat));
		aMat = MT.DATA.Heat_T[14];    aRegistry.add("Sifter (" + aMat.getLocal() + ")"                    , "Basic Machines"                      , 20095, 20001, aClass, aMat.mToolQuality, 16, aMachine     , UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS, HARDNESS[14], NBT_RESISTANCE, HARDNESS[14], NBT_COLOR, UT.Code.getRGBInt(aMat.fRGBaSolid), NBT_INPUT, V[14], NBT_TEXTURE, "sifter", NBT_ENERGY_ACCEPTED, TD.Energy.KU, NBT_RECIPEMAP, RM.Sifting, NBT_INV_SIDE_IN, SBIT_U, NBT_INV_SIDE_AUTO_IN, SIDE_TOP, NBT_INV_SIDE_OUT, SBIT_D, NBT_INV_SIDE_AUTO_OUT, SIDE_BOTTOM, NBT_ENERGY_ACCEPTED_SIDES, SBIT_B, NBT_PARALLEL,64, NBT_PARALLEL_DURATION, T), "WxW", "RMR", "SwS", 'M', OP.casingMachineDouble.dat(aMat), 'S', OP.spring.dat(aMat), 'W', OP.wireFine.dat(aMat), 'R', OP.stick.dat(aMat));
		aMat = MT.DATA.Heat_T[15];    aRegistry.add("Sifter (" + aMat.getLocal() + ")"                    , "Basic Machines"                      , 20096, 20001, aClass, aMat.mToolQuality, 16, aMachine     , UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS, HARDNESS[15], NBT_RESISTANCE, HARDNESS[15], NBT_COLOR, UT.Code.getRGBInt(aMat.fRGBaSolid), NBT_INPUT, V[15], NBT_TEXTURE, "sifter", NBT_ENERGY_ACCEPTED, TD.Energy.KU, NBT_RECIPEMAP, RM.Sifting, NBT_INV_SIDE_IN, SBIT_U, NBT_INV_SIDE_AUTO_IN, SIDE_TOP, NBT_INV_SIDE_OUT, SBIT_D, NBT_INV_SIDE_AUTO_OUT, SIDE_BOTTOM, NBT_ENERGY_ACCEPTED_SIDES, SBIT_B, NBT_PARALLEL,64, NBT_PARALLEL_DURATION, T), "WxW", "RMR", "SwS", 'M', OP.casingMachineDouble.dat(aMat), 'S', OP.spring.dat(aMat), 'W', OP.wireFine.dat(aMat), 'R', OP.stick.dat(aMat));

		aClass = MultiTileEntityBasicMachine.class;
		aMat = MT.DATA.Heat_T[0];    aRegistry.add("Buzzsaw (" + aMat.getLocal() + ")"                   , "Basic Machines"                      , 20101, 20001, aClass, aMat.mToolQuality, 16, aMachine     , UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS, HARDNESS[0], NBT_RESISTANCE, HARDNESS[0], NBT_COLOR, UT.Code.getRGBInt(aMat.fRGBaSolid), NBT_INPUT, V[0], NBT_TEXTURE, "buzzsaw", NBT_ENERGY_ACCEPTED, TD.Energy.RU, NBT_RECIPEMAP, RM.Cutter, NBT_INV_SIDE_IN, SBIT_L, NBT_INV_SIDE_AUTO_IN, SIDE_LEFT, NBT_INV_SIDE_OUT, SBIT_R, NBT_INV_SIDE_AUTO_OUT, SIDE_RIGHT, NBT_TANK_SIDE_IN, SBIT_U|SBIT_D, NBT_TANK_SIDE_AUTO_IN, SIDE_BOTTOM, NBT_ENERGY_ACCEPTED_SIDES, SBIT_B), "DGS", "wMS", 'M', OP.casingMachineDouble.dat(aMat), 'S', OP.gearGtSmall.dat(aMat), 'D', OP.dust.dat(ANY.Diamond), 'G', OP.toolHeadBuzzSaw.dat(ANY.Steel));
		aMat = MT.DATA.Heat_T[1];    aRegistry.add("Buzzsaw (" + aMat.getLocal() + ")"                   , "Basic Machines"                      , 20102, 20001, aClass, aMat.mToolQuality, 16, aMachine     , UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS, HARDNESS[1], NBT_RESISTANCE, HARDNESS[1], NBT_COLOR, UT.Code.getRGBInt(aMat.fRGBaSolid), NBT_INPUT, V[1], NBT_TEXTURE, "buzzsaw", NBT_ENERGY_ACCEPTED, TD.Energy.RU, NBT_RECIPEMAP, RM.Cutter, NBT_INV_SIDE_IN, SBIT_L, NBT_INV_SIDE_AUTO_IN, SIDE_LEFT, NBT_INV_SIDE_OUT, SBIT_R, NBT_INV_SIDE_AUTO_OUT, SIDE_RIGHT, NBT_TANK_SIDE_IN, SBIT_U|SBIT_D, NBT_TANK_SIDE_AUTO_IN, SIDE_BOTTOM, NBT_ENERGY_ACCEPTED_SIDES, SBIT_B), "DGS", "wMS", 'M', OP.casingMachineDouble.dat(aMat), 'S', OP.gearGtSmall.dat(aMat), 'D', OP.dust.dat(ANY.Diamond), 'G', OP.toolHeadBuzzSaw.dat(ANY.Steel));
		aMat = MT.DATA.Heat_T[2];    aRegistry.add("Buzzsaw (" + aMat.getLocal() + ")"                   , "Basic Machines"                      , 20103, 20001, aClass, aMat.mToolQuality, 16, aMachine     , UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS, HARDNESS[2], NBT_RESISTANCE, HARDNESS[2], NBT_COLOR, UT.Code.getRGBInt(aMat.fRGBaSolid), NBT_INPUT, V[2], NBT_TEXTURE, "buzzsaw", NBT_ENERGY_ACCEPTED, TD.Energy.RU, NBT_RECIPEMAP, RM.Cutter, NBT_INV_SIDE_IN, SBIT_L, NBT_INV_SIDE_AUTO_IN, SIDE_LEFT, NBT_INV_SIDE_OUT, SBIT_R, NBT_INV_SIDE_AUTO_OUT, SIDE_RIGHT, NBT_TANK_SIDE_IN, SBIT_U|SBIT_D, NBT_TANK_SIDE_AUTO_IN, SIDE_BOTTOM, NBT_ENERGY_ACCEPTED_SIDES, SBIT_B), "DGS", "wMS", 'M', OP.casingMachineDouble.dat(aMat), 'S', OP.gearGtSmall.dat(aMat), 'D', OP.dust.dat(ANY.Diamond), 'G', OP.toolHeadBuzzSaw.dat(MT.CobaltBrass));
		aMat = MT.DATA.Heat_T[3];    aRegistry.add("Buzzsaw (" + aMat.getLocal() + ")"                   , "Basic Machines"                      , 20104, 20001, aClass, aMat.mToolQuality, 16, aMachine     , UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS, HARDNESS[3], NBT_RESISTANCE, HARDNESS[3], NBT_COLOR, UT.Code.getRGBInt(aMat.fRGBaSolid), NBT_INPUT, V[3], NBT_TEXTURE, "buzzsaw", NBT_ENERGY_ACCEPTED, TD.Energy.RU, NBT_RECIPEMAP, RM.Cutter, NBT_INV_SIDE_IN, SBIT_L, NBT_INV_SIDE_AUTO_IN, SIDE_LEFT, NBT_INV_SIDE_OUT, SBIT_R, NBT_INV_SIDE_AUTO_OUT, SIDE_RIGHT, NBT_TANK_SIDE_IN, SBIT_U|SBIT_D, NBT_TANK_SIDE_AUTO_IN, SIDE_BOTTOM, NBT_ENERGY_ACCEPTED_SIDES, SBIT_B), "DGS", "wMS", 'M', OP.casingMachineDouble.dat(aMat), 'S', OP.gearGtSmall.dat(aMat), 'D', OP.dust.dat(ANY.Diamond), 'G', OP.toolHeadBuzzSaw.dat(MT.CobaltBrass));
		aMat = MT.DATA.Heat_T[4];    aRegistry.add("Buzzsaw (" + aMat.getLocal() + ")"                   , "Basic Machines"                      , 20105, 20001, aClass, aMat.mToolQuality, 16, aMachine     , UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS, HARDNESS[4], NBT_RESISTANCE, HARDNESS[4], NBT_COLOR, UT.Code.getRGBInt(aMat.fRGBaSolid), NBT_INPUT, V[4], NBT_TEXTURE, "buzzsaw", NBT_ENERGY_ACCEPTED, TD.Energy.RU, NBT_RECIPEMAP, RM.Cutter, NBT_INV_SIDE_IN, SBIT_L, NBT_INV_SIDE_AUTO_IN, SIDE_LEFT, NBT_INV_SIDE_OUT, SBIT_R, NBT_INV_SIDE_AUTO_OUT, SIDE_RIGHT, NBT_TANK_SIDE_IN, SBIT_U|SBIT_D, NBT_TANK_SIDE_AUTO_IN, SIDE_BOTTOM, NBT_ENERGY_ACCEPTED_SIDES, SBIT_B), "DGS", "wMS", 'M', OP.casingMachineDouble.dat(aMat), 'S', OP.gearGtSmall.dat(aMat), 'D', OP.dust.dat(ANY.Diamond), 'G', OP.toolHeadBuzzSaw.dat(MT.CobaltBrass));
		aMat = MT.DATA.Heat_T[5];    aRegistry.add("Buzzsaw (" + aMat.getLocal() + ")"                   , "Basic Machines"                      , 20106, 20001, aClass, aMat.mToolQuality, 16, aMachine     , UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS, HARDNESS[5], NBT_RESISTANCE, HARDNESS[5], NBT_COLOR, UT.Code.getRGBInt(aMat.fRGBaSolid), NBT_INPUT, V[5], NBT_TEXTURE, "buzzsaw", NBT_ENERGY_ACCEPTED, TD.Energy.RU, NBT_RECIPEMAP, RM.Cutter, NBT_INV_SIDE_IN, SBIT_L, NBT_INV_SIDE_AUTO_IN, SIDE_LEFT, NBT_INV_SIDE_OUT, SBIT_R, NBT_INV_SIDE_AUTO_OUT, SIDE_RIGHT, NBT_TANK_SIDE_IN, SBIT_U|SBIT_D, NBT_TANK_SIDE_AUTO_IN, SIDE_BOTTOM, NBT_ENERGY_ACCEPTED_SIDES, SBIT_B), "DGS", "wMS", 'M', OP.casingMachineDouble.dat(aMat), 'S', OP.gearGtSmall.dat(aMat), 'D', OP.dust.dat(ANY.Diamond), 'G', OP.toolHeadBuzzSaw.dat(ANY.Steel));
		aMat = MT.DATA.Heat_T[6];    aRegistry.add("Buzzsaw (" + aMat.getLocal() + ")"                   , "Basic Machines"                      , 20107, 20001, aClass, aMat.mToolQuality, 16, aMachine     , UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS, HARDNESS[6], NBT_RESISTANCE, HARDNESS[6], NBT_COLOR, UT.Code.getRGBInt(aMat.fRGBaSolid), NBT_INPUT, V[6], NBT_TEXTURE, "buzzsaw", NBT_ENERGY_ACCEPTED, TD.Energy.RU, NBT_RECIPEMAP, RM.Cutter, NBT_INV_SIDE_IN, SBIT_L, NBT_INV_SIDE_AUTO_IN, SIDE_LEFT, NBT_INV_SIDE_OUT, SBIT_R, NBT_INV_SIDE_AUTO_OUT, SIDE_RIGHT, NBT_TANK_SIDE_IN, SBIT_U|SBIT_D, NBT_TANK_SIDE_AUTO_IN, SIDE_BOTTOM, NBT_ENERGY_ACCEPTED_SIDES, SBIT_B), "DGS", "wMS", 'M', OP.casingMachineDouble.dat(aMat), 'S', OP.gearGtSmall.dat(aMat), 'D', OP.dust.dat(ANY.Diamond), 'G', OP.toolHeadBuzzSaw.dat(ANY.Steel));
		aMat = MT.DATA.Heat_T[7];    aRegistry.add("Buzzsaw (" + aMat.getLocal() + ")"                   , "Basic Machines"                      , 20108, 20001, aClass, aMat.mToolQuality, 16, aMachine     , UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS, HARDNESS[7], NBT_RESISTANCE, HARDNESS[7], NBT_COLOR, UT.Code.getRGBInt(aMat.fRGBaSolid), NBT_INPUT, V[7], NBT_TEXTURE, "buzzsaw", NBT_ENERGY_ACCEPTED, TD.Energy.RU, NBT_RECIPEMAP, RM.Cutter, NBT_INV_SIDE_IN, SBIT_L, NBT_INV_SIDE_AUTO_IN, SIDE_LEFT, NBT_INV_SIDE_OUT, SBIT_R, NBT_INV_SIDE_AUTO_OUT, SIDE_RIGHT, NBT_TANK_SIDE_IN, SBIT_U|SBIT_D, NBT_TANK_SIDE_AUTO_IN, SIDE_BOTTOM, NBT_ENERGY_ACCEPTED_SIDES, SBIT_B), "DGS", "wMS", 'M', OP.casingMachineDouble.dat(aMat), 'S', OP.gearGtSmall.dat(aMat), 'D', OP.dust.dat(ANY.Diamond), 'G', OP.toolHeadBuzzSaw.dat(MT.CobaltBrass));
		aMat = MT.DATA.Heat_T[8];    aRegistry.add("Buzzsaw (" + aMat.getLocal() + ")"                   , "Basic Machines"                      , 20109, 20001, aClass, aMat.mToolQuality, 16, aMachine     , UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS, HARDNESS[8], NBT_RESISTANCE, HARDNESS[8], NBT_COLOR, UT.Code.getRGBInt(aMat.fRGBaSolid), NBT_INPUT, V[8], NBT_TEXTURE, "buzzsaw", NBT_ENERGY_ACCEPTED, TD.Energy.RU, NBT_RECIPEMAP, RM.Cutter, NBT_INV_SIDE_IN, SBIT_L, NBT_INV_SIDE_AUTO_IN, SIDE_LEFT, NBT_INV_SIDE_OUT, SBIT_R, NBT_INV_SIDE_AUTO_OUT, SIDE_RIGHT, NBT_TANK_SIDE_IN, SBIT_U|SBIT_D, NBT_TANK_SIDE_AUTO_IN, SIDE_BOTTOM, NBT_ENERGY_ACCEPTED_SIDES, SBIT_B), "DGS", "wMS", 'M', OP.casingMachineDouble.dat(aMat), 'S', OP.gearGtSmall.dat(aMat), 'D', OP.dust.dat(ANY.Diamond), 'G', OP.toolHeadBuzzSaw.dat(MT.CobaltBrass));
		aMat = MT.DATA.Heat_T[9];    aRegistry.add("Buzzsaw (" + aMat.getLocal() + ")"                   , "Basic Machines"                      , 20110, 20001, aClass, aMat.mToolQuality, 16, aMachine     , UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS, HARDNESS[9], NBT_RESISTANCE, HARDNESS[9], NBT_COLOR, UT.Code.getRGBInt(aMat.fRGBaSolid), NBT_INPUT, V[9], NBT_TEXTURE, "buzzsaw", NBT_ENERGY_ACCEPTED, TD.Energy.RU, NBT_RECIPEMAP, RM.Cutter, NBT_INV_SIDE_IN, SBIT_L, NBT_INV_SIDE_AUTO_IN, SIDE_LEFT, NBT_INV_SIDE_OUT, SBIT_R, NBT_INV_SIDE_AUTO_OUT, SIDE_RIGHT, NBT_TANK_SIDE_IN, SBIT_U|SBIT_D, NBT_TANK_SIDE_AUTO_IN, SIDE_BOTTOM, NBT_ENERGY_ACCEPTED_SIDES, SBIT_B), "DGS", "wMS", 'M', OP.casingMachineDouble.dat(aMat), 'S', OP.gearGtSmall.dat(aMat), 'D', OP.dust.dat(ANY.Diamond), 'G', OP.toolHeadBuzzSaw.dat(MT.CobaltBrass));
		aMat = MT.DATA.Heat_T[10];    aRegistry.add("Buzzsaw (" + aMat.getLocal() + ")"                   , "Basic Machines"                      , 20111, 20001, aClass, aMat.mToolQuality, 16, aMachine     , UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS, HARDNESS[10], NBT_RESISTANCE, HARDNESS[10], NBT_COLOR, UT.Code.getRGBInt(aMat.fRGBaSolid), NBT_INPUT, V[10], NBT_TEXTURE, "buzzsaw", NBT_ENERGY_ACCEPTED, TD.Energy.RU, NBT_RECIPEMAP, RM.Cutter, NBT_INV_SIDE_IN, SBIT_L, NBT_INV_SIDE_AUTO_IN, SIDE_LEFT, NBT_INV_SIDE_OUT, SBIT_R, NBT_INV_SIDE_AUTO_OUT, SIDE_RIGHT, NBT_TANK_SIDE_IN, SBIT_U|SBIT_D, NBT_TANK_SIDE_AUTO_IN, SIDE_BOTTOM, NBT_ENERGY_ACCEPTED_SIDES, SBIT_B), "DGS", "wMS", 'M', OP.casingMachineDouble.dat(aMat), 'S', OP.gearGtSmall.dat(aMat), 'D', OP.dust.dat(ANY.Diamond), 'G', OP.toolHeadBuzzSaw.dat(ANY.Steel));
		aMat = MT.DATA.Heat_T[11];    aRegistry.add("Buzzsaw (" + aMat.getLocal() + ")"                   , "Basic Machines"                      , 20112, 20001, aClass, aMat.mToolQuality, 16, aMachine     , UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS, HARDNESS[11], NBT_RESISTANCE, HARDNESS[11], NBT_COLOR, UT.Code.getRGBInt(aMat.fRGBaSolid), NBT_INPUT, V[11], NBT_TEXTURE, "buzzsaw", NBT_ENERGY_ACCEPTED, TD.Energy.RU, NBT_RECIPEMAP, RM.Cutter, NBT_INV_SIDE_IN, SBIT_L, NBT_INV_SIDE_AUTO_IN, SIDE_LEFT, NBT_INV_SIDE_OUT, SBIT_R, NBT_INV_SIDE_AUTO_OUT, SIDE_RIGHT, NBT_TANK_SIDE_IN, SBIT_U|SBIT_D, NBT_TANK_SIDE_AUTO_IN, SIDE_BOTTOM, NBT_ENERGY_ACCEPTED_SIDES, SBIT_B), "DGS", "wMS", 'M', OP.casingMachineDouble.dat(aMat), 'S', OP.gearGtSmall.dat(aMat), 'D', OP.dust.dat(ANY.Diamond), 'G', OP.toolHeadBuzzSaw.dat(ANY.Steel));
		aMat = MT.DATA.Heat_T[12];    aRegistry.add("Buzzsaw (" + aMat.getLocal() + ")"                   , "Basic Machines"                      , 20113, 20001, aClass, aMat.mToolQuality, 16, aMachine     , UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS, HARDNESS[12], NBT_RESISTANCE, HARDNESS[12], NBT_COLOR, UT.Code.getRGBInt(aMat.fRGBaSolid), NBT_INPUT, V[12], NBT_TEXTURE, "buzzsaw", NBT_ENERGY_ACCEPTED, TD.Energy.RU, NBT_RECIPEMAP, RM.Cutter, NBT_INV_SIDE_IN, SBIT_L, NBT_INV_SIDE_AUTO_IN, SIDE_LEFT, NBT_INV_SIDE_OUT, SBIT_R, NBT_INV_SIDE_AUTO_OUT, SIDE_RIGHT, NBT_TANK_SIDE_IN, SBIT_U|SBIT_D, NBT_TANK_SIDE_AUTO_IN, SIDE_BOTTOM, NBT_ENERGY_ACCEPTED_SIDES, SBIT_B), "DGS", "wMS", 'M', OP.casingMachineDouble.dat(aMat), 'S', OP.gearGtSmall.dat(aMat), 'D', OP.dust.dat(ANY.Diamond), 'G', OP.toolHeadBuzzSaw.dat(MT.CobaltBrass));
		aMat = MT.DATA.Heat_T[13];    aRegistry.add("Buzzsaw (" + aMat.getLocal() + ")"                   , "Basic Machines"                      , 20114, 20001, aClass, aMat.mToolQuality, 16, aMachine     , UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS, HARDNESS[13], NBT_RESISTANCE, HARDNESS[13], NBT_COLOR, UT.Code.getRGBInt(aMat.fRGBaSolid), NBT_INPUT, V[13], NBT_TEXTURE, "buzzsaw", NBT_ENERGY_ACCEPTED, TD.Energy.RU, NBT_RECIPEMAP, RM.Cutter, NBT_INV_SIDE_IN, SBIT_L, NBT_INV_SIDE_AUTO_IN, SIDE_LEFT, NBT_INV_SIDE_OUT, SBIT_R, NBT_INV_SIDE_AUTO_OUT, SIDE_RIGHT, NBT_TANK_SIDE_IN, SBIT_U|SBIT_D, NBT_TANK_SIDE_AUTO_IN, SIDE_BOTTOM, NBT_ENERGY_ACCEPTED_SIDES, SBIT_B), "DGS", "wMS", 'M', OP.casingMachineDouble.dat(aMat), 'S', OP.gearGtSmall.dat(aMat), 'D', OP.dust.dat(ANY.Diamond), 'G', OP.toolHeadBuzzSaw.dat(MT.CobaltBrass));
		aMat = MT.DATA.Heat_T[14];    aRegistry.add("Buzzsaw (" + aMat.getLocal() + ")"                   , "Basic Machines"                      , 20115, 20001, aClass, aMat.mToolQuality, 16, aMachine     , UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS, HARDNESS[14], NBT_RESISTANCE, HARDNESS[14], NBT_COLOR, UT.Code.getRGBInt(aMat.fRGBaSolid), NBT_INPUT, V[14], NBT_TEXTURE, "buzzsaw", NBT_ENERGY_ACCEPTED, TD.Energy.RU, NBT_RECIPEMAP, RM.Cutter, NBT_INV_SIDE_IN, SBIT_L, NBT_INV_SIDE_AUTO_IN, SIDE_LEFT, NBT_INV_SIDE_OUT, SBIT_R, NBT_INV_SIDE_AUTO_OUT, SIDE_RIGHT, NBT_TANK_SIDE_IN, SBIT_U|SBIT_D, NBT_TANK_SIDE_AUTO_IN, SIDE_BOTTOM, NBT_ENERGY_ACCEPTED_SIDES, SBIT_B), "DGS", "wMS", 'M', OP.casingMachineDouble.dat(aMat), 'S', OP.gearGtSmall.dat(aMat), 'D', OP.dust.dat(ANY.Diamond), 'G', OP.toolHeadBuzzSaw.dat(MT.CobaltBrass));
		aMat = MT.DATA.Heat_T[15];    aRegistry.add("Buzzsaw (" + aMat.getLocal() + ")"                   , "Basic Machines"                      , 20116, 20001, aClass, aMat.mToolQuality, 16, aMachine     , UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS, HARDNESS[15], NBT_RESISTANCE, HARDNESS[15], NBT_COLOR, UT.Code.getRGBInt(aMat.fRGBaSolid), NBT_INPUT, V[15], NBT_TEXTURE, "buzzsaw", NBT_ENERGY_ACCEPTED, TD.Energy.RU, NBT_RECIPEMAP, RM.Cutter, NBT_INV_SIDE_IN, SBIT_L, NBT_INV_SIDE_AUTO_IN, SIDE_LEFT, NBT_INV_SIDE_OUT, SBIT_R, NBT_INV_SIDE_AUTO_OUT, SIDE_RIGHT, NBT_TANK_SIDE_IN, SBIT_U|SBIT_D, NBT_TANK_SIDE_AUTO_IN, SIDE_BOTTOM, NBT_ENERGY_ACCEPTED_SIDES, SBIT_B), "DGS", "wMS", 'M', OP.casingMachineDouble.dat(aMat), 'S', OP.gearGtSmall.dat(aMat), 'D', OP.dust.dat(ANY.Diamond), 'G', OP.toolHeadBuzzSaw.dat(ANY.Steel));

		aClass = MultiTileEntityBasicMachine.class;
		aMat = MT.DATA.Heat_T[0];    aRegistry.add("Squeezer (" + aMat.getLocal() + ")"                  , "Basic Machines"                      , 20121, 20001, aClass, aMat.mToolQuality, 16, aMachine     , UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS, HARDNESS[0], NBT_RESISTANCE, HARDNESS[0], NBT_COLOR, UT.Code.getRGBInt(aMat.fRGBaSolid), NBT_INPUT, V[0], NBT_TEXTURE, "squeezer", NBT_ENERGY_ACCEPTED, TD.Energy.KU, NBT_RECIPEMAP, RM.Squeezer, NBT_INV_SIDE_IN, SBIT_L, NBT_INV_SIDE_AUTO_IN, SIDE_LEFT, NBT_INV_SIDE_OUT, SBIT_R, NBT_INV_SIDE_AUTO_OUT, SIDE_RIGHT, NBT_TANK_SIDE_OUT, SBIT_D, NBT_TANK_SIDE_AUTO_OUT, SIDE_BOTTOM, NBT_ENERGY_ACCEPTED_SIDES, SBIT_U, NBT_PARALLEL, 1, NBT_PARALLEL_DURATION, T), "RS", "PM", "Pw", 'M', OP.casingMachineDouble.dat(aMat), 'P', OP.plateTriple.dat(aMat), 'S', OP.spring.dat(aMat), 'R', OP.stick.dat(aMat));
		aMat = MT.DATA.Heat_T[1];    aRegistry.add("Squeezer (" + aMat.getLocal() + ")"                  , "Basic Machines"                      , 20122, 20001, aClass, aMat.mToolQuality, 16, aMachine     , UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS, HARDNESS[1], NBT_RESISTANCE, HARDNESS[1], NBT_COLOR, UT.Code.getRGBInt(aMat.fRGBaSolid), NBT_INPUT, V[1], NBT_TEXTURE, "squeezer", NBT_ENERGY_ACCEPTED, TD.Energy.KU, NBT_RECIPEMAP, RM.Squeezer, NBT_INV_SIDE_IN, SBIT_L, NBT_INV_SIDE_AUTO_IN, SIDE_LEFT, NBT_INV_SIDE_OUT, SBIT_R, NBT_INV_SIDE_AUTO_OUT, SIDE_RIGHT, NBT_TANK_SIDE_OUT, SBIT_D, NBT_TANK_SIDE_AUTO_OUT, SIDE_BOTTOM, NBT_ENERGY_ACCEPTED_SIDES, SBIT_U, NBT_PARALLEL, 1, NBT_PARALLEL_DURATION, T), "RS", "PM", "Pw", 'M', OP.casingMachineDouble.dat(aMat), 'P', OP.plateTriple.dat(aMat), 'S', OP.spring.dat(aMat), 'R', OP.stick.dat(aMat));
		aMat = MT.DATA.Heat_T[2];    aRegistry.add("Squeezer (" + aMat.getLocal() + ")"                  , "Basic Machines"                      , 20123, 20001, aClass, aMat.mToolQuality, 16, aMachine     , UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS, HARDNESS[2], NBT_RESISTANCE, HARDNESS[2], NBT_COLOR, UT.Code.getRGBInt(aMat.fRGBaSolid), NBT_INPUT, V[2], NBT_TEXTURE, "squeezer", NBT_ENERGY_ACCEPTED, TD.Energy.KU, NBT_RECIPEMAP, RM.Squeezer, NBT_INV_SIDE_IN, SBIT_L, NBT_INV_SIDE_AUTO_IN, SIDE_LEFT, NBT_INV_SIDE_OUT, SBIT_R, NBT_INV_SIDE_AUTO_OUT, SIDE_RIGHT, NBT_TANK_SIDE_OUT, SBIT_D, NBT_TANK_SIDE_AUTO_OUT, SIDE_BOTTOM, NBT_ENERGY_ACCEPTED_SIDES, SBIT_U, NBT_PARALLEL, 2, NBT_PARALLEL_DURATION, T), "RS", "PM", "Pw", 'M', OP.casingMachineDouble.dat(aMat), 'P', OP.plateTriple.dat(aMat), 'S', OP.spring.dat(aMat), 'R', OP.stick.dat(aMat));
		aMat = MT.DATA.Heat_T[3];    aRegistry.add("Squeezer (" + aMat.getLocal() + ")"                  , "Basic Machines"                      , 20124, 20001, aClass, aMat.mToolQuality, 16, aMachine     , UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS, HARDNESS[3], NBT_RESISTANCE, HARDNESS[3], NBT_COLOR, UT.Code.getRGBInt(aMat.fRGBaSolid), NBT_INPUT, V[3], NBT_TEXTURE, "squeezer", NBT_ENERGY_ACCEPTED, TD.Energy.KU, NBT_RECIPEMAP, RM.Squeezer, NBT_INV_SIDE_IN, SBIT_L, NBT_INV_SIDE_AUTO_IN, SIDE_LEFT, NBT_INV_SIDE_OUT, SBIT_R, NBT_INV_SIDE_AUTO_OUT, SIDE_RIGHT, NBT_TANK_SIDE_OUT, SBIT_D, NBT_TANK_SIDE_AUTO_OUT, SIDE_BOTTOM, NBT_ENERGY_ACCEPTED_SIDES, SBIT_U, NBT_PARALLEL,4, NBT_PARALLEL_DURATION, T), "RS", "PM", "Pw", 'M', OP.casingMachineDouble.dat(aMat), 'P', OP.plateTriple.dat(aMat), 'S', OP.spring.dat(aMat), 'R', OP.stick.dat(aMat));
		aMat = MT.DATA.Heat_T[4];    aRegistry.add("Squeezer (" + aMat.getLocal() + ")"                  , "Basic Machines"                      , 20125, 20001, aClass, aMat.mToolQuality, 16, aMachine     , UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS, HARDNESS[4], NBT_RESISTANCE, HARDNESS[4], NBT_COLOR, UT.Code.getRGBInt(aMat.fRGBaSolid), NBT_INPUT, V[4], NBT_TEXTURE, "squeezer", NBT_ENERGY_ACCEPTED, TD.Energy.KU, NBT_RECIPEMAP, RM.Squeezer, NBT_INV_SIDE_IN, SBIT_L, NBT_INV_SIDE_AUTO_IN, SIDE_LEFT, NBT_INV_SIDE_OUT, SBIT_R, NBT_INV_SIDE_AUTO_OUT, SIDE_RIGHT, NBT_TANK_SIDE_OUT, SBIT_D, NBT_TANK_SIDE_AUTO_OUT, SIDE_BOTTOM, NBT_ENERGY_ACCEPTED_SIDES, SBIT_U, NBT_PARALLEL,8, NBT_PARALLEL_DURATION, T), "RS", "PM", "Pw", 'M', OP.casingMachineDouble.dat(aMat), 'P', OP.plateTriple.dat(aMat), 'S', OP.spring.dat(aMat), 'R', OP.stick.dat(aMat));
		aMat = MT.DATA.Heat_T[5];    aRegistry.add("Squeezer (" + aMat.getLocal() + ")"                  , "Basic Machines"                      , 20126, 20001, aClass, aMat.mToolQuality, 16, aMachine     , UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS, HARDNESS[5], NBT_RESISTANCE, HARDNESS[5], NBT_COLOR, UT.Code.getRGBInt(aMat.fRGBaSolid), NBT_INPUT, V[5], NBT_TEXTURE, "squeezer", NBT_ENERGY_ACCEPTED, TD.Energy.KU, NBT_RECIPEMAP, RM.Squeezer, NBT_INV_SIDE_IN, SBIT_L, NBT_INV_SIDE_AUTO_IN, SIDE_LEFT, NBT_INV_SIDE_OUT, SBIT_R, NBT_INV_SIDE_AUTO_OUT, SIDE_RIGHT, NBT_TANK_SIDE_OUT, SBIT_D, NBT_TANK_SIDE_AUTO_OUT, SIDE_BOTTOM, NBT_ENERGY_ACCEPTED_SIDES, SBIT_U, NBT_PARALLEL,16, NBT_PARALLEL_DURATION, T), "RS", "PM", "Pw", 'M', OP.casingMachineDouble.dat(aMat), 'P', OP.plateTriple.dat(aMat), 'S', OP.spring.dat(aMat), 'R', OP.stick.dat(aMat));
		aMat = MT.DATA.Heat_T[6];    aRegistry.add("Squeezer (" + aMat.getLocal() + ")"                  , "Basic Machines"                      , 20127, 20001, aClass, aMat.mToolQuality, 16, aMachine     , UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS, HARDNESS[6], NBT_RESISTANCE, HARDNESS[6], NBT_COLOR, UT.Code.getRGBInt(aMat.fRGBaSolid), NBT_INPUT, V[6], NBT_TEXTURE, "squeezer", NBT_ENERGY_ACCEPTED, TD.Energy.KU, NBT_RECIPEMAP, RM.Squeezer, NBT_INV_SIDE_IN, SBIT_L, NBT_INV_SIDE_AUTO_IN, SIDE_LEFT, NBT_INV_SIDE_OUT, SBIT_R, NBT_INV_SIDE_AUTO_OUT, SIDE_RIGHT, NBT_TANK_SIDE_OUT, SBIT_D, NBT_TANK_SIDE_AUTO_OUT, SIDE_BOTTOM, NBT_ENERGY_ACCEPTED_SIDES, SBIT_U, NBT_PARALLEL,32, NBT_PARALLEL_DURATION, T), "RS", "PM", "Pw", 'M', OP.casingMachineDouble.dat(aMat), 'P', OP.plateTriple.dat(aMat), 'S', OP.spring.dat(aMat), 'R', OP.stick.dat(aMat));
		aMat = MT.DATA.Heat_T[7];    aRegistry.add("Squeezer (" + aMat.getLocal() + ")"                  , "Basic Machines"                      , 20128, 20001, aClass, aMat.mToolQuality, 16, aMachine     , UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS, HARDNESS[7], NBT_RESISTANCE, HARDNESS[7], NBT_COLOR, UT.Code.getRGBInt(aMat.fRGBaSolid), NBT_INPUT, V[7], NBT_TEXTURE, "squeezer", NBT_ENERGY_ACCEPTED, TD.Energy.KU, NBT_RECIPEMAP, RM.Squeezer, NBT_INV_SIDE_IN, SBIT_L, NBT_INV_SIDE_AUTO_IN, SIDE_LEFT, NBT_INV_SIDE_OUT, SBIT_R, NBT_INV_SIDE_AUTO_OUT, SIDE_RIGHT, NBT_TANK_SIDE_OUT, SBIT_D, NBT_TANK_SIDE_AUTO_OUT, SIDE_BOTTOM, NBT_ENERGY_ACCEPTED_SIDES, SBIT_U, NBT_PARALLEL,64, NBT_PARALLEL_DURATION, T), "RS", "PM", "Pw", 'M', OP.casingMachineDouble.dat(aMat), 'P', OP.plateTriple.dat(aMat), 'S', OP.spring.dat(aMat), 'R', OP.stick.dat(aMat));
		aMat = MT.DATA.Heat_T[8];    aRegistry.add("Squeezer (" + aMat.getLocal() + ")"                  , "Basic Machines"                      , 20129, 20001, aClass, aMat.mToolQuality, 16, aMachine     , UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS, HARDNESS[8], NBT_RESISTANCE, HARDNESS[8], NBT_COLOR, UT.Code.getRGBInt(aMat.fRGBaSolid), NBT_INPUT, V[8], NBT_TEXTURE, "squeezer", NBT_ENERGY_ACCEPTED, TD.Energy.KU, NBT_RECIPEMAP, RM.Squeezer, NBT_INV_SIDE_IN, SBIT_L, NBT_INV_SIDE_AUTO_IN, SIDE_LEFT, NBT_INV_SIDE_OUT, SBIT_R, NBT_INV_SIDE_AUTO_OUT, SIDE_RIGHT, NBT_TANK_SIDE_OUT, SBIT_D, NBT_TANK_SIDE_AUTO_OUT, SIDE_BOTTOM, NBT_ENERGY_ACCEPTED_SIDES, SBIT_U, NBT_PARALLEL,64, NBT_PARALLEL_DURATION, T), "RS", "PM", "Pw", 'M', OP.casingMachineDouble.dat(aMat), 'P', OP.plateTriple.dat(aMat), 'S', OP.spring.dat(aMat), 'R', OP.stick.dat(aMat));
		aMat = MT.DATA.Heat_T[9];    aRegistry.add("Squeezer (" + aMat.getLocal() + ")"                  , "Basic Machines"                      , 20130, 20001, aClass, aMat.mToolQuality, 16, aMachine     , UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS, HARDNESS[9], NBT_RESISTANCE, HARDNESS[9], NBT_COLOR, UT.Code.getRGBInt(aMat.fRGBaSolid), NBT_INPUT, V[9], NBT_TEXTURE, "squeezer", NBT_ENERGY_ACCEPTED, TD.Energy.KU, NBT_RECIPEMAP, RM.Squeezer, NBT_INV_SIDE_IN, SBIT_L, NBT_INV_SIDE_AUTO_IN, SIDE_LEFT, NBT_INV_SIDE_OUT, SBIT_R, NBT_INV_SIDE_AUTO_OUT, SIDE_RIGHT, NBT_TANK_SIDE_OUT, SBIT_D, NBT_TANK_SIDE_AUTO_OUT, SIDE_BOTTOM, NBT_ENERGY_ACCEPTED_SIDES, SBIT_U, NBT_PARALLEL,64, NBT_PARALLEL_DURATION, T), "RS", "PM", "Pw", 'M', OP.casingMachineDouble.dat(aMat), 'P', OP.plateTriple.dat(aMat), 'S', OP.spring.dat(aMat), 'R', OP.stick.dat(aMat));
		aMat = MT.DATA.Heat_T[10];    aRegistry.add("Squeezer (" + aMat.getLocal() + ")"                  , "Basic Machines"                      , 20131, 20001, aClass, aMat.mToolQuality, 16, aMachine     , UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS, HARDNESS[10], NBT_RESISTANCE, HARDNESS[10], NBT_COLOR, UT.Code.getRGBInt(aMat.fRGBaSolid), NBT_INPUT, V[10], NBT_TEXTURE, "squeezer", NBT_ENERGY_ACCEPTED, TD.Energy.KU, NBT_RECIPEMAP, RM.Squeezer, NBT_INV_SIDE_IN, SBIT_L, NBT_INV_SIDE_AUTO_IN, SIDE_LEFT, NBT_INV_SIDE_OUT, SBIT_R, NBT_INV_SIDE_AUTO_OUT, SIDE_RIGHT, NBT_TANK_SIDE_OUT, SBIT_D, NBT_TANK_SIDE_AUTO_OUT, SIDE_BOTTOM, NBT_ENERGY_ACCEPTED_SIDES, SBIT_U, NBT_PARALLEL,64, NBT_PARALLEL_DURATION, T), "RS", "PM", "Pw", 'M', OP.casingMachineDouble.dat(aMat), 'P', OP.plateTriple.dat(aMat), 'S', OP.spring.dat(aMat), 'R', OP.stick.dat(aMat));
		aMat = MT.DATA.Heat_T[11];    aRegistry.add("Squeezer (" + aMat.getLocal() + ")"                  , "Basic Machines"                      , 20132, 20001, aClass, aMat.mToolQuality, 16, aMachine     , UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS, HARDNESS[11], NBT_RESISTANCE, HARDNESS[11], NBT_COLOR, UT.Code.getRGBInt(aMat.fRGBaSolid), NBT_INPUT, V[11], NBT_TEXTURE, "squeezer", NBT_ENERGY_ACCEPTED, TD.Energy.KU, NBT_RECIPEMAP, RM.Squeezer, NBT_INV_SIDE_IN, SBIT_L, NBT_INV_SIDE_AUTO_IN, SIDE_LEFT, NBT_INV_SIDE_OUT, SBIT_R, NBT_INV_SIDE_AUTO_OUT, SIDE_RIGHT, NBT_TANK_SIDE_OUT, SBIT_D, NBT_TANK_SIDE_AUTO_OUT, SIDE_BOTTOM, NBT_ENERGY_ACCEPTED_SIDES, SBIT_U, NBT_PARALLEL,64, NBT_PARALLEL_DURATION, T), "RS", "PM", "Pw", 'M', OP.casingMachineDouble.dat(aMat), 'P', OP.plateTriple.dat(aMat), 'S', OP.spring.dat(aMat), 'R', OP.stick.dat(aMat));
		aMat = MT.DATA.Heat_T[12];    aRegistry.add("Squeezer (" + aMat.getLocal() + ")"                  , "Basic Machines"                      , 20133, 20001, aClass, aMat.mToolQuality, 16, aMachine     , UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS, HARDNESS[12], NBT_RESISTANCE, HARDNESS[12], NBT_COLOR, UT.Code.getRGBInt(aMat.fRGBaSolid), NBT_INPUT, V[12], NBT_TEXTURE, "squeezer", NBT_ENERGY_ACCEPTED, TD.Energy.KU, NBT_RECIPEMAP, RM.Squeezer, NBT_INV_SIDE_IN, SBIT_L, NBT_INV_SIDE_AUTO_IN, SIDE_LEFT, NBT_INV_SIDE_OUT, SBIT_R, NBT_INV_SIDE_AUTO_OUT, SIDE_RIGHT, NBT_TANK_SIDE_OUT, SBIT_D, NBT_TANK_SIDE_AUTO_OUT, SIDE_BOTTOM, NBT_ENERGY_ACCEPTED_SIDES, SBIT_U, NBT_PARALLEL,64, NBT_PARALLEL_DURATION, T), "RS", "PM", "Pw", 'M', OP.casingMachineDouble.dat(aMat), 'P', OP.plateTriple.dat(aMat), 'S', OP.spring.dat(aMat), 'R', OP.stick.dat(aMat));
		aMat = MT.DATA.Heat_T[13];    aRegistry.add("Squeezer (" + aMat.getLocal() + ")"                  , "Basic Machines"                      , 20134, 20001, aClass, aMat.mToolQuality, 16, aMachine     , UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS, HARDNESS[13], NBT_RESISTANCE, HARDNESS[13], NBT_COLOR, UT.Code.getRGBInt(aMat.fRGBaSolid), NBT_INPUT, V[13], NBT_TEXTURE, "squeezer", NBT_ENERGY_ACCEPTED, TD.Energy.KU, NBT_RECIPEMAP, RM.Squeezer, NBT_INV_SIDE_IN, SBIT_L, NBT_INV_SIDE_AUTO_IN, SIDE_LEFT, NBT_INV_SIDE_OUT, SBIT_R, NBT_INV_SIDE_AUTO_OUT, SIDE_RIGHT, NBT_TANK_SIDE_OUT, SBIT_D, NBT_TANK_SIDE_AUTO_OUT, SIDE_BOTTOM, NBT_ENERGY_ACCEPTED_SIDES, SBIT_U, NBT_PARALLEL,64, NBT_PARALLEL_DURATION, T), "RS", "PM", "Pw", 'M', OP.casingMachineDouble.dat(aMat), 'P', OP.plateTriple.dat(aMat), 'S', OP.spring.dat(aMat), 'R', OP.stick.dat(aMat));
		aMat = MT.DATA.Heat_T[14];    aRegistry.add("Squeezer (" + aMat.getLocal() + ")"                  , "Basic Machines"                      , 20135, 20001, aClass, aMat.mToolQuality, 16, aMachine     , UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS, HARDNESS[14], NBT_RESISTANCE, HARDNESS[14], NBT_COLOR, UT.Code.getRGBInt(aMat.fRGBaSolid), NBT_INPUT, V[14], NBT_TEXTURE, "squeezer", NBT_ENERGY_ACCEPTED, TD.Energy.KU, NBT_RECIPEMAP, RM.Squeezer, NBT_INV_SIDE_IN, SBIT_L, NBT_INV_SIDE_AUTO_IN, SIDE_LEFT, NBT_INV_SIDE_OUT, SBIT_R, NBT_INV_SIDE_AUTO_OUT, SIDE_RIGHT, NBT_TANK_SIDE_OUT, SBIT_D, NBT_TANK_SIDE_AUTO_OUT, SIDE_BOTTOM, NBT_ENERGY_ACCEPTED_SIDES, SBIT_U, NBT_PARALLEL,64, NBT_PARALLEL_DURATION, T), "RS", "PM", "Pw", 'M', OP.casingMachineDouble.dat(aMat), 'P', OP.plateTriple.dat(aMat), 'S', OP.spring.dat(aMat), 'R', OP.stick.dat(aMat));
		aMat = MT.DATA.Heat_T[15];    aRegistry.add("Squeezer (" + aMat.getLocal() + ")"                  , "Basic Machines"                      , 20136, 20001, aClass, aMat.mToolQuality, 16, aMachine     , UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS, HARDNESS[15], NBT_RESISTANCE, HARDNESS[15], NBT_COLOR, UT.Code.getRGBInt(aMat.fRGBaSolid), NBT_INPUT, V[15], NBT_TEXTURE, "squeezer", NBT_ENERGY_ACCEPTED, TD.Energy.KU, NBT_RECIPEMAP, RM.Squeezer, NBT_INV_SIDE_IN, SBIT_L, NBT_INV_SIDE_AUTO_IN, SIDE_LEFT, NBT_INV_SIDE_OUT, SBIT_R, NBT_INV_SIDE_AUTO_OUT, SIDE_RIGHT, NBT_TANK_SIDE_OUT, SBIT_D, NBT_TANK_SIDE_AUTO_OUT, SIDE_BOTTOM, NBT_ENERGY_ACCEPTED_SIDES, SBIT_U, NBT_PARALLEL,64, NBT_PARALLEL_DURATION, T), "RS", "PM", "Pw", 'M', OP.casingMachineDouble.dat(aMat), 'P', OP.plateTriple.dat(aMat), 'S', OP.spring.dat(aMat), 'R', OP.stick.dat(aMat));

		aClass = MultiTileEntityBasicMachine.class;
		aMat = MT.DATA.Heat_T[0];    aRegistry.add("Centrifuge (" + aMat.getLocal() + ")"                , "Basic Machines"                      , 20141, 20001, aClass, aMat.mToolQuality, 16, aMachine     , UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS, HARDNESS[0], NBT_RESISTANCE, HARDNESS[0] , NBT_COLOR, UT.Code.getRGBInt(aMat.fRGBaSolid), NBT_INPUT, V[0], NBT_TEXTURE, "centrifuge", NBT_ENERGY_ACCEPTED, TD.Energy.RU, NBT_RECIPEMAP, RM.Centrifuge, NBT_INV_SIDE_IN, SBIT_U, NBT_INV_SIDE_AUTO_IN, SIDE_TOP, NBT_INV_SIDE_OUT, SBIT_R, NBT_INV_SIDE_AUTO_OUT, SIDE_RIGHT, NBT_TANK_SIDE_IN, SBIT_U, NBT_TANK_SIDE_AUTO_IN, SIDE_TOP, NBT_TANK_SIDE_OUT, SBIT_L, NBT_TANK_SIDE_AUTO_OUT, SIDE_LEFT, NBT_ENERGY_ACCEPTED_SIDES, SBIT_D, NBT_PARALLEL,  1, NBT_PARALLEL_DURATION, T), "Gw", "SM", "Gh", 'M', OP.casingMachineDouble.dat(aMat), 'G', OP.gearGt.dat(aMat), 'S', OP.stickLong.dat(aMat));
		aMat = MT.DATA.Heat_T[1];    aRegistry.add("Centrifuge (" + aMat.getLocal() + ")"                , "Basic Machines"                      , 20142, 20001, aClass, aMat.mToolQuality, 16, aMachine     , UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS, HARDNESS[1], NBT_RESISTANCE, HARDNESS[1], NBT_COLOR, UT.Code.getRGBInt(aMat.fRGBaSolid), NBT_INPUT, V[1], NBT_TEXTURE, "centrifuge", NBT_ENERGY_ACCEPTED, TD.Energy.RU, NBT_RECIPEMAP, RM.Centrifuge, NBT_INV_SIDE_IN, SBIT_U, NBT_INV_SIDE_AUTO_IN, SIDE_TOP, NBT_INV_SIDE_OUT, SBIT_R, NBT_INV_SIDE_AUTO_OUT, SIDE_RIGHT, NBT_TANK_SIDE_IN, SBIT_U, NBT_TANK_SIDE_AUTO_IN, SIDE_TOP, NBT_TANK_SIDE_OUT, SBIT_L, NBT_TANK_SIDE_AUTO_OUT, SIDE_LEFT, NBT_ENERGY_ACCEPTED_SIDES, SBIT_D, NBT_PARALLEL,  1, NBT_PARALLEL_DURATION, T), "Gw", "SM", "Gh", 'M', OP.casingMachineDouble.dat(aMat), 'G', OP.gearGt.dat(aMat), 'S', OP.stickLong.dat(aMat));
		aMat = MT.DATA.Heat_T[2];    aRegistry.add("Centrifuge (" + aMat.getLocal() + ")"                , "Basic Machines"                      , 20143, 20001, aClass, aMat.mToolQuality, 16, aMachine     , UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS, HARDNESS[2], NBT_RESISTANCE, HARDNESS[2], NBT_COLOR, UT.Code.getRGBInt(aMat.fRGBaSolid), NBT_INPUT, V[2], NBT_TEXTURE, "centrifuge", NBT_ENERGY_ACCEPTED, TD.Energy.RU, NBT_RECIPEMAP, RM.Centrifuge, NBT_INV_SIDE_IN, SBIT_U, NBT_INV_SIDE_AUTO_IN, SIDE_TOP, NBT_INV_SIDE_OUT, SBIT_R, NBT_INV_SIDE_AUTO_OUT, SIDE_RIGHT, NBT_TANK_SIDE_IN, SBIT_U, NBT_TANK_SIDE_AUTO_IN, SIDE_TOP, NBT_TANK_SIDE_OUT, SBIT_L, NBT_TANK_SIDE_AUTO_OUT, SIDE_LEFT, NBT_ENERGY_ACCEPTED_SIDES, SBIT_D, NBT_PARALLEL,  2, NBT_PARALLEL_DURATION, T), "Gw", "SM", "Gh", 'M', OP.casingMachineDouble.dat(aMat), 'G', OP.gearGt.dat(aMat), 'S', OP.stickLong.dat(aMat));
		aMat = MT.DATA.Heat_T[3];    aRegistry.add("Centrifuge (" + aMat.getLocal() + ")"                , "Basic Machines"                      , 20144, 20001, aClass, aMat.mToolQuality, 16, aMachine     , UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS, HARDNESS[3], NBT_RESISTANCE, HARDNESS[3], NBT_COLOR, UT.Code.getRGBInt(aMat.fRGBaSolid), NBT_INPUT, V[3], NBT_TEXTURE, "centrifuge", NBT_ENERGY_ACCEPTED, TD.Energy.RU, NBT_RECIPEMAP, RM.Centrifuge, NBT_INV_SIDE_IN, SBIT_U, NBT_INV_SIDE_AUTO_IN, SIDE_TOP, NBT_INV_SIDE_OUT, SBIT_R, NBT_INV_SIDE_AUTO_OUT, SIDE_RIGHT, NBT_TANK_SIDE_IN, SBIT_U, NBT_TANK_SIDE_AUTO_IN, SIDE_TOP, NBT_TANK_SIDE_OUT, SBIT_L, NBT_TANK_SIDE_AUTO_OUT, SIDE_LEFT, NBT_ENERGY_ACCEPTED_SIDES, SBIT_D, NBT_PARALLEL,  4, NBT_PARALLEL_DURATION, T), "Gw", "SM", "Gh", 'M', OP.casingMachineDouble.dat(aMat), 'G', OP.gearGt.dat(aMat), 'S', OP.stickLong.dat(aMat));
		aMat = MT.DATA.Heat_T[4];    aRegistry.add("Centrifuge (" + aMat.getLocal() + ")"                , "Basic Machines"                      , 20145, 20001, aClass, aMat.mToolQuality, 16, aMachine     , UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS, HARDNESS[4], NBT_RESISTANCE, HARDNESS[4], NBT_COLOR, UT.Code.getRGBInt(aMat.fRGBaSolid), NBT_INPUT, V[4], NBT_TEXTURE, "centrifuge", NBT_ENERGY_ACCEPTED, TD.Energy.RU, NBT_RECIPEMAP, RM.Centrifuge, NBT_INV_SIDE_IN, SBIT_U, NBT_INV_SIDE_AUTO_IN, SIDE_TOP, NBT_INV_SIDE_OUT, SBIT_R, NBT_INV_SIDE_AUTO_OUT, SIDE_RIGHT, NBT_TANK_SIDE_IN, SBIT_U, NBT_TANK_SIDE_AUTO_IN, SIDE_TOP, NBT_TANK_SIDE_OUT, SBIT_L, NBT_TANK_SIDE_AUTO_OUT, SIDE_LEFT, NBT_ENERGY_ACCEPTED_SIDES, SBIT_D, NBT_PARALLEL,  8, NBT_PARALLEL_DURATION, T), "Gw", "SM", "Gh", 'M', OP.casingMachineDouble.dat(aMat), 'G', OP.gearGt.dat(aMat), 'S', OP.stickLong.dat(aMat));
		aMat = MT.DATA.Heat_T[5];    aRegistry.add("Centrifuge (" + aMat.getLocal() + ")"                , "Basic Machines"                      , 20146, 20001, aClass, aMat.mToolQuality, 16, aMachine     , UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS, HARDNESS[5], NBT_RESISTANCE, HARDNESS[5] , NBT_COLOR, UT.Code.getRGBInt(aMat.fRGBaSolid), NBT_INPUT, V[5], NBT_TEXTURE, "centrifuge", NBT_ENERGY_ACCEPTED, TD.Energy.RU, NBT_RECIPEMAP, RM.Centrifuge, NBT_INV_SIDE_IN, SBIT_U, NBT_INV_SIDE_AUTO_IN, SIDE_TOP, NBT_INV_SIDE_OUT, SBIT_R, NBT_INV_SIDE_AUTO_OUT, SIDE_RIGHT, NBT_TANK_SIDE_IN, SBIT_U, NBT_TANK_SIDE_AUTO_IN, SIDE_TOP, NBT_TANK_SIDE_OUT, SBIT_L, NBT_TANK_SIDE_AUTO_OUT, SIDE_LEFT, NBT_ENERGY_ACCEPTED_SIDES, SBIT_D, NBT_PARALLEL,  16, NBT_PARALLEL_DURATION, T), "Gw", "SM", "Gh", 'M', OP.casingMachineDouble.dat(aMat), 'G', OP.gearGt.dat(aMat), 'S', OP.stickLong.dat(aMat));
		aMat = MT.DATA.Heat_T[6];    aRegistry.add("Centrifuge (" + aMat.getLocal() + ")"                , "Basic Machines"                      , 20147, 20001, aClass, aMat.mToolQuality, 16, aMachine     , UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS, HARDNESS[6], NBT_RESISTANCE, HARDNESS[6], NBT_COLOR, UT.Code.getRGBInt(aMat.fRGBaSolid), NBT_INPUT, V[6], NBT_TEXTURE, "centrifuge", NBT_ENERGY_ACCEPTED, TD.Energy.RU, NBT_RECIPEMAP, RM.Centrifuge, NBT_INV_SIDE_IN, SBIT_U, NBT_INV_SIDE_AUTO_IN, SIDE_TOP, NBT_INV_SIDE_OUT, SBIT_R, NBT_INV_SIDE_AUTO_OUT, SIDE_RIGHT, NBT_TANK_SIDE_IN, SBIT_U, NBT_TANK_SIDE_AUTO_IN, SIDE_TOP, NBT_TANK_SIDE_OUT, SBIT_L, NBT_TANK_SIDE_AUTO_OUT, SIDE_LEFT, NBT_ENERGY_ACCEPTED_SIDES, SBIT_D, NBT_PARALLEL,  32, NBT_PARALLEL_DURATION, T), "Gw", "SM", "Gh", 'M', OP.casingMachineDouble.dat(aMat), 'G', OP.gearGt.dat(aMat), 'S', OP.stickLong.dat(aMat));
		aMat = MT.DATA.Heat_T[7];    aRegistry.add("Centrifuge (" + aMat.getLocal() + ")"                , "Basic Machines"                      , 20148, 20001, aClass, aMat.mToolQuality, 16, aMachine     , UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS, HARDNESS[7], NBT_RESISTANCE, HARDNESS[7], NBT_COLOR, UT.Code.getRGBInt(aMat.fRGBaSolid), NBT_INPUT, V[7], NBT_TEXTURE, "centrifuge", NBT_ENERGY_ACCEPTED, TD.Energy.RU, NBT_RECIPEMAP, RM.Centrifuge, NBT_INV_SIDE_IN, SBIT_U, NBT_INV_SIDE_AUTO_IN, SIDE_TOP, NBT_INV_SIDE_OUT, SBIT_R, NBT_INV_SIDE_AUTO_OUT, SIDE_RIGHT, NBT_TANK_SIDE_IN, SBIT_U, NBT_TANK_SIDE_AUTO_IN, SIDE_TOP, NBT_TANK_SIDE_OUT, SBIT_L, NBT_TANK_SIDE_AUTO_OUT, SIDE_LEFT, NBT_ENERGY_ACCEPTED_SIDES, SBIT_D, NBT_PARALLEL,  64, NBT_PARALLEL_DURATION, T), "Gw", "SM", "Gh", 'M', OP.casingMachineDouble.dat(aMat), 'G', OP.gearGt.dat(aMat), 'S', OP.stickLong.dat(aMat));
		aMat = MT.DATA.Heat_T[8];    aRegistry.add("Centrifuge (" + aMat.getLocal() + ")"                , "Basic Machines"                      , 20149, 20001, aClass, aMat.mToolQuality, 16, aMachine     , UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS, HARDNESS[8], NBT_RESISTANCE, HARDNESS[8], NBT_COLOR, UT.Code.getRGBInt(aMat.fRGBaSolid), NBT_INPUT, V[8], NBT_TEXTURE, "centrifuge", NBT_ENERGY_ACCEPTED, TD.Energy.RU, NBT_RECIPEMAP, RM.Centrifuge, NBT_INV_SIDE_IN, SBIT_U, NBT_INV_SIDE_AUTO_IN, SIDE_TOP, NBT_INV_SIDE_OUT, SBIT_R, NBT_INV_SIDE_AUTO_OUT, SIDE_RIGHT, NBT_TANK_SIDE_IN, SBIT_U, NBT_TANK_SIDE_AUTO_IN, SIDE_TOP, NBT_TANK_SIDE_OUT, SBIT_L, NBT_TANK_SIDE_AUTO_OUT, SIDE_LEFT, NBT_ENERGY_ACCEPTED_SIDES, SBIT_D, NBT_PARALLEL,  64, NBT_PARALLEL_DURATION, T), "Gw", "SM", "Gh", 'M', OP.casingMachineDouble.dat(aMat), 'G', OP.gearGt.dat(aMat), 'S', OP.stickLong.dat(aMat));
		aMat = MT.DATA.Heat_T[9];    aRegistry.add("Centrifuge (" + aMat.getLocal() + ")"                , "Basic Machines"                      , 20150, 20001, aClass, aMat.mToolQuality, 16, aMachine     , UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS, HARDNESS[9], NBT_RESISTANCE, HARDNESS[9], NBT_COLOR, UT.Code.getRGBInt(aMat.fRGBaSolid), NBT_INPUT, V[9], NBT_TEXTURE, "centrifuge", NBT_ENERGY_ACCEPTED, TD.Energy.RU, NBT_RECIPEMAP, RM.Centrifuge, NBT_INV_SIDE_IN, SBIT_U, NBT_INV_SIDE_AUTO_IN, SIDE_TOP, NBT_INV_SIDE_OUT, SBIT_R, NBT_INV_SIDE_AUTO_OUT, SIDE_RIGHT, NBT_TANK_SIDE_IN, SBIT_U, NBT_TANK_SIDE_AUTO_IN, SIDE_TOP, NBT_TANK_SIDE_OUT, SBIT_L, NBT_TANK_SIDE_AUTO_OUT, SIDE_LEFT, NBT_ENERGY_ACCEPTED_SIDES, SBIT_D, NBT_PARALLEL,  64, NBT_PARALLEL_DURATION, T), "Gw", "SM", "Gh", 'M', OP.casingMachineDouble.dat(aMat), 'G', OP.gearGt.dat(aMat), 'S', OP.stickLong.dat(aMat));
		aMat = MT.DATA.Heat_T[10];    aRegistry.add("Centrifuge (" + aMat.getLocal() + ")"                , "Basic Machines"                      , 20151, 20001, aClass, aMat.mToolQuality, 16, aMachine     , UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS, HARDNESS[10], NBT_RESISTANCE, HARDNESS[10] , NBT_COLOR, UT.Code.getRGBInt(aMat.fRGBaSolid), NBT_INPUT, V[10], NBT_TEXTURE, "centrifuge", NBT_ENERGY_ACCEPTED, TD.Energy.RU, NBT_RECIPEMAP, RM.Centrifuge, NBT_INV_SIDE_IN, SBIT_U, NBT_INV_SIDE_AUTO_IN, SIDE_TOP, NBT_INV_SIDE_OUT, SBIT_R, NBT_INV_SIDE_AUTO_OUT, SIDE_RIGHT, NBT_TANK_SIDE_IN, SBIT_U, NBT_TANK_SIDE_AUTO_IN, SIDE_TOP, NBT_TANK_SIDE_OUT, SBIT_L, NBT_TANK_SIDE_AUTO_OUT, SIDE_LEFT, NBT_ENERGY_ACCEPTED_SIDES, SBIT_D, NBT_PARALLEL,  64, NBT_PARALLEL_DURATION, T), "Gw", "SM", "Gh", 'M', OP.casingMachineDouble.dat(aMat), 'G', OP.gearGt.dat(aMat), 'S', OP.stickLong.dat(aMat));
		aMat = MT.DATA.Heat_T[11];    aRegistry.add("Centrifuge (" + aMat.getLocal() + ")"                , "Basic Machines"                      , 20152, 20001, aClass, aMat.mToolQuality, 16, aMachine     , UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS, HARDNESS[11], NBT_RESISTANCE, HARDNESS[11], NBT_COLOR, UT.Code.getRGBInt(aMat.fRGBaSolid), NBT_INPUT, V[11], NBT_TEXTURE, "centrifuge", NBT_ENERGY_ACCEPTED, TD.Energy.RU, NBT_RECIPEMAP, RM.Centrifuge, NBT_INV_SIDE_IN, SBIT_U, NBT_INV_SIDE_AUTO_IN, SIDE_TOP, NBT_INV_SIDE_OUT, SBIT_R, NBT_INV_SIDE_AUTO_OUT, SIDE_RIGHT, NBT_TANK_SIDE_IN, SBIT_U, NBT_TANK_SIDE_AUTO_IN, SIDE_TOP, NBT_TANK_SIDE_OUT, SBIT_L, NBT_TANK_SIDE_AUTO_OUT, SIDE_LEFT, NBT_ENERGY_ACCEPTED_SIDES, SBIT_D, NBT_PARALLEL,  64, NBT_PARALLEL_DURATION, T), "Gw", "SM", "Gh", 'M', OP.casingMachineDouble.dat(aMat), 'G', OP.gearGt.dat(aMat), 'S', OP.stickLong.dat(aMat));
		aMat = MT.DATA.Heat_T[12];    aRegistry.add("Centrifuge (" + aMat.getLocal() + ")"                , "Basic Machines"                      , 20153, 20001, aClass, aMat.mToolQuality, 16, aMachine     , UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS, HARDNESS[12], NBT_RESISTANCE, HARDNESS[12], NBT_COLOR, UT.Code.getRGBInt(aMat.fRGBaSolid), NBT_INPUT, V[12], NBT_TEXTURE, "centrifuge", NBT_ENERGY_ACCEPTED, TD.Energy.RU, NBT_RECIPEMAP, RM.Centrifuge, NBT_INV_SIDE_IN, SBIT_U, NBT_INV_SIDE_AUTO_IN, SIDE_TOP, NBT_INV_SIDE_OUT, SBIT_R, NBT_INV_SIDE_AUTO_OUT, SIDE_RIGHT, NBT_TANK_SIDE_IN, SBIT_U, NBT_TANK_SIDE_AUTO_IN, SIDE_TOP, NBT_TANK_SIDE_OUT, SBIT_L, NBT_TANK_SIDE_AUTO_OUT, SIDE_LEFT, NBT_ENERGY_ACCEPTED_SIDES, SBIT_D, NBT_PARALLEL,  64, NBT_PARALLEL_DURATION, T), "Gw", "SM", "Gh", 'M', OP.casingMachineDouble.dat(aMat), 'G', OP.gearGt.dat(aMat), 'S', OP.stickLong.dat(aMat));
		aMat = MT.DATA.Heat_T[13];    aRegistry.add("Centrifuge (" + aMat.getLocal() + ")"                , "Basic Machines"                      , 20154, 20001, aClass, aMat.mToolQuality, 16, aMachine     , UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS, HARDNESS[13], NBT_RESISTANCE, HARDNESS[13], NBT_COLOR, UT.Code.getRGBInt(aMat.fRGBaSolid), NBT_INPUT, V[13], NBT_TEXTURE, "centrifuge", NBT_ENERGY_ACCEPTED, TD.Energy.RU, NBT_RECIPEMAP, RM.Centrifuge, NBT_INV_SIDE_IN, SBIT_U, NBT_INV_SIDE_AUTO_IN, SIDE_TOP, NBT_INV_SIDE_OUT, SBIT_R, NBT_INV_SIDE_AUTO_OUT, SIDE_RIGHT, NBT_TANK_SIDE_IN, SBIT_U, NBT_TANK_SIDE_AUTO_IN, SIDE_TOP, NBT_TANK_SIDE_OUT, SBIT_L, NBT_TANK_SIDE_AUTO_OUT, SIDE_LEFT, NBT_ENERGY_ACCEPTED_SIDES, SBIT_D, NBT_PARALLEL,  64, NBT_PARALLEL_DURATION, T), "Gw", "SM", "Gh", 'M', OP.casingMachineDouble.dat(aMat), 'G', OP.gearGt.dat(aMat), 'S', OP.stickLong.dat(aMat));
		aMat = MT.DATA.Heat_T[14];    aRegistry.add("Centrifuge (" + aMat.getLocal() + ")"                , "Basic Machines"                      , 20155, 20001, aClass, aMat.mToolQuality, 16, aMachine     , UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS, HARDNESS[14], NBT_RESISTANCE, HARDNESS[14], NBT_COLOR, UT.Code.getRGBInt(aMat.fRGBaSolid), NBT_INPUT, V[14], NBT_TEXTURE, "centrifuge", NBT_ENERGY_ACCEPTED, TD.Energy.RU, NBT_RECIPEMAP, RM.Centrifuge, NBT_INV_SIDE_IN, SBIT_U, NBT_INV_SIDE_AUTO_IN, SIDE_TOP, NBT_INV_SIDE_OUT, SBIT_R, NBT_INV_SIDE_AUTO_OUT, SIDE_RIGHT, NBT_TANK_SIDE_IN, SBIT_U, NBT_TANK_SIDE_AUTO_IN, SIDE_TOP, NBT_TANK_SIDE_OUT, SBIT_L, NBT_TANK_SIDE_AUTO_OUT, SIDE_LEFT, NBT_ENERGY_ACCEPTED_SIDES, SBIT_D, NBT_PARALLEL,  64, NBT_PARALLEL_DURATION, T), "Gw", "SM", "Gh", 'M', OP.casingMachineDouble.dat(aMat), 'G', OP.gearGt.dat(aMat), 'S', OP.stickLong.dat(aMat));
		aMat = MT.DATA.Heat_T[15];    aRegistry.add("Centrifuge (" + aMat.getLocal() + ")"                , "Basic Machines"                      , 20156, 20001, aClass, aMat.mToolQuality, 16, aMachine     , UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS, HARDNESS[15], NBT_RESISTANCE, HARDNESS[15] , NBT_COLOR, UT.Code.getRGBInt(aMat.fRGBaSolid), NBT_INPUT, V[15], NBT_TEXTURE, "centrifuge", NBT_ENERGY_ACCEPTED, TD.Energy.RU, NBT_RECIPEMAP, RM.Centrifuge, NBT_INV_SIDE_IN, SBIT_U, NBT_INV_SIDE_AUTO_IN, SIDE_TOP, NBT_INV_SIDE_OUT, SBIT_R, NBT_INV_SIDE_AUTO_OUT, SIDE_RIGHT, NBT_TANK_SIDE_IN, SBIT_U, NBT_TANK_SIDE_AUTO_IN, SIDE_TOP, NBT_TANK_SIDE_OUT, SBIT_L, NBT_TANK_SIDE_AUTO_OUT, SIDE_LEFT, NBT_ENERGY_ACCEPTED_SIDES, SBIT_D, NBT_PARALLEL,  64, NBT_PARALLEL_DURATION, T), "Gw", "SM", "Gh", 'M', OP.casingMachineDouble.dat(aMat), 'G', OP.gearGt.dat(aMat), 'S', OP.stickLong.dat(aMat));

		aClass = MultiTileEntityBasicMachineElectric.class;
		aMat = MT.DATA.Electric_T[0];   aRegistry.add("Electrolyzer ("+VN[0]+")"                            , "Basic Machines"                      , 20161, 20001, aClass, aMat.mToolQuality, 16, aMachine     , UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS,   4.0F, NBT_RESISTANCE,   4.0F, NBT_COLOR, UT.Code.getRGBInt(aMat.fRGBaSolid), NBT_INPUT, V[0], NBT_TEXTURE, "electrolyzer", NBT_ENERGY_ACCEPTED, TD.Energy.EU, NBT_RECIPEMAP, RM.Electrolyzer, NBT_INV_SIDE_IN, SBIT_U|SBIT_F|SBIT_B, NBT_INV_SIDE_AUTO_IN, SIDE_TOP, NBT_INV_SIDE_OUT, SBIT_R|SBIT_L, NBT_INV_SIDE_AUTO_OUT, SIDE_RIGHT, NBT_TANK_SIDE_IN, SBIT_U|SBIT_F|SBIT_B, NBT_TANK_SIDE_AUTO_IN, SIDE_TOP, NBT_TANK_SIDE_OUT, SBIT_R|SBIT_L, NBT_TANK_SIDE_AUTO_OUT, SIDE_LEFT, NBT_ENERGY_ACCEPTED_SIDES, SBIT_D, NBT_PARALLEL,  1, NBT_PARALLEL_DURATION, T), "SMS", "WwW", 'M', OP.casingMachine.dat(aMat), 'S', OP.wireGt01.dat(MT.Pt), 'W', MT.DATA.CABLES_01[0]);
		aMat = MT.DATA.Electric_T[1];   aRegistry.add("Electrolyzer ("+VN[1]+")"                            , "Basic Machines"                      , 20162, 20001, aClass, aMat.mToolQuality, 16, aMachine     , UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS,   4.0F, NBT_RESISTANCE,   4.0F, NBT_COLOR, UT.Code.getRGBInt(aMat.fRGBaSolid), NBT_INPUT, V[1], NBT_TEXTURE, "electrolyzer", NBT_ENERGY_ACCEPTED, TD.Energy.EU, NBT_RECIPEMAP, RM.Electrolyzer, NBT_INV_SIDE_IN, SBIT_U|SBIT_F|SBIT_B, NBT_INV_SIDE_AUTO_IN, SIDE_TOP, NBT_INV_SIDE_OUT, SBIT_R|SBIT_L, NBT_INV_SIDE_AUTO_OUT, SIDE_RIGHT, NBT_TANK_SIDE_IN, SBIT_U|SBIT_F|SBIT_B, NBT_TANK_SIDE_AUTO_IN, SIDE_TOP, NBT_TANK_SIDE_OUT, SBIT_R|SBIT_L, NBT_TANK_SIDE_AUTO_OUT, SIDE_LEFT, NBT_ENERGY_ACCEPTED_SIDES, SBIT_D, NBT_PARALLEL,  1, NBT_PARALLEL_DURATION, T), "SMS", "WwW", 'M', OP.casingMachine.dat(aMat), 'S', OP.wireGt01.dat(MT.Pt), 'W', MT.DATA.CABLES_01[1]);
		aMat = MT.DATA.Electric_T[2];   aRegistry.add("Electrolyzer ("+VN[2]+")"                            , "Basic Machines"                      , 20163, 20001, aClass, aMat.mToolQuality, 16, aMachine     , UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS,   4.0F, NBT_RESISTANCE,   4.0F, NBT_COLOR, UT.Code.getRGBInt(aMat.fRGBaSolid), NBT_INPUT, V[2], NBT_TEXTURE, "electrolyzer", NBT_ENERGY_ACCEPTED, TD.Energy.EU, NBT_RECIPEMAP, RM.Electrolyzer, NBT_INV_SIDE_IN, SBIT_U|SBIT_F|SBIT_B, NBT_INV_SIDE_AUTO_IN, SIDE_TOP, NBT_INV_SIDE_OUT, SBIT_R|SBIT_L, NBT_INV_SIDE_AUTO_OUT, SIDE_RIGHT, NBT_TANK_SIDE_IN, SBIT_U|SBIT_F|SBIT_B, NBT_TANK_SIDE_AUTO_IN, SIDE_TOP, NBT_TANK_SIDE_OUT, SBIT_R|SBIT_L, NBT_TANK_SIDE_AUTO_OUT, SIDE_LEFT, NBT_ENERGY_ACCEPTED_SIDES, SBIT_D, NBT_PARALLEL,  2, NBT_PARALLEL_DURATION, T), "SMS", "WwW", 'M', OP.casingMachine.dat(aMat), 'S', OP.wireGt01.dat(MT.Pt), 'W', MT.DATA.CABLES_01[2]);
		aMat = MT.DATA.Electric_T[3];   aRegistry.add("Electrolyzer ("+VN[3]+")"                            , "Basic Machines"                      , 20164, 20001, aClass, aMat.mToolQuality, 16, aMachine     , UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS,   4.0F, NBT_RESISTANCE,   4.0F, NBT_COLOR, UT.Code.getRGBInt(aMat.fRGBaSolid), NBT_INPUT, V[3], NBT_TEXTURE, "electrolyzer", NBT_ENERGY_ACCEPTED, TD.Energy.EU, NBT_RECIPEMAP, RM.Electrolyzer, NBT_INV_SIDE_IN, SBIT_U|SBIT_F|SBIT_B, NBT_INV_SIDE_AUTO_IN, SIDE_TOP, NBT_INV_SIDE_OUT, SBIT_R|SBIT_L, NBT_INV_SIDE_AUTO_OUT, SIDE_RIGHT, NBT_TANK_SIDE_IN, SBIT_U|SBIT_F|SBIT_B, NBT_TANK_SIDE_AUTO_IN, SIDE_TOP, NBT_TANK_SIDE_OUT, SBIT_R|SBIT_L, NBT_TANK_SIDE_AUTO_OUT, SIDE_LEFT, NBT_ENERGY_ACCEPTED_SIDES, SBIT_D, NBT_PARALLEL,  4, NBT_PARALLEL_DURATION, T), "SMS", "WwW", 'M', OP.casingMachine.dat(aMat), 'S', OP.wireGt01.dat(MT.Pt), 'W', MT.DATA.CABLES_01[3]);
		aMat = MT.DATA.Electric_T[4];   aRegistry.add("Electrolyzer ("+VN[4]+")"                            , "Basic Machines"                      , 20165, 20001, aClass, aMat.mToolQuality, 16, aMachine     , UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS,   4.0F, NBT_RESISTANCE,   4.0F, NBT_COLOR, UT.Code.getRGBInt(aMat.fRGBaSolid), NBT_INPUT, V[4], NBT_TEXTURE, "electrolyzer", NBT_ENERGY_ACCEPTED, TD.Energy.EU, NBT_RECIPEMAP, RM.Electrolyzer, NBT_INV_SIDE_IN, SBIT_U|SBIT_F|SBIT_B, NBT_INV_SIDE_AUTO_IN, SIDE_TOP, NBT_INV_SIDE_OUT, SBIT_R|SBIT_L, NBT_INV_SIDE_AUTO_OUT, SIDE_RIGHT, NBT_TANK_SIDE_IN, SBIT_U|SBIT_F|SBIT_B, NBT_TANK_SIDE_AUTO_IN, SIDE_TOP, NBT_TANK_SIDE_OUT, SBIT_R|SBIT_L, NBT_TANK_SIDE_AUTO_OUT, SIDE_LEFT, NBT_ENERGY_ACCEPTED_SIDES, SBIT_D, NBT_PARALLEL,  8, NBT_PARALLEL_DURATION, T), "SMS", "WwW", 'M', OP.casingMachine.dat(aMat), 'S', OP.wireGt01.dat(MT.Pt), 'W', MT.DATA.CABLES_01[4]);
		aMat = MT.DATA.Electric_T[5];   aRegistry.add("Electrolyzer ("+VN[5]+")"                            , "Basic Machines"                      , 20166, 20001, aClass, aMat.mToolQuality, 16, aMachine     , UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS,   4.0F, NBT_RESISTANCE,   4.0F, NBT_COLOR, UT.Code.getRGBInt(aMat.fRGBaSolid), NBT_INPUT, V[5], NBT_TEXTURE, "electrolyzer", NBT_ENERGY_ACCEPTED, TD.Energy.EU, NBT_RECIPEMAP, RM.Electrolyzer, NBT_INV_SIDE_IN, SBIT_U|SBIT_F|SBIT_B, NBT_INV_SIDE_AUTO_IN, SIDE_TOP, NBT_INV_SIDE_OUT, SBIT_R|SBIT_L, NBT_INV_SIDE_AUTO_OUT, SIDE_RIGHT, NBT_TANK_SIDE_IN, SBIT_U|SBIT_F|SBIT_B, NBT_TANK_SIDE_AUTO_IN, SIDE_TOP, NBT_TANK_SIDE_OUT, SBIT_R|SBIT_L, NBT_TANK_SIDE_AUTO_OUT, SIDE_LEFT, NBT_ENERGY_ACCEPTED_SIDES, SBIT_D, NBT_PARALLEL, 16, NBT_PARALLEL_DURATION, T), "SMS", "WwW", 'M', OP.casingMachine.dat(aMat), 'S', OP.wireGt01.dat(MT.Pt), 'W', MT.DATA.CABLES_01[5]);
		aMat = MT.DATA.Electric_T[6];   aRegistry.add("Electrolyzer ("+VN[6]+")"                            , "Basic Machines"                      , 20167, 20001, aClass, aMat.mToolQuality, 16, aMachine     , UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS,   4.0F, NBT_RESISTANCE,   4.0F, NBT_COLOR, UT.Code.getRGBInt(aMat.fRGBaSolid), NBT_INPUT, V[6], NBT_TEXTURE, "electrolyzer", NBT_ENERGY_ACCEPTED, TD.Energy.EU, NBT_RECIPEMAP, RM.Electrolyzer, NBT_INV_SIDE_IN, SBIT_U|SBIT_F|SBIT_B, NBT_INV_SIDE_AUTO_IN, SIDE_TOP, NBT_INV_SIDE_OUT, SBIT_R|SBIT_L, NBT_INV_SIDE_AUTO_OUT, SIDE_RIGHT, NBT_TANK_SIDE_IN, SBIT_U|SBIT_F|SBIT_B, NBT_TANK_SIDE_AUTO_IN, SIDE_TOP, NBT_TANK_SIDE_OUT, SBIT_R|SBIT_L, NBT_TANK_SIDE_AUTO_OUT, SIDE_LEFT, NBT_ENERGY_ACCEPTED_SIDES, SBIT_D, NBT_PARALLEL,  32, NBT_PARALLEL_DURATION, T), "SMS", "WwW", 'M', OP.casingMachine.dat(aMat), 'S', OP.wireGt01.dat(MT.Pt), 'W', MT.DATA.CABLES_01[6]);
		aMat = MT.DATA.Electric_T[7];   aRegistry.add("Electrolyzer ("+VN[7]+")"                            , "Basic Machines"                      , 20168, 20001, aClass, aMat.mToolQuality, 16, aMachine     , UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS,   4.0F, NBT_RESISTANCE,   4.0F, NBT_COLOR, UT.Code.getRGBInt(aMat.fRGBaSolid), NBT_INPUT, V[7], NBT_TEXTURE, "electrolyzer", NBT_ENERGY_ACCEPTED, TD.Energy.EU, NBT_RECIPEMAP, RM.Electrolyzer, NBT_INV_SIDE_IN, SBIT_U|SBIT_F|SBIT_B, NBT_INV_SIDE_AUTO_IN, SIDE_TOP, NBT_INV_SIDE_OUT, SBIT_R|SBIT_L, NBT_INV_SIDE_AUTO_OUT, SIDE_RIGHT, NBT_TANK_SIDE_IN, SBIT_U|SBIT_F|SBIT_B, NBT_TANK_SIDE_AUTO_IN, SIDE_TOP, NBT_TANK_SIDE_OUT, SBIT_R|SBIT_L, NBT_TANK_SIDE_AUTO_OUT, SIDE_LEFT, NBT_ENERGY_ACCEPTED_SIDES, SBIT_D, NBT_PARALLEL,  64, NBT_PARALLEL_DURATION, T), "SMS", "WwW", 'M', OP.casingMachine.dat(aMat), 'S', OP.wireGt01.dat(MT.Pt), 'W', MT.DATA.CABLES_01[7]);
		aMat = MT.DATA.Electric_T[8];   aRegistry.add("Electrolyzer ("+VN[8]+")"                            , "Basic Machines"                      , 20169, 20001, aClass, aMat.mToolQuality, 16, aMachine     , UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS,   4.0F, NBT_RESISTANCE,   4.0F, NBT_COLOR, UT.Code.getRGBInt(aMat.fRGBaSolid), NBT_INPUT, V[8], NBT_TEXTURE, "electrolyzer", NBT_ENERGY_ACCEPTED, TD.Energy.EU, NBT_RECIPEMAP, RM.Electrolyzer, NBT_INV_SIDE_IN, SBIT_U|SBIT_F|SBIT_B, NBT_INV_SIDE_AUTO_IN, SIDE_TOP, NBT_INV_SIDE_OUT, SBIT_R|SBIT_L, NBT_INV_SIDE_AUTO_OUT, SIDE_RIGHT, NBT_TANK_SIDE_IN, SBIT_U|SBIT_F|SBIT_B, NBT_TANK_SIDE_AUTO_IN, SIDE_TOP, NBT_TANK_SIDE_OUT, SBIT_R|SBIT_L, NBT_TANK_SIDE_AUTO_OUT, SIDE_LEFT, NBT_ENERGY_ACCEPTED_SIDES, SBIT_D, NBT_PARALLEL,  128, NBT_PARALLEL_DURATION, T), "SMS", "WwW", 'M', OP.casingMachine.dat(aMat), 'S', OP.wireGt01.dat(MT.Pt), 'W', MT.DATA.CABLES_01[8]);
		aMat = MT.DATA.Electric_T[9];   aRegistry.add("Electrolyzer ("+VN[9]+")"                            , "Basic Machines"                      , 20170, 20001, aClass, aMat.mToolQuality, 16, aMachine     , UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS,   4.0F, NBT_RESISTANCE,   4.0F, NBT_COLOR, UT.Code.getRGBInt(aMat.fRGBaSolid), NBT_INPUT, V[9], NBT_TEXTURE, "electrolyzer", NBT_ENERGY_ACCEPTED, TD.Energy.EU, NBT_RECIPEMAP, RM.Electrolyzer, NBT_INV_SIDE_IN, SBIT_U|SBIT_F|SBIT_B, NBT_INV_SIDE_AUTO_IN, SIDE_TOP, NBT_INV_SIDE_OUT, SBIT_R|SBIT_L, NBT_INV_SIDE_AUTO_OUT, SIDE_RIGHT, NBT_TANK_SIDE_IN, SBIT_U|SBIT_F|SBIT_B, NBT_TANK_SIDE_AUTO_IN, SIDE_TOP, NBT_TANK_SIDE_OUT, SBIT_R|SBIT_L, NBT_TANK_SIDE_AUTO_OUT, SIDE_LEFT, NBT_ENERGY_ACCEPTED_SIDES, SBIT_D, NBT_PARALLEL,  256, NBT_PARALLEL_DURATION, T), "SMS", "WwW", 'M', OP.casingMachine.dat(aMat), 'S', OP.wireGt01.dat(MT.Pt), 'W', MT.DATA.CABLES_01[9]);
		aMat = MT.DATA.Electric_T[10];   aRegistry.add("Electrolyzer ("+VN[10]+")"                            , "Basic Machines"                      , 20171, 20001, aClass, aMat.mToolQuality, 16, aMachine     , UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS,   4.0F, NBT_RESISTANCE,   4.0F, NBT_COLOR, UT.Code.getRGBInt(aMat.fRGBaSolid), NBT_INPUT, V[10], NBT_TEXTURE, "electrolyzer", NBT_ENERGY_ACCEPTED, TD.Energy.EU, NBT_RECIPEMAP, RM.Electrolyzer, NBT_INV_SIDE_IN, SBIT_U|SBIT_F|SBIT_B, NBT_INV_SIDE_AUTO_IN, SIDE_TOP, NBT_INV_SIDE_OUT, SBIT_R|SBIT_L, NBT_INV_SIDE_AUTO_OUT, SIDE_RIGHT, NBT_TANK_SIDE_IN, SBIT_U|SBIT_F|SBIT_B, NBT_TANK_SIDE_AUTO_IN, SIDE_TOP, NBT_TANK_SIDE_OUT, SBIT_R|SBIT_L, NBT_TANK_SIDE_AUTO_OUT, SIDE_LEFT, NBT_ENERGY_ACCEPTED_SIDES, SBIT_D, NBT_PARALLEL,  512, NBT_PARALLEL_DURATION, T), "SMS", "WwW", 'M', OP.casingMachine.dat(aMat), 'S', OP.wireGt01.dat(MT.Pt), 'W', MT.DATA.CABLES_01[10]);
		aMat = MT.DATA.Electric_T[11];   aRegistry.add("Electrolyzer ("+VN[11]+")"                            , "Basic Machines"                      , 20172, 20001, aClass, aMat.mToolQuality, 16, aMachine     , UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS,   4.0F, NBT_RESISTANCE,   4.0F, NBT_COLOR, UT.Code.getRGBInt(aMat.fRGBaSolid), NBT_INPUT, V[11], NBT_TEXTURE, "electrolyzer", NBT_ENERGY_ACCEPTED, TD.Energy.EU, NBT_RECIPEMAP, RM.Electrolyzer, NBT_INV_SIDE_IN, SBIT_U|SBIT_F|SBIT_B, NBT_INV_SIDE_AUTO_IN, SIDE_TOP, NBT_INV_SIDE_OUT, SBIT_R|SBIT_L, NBT_INV_SIDE_AUTO_OUT, SIDE_RIGHT, NBT_TANK_SIDE_IN, SBIT_U|SBIT_F|SBIT_B, NBT_TANK_SIDE_AUTO_IN, SIDE_TOP, NBT_TANK_SIDE_OUT, SBIT_R|SBIT_L, NBT_TANK_SIDE_AUTO_OUT, SIDE_LEFT, NBT_ENERGY_ACCEPTED_SIDES, SBIT_D, NBT_PARALLEL, 1024, NBT_PARALLEL_DURATION, T), "SMS", "WwW", 'M', OP.casingMachine.dat(aMat), 'S', OP.wireGt01.dat(MT.Pt), 'W', MT.DATA.CABLES_01[11]);
		aMat = MT.DATA.Electric_T[12];   aRegistry.add("Electrolyzer ("+VN[12]+")"                            , "Basic Machines"                      , 20173, 20001, aClass, aMat.mToolQuality, 16, aMachine     , UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS,   4.0F, NBT_RESISTANCE,   4.0F, NBT_COLOR, UT.Code.getRGBInt(aMat.fRGBaSolid), NBT_INPUT, V[12], NBT_TEXTURE, "electrolyzer", NBT_ENERGY_ACCEPTED, TD.Energy.EU, NBT_RECIPEMAP, RM.Electrolyzer, NBT_INV_SIDE_IN, SBIT_U|SBIT_F|SBIT_B, NBT_INV_SIDE_AUTO_IN, SIDE_TOP, NBT_INV_SIDE_OUT, SBIT_R|SBIT_L, NBT_INV_SIDE_AUTO_OUT, SIDE_RIGHT, NBT_TANK_SIDE_IN, SBIT_U|SBIT_F|SBIT_B, NBT_TANK_SIDE_AUTO_IN, SIDE_TOP, NBT_TANK_SIDE_OUT, SBIT_R|SBIT_L, NBT_TANK_SIDE_AUTO_OUT, SIDE_LEFT, NBT_ENERGY_ACCEPTED_SIDES, SBIT_D, NBT_PARALLEL,  2048, NBT_PARALLEL_DURATION, T), "SMS", "WwW", 'M', OP.casingMachine.dat(aMat), 'S', OP.wireGt01.dat(MT.Pt), 'W', MT.DATA.CABLES_01[12]);
		aMat = MT.DATA.Electric_T[13];   aRegistry.add("Electrolyzer ("+VN[13]+")"                            , "Basic Machines"                      , 20174, 20001, aClass, aMat.mToolQuality, 16, aMachine     , UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS,   4.0F, NBT_RESISTANCE,   4.0F, NBT_COLOR, UT.Code.getRGBInt(aMat.fRGBaSolid), NBT_INPUT, V[13], NBT_TEXTURE, "electrolyzer", NBT_ENERGY_ACCEPTED, TD.Energy.EU, NBT_RECIPEMAP, RM.Electrolyzer, NBT_INV_SIDE_IN, SBIT_U|SBIT_F|SBIT_B, NBT_INV_SIDE_AUTO_IN, SIDE_TOP, NBT_INV_SIDE_OUT, SBIT_R|SBIT_L, NBT_INV_SIDE_AUTO_OUT, SIDE_RIGHT, NBT_TANK_SIDE_IN, SBIT_U|SBIT_F|SBIT_B, NBT_TANK_SIDE_AUTO_IN, SIDE_TOP, NBT_TANK_SIDE_OUT, SBIT_R|SBIT_L, NBT_TANK_SIDE_AUTO_OUT, SIDE_LEFT, NBT_ENERGY_ACCEPTED_SIDES, SBIT_D, NBT_PARALLEL,  4096, NBT_PARALLEL_DURATION, T), "SMS", "WwW", 'M', OP.casingMachine.dat(aMat), 'S', OP.wireGt01.dat(MT.Pt), 'W', MT.DATA.CABLES_01[13]);
		aMat = MT.DATA.Electric_T[14];   aRegistry.add("Electrolyzer ("+VN[14]+")"                            , "Basic Machines"                      , 20175, 20001, aClass, aMat.mToolQuality, 16, aMachine     , UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS,   4.0F, NBT_RESISTANCE,   4.0F, NBT_COLOR, UT.Code.getRGBInt(aMat.fRGBaSolid), NBT_INPUT, V[14], NBT_TEXTURE, "electrolyzer", NBT_ENERGY_ACCEPTED, TD.Energy.EU, NBT_RECIPEMAP, RM.Electrolyzer, NBT_INV_SIDE_IN, SBIT_U|SBIT_F|SBIT_B, NBT_INV_SIDE_AUTO_IN, SIDE_TOP, NBT_INV_SIDE_OUT, SBIT_R|SBIT_L, NBT_INV_SIDE_AUTO_OUT, SIDE_RIGHT, NBT_TANK_SIDE_IN, SBIT_U|SBIT_F|SBIT_B, NBT_TANK_SIDE_AUTO_IN, SIDE_TOP, NBT_TANK_SIDE_OUT, SBIT_R|SBIT_L, NBT_TANK_SIDE_AUTO_OUT, SIDE_LEFT, NBT_ENERGY_ACCEPTED_SIDES, SBIT_D, NBT_PARALLEL,  8192, NBT_PARALLEL_DURATION, T), "SMS", "WwW", 'M', OP.casingMachine.dat(aMat), 'S', OP.wireGt01.dat(MT.Pt), 'W', MT.DATA.CABLES_01[14]);
		aMat = MT.DATA.Electric_T[15];   aRegistry.add("Electrolyzer ("+VN[15]+")"                            , "Basic Machines"                      , 20176, 20001, aClass, aMat.mToolQuality, 16, aMachine     , UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS,   4.0F, NBT_RESISTANCE,   4.0F, NBT_COLOR, UT.Code.getRGBInt(aMat.fRGBaSolid), NBT_INPUT, V[15], NBT_TEXTURE, "electrolyzer", NBT_ENERGY_ACCEPTED, TD.Energy.EU, NBT_RECIPEMAP, RM.Electrolyzer, NBT_INV_SIDE_IN, SBIT_U|SBIT_F|SBIT_B, NBT_INV_SIDE_AUTO_IN, SIDE_TOP, NBT_INV_SIDE_OUT, SBIT_R|SBIT_L, NBT_INV_SIDE_AUTO_OUT, SIDE_RIGHT, NBT_TANK_SIDE_IN, SBIT_U|SBIT_F|SBIT_B, NBT_TANK_SIDE_AUTO_IN, SIDE_TOP, NBT_TANK_SIDE_OUT, SBIT_R|SBIT_L, NBT_TANK_SIDE_AUTO_OUT, SIDE_LEFT, NBT_ENERGY_ACCEPTED_SIDES, SBIT_D, NBT_PARALLEL,  16384, NBT_PARALLEL_DURATION, T), "SMS", "WwW", 'M', OP.casingMachine.dat(aMat), 'S', OP.wireGt01.dat(MT.Pt), 'W', MT.DATA.CABLES_01[15]);

		aClass = MultiTileEntityBasicMachine.class;
		aMat = MT.DATA.Heat_T[0];    aRegistry.add("Compressor (" + aMat.getLocal() + ")"                , "Basic Machines"                      , 20181, 20001, aClass, aMat.mToolQuality, 16, aMachine     , UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS, HARDNESS[0], NBT_RESISTANCE, HARDNESS[0], NBT_COLOR, UT.Code.getRGBInt(aMat.fRGBaSolid), NBT_INPUT, V[0], NBT_TEXTURE, "compressor", NBT_ENERGY_ACCEPTED, TD.Energy.KU, NBT_RECIPEMAP, RM.Compressor, NBT_INV_SIDE_IN, SBIT_U, NBT_INV_SIDE_AUTO_IN, SIDE_TOP, NBT_INV_SIDE_OUT, SBIT_D, NBT_INV_SIDE_AUTO_OUT, SIDE_BOTTOM, NBT_ENERGY_ACCEPTED_SIDES, SBIT_L, NBT_PARALLEL, 1, NBT_PARALLEL_DURATION, T), "PPR", "wMS", 'M', OP.casingMachineDouble.dat(aMat), 'P', OP.plateQuintuple.dat(aMat), 'S', OP.spring.dat(aMat), 'R', OP.stick.dat(aMat));
		aMat = MT.DATA.Heat_T[1];    aRegistry.add("Compressor (" + aMat.getLocal() + ")"                , "Basic Machines"                      , 20182, 20001, aClass, aMat.mToolQuality, 16, aMachine     , UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS, HARDNESS[1], NBT_RESISTANCE, HARDNESS[1], NBT_COLOR, UT.Code.getRGBInt(aMat.fRGBaSolid), NBT_INPUT, V[1], NBT_TEXTURE, "compressor", NBT_ENERGY_ACCEPTED, TD.Energy.KU, NBT_RECIPEMAP, RM.Compressor, NBT_INV_SIDE_IN, SBIT_U, NBT_INV_SIDE_AUTO_IN, SIDE_TOP, NBT_INV_SIDE_OUT, SBIT_D, NBT_INV_SIDE_AUTO_OUT, SIDE_BOTTOM, NBT_ENERGY_ACCEPTED_SIDES, SBIT_L, NBT_PARALLEL, 1, NBT_PARALLEL_DURATION, T), "PPR", "wMS", 'M', OP.casingMachineDouble.dat(aMat), 'P', OP.plateQuintuple.dat(aMat), 'S', OP.spring.dat(aMat), 'R', OP.stick.dat(aMat));
		aMat = MT.DATA.Heat_T[2];    aRegistry.add("Compressor (" + aMat.getLocal() + ")"                , "Basic Machines"                      , 20183, 20001, aClass, aMat.mToolQuality, 16, aMachine     , UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS, HARDNESS[2], NBT_RESISTANCE, HARDNESS[2], NBT_COLOR, UT.Code.getRGBInt(aMat.fRGBaSolid), NBT_INPUT, V[2], NBT_TEXTURE, "compressor", NBT_ENERGY_ACCEPTED, TD.Energy.KU, NBT_RECIPEMAP, RM.Compressor, NBT_INV_SIDE_IN, SBIT_U, NBT_INV_SIDE_AUTO_IN, SIDE_TOP, NBT_INV_SIDE_OUT, SBIT_D, NBT_INV_SIDE_AUTO_OUT, SIDE_BOTTOM, NBT_ENERGY_ACCEPTED_SIDES, SBIT_L, NBT_PARALLEL, 2, NBT_PARALLEL_DURATION, T), "PPR", "wMS", 'M', OP.casingMachineDouble.dat(aMat), 'P', OP.plateQuintuple.dat(aMat), 'S', OP.spring.dat(aMat), 'R', OP.stick.dat(aMat));
		aMat = MT.DATA.Heat_T[3];    aRegistry.add("Compressor (" + aMat.getLocal() + ")"                , "Basic Machines"                      , 20184, 20001, aClass, aMat.mToolQuality, 16, aMachine     , UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS, HARDNESS[3], NBT_RESISTANCE, HARDNESS[3], NBT_COLOR, UT.Code.getRGBInt(aMat.fRGBaSolid), NBT_INPUT, V[3], NBT_TEXTURE, "compressor", NBT_ENERGY_ACCEPTED, TD.Energy.KU, NBT_RECIPEMAP, RM.Compressor, NBT_INV_SIDE_IN, SBIT_U, NBT_INV_SIDE_AUTO_IN, SIDE_TOP, NBT_INV_SIDE_OUT, SBIT_D, NBT_INV_SIDE_AUTO_OUT, SIDE_BOTTOM, NBT_ENERGY_ACCEPTED_SIDES, SBIT_L, NBT_PARALLEL, 4, NBT_PARALLEL_DURATION, T), "PPR", "wMS", 'M', OP.casingMachineDouble.dat(aMat), 'P', OP.plateQuintuple.dat(aMat), 'S', OP.spring.dat(aMat), 'R', OP.stick.dat(aMat));
		aMat = MT.DATA.Heat_T[4];    aRegistry.add("Compressor (" + aMat.getLocal() + ")"                , "Basic Machines"                      , 20185, 20001, aClass, aMat.mToolQuality, 16, aMachine     , UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS, HARDNESS[4], NBT_RESISTANCE, HARDNESS[4], NBT_COLOR, UT.Code.getRGBInt(aMat.fRGBaSolid), NBT_INPUT, V[4], NBT_TEXTURE, "compressor", NBT_ENERGY_ACCEPTED, TD.Energy.KU, NBT_RECIPEMAP, RM.Compressor, NBT_INV_SIDE_IN, SBIT_U, NBT_INV_SIDE_AUTO_IN, SIDE_TOP, NBT_INV_SIDE_OUT, SBIT_D, NBT_INV_SIDE_AUTO_OUT, SIDE_BOTTOM, NBT_ENERGY_ACCEPTED_SIDES, SBIT_L, NBT_PARALLEL, 8, NBT_PARALLEL_DURATION, T), "PPR", "wMS", 'M', OP.casingMachineDouble.dat(aMat), 'P', OP.plateQuintuple.dat(aMat), 'S', OP.spring.dat(aMat), 'R', OP.stick.dat(aMat));
		aMat = MT.DATA.Heat_T[5];    aRegistry.add("Compressor (" + aMat.getLocal() + ")"                , "Basic Machines"                      , 20186, 20001, aClass, aMat.mToolQuality, 16, aMachine     , UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS, HARDNESS[5], NBT_RESISTANCE, HARDNESS[5], NBT_COLOR, UT.Code.getRGBInt(aMat.fRGBaSolid), NBT_INPUT, V[5], NBT_TEXTURE, "compressor", NBT_ENERGY_ACCEPTED, TD.Energy.KU, NBT_RECIPEMAP, RM.Compressor, NBT_INV_SIDE_IN, SBIT_U, NBT_INV_SIDE_AUTO_IN, SIDE_TOP, NBT_INV_SIDE_OUT, SBIT_D, NBT_INV_SIDE_AUTO_OUT, SIDE_BOTTOM, NBT_ENERGY_ACCEPTED_SIDES, SBIT_L, NBT_PARALLEL, 1, NBT_PARALLEL_DURATION, T), "PPR", "wMS", 'M', OP.casingMachineDouble.dat(aMat), 'P', OP.plateQuintuple.dat(aMat), 'S', OP.spring.dat(aMat), 'R', OP.stick.dat(aMat));
		aMat = MT.DATA.Heat_T[6];    aRegistry.add("Compressor (" + aMat.getLocal() + ")"                , "Basic Machines"                      , 20187, 20001, aClass, aMat.mToolQuality, 16, aMachine     , UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS, HARDNESS[6], NBT_RESISTANCE, HARDNESS[6], NBT_COLOR, UT.Code.getRGBInt(aMat.fRGBaSolid), NBT_INPUT, V[6], NBT_TEXTURE, "compressor", NBT_ENERGY_ACCEPTED, TD.Energy.KU, NBT_RECIPEMAP, RM.Compressor, NBT_INV_SIDE_IN, SBIT_U, NBT_INV_SIDE_AUTO_IN, SIDE_TOP, NBT_INV_SIDE_OUT, SBIT_D, NBT_INV_SIDE_AUTO_OUT, SIDE_BOTTOM, NBT_ENERGY_ACCEPTED_SIDES, SBIT_L, NBT_PARALLEL, 1, NBT_PARALLEL_DURATION, T), "PPR", "wMS", 'M', OP.casingMachineDouble.dat(aMat), 'P', OP.plateQuintuple.dat(aMat), 'S', OP.spring.dat(aMat), 'R', OP.stick.dat(aMat));
		aMat = MT.DATA.Heat_T[7];    aRegistry.add("Compressor (" + aMat.getLocal() + ")"                , "Basic Machines"                      , 20188, 20001, aClass, aMat.mToolQuality, 16, aMachine     , UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS, HARDNESS[7], NBT_RESISTANCE, HARDNESS[7], NBT_COLOR, UT.Code.getRGBInt(aMat.fRGBaSolid), NBT_INPUT, V[7], NBT_TEXTURE, "compressor", NBT_ENERGY_ACCEPTED, TD.Energy.KU, NBT_RECIPEMAP, RM.Compressor, NBT_INV_SIDE_IN, SBIT_U, NBT_INV_SIDE_AUTO_IN, SIDE_TOP, NBT_INV_SIDE_OUT, SBIT_D, NBT_INV_SIDE_AUTO_OUT, SIDE_BOTTOM, NBT_ENERGY_ACCEPTED_SIDES, SBIT_L, NBT_PARALLEL, 2, NBT_PARALLEL_DURATION, T), "PPR", "wMS", 'M', OP.casingMachineDouble.dat(aMat), 'P', OP.plateQuintuple.dat(aMat), 'S', OP.spring.dat(aMat), 'R', OP.stick.dat(aMat));
		aMat = MT.DATA.Heat_T[8];    aRegistry.add("Compressor (" + aMat.getLocal() + ")"                , "Basic Machines"                      , 20189, 20001, aClass, aMat.mToolQuality, 16, aMachine     , UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS, HARDNESS[8], NBT_RESISTANCE, HARDNESS[8], NBT_COLOR, UT.Code.getRGBInt(aMat.fRGBaSolid), NBT_INPUT, V[8], NBT_TEXTURE, "compressor", NBT_ENERGY_ACCEPTED, TD.Energy.KU, NBT_RECIPEMAP, RM.Compressor, NBT_INV_SIDE_IN, SBIT_U, NBT_INV_SIDE_AUTO_IN, SIDE_TOP, NBT_INV_SIDE_OUT, SBIT_D, NBT_INV_SIDE_AUTO_OUT, SIDE_BOTTOM, NBT_ENERGY_ACCEPTED_SIDES, SBIT_L, NBT_PARALLEL, 4, NBT_PARALLEL_DURATION, T), "PPR", "wMS", 'M', OP.casingMachineDouble.dat(aMat), 'P', OP.plateQuintuple.dat(aMat), 'S', OP.spring.dat(aMat), 'R', OP.stick.dat(aMat));
		aMat = MT.DATA.Heat_T[9];    aRegistry.add("Compressor (" + aMat.getLocal() + ")"                , "Basic Machines"                      , 20190, 20001, aClass, aMat.mToolQuality, 16, aMachine     , UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS, HARDNESS[9], NBT_RESISTANCE, HARDNESS[9], NBT_COLOR, UT.Code.getRGBInt(aMat.fRGBaSolid), NBT_INPUT, V[9], NBT_TEXTURE, "compressor", NBT_ENERGY_ACCEPTED, TD.Energy.KU, NBT_RECIPEMAP, RM.Compressor, NBT_INV_SIDE_IN, SBIT_U, NBT_INV_SIDE_AUTO_IN, SIDE_TOP, NBT_INV_SIDE_OUT, SBIT_D, NBT_INV_SIDE_AUTO_OUT, SIDE_BOTTOM, NBT_ENERGY_ACCEPTED_SIDES, SBIT_L, NBT_PARALLEL, 8, NBT_PARALLEL_DURATION, T), "PPR", "wMS", 'M', OP.casingMachineDouble.dat(aMat), 'P', OP.plateQuintuple.dat(aMat), 'S', OP.spring.dat(aMat), 'R', OP.stick.dat(aMat));
		aMat = MT.DATA.Heat_T[10];    aRegistry.add("Compressor (" + aMat.getLocal() + ")"                , "Basic Machines"                      , 20191, 20001, aClass, aMat.mToolQuality, 16, aMachine     , UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS, HARDNESS[10], NBT_RESISTANCE, HARDNESS[10], NBT_COLOR, UT.Code.getRGBInt(aMat.fRGBaSolid), NBT_INPUT, V[10], NBT_TEXTURE, "compressor", NBT_ENERGY_ACCEPTED, TD.Energy.KU, NBT_RECIPEMAP, RM.Compressor, NBT_INV_SIDE_IN, SBIT_U, NBT_INV_SIDE_AUTO_IN, SIDE_TOP, NBT_INV_SIDE_OUT, SBIT_D, NBT_INV_SIDE_AUTO_OUT, SIDE_BOTTOM, NBT_ENERGY_ACCEPTED_SIDES, SBIT_L, NBT_PARALLEL, 1, NBT_PARALLEL_DURATION, T), "PPR", "wMS", 'M', OP.casingMachineDouble.dat(aMat), 'P', OP.plateQuintuple.dat(aMat), 'S', OP.spring.dat(aMat), 'R', OP.stick.dat(aMat));
		aMat = MT.DATA.Heat_T[11];    aRegistry.add("Compressor (" + aMat.getLocal() + ")"                , "Basic Machines"                      , 20192, 20001, aClass, aMat.mToolQuality, 16, aMachine     , UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS, HARDNESS[11], NBT_RESISTANCE, HARDNESS[11], NBT_COLOR, UT.Code.getRGBInt(aMat.fRGBaSolid), NBT_INPUT, V[11], NBT_TEXTURE, "compressor", NBT_ENERGY_ACCEPTED, TD.Energy.KU, NBT_RECIPEMAP, RM.Compressor, NBT_INV_SIDE_IN, SBIT_U, NBT_INV_SIDE_AUTO_IN, SIDE_TOP, NBT_INV_SIDE_OUT, SBIT_D, NBT_INV_SIDE_AUTO_OUT, SIDE_BOTTOM, NBT_ENERGY_ACCEPTED_SIDES, SBIT_L, NBT_PARALLEL, 1, NBT_PARALLEL_DURATION, T), "PPR", "wMS", 'M', OP.casingMachineDouble.dat(aMat), 'P', OP.plateQuintuple.dat(aMat), 'S', OP.spring.dat(aMat), 'R', OP.stick.dat(aMat));
		aMat = MT.DATA.Heat_T[12];    aRegistry.add("Compressor (" + aMat.getLocal() + ")"                , "Basic Machines"                      , 20193, 20001, aClass, aMat.mToolQuality, 16, aMachine     , UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS, HARDNESS[12], NBT_RESISTANCE, HARDNESS[12], NBT_COLOR, UT.Code.getRGBInt(aMat.fRGBaSolid), NBT_INPUT, V[12], NBT_TEXTURE, "compressor", NBT_ENERGY_ACCEPTED, TD.Energy.KU, NBT_RECIPEMAP, RM.Compressor, NBT_INV_SIDE_IN, SBIT_U, NBT_INV_SIDE_AUTO_IN, SIDE_TOP, NBT_INV_SIDE_OUT, SBIT_D, NBT_INV_SIDE_AUTO_OUT, SIDE_BOTTOM, NBT_ENERGY_ACCEPTED_SIDES, SBIT_L, NBT_PARALLEL, 2, NBT_PARALLEL_DURATION, T), "PPR", "wMS", 'M', OP.casingMachineDouble.dat(aMat), 'P', OP.plateQuintuple.dat(aMat), 'S', OP.spring.dat(aMat), 'R', OP.stick.dat(aMat));
		aMat = MT.DATA.Heat_T[13];    aRegistry.add("Compressor (" + aMat.getLocal() + ")"                , "Basic Machines"                      , 20194, 20001, aClass, aMat.mToolQuality, 16, aMachine     , UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS, HARDNESS[13], NBT_RESISTANCE, HARDNESS[13], NBT_COLOR, UT.Code.getRGBInt(aMat.fRGBaSolid), NBT_INPUT, V[13], NBT_TEXTURE, "compressor", NBT_ENERGY_ACCEPTED, TD.Energy.KU, NBT_RECIPEMAP, RM.Compressor, NBT_INV_SIDE_IN, SBIT_U, NBT_INV_SIDE_AUTO_IN, SIDE_TOP, NBT_INV_SIDE_OUT, SBIT_D, NBT_INV_SIDE_AUTO_OUT, SIDE_BOTTOM, NBT_ENERGY_ACCEPTED_SIDES, SBIT_L, NBT_PARALLEL, 4, NBT_PARALLEL_DURATION, T), "PPR", "wMS", 'M', OP.casingMachineDouble.dat(aMat), 'P', OP.plateQuintuple.dat(aMat), 'S', OP.spring.dat(aMat), 'R', OP.stick.dat(aMat));
		aMat = MT.DATA.Heat_T[14];    aRegistry.add("Compressor (" + aMat.getLocal() + ")"                , "Basic Machines"                      , 20195, 20001, aClass, aMat.mToolQuality, 16, aMachine     , UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS, HARDNESS[14], NBT_RESISTANCE, HARDNESS[14], NBT_COLOR, UT.Code.getRGBInt(aMat.fRGBaSolid), NBT_INPUT, V[14], NBT_TEXTURE, "compressor", NBT_ENERGY_ACCEPTED, TD.Energy.KU, NBT_RECIPEMAP, RM.Compressor, NBT_INV_SIDE_IN, SBIT_U, NBT_INV_SIDE_AUTO_IN, SIDE_TOP, NBT_INV_SIDE_OUT, SBIT_D, NBT_INV_SIDE_AUTO_OUT, SIDE_BOTTOM, NBT_ENERGY_ACCEPTED_SIDES, SBIT_L, NBT_PARALLEL, 8, NBT_PARALLEL_DURATION, T), "PPR", "wMS", 'M', OP.casingMachineDouble.dat(aMat), 'P', OP.plateQuintuple.dat(aMat), 'S', OP.spring.dat(aMat), 'R', OP.stick.dat(aMat));
		aMat = MT.DATA.Heat_T[15];    aRegistry.add("Compressor (" + aMat.getLocal() + ")"                , "Basic Machines"                      , 20196, 20001, aClass, aMat.mToolQuality, 16, aMachine     , UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS, HARDNESS[15], NBT_RESISTANCE, HARDNESS[15], NBT_COLOR, UT.Code.getRGBInt(aMat.fRGBaSolid), NBT_INPUT, V[15], NBT_TEXTURE, "compressor", NBT_ENERGY_ACCEPTED, TD.Energy.KU, NBT_RECIPEMAP, RM.Compressor, NBT_INV_SIDE_IN, SBIT_U, NBT_INV_SIDE_AUTO_IN, SIDE_TOP, NBT_INV_SIDE_OUT, SBIT_D, NBT_INV_SIDE_AUTO_OUT, SIDE_BOTTOM, NBT_ENERGY_ACCEPTED_SIDES, SBIT_L, NBT_PARALLEL, 1, NBT_PARALLEL_DURATION, T), "PPR", "wMS", 'M', OP.casingMachineDouble.dat(aMat), 'P', OP.plateQuintuple.dat(aMat), 'S', OP.spring.dat(aMat), 'R', OP.stick.dat(aMat));

	}

	private static void machines1_2(MultiTileEntityRegistry aRegistry, MultiTileEntityBlock aMetal, MultiTileEntityBlock aMetalChips, MultiTileEntityBlock aMetalWires, MultiTileEntityBlock aMachine, MultiTileEntityBlock aWooden, MultiTileEntityBlock aBush, MultiTileEntityBlock aStone, MultiTileEntityBlock aWool, MultiTileEntityBlock aTNT, MultiTileEntityBlock aHive, MultiTileEntityBlock aUtilMetal, MultiTileEntityBlock aUtilStone, MultiTileEntityBlock aUtilWood, MultiTileEntityBlock aUtilWool, OreDictMaterial aMat, Class<? extends TileEntity> aClass) {
		aClass = MultiTileEntityBasicMachine.class;
		aMat = MT.DATA.Heat_T[0];    aRegistry.add("Rolling Mill (" + aMat.getLocal() + ")"              , "Basic Machines"                      , 20201, 20001, aClass, aMat.mToolQuality, 16, aMachine     , UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS,  HARDNESS[0], NBT_RESISTANCE, HARDNESS[0], NBT_COLOR, UT.Code.getRGBInt(aMat.fRGBaSolid), NBT_INPUT, V[0], NBT_TEXTURE, "rollingmill", NBT_ENERGY_ACCEPTED, TD.Energy.RU, NBT_RECIPEMAP, RM.RollingMill, NBT_INV_SIDE_IN, SBIT_L, NBT_INV_SIDE_AUTO_IN, SIDE_LEFT, NBT_INV_SIDE_OUT, SBIT_R, NBT_INV_SIDE_AUTO_OUT, SIDE_RIGHT, NBT_ENERGY_ACCEPTED_SIDES, SBIT_B), "Gh", "M ", "Gw", 'M', OP.casingMachineDouble.dat(aMat), 'G', OP.gearGt.dat(aMat));
		aMat = MT.DATA.Heat_T[1];    aRegistry.add("Rolling Mill (" + aMat.getLocal() + ")"              , "Basic Machines"                      , 20202, 20001, aClass, aMat.mToolQuality, 16, aMachine     , UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS,  HARDNESS[1], NBT_RESISTANCE, HARDNESS[1], NBT_COLOR, UT.Code.getRGBInt(aMat.fRGBaSolid), NBT_INPUT, V[1], NBT_TEXTURE, "rollingmill", NBT_ENERGY_ACCEPTED, TD.Energy.RU, NBT_RECIPEMAP, RM.RollingMill, NBT_INV_SIDE_IN, SBIT_L, NBT_INV_SIDE_AUTO_IN, SIDE_LEFT, NBT_INV_SIDE_OUT, SBIT_R, NBT_INV_SIDE_AUTO_OUT, SIDE_RIGHT, NBT_ENERGY_ACCEPTED_SIDES, SBIT_B), "Gh", "M ", "Gw", 'M', OP.casingMachineDouble.dat(aMat), 'G', OP.gearGt.dat(aMat));
		aMat = MT.DATA.Heat_T[2];    aRegistry.add("Rolling Mill (" + aMat.getLocal() + ")"              , "Basic Machines"                      , 20203, 20001, aClass, aMat.mToolQuality, 16, aMachine     , UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS,  HARDNESS[2], NBT_RESISTANCE, HARDNESS[2], NBT_COLOR, UT.Code.getRGBInt(aMat.fRGBaSolid), NBT_INPUT, V[2], NBT_TEXTURE, "rollingmill", NBT_ENERGY_ACCEPTED, TD.Energy.RU, NBT_RECIPEMAP, RM.RollingMill, NBT_INV_SIDE_IN, SBIT_L, NBT_INV_SIDE_AUTO_IN, SIDE_LEFT, NBT_INV_SIDE_OUT, SBIT_R, NBT_INV_SIDE_AUTO_OUT, SIDE_RIGHT, NBT_ENERGY_ACCEPTED_SIDES, SBIT_B), "Gh", "M ", "Gw", 'M', OP.casingMachineDouble.dat(aMat), 'G', OP.gearGt.dat(aMat));
		aMat = MT.DATA.Heat_T[3];    aRegistry.add("Rolling Mill (" + aMat.getLocal() + ")"              , "Basic Machines"                      , 20204, 20001, aClass, aMat.mToolQuality, 16, aMachine     , UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS,  HARDNESS[3], NBT_RESISTANCE, HARDNESS[3], NBT_COLOR, UT.Code.getRGBInt(aMat.fRGBaSolid), NBT_INPUT, V[3], NBT_TEXTURE, "rollingmill", NBT_ENERGY_ACCEPTED, TD.Energy.RU, NBT_RECIPEMAP, RM.RollingMill, NBT_INV_SIDE_IN, SBIT_L, NBT_INV_SIDE_AUTO_IN, SIDE_LEFT, NBT_INV_SIDE_OUT, SBIT_R, NBT_INV_SIDE_AUTO_OUT, SIDE_RIGHT, NBT_ENERGY_ACCEPTED_SIDES, SBIT_B), "Gh", "M ", "Gw", 'M', OP.casingMachineDouble.dat(aMat), 'G', OP.gearGt.dat(aMat));
		aMat = MT.DATA.Heat_T[4];    aRegistry.add("Rolling Mill (" + aMat.getLocal() + ")"              , "Basic Machines"                      , 20205, 20001, aClass, aMat.mToolQuality, 16, aMachine     , UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS,  HARDNESS[4], NBT_RESISTANCE, HARDNESS[4], NBT_COLOR, UT.Code.getRGBInt(aMat.fRGBaSolid), NBT_INPUT, V[4], NBT_TEXTURE, "rollingmill", NBT_ENERGY_ACCEPTED, TD.Energy.RU, NBT_RECIPEMAP, RM.RollingMill, NBT_INV_SIDE_IN, SBIT_L, NBT_INV_SIDE_AUTO_IN, SIDE_LEFT, NBT_INV_SIDE_OUT, SBIT_R, NBT_INV_SIDE_AUTO_OUT, SIDE_RIGHT, NBT_ENERGY_ACCEPTED_SIDES, SBIT_B), "Gh", "M ", "Gw", 'M', OP.casingMachineDouble.dat(aMat), 'G', OP.gearGt.dat(aMat));
		aMat = MT.DATA.Heat_T[5];    aRegistry.add("Rolling Mill (" + aMat.getLocal() + ")"              , "Basic Machines"                      , 20206, 20001, aClass, aMat.mToolQuality, 16, aMachine     , UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS,  HARDNESS[5], NBT_RESISTANCE, HARDNESS[5], NBT_COLOR, UT.Code.getRGBInt(aMat.fRGBaSolid), NBT_INPUT, V[5], NBT_TEXTURE, "rollingmill", NBT_ENERGY_ACCEPTED, TD.Energy.RU, NBT_RECIPEMAP, RM.RollingMill, NBT_INV_SIDE_IN, SBIT_L, NBT_INV_SIDE_AUTO_IN, SIDE_LEFT, NBT_INV_SIDE_OUT, SBIT_R, NBT_INV_SIDE_AUTO_OUT, SIDE_RIGHT, NBT_ENERGY_ACCEPTED_SIDES, SBIT_B), "Gh", "M ", "Gw", 'M', OP.casingMachineDouble.dat(aMat), 'G', OP.gearGt.dat(aMat));
		aMat = MT.DATA.Heat_T[6];    aRegistry.add("Rolling Mill (" + aMat.getLocal() + ")"              , "Basic Machines"                      , 20207, 20001, aClass, aMat.mToolQuality, 16, aMachine     , UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS,  HARDNESS[6], NBT_RESISTANCE, HARDNESS[6], NBT_COLOR, UT.Code.getRGBInt(aMat.fRGBaSolid), NBT_INPUT, V[6], NBT_TEXTURE, "rollingmill", NBT_ENERGY_ACCEPTED, TD.Energy.RU, NBT_RECIPEMAP, RM.RollingMill, NBT_INV_SIDE_IN, SBIT_L, NBT_INV_SIDE_AUTO_IN, SIDE_LEFT, NBT_INV_SIDE_OUT, SBIT_R, NBT_INV_SIDE_AUTO_OUT, SIDE_RIGHT, NBT_ENERGY_ACCEPTED_SIDES, SBIT_B), "Gh", "M ", "Gw", 'M', OP.casingMachineDouble.dat(aMat), 'G', OP.gearGt.dat(aMat));
		aMat = MT.DATA.Heat_T[7];    aRegistry.add("Rolling Mill (" + aMat.getLocal() + ")"              , "Basic Machines"                      , 20208, 20001, aClass, aMat.mToolQuality, 16, aMachine     , UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS,  HARDNESS[7], NBT_RESISTANCE, HARDNESS[7], NBT_COLOR, UT.Code.getRGBInt(aMat.fRGBaSolid), NBT_INPUT, V[7], NBT_TEXTURE, "rollingmill", NBT_ENERGY_ACCEPTED, TD.Energy.RU, NBT_RECIPEMAP, RM.RollingMill, NBT_INV_SIDE_IN, SBIT_L, NBT_INV_SIDE_AUTO_IN, SIDE_LEFT, NBT_INV_SIDE_OUT, SBIT_R, NBT_INV_SIDE_AUTO_OUT, SIDE_RIGHT, NBT_ENERGY_ACCEPTED_SIDES, SBIT_B), "Gh", "M ", "Gw", 'M', OP.casingMachineDouble.dat(aMat), 'G', OP.gearGt.dat(aMat));
		aMat = MT.DATA.Heat_T[8];    aRegistry.add("Rolling Mill (" + aMat.getLocal() + ")"              , "Basic Machines"                      , 20209, 20001, aClass, aMat.mToolQuality, 16, aMachine     , UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS,  HARDNESS[8], NBT_RESISTANCE, HARDNESS[8], NBT_COLOR, UT.Code.getRGBInt(aMat.fRGBaSolid), NBT_INPUT, V[8], NBT_TEXTURE, "rollingmill", NBT_ENERGY_ACCEPTED, TD.Energy.RU, NBT_RECIPEMAP, RM.RollingMill, NBT_INV_SIDE_IN, SBIT_L, NBT_INV_SIDE_AUTO_IN, SIDE_LEFT, NBT_INV_SIDE_OUT, SBIT_R, NBT_INV_SIDE_AUTO_OUT, SIDE_RIGHT, NBT_ENERGY_ACCEPTED_SIDES, SBIT_B), "Gh", "M ", "Gw", 'M', OP.casingMachineDouble.dat(aMat), 'G', OP.gearGt.dat(aMat));
		aMat = MT.DATA.Heat_T[9];    aRegistry.add("Rolling Mill (" + aMat.getLocal() + ")"              , "Basic Machines"                      , 20210, 20001, aClass, aMat.mToolQuality, 16, aMachine     , UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS,  HARDNESS[9], NBT_RESISTANCE, HARDNESS[9], NBT_COLOR, UT.Code.getRGBInt(aMat.fRGBaSolid), NBT_INPUT, V[9], NBT_TEXTURE, "rollingmill", NBT_ENERGY_ACCEPTED, TD.Energy.RU, NBT_RECIPEMAP, RM.RollingMill, NBT_INV_SIDE_IN, SBIT_L, NBT_INV_SIDE_AUTO_IN, SIDE_LEFT, NBT_INV_SIDE_OUT, SBIT_R, NBT_INV_SIDE_AUTO_OUT, SIDE_RIGHT, NBT_ENERGY_ACCEPTED_SIDES, SBIT_B), "Gh", "M ", "Gw", 'M', OP.casingMachineDouble.dat(aMat), 'G', OP.gearGt.dat(aMat));
		aMat = MT.DATA.Heat_T[10];    aRegistry.add("Rolling Mill (" + aMat.getLocal() + ")"              , "Basic Machines"                      , 20211, 20001, aClass, aMat.mToolQuality, 16, aMachine     , UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS,  HARDNESS[10], NBT_RESISTANCE, HARDNESS[10], NBT_COLOR, UT.Code.getRGBInt(aMat.fRGBaSolid), NBT_INPUT, V[10], NBT_TEXTURE, "rollingmill", NBT_ENERGY_ACCEPTED, TD.Energy.RU, NBT_RECIPEMAP, RM.RollingMill, NBT_INV_SIDE_IN, SBIT_L, NBT_INV_SIDE_AUTO_IN, SIDE_LEFT, NBT_INV_SIDE_OUT, SBIT_R, NBT_INV_SIDE_AUTO_OUT, SIDE_RIGHT, NBT_ENERGY_ACCEPTED_SIDES, SBIT_B), "Gh", "M ", "Gw", 'M', OP.casingMachineDouble.dat(aMat), 'G', OP.gearGt.dat(aMat));
		aMat = MT.DATA.Heat_T[11];    aRegistry.add("Rolling Mill (" + aMat.getLocal() + ")"              , "Basic Machines"                      , 20212, 20001, aClass, aMat.mToolQuality, 16, aMachine     , UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS,  HARDNESS[11], NBT_RESISTANCE, HARDNESS[11], NBT_COLOR, UT.Code.getRGBInt(aMat.fRGBaSolid), NBT_INPUT, V[11], NBT_TEXTURE, "rollingmill", NBT_ENERGY_ACCEPTED, TD.Energy.RU, NBT_RECIPEMAP, RM.RollingMill, NBT_INV_SIDE_IN, SBIT_L, NBT_INV_SIDE_AUTO_IN, SIDE_LEFT, NBT_INV_SIDE_OUT, SBIT_R, NBT_INV_SIDE_AUTO_OUT, SIDE_RIGHT, NBT_ENERGY_ACCEPTED_SIDES, SBIT_B), "Gh", "M ", "Gw", 'M', OP.casingMachineDouble.dat(aMat), 'G', OP.gearGt.dat(aMat));
		aMat = MT.DATA.Heat_T[12];    aRegistry.add("Rolling Mill (" + aMat.getLocal() + ")"              , "Basic Machines"                      , 20213, 20001, aClass, aMat.mToolQuality, 16, aMachine     , UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS,  HARDNESS[12], NBT_RESISTANCE, HARDNESS[12], NBT_COLOR, UT.Code.getRGBInt(aMat.fRGBaSolid), NBT_INPUT, V[12], NBT_TEXTURE, "rollingmill", NBT_ENERGY_ACCEPTED, TD.Energy.RU, NBT_RECIPEMAP, RM.RollingMill, NBT_INV_SIDE_IN, SBIT_L, NBT_INV_SIDE_AUTO_IN, SIDE_LEFT, NBT_INV_SIDE_OUT, SBIT_R, NBT_INV_SIDE_AUTO_OUT, SIDE_RIGHT, NBT_ENERGY_ACCEPTED_SIDES, SBIT_B), "Gh", "M ", "Gw", 'M', OP.casingMachineDouble.dat(aMat), 'G', OP.gearGt.dat(aMat));
		aMat = MT.DATA.Heat_T[13];    aRegistry.add("Rolling Mill (" + aMat.getLocal() + ")"              , "Basic Machines"                      , 20214, 20001, aClass, aMat.mToolQuality, 16, aMachine     , UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS,  HARDNESS[13], NBT_RESISTANCE, HARDNESS[13], NBT_COLOR, UT.Code.getRGBInt(aMat.fRGBaSolid), NBT_INPUT, V[13], NBT_TEXTURE, "rollingmill", NBT_ENERGY_ACCEPTED, TD.Energy.RU, NBT_RECIPEMAP, RM.RollingMill, NBT_INV_SIDE_IN, SBIT_L, NBT_INV_SIDE_AUTO_IN, SIDE_LEFT, NBT_INV_SIDE_OUT, SBIT_R, NBT_INV_SIDE_AUTO_OUT, SIDE_RIGHT, NBT_ENERGY_ACCEPTED_SIDES, SBIT_B), "Gh", "M ", "Gw", 'M', OP.casingMachineDouble.dat(aMat), 'G', OP.gearGt.dat(aMat));
		aMat = MT.DATA.Heat_T[14];    aRegistry.add("Rolling Mill (" + aMat.getLocal() + ")"              , "Basic Machines"                      , 20215, 20001, aClass, aMat.mToolQuality, 16, aMachine     , UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS,  HARDNESS[14], NBT_RESISTANCE, HARDNESS[14], NBT_COLOR, UT.Code.getRGBInt(aMat.fRGBaSolid), NBT_INPUT, V[14], NBT_TEXTURE, "rollingmill", NBT_ENERGY_ACCEPTED, TD.Energy.RU, NBT_RECIPEMAP, RM.RollingMill, NBT_INV_SIDE_IN, SBIT_L, NBT_INV_SIDE_AUTO_IN, SIDE_LEFT, NBT_INV_SIDE_OUT, SBIT_R, NBT_INV_SIDE_AUTO_OUT, SIDE_RIGHT, NBT_ENERGY_ACCEPTED_SIDES, SBIT_B), "Gh", "M ", "Gw", 'M', OP.casingMachineDouble.dat(aMat), 'G', OP.gearGt.dat(aMat));
		aMat = MT.DATA.Heat_T[15];    aRegistry.add("Rolling Mill (" + aMat.getLocal() + ")"              , "Basic Machines"                      , 20216, 20001, aClass, aMat.mToolQuality, 16, aMachine     , UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS,  HARDNESS[15], NBT_RESISTANCE, HARDNESS[15], NBT_COLOR, UT.Code.getRGBInt(aMat.fRGBaSolid), NBT_INPUT, V[15], NBT_TEXTURE, "rollingmill", NBT_ENERGY_ACCEPTED, TD.Energy.RU, NBT_RECIPEMAP, RM.RollingMill, NBT_INV_SIDE_IN, SBIT_L, NBT_INV_SIDE_AUTO_IN, SIDE_LEFT, NBT_INV_SIDE_OUT, SBIT_R, NBT_INV_SIDE_AUTO_OUT, SIDE_RIGHT, NBT_ENERGY_ACCEPTED_SIDES, SBIT_B), "Gh", "M ", "Gw", 'M', OP.casingMachineDouble.dat(aMat), 'G', OP.gearGt.dat(aMat));

		aClass = MultiTileEntityBasicMachine.class;
		aMat = MT.DATA.Heat_T[0];    aRegistry.add("Roll Bender (" + aMat.getLocal() + ")"               , "Basic Machines"                      , 20221, 20001, aClass, aMat.mToolQuality, 16, aMachine     , UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS, HARDNESS[0], NBT_RESISTANCE, HARDNESS[0], NBT_COLOR, UT.Code.getRGBInt(aMat.fRGBaSolid), NBT_INPUT, V[0], NBT_TEXTURE, "rollbender", NBT_ENERGY_ACCEPTED, TD.Energy.RU, NBT_RECIPEMAP, RM.RollBender, NBT_INV_SIDE_IN, SBIT_L, NBT_INV_SIDE_AUTO_IN, SIDE_LEFT, NBT_INV_SIDE_OUT, SBIT_R, NBT_INV_SIDE_AUTO_OUT, SIDE_RIGHT, NBT_ENERGY_ACCEPTED_SIDES, SBIT_B), "wS ", "GMG", " Sh", 'M', OP.casingMachineDouble.dat(aMat), 'G', OP.gearGt.dat(aMat), 'S', OP.gearGtSmall.dat(aMat));
		aMat = MT.DATA.Heat_T[1];    aRegistry.add("Roll Bender (" + aMat.getLocal() + ")"               , "Basic Machines"                      , 20222, 20001, aClass, aMat.mToolQuality, 16, aMachine     , UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS, HARDNESS[1], NBT_RESISTANCE, HARDNESS[1], NBT_COLOR, UT.Code.getRGBInt(aMat.fRGBaSolid), NBT_INPUT, V[1], NBT_TEXTURE, "rollbender", NBT_ENERGY_ACCEPTED, TD.Energy.RU, NBT_RECIPEMAP, RM.RollBender, NBT_INV_SIDE_IN, SBIT_L, NBT_INV_SIDE_AUTO_IN, SIDE_LEFT, NBT_INV_SIDE_OUT, SBIT_R, NBT_INV_SIDE_AUTO_OUT, SIDE_RIGHT, NBT_ENERGY_ACCEPTED_SIDES, SBIT_B), "wS ", "GMG", " Sh", 'M', OP.casingMachineDouble.dat(aMat), 'G', OP.gearGt.dat(aMat), 'S', OP.gearGtSmall.dat(aMat));
		aMat = MT.DATA.Heat_T[2];    aRegistry.add("Roll Bender (" + aMat.getLocal() + ")"               , "Basic Machines"                      , 20223, 20001, aClass, aMat.mToolQuality, 16, aMachine     , UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS, HARDNESS[2], NBT_RESISTANCE, HARDNESS[2], NBT_COLOR, UT.Code.getRGBInt(aMat.fRGBaSolid), NBT_INPUT, V[2], NBT_TEXTURE, "rollbender", NBT_ENERGY_ACCEPTED, TD.Energy.RU, NBT_RECIPEMAP, RM.RollBender, NBT_INV_SIDE_IN, SBIT_L, NBT_INV_SIDE_AUTO_IN, SIDE_LEFT, NBT_INV_SIDE_OUT, SBIT_R, NBT_INV_SIDE_AUTO_OUT, SIDE_RIGHT, NBT_ENERGY_ACCEPTED_SIDES, SBIT_B), "wS ", "GMG", " Sh", 'M', OP.casingMachineDouble.dat(aMat), 'G', OP.gearGt.dat(aMat), 'S', OP.gearGtSmall.dat(aMat));
		aMat = MT.DATA.Heat_T[3];    aRegistry.add("Roll Bender (" + aMat.getLocal() + ")"               , "Basic Machines"                      , 20224, 20001, aClass, aMat.mToolQuality, 16, aMachine     , UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS, HARDNESS[3], NBT_RESISTANCE, HARDNESS[3], NBT_COLOR, UT.Code.getRGBInt(aMat.fRGBaSolid), NBT_INPUT, V[3], NBT_TEXTURE, "rollbender", NBT_ENERGY_ACCEPTED, TD.Energy.RU, NBT_RECIPEMAP, RM.RollBender, NBT_INV_SIDE_IN, SBIT_L, NBT_INV_SIDE_AUTO_IN, SIDE_LEFT, NBT_INV_SIDE_OUT, SBIT_R, NBT_INV_SIDE_AUTO_OUT, SIDE_RIGHT, NBT_ENERGY_ACCEPTED_SIDES, SBIT_B), "wS ", "GMG", " Sh", 'M', OP.casingMachineDouble.dat(aMat), 'G', OP.gearGt.dat(aMat), 'S', OP.gearGtSmall.dat(aMat));
		aMat = MT.DATA.Heat_T[4];    aRegistry.add("Roll Bender (" + aMat.getLocal() + ")"               , "Basic Machines"                      , 20225, 20001, aClass, aMat.mToolQuality, 16, aMachine     , UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS, HARDNESS[4], NBT_RESISTANCE, HARDNESS[4], NBT_COLOR, UT.Code.getRGBInt(aMat.fRGBaSolid), NBT_INPUT, V[4], NBT_TEXTURE, "rollbender", NBT_ENERGY_ACCEPTED, TD.Energy.RU, NBT_RECIPEMAP, RM.RollBender, NBT_INV_SIDE_IN, SBIT_L, NBT_INV_SIDE_AUTO_IN, SIDE_LEFT, NBT_INV_SIDE_OUT, SBIT_R, NBT_INV_SIDE_AUTO_OUT, SIDE_RIGHT, NBT_ENERGY_ACCEPTED_SIDES, SBIT_B), "wS ", "GMG", " Sh", 'M', OP.casingMachineDouble.dat(aMat), 'G', OP.gearGt.dat(aMat), 'S', OP.gearGtSmall.dat(aMat));
		aMat = MT.DATA.Heat_T[5];    aRegistry.add("Roll Bender (" + aMat.getLocal() + ")"               , "Basic Machines"                      , 20226, 20001, aClass, aMat.mToolQuality, 16, aMachine     , UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS, HARDNESS[5], NBT_RESISTANCE, HARDNESS[5], NBT_COLOR, UT.Code.getRGBInt(aMat.fRGBaSolid), NBT_INPUT, V[5], NBT_TEXTURE, "rollbender", NBT_ENERGY_ACCEPTED, TD.Energy.RU, NBT_RECIPEMAP, RM.RollBender, NBT_INV_SIDE_IN, SBIT_L, NBT_INV_SIDE_AUTO_IN, SIDE_LEFT, NBT_INV_SIDE_OUT, SBIT_R, NBT_INV_SIDE_AUTO_OUT, SIDE_RIGHT, NBT_ENERGY_ACCEPTED_SIDES, SBIT_B), "wS ", "GMG", " Sh", 'M', OP.casingMachineDouble.dat(aMat), 'G', OP.gearGt.dat(aMat), 'S', OP.gearGtSmall.dat(aMat));
		aMat = MT.DATA.Heat_T[6];    aRegistry.add("Roll Bender (" + aMat.getLocal() + ")"               , "Basic Machines"                      , 20227, 20001, aClass, aMat.mToolQuality, 16, aMachine     , UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS, HARDNESS[6], NBT_RESISTANCE, HARDNESS[6], NBT_COLOR, UT.Code.getRGBInt(aMat.fRGBaSolid), NBT_INPUT, V[6], NBT_TEXTURE, "rollbender", NBT_ENERGY_ACCEPTED, TD.Energy.RU, NBT_RECIPEMAP, RM.RollBender, NBT_INV_SIDE_IN, SBIT_L, NBT_INV_SIDE_AUTO_IN, SIDE_LEFT, NBT_INV_SIDE_OUT, SBIT_R, NBT_INV_SIDE_AUTO_OUT, SIDE_RIGHT, NBT_ENERGY_ACCEPTED_SIDES, SBIT_B), "wS ", "GMG", " Sh", 'M', OP.casingMachineDouble.dat(aMat), 'G', OP.gearGt.dat(aMat), 'S', OP.gearGtSmall.dat(aMat));
		aMat = MT.DATA.Heat_T[7];    aRegistry.add("Roll Bender (" + aMat.getLocal() + ")"               , "Basic Machines"                      , 20228, 20001, aClass, aMat.mToolQuality, 16, aMachine     , UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS, HARDNESS[7], NBT_RESISTANCE, HARDNESS[7], NBT_COLOR, UT.Code.getRGBInt(aMat.fRGBaSolid), NBT_INPUT, V[7], NBT_TEXTURE, "rollbender", NBT_ENERGY_ACCEPTED, TD.Energy.RU, NBT_RECIPEMAP, RM.RollBender, NBT_INV_SIDE_IN, SBIT_L, NBT_INV_SIDE_AUTO_IN, SIDE_LEFT, NBT_INV_SIDE_OUT, SBIT_R, NBT_INV_SIDE_AUTO_OUT, SIDE_RIGHT, NBT_ENERGY_ACCEPTED_SIDES, SBIT_B), "wS ", "GMG", " Sh", 'M', OP.casingMachineDouble.dat(aMat), 'G', OP.gearGt.dat(aMat), 'S', OP.gearGtSmall.dat(aMat));
		aMat = MT.DATA.Heat_T[8];    aRegistry.add("Roll Bender (" + aMat.getLocal() + ")"               , "Basic Machines"                      , 20229, 20001, aClass, aMat.mToolQuality, 16, aMachine     , UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS, HARDNESS[8], NBT_RESISTANCE, HARDNESS[8], NBT_COLOR, UT.Code.getRGBInt(aMat.fRGBaSolid), NBT_INPUT, V[8], NBT_TEXTURE, "rollbender", NBT_ENERGY_ACCEPTED, TD.Energy.RU, NBT_RECIPEMAP, RM.RollBender, NBT_INV_SIDE_IN, SBIT_L, NBT_INV_SIDE_AUTO_IN, SIDE_LEFT, NBT_INV_SIDE_OUT, SBIT_R, NBT_INV_SIDE_AUTO_OUT, SIDE_RIGHT, NBT_ENERGY_ACCEPTED_SIDES, SBIT_B), "wS ", "GMG", " Sh", 'M', OP.casingMachineDouble.dat(aMat), 'G', OP.gearGt.dat(aMat), 'S', OP.gearGtSmall.dat(aMat));
		aMat = MT.DATA.Heat_T[9];    aRegistry.add("Roll Bender (" + aMat.getLocal() + ")"               , "Basic Machines"                      , 20230, 20001, aClass, aMat.mToolQuality, 16, aMachine     , UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS, HARDNESS[9], NBT_RESISTANCE, HARDNESS[9], NBT_COLOR, UT.Code.getRGBInt(aMat.fRGBaSolid), NBT_INPUT, V[9], NBT_TEXTURE, "rollbender", NBT_ENERGY_ACCEPTED, TD.Energy.RU, NBT_RECIPEMAP, RM.RollBender, NBT_INV_SIDE_IN, SBIT_L, NBT_INV_SIDE_AUTO_IN, SIDE_LEFT, NBT_INV_SIDE_OUT, SBIT_R, NBT_INV_SIDE_AUTO_OUT, SIDE_RIGHT, NBT_ENERGY_ACCEPTED_SIDES, SBIT_B), "wS ", "GMG", " Sh", 'M', OP.casingMachineDouble.dat(aMat), 'G', OP.gearGt.dat(aMat), 'S', OP.gearGtSmall.dat(aMat));
		aMat = MT.DATA.Heat_T[10];    aRegistry.add("Roll Bender (" + aMat.getLocal() + ")"               , "Basic Machines"                      , 20231, 20001, aClass, aMat.mToolQuality, 16, aMachine     , UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS, HARDNESS[10], NBT_RESISTANCE, HARDNESS[10], NBT_COLOR, UT.Code.getRGBInt(aMat.fRGBaSolid), NBT_INPUT, V[10], NBT_TEXTURE, "rollbender", NBT_ENERGY_ACCEPTED, TD.Energy.RU, NBT_RECIPEMAP, RM.RollBender, NBT_INV_SIDE_IN, SBIT_L, NBT_INV_SIDE_AUTO_IN, SIDE_LEFT, NBT_INV_SIDE_OUT, SBIT_R, NBT_INV_SIDE_AUTO_OUT, SIDE_RIGHT, NBT_ENERGY_ACCEPTED_SIDES, SBIT_B), "wS ", "GMG", " Sh", 'M', OP.casingMachineDouble.dat(aMat), 'G', OP.gearGt.dat(aMat), 'S', OP.gearGtSmall.dat(aMat));
		aMat = MT.DATA.Heat_T[11];    aRegistry.add("Roll Bender (" + aMat.getLocal() + ")"               , "Basic Machines"                      , 20232, 20001, aClass, aMat.mToolQuality, 16, aMachine     , UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS, HARDNESS[11], NBT_RESISTANCE, HARDNESS[11], NBT_COLOR, UT.Code.getRGBInt(aMat.fRGBaSolid), NBT_INPUT, V[11], NBT_TEXTURE, "rollbender", NBT_ENERGY_ACCEPTED, TD.Energy.RU, NBT_RECIPEMAP, RM.RollBender, NBT_INV_SIDE_IN, SBIT_L, NBT_INV_SIDE_AUTO_IN, SIDE_LEFT, NBT_INV_SIDE_OUT, SBIT_R, NBT_INV_SIDE_AUTO_OUT, SIDE_RIGHT, NBT_ENERGY_ACCEPTED_SIDES, SBIT_B), "wS ", "GMG", " Sh", 'M', OP.casingMachineDouble.dat(aMat), 'G', OP.gearGt.dat(aMat), 'S', OP.gearGtSmall.dat(aMat));
		aMat = MT.DATA.Heat_T[12];    aRegistry.add("Roll Bender (" + aMat.getLocal() + ")"               , "Basic Machines"                      , 20233, 20001, aClass, aMat.mToolQuality, 16, aMachine     , UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS, HARDNESS[12], NBT_RESISTANCE, HARDNESS[12], NBT_COLOR, UT.Code.getRGBInt(aMat.fRGBaSolid), NBT_INPUT, V[12], NBT_TEXTURE, "rollbender", NBT_ENERGY_ACCEPTED, TD.Energy.RU, NBT_RECIPEMAP, RM.RollBender, NBT_INV_SIDE_IN, SBIT_L, NBT_INV_SIDE_AUTO_IN, SIDE_LEFT, NBT_INV_SIDE_OUT, SBIT_R, NBT_INV_SIDE_AUTO_OUT, SIDE_RIGHT, NBT_ENERGY_ACCEPTED_SIDES, SBIT_B), "wS ", "GMG", " Sh", 'M', OP.casingMachineDouble.dat(aMat), 'G', OP.gearGt.dat(aMat), 'S', OP.gearGtSmall.dat(aMat));
		aMat = MT.DATA.Heat_T[13];    aRegistry.add("Roll Bender (" + aMat.getLocal() + ")"               , "Basic Machines"                      , 20234, 20001, aClass, aMat.mToolQuality, 16, aMachine     , UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS, HARDNESS[13], NBT_RESISTANCE, HARDNESS[13], NBT_COLOR, UT.Code.getRGBInt(aMat.fRGBaSolid), NBT_INPUT, V[13], NBT_TEXTURE, "rollbender", NBT_ENERGY_ACCEPTED, TD.Energy.RU, NBT_RECIPEMAP, RM.RollBender, NBT_INV_SIDE_IN, SBIT_L, NBT_INV_SIDE_AUTO_IN, SIDE_LEFT, NBT_INV_SIDE_OUT, SBIT_R, NBT_INV_SIDE_AUTO_OUT, SIDE_RIGHT, NBT_ENERGY_ACCEPTED_SIDES, SBIT_B), "wS ", "GMG", " Sh", 'M', OP.casingMachineDouble.dat(aMat), 'G', OP.gearGt.dat(aMat), 'S', OP.gearGtSmall.dat(aMat));
		aMat = MT.DATA.Heat_T[14];    aRegistry.add("Roll Bender (" + aMat.getLocal() + ")"               , "Basic Machines"                      , 20235, 20001, aClass, aMat.mToolQuality, 16, aMachine     , UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS, HARDNESS[14], NBT_RESISTANCE, HARDNESS[14], NBT_COLOR, UT.Code.getRGBInt(aMat.fRGBaSolid), NBT_INPUT, V[14], NBT_TEXTURE, "rollbender", NBT_ENERGY_ACCEPTED, TD.Energy.RU, NBT_RECIPEMAP, RM.RollBender, NBT_INV_SIDE_IN, SBIT_L, NBT_INV_SIDE_AUTO_IN, SIDE_LEFT, NBT_INV_SIDE_OUT, SBIT_R, NBT_INV_SIDE_AUTO_OUT, SIDE_RIGHT, NBT_ENERGY_ACCEPTED_SIDES, SBIT_B), "wS ", "GMG", " Sh", 'M', OP.casingMachineDouble.dat(aMat), 'G', OP.gearGt.dat(aMat), 'S', OP.gearGtSmall.dat(aMat));
		aMat = MT.DATA.Heat_T[15];    aRegistry.add("Roll Bender (" + aMat.getLocal() + ")"               , "Basic Machines"                      , 20236, 20001, aClass, aMat.mToolQuality, 16, aMachine     , UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS, HARDNESS[15], NBT_RESISTANCE, HARDNESS[15], NBT_COLOR, UT.Code.getRGBInt(aMat.fRGBaSolid), NBT_INPUT, V[15], NBT_TEXTURE, "rollbender", NBT_ENERGY_ACCEPTED, TD.Energy.RU, NBT_RECIPEMAP, RM.RollBender, NBT_INV_SIDE_IN, SBIT_L, NBT_INV_SIDE_AUTO_IN, SIDE_LEFT, NBT_INV_SIDE_OUT, SBIT_R, NBT_INV_SIDE_AUTO_OUT, SIDE_RIGHT, NBT_ENERGY_ACCEPTED_SIDES, SBIT_B), "wS ", "GMG", " Sh", 'M', OP.casingMachineDouble.dat(aMat), 'G', OP.gearGt.dat(aMat), 'S', OP.gearGtSmall.dat(aMat));

		aClass = MultiTileEntityBasicMachine.class;
		aMat = MT.DATA.Heat_T[0];    aRegistry.add("Roll Former (" + aMat.getLocal() + ")"               , "Basic Machines"                      , 20241, 20001, aClass, aMat.mToolQuality, 16, aMachine     , UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS, HARDNESS[1], NBT_RESISTANCE, HARDNESS[0], NBT_COLOR, UT.Code.getRGBInt(aMat.fRGBaSolid), NBT_INPUT, V[0], NBT_TEXTURE, "rollformer", NBT_ENERGY_ACCEPTED, TD.Energy.RU, NBT_RECIPEMAP, RM.RollFormer, NBT_INV_SIDE_IN, SBIT_L, NBT_INV_SIDE_AUTO_IN, SIDE_LEFT, NBT_INV_SIDE_OUT, SBIT_R, NBT_INV_SIDE_AUTO_OUT, SIDE_RIGHT, NBT_ENERGY_ACCEPTED_SIDES, SBIT_B), "wG ", "GMG", " Gh", 'M', OP.casingMachineDouble.dat(aMat), 'G', OP.gearGt.dat(aMat));
		aMat = MT.DATA.Heat_T[1];    aRegistry.add("Roll Former (" + aMat.getLocal() + ")"               , "Basic Machines"                      , 20242, 20001, aClass, aMat.mToolQuality, 16, aMachine     , UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS, HARDNESS[2], NBT_RESISTANCE, HARDNESS[1], NBT_COLOR, UT.Code.getRGBInt(aMat.fRGBaSolid), NBT_INPUT, V[1], NBT_TEXTURE, "rollformer", NBT_ENERGY_ACCEPTED, TD.Energy.RU, NBT_RECIPEMAP, RM.RollFormer, NBT_INV_SIDE_IN, SBIT_L, NBT_INV_SIDE_AUTO_IN, SIDE_LEFT, NBT_INV_SIDE_OUT, SBIT_R, NBT_INV_SIDE_AUTO_OUT, SIDE_RIGHT, NBT_ENERGY_ACCEPTED_SIDES, SBIT_B), "wG ", "GMG", " Gh", 'M', OP.casingMachineDouble.dat(aMat), 'G', OP.gearGt.dat(aMat));
		aMat = MT.DATA.Heat_T[2];    aRegistry.add("Roll Former (" + aMat.getLocal() + ")"               , "Basic Machines"                      , 20243, 20001, aClass, aMat.mToolQuality, 16, aMachine     , UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS, HARDNESS[3], NBT_RESISTANCE, HARDNESS[2], NBT_COLOR, UT.Code.getRGBInt(aMat.fRGBaSolid), NBT_INPUT, V[2], NBT_TEXTURE, "rollformer", NBT_ENERGY_ACCEPTED, TD.Energy.RU, NBT_RECIPEMAP, RM.RollFormer, NBT_INV_SIDE_IN, SBIT_L, NBT_INV_SIDE_AUTO_IN, SIDE_LEFT, NBT_INV_SIDE_OUT, SBIT_R, NBT_INV_SIDE_AUTO_OUT, SIDE_RIGHT, NBT_ENERGY_ACCEPTED_SIDES, SBIT_B), "wG ", "GMG", " Gh", 'M', OP.casingMachineDouble.dat(aMat), 'G', OP.gearGt.dat(aMat));
		aMat = MT.DATA.Heat_T[3];    aRegistry.add("Roll Former (" + aMat.getLocal() + ")"               , "Basic Machines"                      , 20244, 20001, aClass, aMat.mToolQuality, 16, aMachine     , UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS, HARDNESS[4], NBT_RESISTANCE, HARDNESS[3], NBT_COLOR, UT.Code.getRGBInt(aMat.fRGBaSolid), NBT_INPUT, V[3], NBT_TEXTURE, "rollformer", NBT_ENERGY_ACCEPTED, TD.Energy.RU, NBT_RECIPEMAP, RM.RollFormer, NBT_INV_SIDE_IN, SBIT_L, NBT_INV_SIDE_AUTO_IN, SIDE_LEFT, NBT_INV_SIDE_OUT, SBIT_R, NBT_INV_SIDE_AUTO_OUT, SIDE_RIGHT, NBT_ENERGY_ACCEPTED_SIDES, SBIT_B), "wG ", "GMG", " Gh", 'M', OP.casingMachineDouble.dat(aMat), 'G', OP.gearGt.dat(aMat));
		aMat = MT.DATA.Heat_T[4];    aRegistry.add("Roll Former (" + aMat.getLocal() + ")"               , "Basic Machines"                      , 20245, 20001, aClass, aMat.mToolQuality, 16, aMachine     , UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS, HARDNESS[5], NBT_RESISTANCE, HARDNESS[4], NBT_COLOR, UT.Code.getRGBInt(aMat.fRGBaSolid), NBT_INPUT, V[4], NBT_TEXTURE, "rollformer", NBT_ENERGY_ACCEPTED, TD.Energy.RU, NBT_RECIPEMAP, RM.RollFormer, NBT_INV_SIDE_IN, SBIT_L, NBT_INV_SIDE_AUTO_IN, SIDE_LEFT, NBT_INV_SIDE_OUT, SBIT_R, NBT_INV_SIDE_AUTO_OUT, SIDE_RIGHT, NBT_ENERGY_ACCEPTED_SIDES, SBIT_B), "wG ", "GMG", " Gh", 'M', OP.casingMachineDouble.dat(aMat), 'G', OP.gearGt.dat(aMat));
		aMat = MT.DATA.Heat_T[5];    aRegistry.add("Roll Former (" + aMat.getLocal() + ")"               , "Basic Machines"                      , 20246, 20001, aClass, aMat.mToolQuality, 16, aMachine     , UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS, HARDNESS[6], NBT_RESISTANCE, HARDNESS[5], NBT_COLOR, UT.Code.getRGBInt(aMat.fRGBaSolid), NBT_INPUT, V[5], NBT_TEXTURE, "rollformer", NBT_ENERGY_ACCEPTED, TD.Energy.RU, NBT_RECIPEMAP, RM.RollFormer, NBT_INV_SIDE_IN, SBIT_L, NBT_INV_SIDE_AUTO_IN, SIDE_LEFT, NBT_INV_SIDE_OUT, SBIT_R, NBT_INV_SIDE_AUTO_OUT, SIDE_RIGHT, NBT_ENERGY_ACCEPTED_SIDES, SBIT_B), "wG ", "GMG", " Gh", 'M', OP.casingMachineDouble.dat(aMat), 'G', OP.gearGt.dat(aMat));
		aMat = MT.DATA.Heat_T[6];    aRegistry.add("Roll Former (" + aMat.getLocal() + ")"               , "Basic Machines"                      , 20247, 20001, aClass, aMat.mToolQuality, 16, aMachine     , UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS, HARDNESS[7], NBT_RESISTANCE, HARDNESS[6], NBT_COLOR, UT.Code.getRGBInt(aMat.fRGBaSolid), NBT_INPUT, V[6], NBT_TEXTURE, "rollformer", NBT_ENERGY_ACCEPTED, TD.Energy.RU, NBT_RECIPEMAP, RM.RollFormer, NBT_INV_SIDE_IN, SBIT_L, NBT_INV_SIDE_AUTO_IN, SIDE_LEFT, NBT_INV_SIDE_OUT, SBIT_R, NBT_INV_SIDE_AUTO_OUT, SIDE_RIGHT, NBT_ENERGY_ACCEPTED_SIDES, SBIT_B), "wG ", "GMG", " Gh", 'M', OP.casingMachineDouble.dat(aMat), 'G', OP.gearGt.dat(aMat));
		aMat = MT.DATA.Heat_T[7];    aRegistry.add("Roll Former (" + aMat.getLocal() + ")"               , "Basic Machines"                      , 20248, 20001, aClass, aMat.mToolQuality, 16, aMachine     , UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS, HARDNESS[8], NBT_RESISTANCE, HARDNESS[7], NBT_COLOR, UT.Code.getRGBInt(aMat.fRGBaSolid), NBT_INPUT, V[7], NBT_TEXTURE, "rollformer", NBT_ENERGY_ACCEPTED, TD.Energy.RU, NBT_RECIPEMAP, RM.RollFormer, NBT_INV_SIDE_IN, SBIT_L, NBT_INV_SIDE_AUTO_IN, SIDE_LEFT, NBT_INV_SIDE_OUT, SBIT_R, NBT_INV_SIDE_AUTO_OUT, SIDE_RIGHT, NBT_ENERGY_ACCEPTED_SIDES, SBIT_B), "wG ", "GMG", " Gh", 'M', OP.casingMachineDouble.dat(aMat), 'G', OP.gearGt.dat(aMat));
		aMat = MT.DATA.Heat_T[8];    aRegistry.add("Roll Former (" + aMat.getLocal() + ")"               , "Basic Machines"                      , 20249, 20001, aClass, aMat.mToolQuality, 16, aMachine     , UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS, HARDNESS[9], NBT_RESISTANCE, HARDNESS[8], NBT_COLOR, UT.Code.getRGBInt(aMat.fRGBaSolid), NBT_INPUT, V[8], NBT_TEXTURE, "rollformer", NBT_ENERGY_ACCEPTED, TD.Energy.RU, NBT_RECIPEMAP, RM.RollFormer, NBT_INV_SIDE_IN, SBIT_L, NBT_INV_SIDE_AUTO_IN, SIDE_LEFT, NBT_INV_SIDE_OUT, SBIT_R, NBT_INV_SIDE_AUTO_OUT, SIDE_RIGHT, NBT_ENERGY_ACCEPTED_SIDES, SBIT_B), "wG ", "GMG", " Gh", 'M', OP.casingMachineDouble.dat(aMat), 'G', OP.gearGt.dat(aMat));
		aMat = MT.DATA.Heat_T[9];    aRegistry.add("Roll Former (" + aMat.getLocal() + ")"               , "Basic Machines"                      , 20250, 20001, aClass, aMat.mToolQuality, 16, aMachine     , UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS, HARDNESS[10], NBT_RESISTANCE, HARDNESS[9], NBT_COLOR, UT.Code.getRGBInt(aMat.fRGBaSolid), NBT_INPUT, V[9], NBT_TEXTURE, "rollformer", NBT_ENERGY_ACCEPTED, TD.Energy.RU, NBT_RECIPEMAP, RM.RollFormer, NBT_INV_SIDE_IN, SBIT_L, NBT_INV_SIDE_AUTO_IN, SIDE_LEFT, NBT_INV_SIDE_OUT, SBIT_R, NBT_INV_SIDE_AUTO_OUT, SIDE_RIGHT, NBT_ENERGY_ACCEPTED_SIDES, SBIT_B), "wG ", "GMG", " Gh", 'M', OP.casingMachineDouble.dat(aMat), 'G', OP.gearGt.dat(aMat));
		aMat = MT.DATA.Heat_T[10];    aRegistry.add("Roll Former (" + aMat.getLocal() + ")"               , "Basic Machines"                      , 20251, 20001, aClass, aMat.mToolQuality, 16, aMachine     , UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS, HARDNESS[11], NBT_RESISTANCE, HARDNESS[10], NBT_COLOR, UT.Code.getRGBInt(aMat.fRGBaSolid), NBT_INPUT, V[10], NBT_TEXTURE, "rollformer", NBT_ENERGY_ACCEPTED, TD.Energy.RU, NBT_RECIPEMAP, RM.RollFormer, NBT_INV_SIDE_IN, SBIT_L, NBT_INV_SIDE_AUTO_IN, SIDE_LEFT, NBT_INV_SIDE_OUT, SBIT_R, NBT_INV_SIDE_AUTO_OUT, SIDE_RIGHT, NBT_ENERGY_ACCEPTED_SIDES, SBIT_B), "wG ", "GMG", " Gh", 'M', OP.casingMachineDouble.dat(aMat), 'G', OP.gearGt.dat(aMat));
		aMat = MT.DATA.Heat_T[11];    aRegistry.add("Roll Former (" + aMat.getLocal() + ")"               , "Basic Machines"                      , 20252, 20001, aClass, aMat.mToolQuality, 16, aMachine     , UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS, HARDNESS[12], NBT_RESISTANCE, HARDNESS[11], NBT_COLOR, UT.Code.getRGBInt(aMat.fRGBaSolid), NBT_INPUT, V[11], NBT_TEXTURE, "rollformer", NBT_ENERGY_ACCEPTED, TD.Energy.RU, NBT_RECIPEMAP, RM.RollFormer, NBT_INV_SIDE_IN, SBIT_L, NBT_INV_SIDE_AUTO_IN, SIDE_LEFT, NBT_INV_SIDE_OUT, SBIT_R, NBT_INV_SIDE_AUTO_OUT, SIDE_RIGHT, NBT_ENERGY_ACCEPTED_SIDES, SBIT_B), "wG ", "GMG", " Gh", 'M', OP.casingMachineDouble.dat(aMat), 'G', OP.gearGt.dat(aMat));
		aMat = MT.DATA.Heat_T[12];    aRegistry.add("Roll Former (" + aMat.getLocal() + ")"               , "Basic Machines"                      , 20253, 20001, aClass, aMat.mToolQuality, 16, aMachine     , UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS, HARDNESS[13], NBT_RESISTANCE, HARDNESS[12], NBT_COLOR, UT.Code.getRGBInt(aMat.fRGBaSolid), NBT_INPUT, V[12], NBT_TEXTURE, "rollformer", NBT_ENERGY_ACCEPTED, TD.Energy.RU, NBT_RECIPEMAP, RM.RollFormer, NBT_INV_SIDE_IN, SBIT_L, NBT_INV_SIDE_AUTO_IN, SIDE_LEFT, NBT_INV_SIDE_OUT, SBIT_R, NBT_INV_SIDE_AUTO_OUT, SIDE_RIGHT, NBT_ENERGY_ACCEPTED_SIDES, SBIT_B), "wG ", "GMG", " Gh", 'M', OP.casingMachineDouble.dat(aMat), 'G', OP.gearGt.dat(aMat));
		aMat = MT.DATA.Heat_T[13];    aRegistry.add("Roll Former (" + aMat.getLocal() + ")"               , "Basic Machines"                      , 20254, 20001, aClass, aMat.mToolQuality, 16, aMachine     , UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS, HARDNESS[14], NBT_RESISTANCE, HARDNESS[13], NBT_COLOR, UT.Code.getRGBInt(aMat.fRGBaSolid), NBT_INPUT, V[13], NBT_TEXTURE, "rollformer", NBT_ENERGY_ACCEPTED, TD.Energy.RU, NBT_RECIPEMAP, RM.RollFormer, NBT_INV_SIDE_IN, SBIT_L, NBT_INV_SIDE_AUTO_IN, SIDE_LEFT, NBT_INV_SIDE_OUT, SBIT_R, NBT_INV_SIDE_AUTO_OUT, SIDE_RIGHT, NBT_ENERGY_ACCEPTED_SIDES, SBIT_B), "wG ", "GMG", " Gh", 'M', OP.casingMachineDouble.dat(aMat), 'G', OP.gearGt.dat(aMat));
		aMat = MT.DATA.Heat_T[14];    aRegistry.add("Roll Former (" + aMat.getLocal() + ")"               , "Basic Machines"                      , 20255, 20001, aClass, aMat.mToolQuality, 16, aMachine     , UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS, HARDNESS[15], NBT_RESISTANCE, HARDNESS[14], NBT_COLOR, UT.Code.getRGBInt(aMat.fRGBaSolid), NBT_INPUT, V[14], NBT_TEXTURE, "rollformer", NBT_ENERGY_ACCEPTED, TD.Energy.RU, NBT_RECIPEMAP, RM.RollFormer, NBT_INV_SIDE_IN, SBIT_L, NBT_INV_SIDE_AUTO_IN, SIDE_LEFT, NBT_INV_SIDE_OUT, SBIT_R, NBT_INV_SIDE_AUTO_OUT, SIDE_RIGHT, NBT_ENERGY_ACCEPTED_SIDES, SBIT_B), "wG ", "GMG", " Gh", 'M', OP.casingMachineDouble.dat(aMat), 'G', OP.gearGt.dat(aMat));
		aMat = MT.DATA.Heat_T[15];    aRegistry.add("Roll Former (" + aMat.getLocal() + ")"               , "Basic Machines"                      , 20256, 20001, aClass, aMat.mToolQuality, 16, aMachine     , UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS, HARDNESS[16], NBT_RESISTANCE, HARDNESS[15], NBT_COLOR, UT.Code.getRGBInt(aMat.fRGBaSolid), NBT_INPUT, V[15], NBT_TEXTURE, "rollformer", NBT_ENERGY_ACCEPTED, TD.Energy.RU, NBT_RECIPEMAP, RM.RollFormer, NBT_INV_SIDE_IN, SBIT_L, NBT_INV_SIDE_AUTO_IN, SIDE_LEFT, NBT_INV_SIDE_OUT, SBIT_R, NBT_INV_SIDE_AUTO_OUT, SIDE_RIGHT, NBT_ENERGY_ACCEPTED_SIDES, SBIT_B), "wG ", "GMG", " Gh", 'M', OP.casingMachineDouble.dat(aMat), 'G', OP.gearGt.dat(aMat));

		aClass = MultiTileEntityBasicMachine.class;
		aMat = MT.DATA.Heat_T[0];    aRegistry.add("Cluster Mill (" + aMat.getLocal() + ")"              , "Basic Machines"                      , 20261, 20001, aClass, aMat.mToolQuality, 16, aMachine     , UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS, HARDNESS[0], NBT_RESISTANCE, HARDNESS[0], NBT_COLOR, UT.Code.getRGBInt(aMat.fRGBaSolid), NBT_INPUT, V[0], NBT_TEXTURE, "clustermill", NBT_ENERGY_ACCEPTED, TD.Energy.RU, NBT_RECIPEMAP, RM.ClusterMill, NBT_INV_SIDE_IN, SBIT_L, NBT_INV_SIDE_AUTO_IN, SIDE_LEFT, NBT_INV_SIDE_OUT, SBIT_R, NBT_INV_SIDE_AUTO_OUT, SIDE_RIGHT, NBT_ENERGY_ACCEPTED_SIDES, SBIT_B), "SSS", "wGh", "SMS", 'M', OP.casingMachineQuadruple.dat(aMat), 'G', OP.gearGt.dat(aMat), 'S', OP.gearGtSmall.dat(aMat));
		aMat = MT.DATA.Heat_T[1];    aRegistry.add("Cluster Mill (" + aMat.getLocal() + ")"              , "Basic Machines"                      , 20262, 20001, aClass, aMat.mToolQuality, 16, aMachine     , UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS, HARDNESS[1], NBT_RESISTANCE, HARDNESS[1], NBT_COLOR, UT.Code.getRGBInt(aMat.fRGBaSolid), NBT_INPUT, V[1], NBT_TEXTURE, "clustermill", NBT_ENERGY_ACCEPTED, TD.Energy.RU, NBT_RECIPEMAP, RM.ClusterMill, NBT_INV_SIDE_IN, SBIT_L, NBT_INV_SIDE_AUTO_IN, SIDE_LEFT, NBT_INV_SIDE_OUT, SBIT_R, NBT_INV_SIDE_AUTO_OUT, SIDE_RIGHT, NBT_ENERGY_ACCEPTED_SIDES, SBIT_B), "SSS", "wGh", "SMS", 'M', OP.casingMachineQuadruple.dat(aMat), 'G', OP.gearGt.dat(aMat), 'S', OP.gearGtSmall.dat(aMat));
		aMat = MT.DATA.Heat_T[2];    aRegistry.add("Cluster Mill (" + aMat.getLocal() + ")"              , "Basic Machines"                      , 20263, 20001, aClass, aMat.mToolQuality, 16, aMachine     , UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS, HARDNESS[2], NBT_RESISTANCE, HARDNESS[2], NBT_COLOR, UT.Code.getRGBInt(aMat.fRGBaSolid), NBT_INPUT, V[2], NBT_TEXTURE, "clustermill", NBT_ENERGY_ACCEPTED, TD.Energy.RU, NBT_RECIPEMAP, RM.ClusterMill, NBT_INV_SIDE_IN, SBIT_L, NBT_INV_SIDE_AUTO_IN, SIDE_LEFT, NBT_INV_SIDE_OUT, SBIT_R, NBT_INV_SIDE_AUTO_OUT, SIDE_RIGHT, NBT_ENERGY_ACCEPTED_SIDES, SBIT_B), "SSS", "wGh", "SMS", 'M', OP.casingMachineQuadruple.dat(aMat), 'G', OP.gearGt.dat(aMat), 'S', OP.gearGtSmall.dat(aMat));
		aMat = MT.DATA.Heat_T[3];    aRegistry.add("Cluster Mill (" + aMat.getLocal() + ")"              , "Basic Machines"                      , 20264, 20001, aClass, aMat.mToolQuality, 16, aMachine     , UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS, HARDNESS[3], NBT_RESISTANCE, HARDNESS[3], NBT_COLOR, UT.Code.getRGBInt(aMat.fRGBaSolid), NBT_INPUT, V[3], NBT_TEXTURE, "clustermill", NBT_ENERGY_ACCEPTED, TD.Energy.RU, NBT_RECIPEMAP, RM.ClusterMill, NBT_INV_SIDE_IN, SBIT_L, NBT_INV_SIDE_AUTO_IN, SIDE_LEFT, NBT_INV_SIDE_OUT, SBIT_R, NBT_INV_SIDE_AUTO_OUT, SIDE_RIGHT, NBT_ENERGY_ACCEPTED_SIDES, SBIT_B), "SSS", "wGh", "SMS", 'M', OP.casingMachineQuadruple.dat(aMat), 'G', OP.gearGt.dat(aMat), 'S', OP.gearGtSmall.dat(aMat));
		aMat = MT.DATA.Heat_T[4];    aRegistry.add("Cluster Mill (" + aMat.getLocal() + ")"              , "Basic Machines"                      , 20265, 20001, aClass, aMat.mToolQuality, 16, aMachine     , UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS, HARDNESS[4], NBT_RESISTANCE, HARDNESS[4], NBT_COLOR, UT.Code.getRGBInt(aMat.fRGBaSolid), NBT_INPUT, V[4], NBT_TEXTURE, "clustermill", NBT_ENERGY_ACCEPTED, TD.Energy.RU, NBT_RECIPEMAP, RM.ClusterMill, NBT_INV_SIDE_IN, SBIT_L, NBT_INV_SIDE_AUTO_IN, SIDE_LEFT, NBT_INV_SIDE_OUT, SBIT_R, NBT_INV_SIDE_AUTO_OUT, SIDE_RIGHT, NBT_ENERGY_ACCEPTED_SIDES, SBIT_B), "SSS", "wGh", "SMS", 'M', OP.casingMachineQuadruple.dat(aMat), 'G', OP.gearGt.dat(aMat), 'S', OP.gearGtSmall.dat(aMat));
		aMat = MT.DATA.Heat_T[5];    aRegistry.add("Cluster Mill (" + aMat.getLocal() + ")"              , "Basic Machines"                      , 20266, 20001, aClass, aMat.mToolQuality, 16, aMachine     , UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS, HARDNESS[5], NBT_RESISTANCE, HARDNESS[5], NBT_COLOR, UT.Code.getRGBInt(aMat.fRGBaSolid), NBT_INPUT, V[5], NBT_TEXTURE, "clustermill", NBT_ENERGY_ACCEPTED, TD.Energy.RU, NBT_RECIPEMAP, RM.ClusterMill, NBT_INV_SIDE_IN, SBIT_L, NBT_INV_SIDE_AUTO_IN, SIDE_LEFT, NBT_INV_SIDE_OUT, SBIT_R, NBT_INV_SIDE_AUTO_OUT, SIDE_RIGHT, NBT_ENERGY_ACCEPTED_SIDES, SBIT_B), "SSS", "wGh", "SMS", 'M', OP.casingMachineQuadruple.dat(aMat), 'G', OP.gearGt.dat(aMat), 'S', OP.gearGtSmall.dat(aMat));
		aMat = MT.DATA.Heat_T[6];    aRegistry.add("Cluster Mill (" + aMat.getLocal() + ")"              , "Basic Machines"                      , 20267, 20001, aClass, aMat.mToolQuality, 16, aMachine     , UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS, HARDNESS[6], NBT_RESISTANCE, HARDNESS[6], NBT_COLOR, UT.Code.getRGBInt(aMat.fRGBaSolid), NBT_INPUT, V[6], NBT_TEXTURE, "clustermill", NBT_ENERGY_ACCEPTED, TD.Energy.RU, NBT_RECIPEMAP, RM.ClusterMill, NBT_INV_SIDE_IN, SBIT_L, NBT_INV_SIDE_AUTO_IN, SIDE_LEFT, NBT_INV_SIDE_OUT, SBIT_R, NBT_INV_SIDE_AUTO_OUT, SIDE_RIGHT, NBT_ENERGY_ACCEPTED_SIDES, SBIT_B), "SSS", "wGh", "SMS", 'M', OP.casingMachineQuadruple.dat(aMat), 'G', OP.gearGt.dat(aMat), 'S', OP.gearGtSmall.dat(aMat));
		aMat = MT.DATA.Heat_T[7];    aRegistry.add("Cluster Mill (" + aMat.getLocal() + ")"              , "Basic Machines"                      , 20268, 20001, aClass, aMat.mToolQuality, 16, aMachine     , UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS, HARDNESS[7], NBT_RESISTANCE, HARDNESS[7], NBT_COLOR, UT.Code.getRGBInt(aMat.fRGBaSolid), NBT_INPUT, V[7], NBT_TEXTURE, "clustermill", NBT_ENERGY_ACCEPTED, TD.Energy.RU, NBT_RECIPEMAP, RM.ClusterMill, NBT_INV_SIDE_IN, SBIT_L, NBT_INV_SIDE_AUTO_IN, SIDE_LEFT, NBT_INV_SIDE_OUT, SBIT_R, NBT_INV_SIDE_AUTO_OUT, SIDE_RIGHT, NBT_ENERGY_ACCEPTED_SIDES, SBIT_B), "SSS", "wGh", "SMS", 'M', OP.casingMachineQuadruple.dat(aMat), 'G', OP.gearGt.dat(aMat), 'S', OP.gearGtSmall.dat(aMat));
		aMat = MT.DATA.Heat_T[8];    aRegistry.add("Cluster Mill (" + aMat.getLocal() + ")"              , "Basic Machines"                      , 20269, 20001, aClass, aMat.mToolQuality, 16, aMachine     , UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS, HARDNESS[8], NBT_RESISTANCE, HARDNESS[8], NBT_COLOR, UT.Code.getRGBInt(aMat.fRGBaSolid), NBT_INPUT, V[8], NBT_TEXTURE, "clustermill", NBT_ENERGY_ACCEPTED, TD.Energy.RU, NBT_RECIPEMAP, RM.ClusterMill, NBT_INV_SIDE_IN, SBIT_L, NBT_INV_SIDE_AUTO_IN, SIDE_LEFT, NBT_INV_SIDE_OUT, SBIT_R, NBT_INV_SIDE_AUTO_OUT, SIDE_RIGHT, NBT_ENERGY_ACCEPTED_SIDES, SBIT_B), "SSS", "wGh", "SMS", 'M', OP.casingMachineQuadruple.dat(aMat), 'G', OP.gearGt.dat(aMat), 'S', OP.gearGtSmall.dat(aMat));
		aMat = MT.DATA.Heat_T[9];    aRegistry.add("Cluster Mill (" + aMat.getLocal() + ")"              , "Basic Machines"                      , 20270, 20001, aClass, aMat.mToolQuality, 16, aMachine     , UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS, HARDNESS[9], NBT_RESISTANCE, HARDNESS[9], NBT_COLOR, UT.Code.getRGBInt(aMat.fRGBaSolid), NBT_INPUT, V[9], NBT_TEXTURE, "clustermill", NBT_ENERGY_ACCEPTED, TD.Energy.RU, NBT_RECIPEMAP, RM.ClusterMill, NBT_INV_SIDE_IN, SBIT_L, NBT_INV_SIDE_AUTO_IN, SIDE_LEFT, NBT_INV_SIDE_OUT, SBIT_R, NBT_INV_SIDE_AUTO_OUT, SIDE_RIGHT, NBT_ENERGY_ACCEPTED_SIDES, SBIT_B), "SSS", "wGh", "SMS", 'M', OP.casingMachineQuadruple.dat(aMat), 'G', OP.gearGt.dat(aMat), 'S', OP.gearGtSmall.dat(aMat));
		aMat = MT.DATA.Heat_T[10];    aRegistry.add("Cluster Mill (" + aMat.getLocal() + ")"              , "Basic Machines"                      , 20271, 20001, aClass, aMat.mToolQuality, 16, aMachine     , UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS, HARDNESS[10], NBT_RESISTANCE, HARDNESS[10], NBT_COLOR, UT.Code.getRGBInt(aMat.fRGBaSolid), NBT_INPUT, V[10], NBT_TEXTURE, "clustermill", NBT_ENERGY_ACCEPTED, TD.Energy.RU, NBT_RECIPEMAP, RM.ClusterMill, NBT_INV_SIDE_IN, SBIT_L, NBT_INV_SIDE_AUTO_IN, SIDE_LEFT, NBT_INV_SIDE_OUT, SBIT_R, NBT_INV_SIDE_AUTO_OUT, SIDE_RIGHT, NBT_ENERGY_ACCEPTED_SIDES, SBIT_B), "SSS", "wGh", "SMS", 'M', OP.casingMachineQuadruple.dat(aMat), 'G', OP.gearGt.dat(aMat), 'S', OP.gearGtSmall.dat(aMat));
		aMat = MT.DATA.Heat_T[11];    aRegistry.add("Cluster Mill (" + aMat.getLocal() + ")"              , "Basic Machines"                      , 20272, 20001, aClass, aMat.mToolQuality, 16, aMachine     , UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS, HARDNESS[11], NBT_RESISTANCE, HARDNESS[11], NBT_COLOR, UT.Code.getRGBInt(aMat.fRGBaSolid), NBT_INPUT, V[11], NBT_TEXTURE, "clustermill", NBT_ENERGY_ACCEPTED, TD.Energy.RU, NBT_RECIPEMAP, RM.ClusterMill, NBT_INV_SIDE_IN, SBIT_L, NBT_INV_SIDE_AUTO_IN, SIDE_LEFT, NBT_INV_SIDE_OUT, SBIT_R, NBT_INV_SIDE_AUTO_OUT, SIDE_RIGHT, NBT_ENERGY_ACCEPTED_SIDES, SBIT_B), "SSS", "wGh", "SMS", 'M', OP.casingMachineQuadruple.dat(aMat), 'G', OP.gearGt.dat(aMat), 'S', OP.gearGtSmall.dat(aMat));
		aMat = MT.DATA.Heat_T[12];    aRegistry.add("Cluster Mill (" + aMat.getLocal() + ")"              , "Basic Machines"                      , 20273, 20001, aClass, aMat.mToolQuality, 16, aMachine     , UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS, HARDNESS[12], NBT_RESISTANCE, HARDNESS[12], NBT_COLOR, UT.Code.getRGBInt(aMat.fRGBaSolid), NBT_INPUT, V[12], NBT_TEXTURE, "clustermill", NBT_ENERGY_ACCEPTED, TD.Energy.RU, NBT_RECIPEMAP, RM.ClusterMill, NBT_INV_SIDE_IN, SBIT_L, NBT_INV_SIDE_AUTO_IN, SIDE_LEFT, NBT_INV_SIDE_OUT, SBIT_R, NBT_INV_SIDE_AUTO_OUT, SIDE_RIGHT, NBT_ENERGY_ACCEPTED_SIDES, SBIT_B), "SSS", "wGh", "SMS", 'M', OP.casingMachineQuadruple.dat(aMat), 'G', OP.gearGt.dat(aMat), 'S', OP.gearGtSmall.dat(aMat));
		aMat = MT.DATA.Heat_T[13];    aRegistry.add("Cluster Mill (" + aMat.getLocal() + ")"              , "Basic Machines"                      , 20274, 20001, aClass, aMat.mToolQuality, 16, aMachine     , UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS, HARDNESS[13], NBT_RESISTANCE, HARDNESS[13], NBT_COLOR, UT.Code.getRGBInt(aMat.fRGBaSolid), NBT_INPUT, V[13], NBT_TEXTURE, "clustermill", NBT_ENERGY_ACCEPTED, TD.Energy.RU, NBT_RECIPEMAP, RM.ClusterMill, NBT_INV_SIDE_IN, SBIT_L, NBT_INV_SIDE_AUTO_IN, SIDE_LEFT, NBT_INV_SIDE_OUT, SBIT_R, NBT_INV_SIDE_AUTO_OUT, SIDE_RIGHT, NBT_ENERGY_ACCEPTED_SIDES, SBIT_B), "SSS", "wGh", "SMS", 'M', OP.casingMachineQuadruple.dat(aMat), 'G', OP.gearGt.dat(aMat), 'S', OP.gearGtSmall.dat(aMat));
		aMat = MT.DATA.Heat_T[14];    aRegistry.add("Cluster Mill (" + aMat.getLocal() + ")"              , "Basic Machines"                      , 20275, 20001, aClass, aMat.mToolQuality, 16, aMachine     , UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS, HARDNESS[14], NBT_RESISTANCE, HARDNESS[14], NBT_COLOR, UT.Code.getRGBInt(aMat.fRGBaSolid), NBT_INPUT, V[14], NBT_TEXTURE, "clustermill", NBT_ENERGY_ACCEPTED, TD.Energy.RU, NBT_RECIPEMAP, RM.ClusterMill, NBT_INV_SIDE_IN, SBIT_L, NBT_INV_SIDE_AUTO_IN, SIDE_LEFT, NBT_INV_SIDE_OUT, SBIT_R, NBT_INV_SIDE_AUTO_OUT, SIDE_RIGHT, NBT_ENERGY_ACCEPTED_SIDES, SBIT_B), "SSS", "wGh", "SMS", 'M', OP.casingMachineQuadruple.dat(aMat), 'G', OP.gearGt.dat(aMat), 'S', OP.gearGtSmall.dat(aMat));
		aMat = MT.DATA.Heat_T[15];    aRegistry.add("Cluster Mill (" + aMat.getLocal() + ")"              , "Basic Machines"                      , 20276, 20001, aClass, aMat.mToolQuality, 16, aMachine     , UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS, HARDNESS[15], NBT_RESISTANCE, HARDNESS[15], NBT_COLOR, UT.Code.getRGBInt(aMat.fRGBaSolid), NBT_INPUT, V[15], NBT_TEXTURE, "clustermill", NBT_ENERGY_ACCEPTED, TD.Energy.RU, NBT_RECIPEMAP, RM.ClusterMill, NBT_INV_SIDE_IN, SBIT_L, NBT_INV_SIDE_AUTO_IN, SIDE_LEFT, NBT_INV_SIDE_OUT, SBIT_R, NBT_INV_SIDE_AUTO_OUT, SIDE_RIGHT, NBT_ENERGY_ACCEPTED_SIDES, SBIT_B), "SSS", "wGh", "SMS", 'M', OP.casingMachineQuadruple.dat(aMat), 'G', OP.gearGt.dat(aMat), 'S', OP.gearGtSmall.dat(aMat));

		aClass = MultiTileEntityBasicMachine.class;
		aMat = MT.DATA.Heat_T[0];    aRegistry.add("Wiremill (" + aMat.getLocal() + ")"                  , "Basic Machines"                      , 20281, 20001, aClass, aMat.mToolQuality, 16, aMachine     , UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS, HARDNESS[0], NBT_RESISTANCE, HARDNESS[0], NBT_COLOR, UT.Code.getRGBInt(aMat.fRGBaSolid), NBT_INPUT, V[0], NBT_TEXTURE, "wiremill", NBT_ENERGY_ACCEPTED, TD.Energy.RU, NBT_RECIPEMAP, RM.Wiremill, NBT_INV_SIDE_IN, SBIT_L, NBT_INV_SIDE_AUTO_IN, SIDE_LEFT, NBT_INV_SIDE_OUT, SBIT_R, NBT_INV_SIDE_AUTO_OUT, SIDE_RIGHT, NBT_ENERGY_ACCEPTED_SIDES, SBIT_B), "SGS", "wMh", 'M', OP.casingMachine.dat(aMat), 'G', OP.gearGt.dat(aMat), 'S', OP.gearGtSmall.dat(aMat));
		aMat = MT.DATA.Heat_T[1];    aRegistry.add("Wiremill (" + aMat.getLocal() + ")"                  , "Basic Machines"                      , 20282, 20001, aClass, aMat.mToolQuality, 16, aMachine     , UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS, HARDNESS[1], NBT_RESISTANCE, HARDNESS[1], NBT_COLOR, UT.Code.getRGBInt(aMat.fRGBaSolid), NBT_INPUT, V[1], NBT_TEXTURE, "wiremill", NBT_ENERGY_ACCEPTED, TD.Energy.RU, NBT_RECIPEMAP, RM.Wiremill, NBT_INV_SIDE_IN, SBIT_L, NBT_INV_SIDE_AUTO_IN, SIDE_LEFT, NBT_INV_SIDE_OUT, SBIT_R, NBT_INV_SIDE_AUTO_OUT, SIDE_RIGHT, NBT_ENERGY_ACCEPTED_SIDES, SBIT_B), "SGS", "wMh", 'M', OP.casingMachine.dat(aMat), 'G', OP.gearGt.dat(aMat), 'S', OP.gearGtSmall.dat(aMat));
		aMat = MT.DATA.Heat_T[2];    aRegistry.add("Wiremill (" + aMat.getLocal() + ")"                  , "Basic Machines"                      , 20283, 20001, aClass, aMat.mToolQuality, 16, aMachine     , UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS, HARDNESS[2], NBT_RESISTANCE, HARDNESS[2], NBT_COLOR, UT.Code.getRGBInt(aMat.fRGBaSolid), NBT_INPUT, V[2], NBT_TEXTURE, "wiremill", NBT_ENERGY_ACCEPTED, TD.Energy.RU, NBT_RECIPEMAP, RM.Wiremill, NBT_INV_SIDE_IN, SBIT_L, NBT_INV_SIDE_AUTO_IN, SIDE_LEFT, NBT_INV_SIDE_OUT, SBIT_R, NBT_INV_SIDE_AUTO_OUT, SIDE_RIGHT, NBT_ENERGY_ACCEPTED_SIDES, SBIT_B), "SGS", "wMh", 'M', OP.casingMachine.dat(aMat), 'G', OP.gearGt.dat(aMat), 'S', OP.gearGtSmall.dat(aMat));
		aMat = MT.DATA.Heat_T[3];    aRegistry.add("Wiremill (" + aMat.getLocal() + ")"                  , "Basic Machines"                      , 20284, 20001, aClass, aMat.mToolQuality, 16, aMachine     , UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS, HARDNESS[3], NBT_RESISTANCE, HARDNESS[3], NBT_COLOR, UT.Code.getRGBInt(aMat.fRGBaSolid), NBT_INPUT, V[3], NBT_TEXTURE, "wiremill", NBT_ENERGY_ACCEPTED, TD.Energy.RU, NBT_RECIPEMAP, RM.Wiremill, NBT_INV_SIDE_IN, SBIT_L, NBT_INV_SIDE_AUTO_IN, SIDE_LEFT, NBT_INV_SIDE_OUT, SBIT_R, NBT_INV_SIDE_AUTO_OUT, SIDE_RIGHT, NBT_ENERGY_ACCEPTED_SIDES, SBIT_B), "SGS", "wMh", 'M', OP.casingMachine.dat(aMat), 'G', OP.gearGt.dat(aMat), 'S', OP.gearGtSmall.dat(aMat));
		aMat = MT.DATA.Heat_T[4];    aRegistry.add("Wiremill (" + aMat.getLocal() + ")"                  , "Basic Machines"                      , 20285, 20001, aClass, aMat.mToolQuality, 16, aMachine     , UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS, HARDNESS[4], NBT_RESISTANCE, HARDNESS[4], NBT_COLOR, UT.Code.getRGBInt(aMat.fRGBaSolid), NBT_INPUT, V[4], NBT_TEXTURE, "wiremill", NBT_ENERGY_ACCEPTED, TD.Energy.RU, NBT_RECIPEMAP, RM.Wiremill, NBT_INV_SIDE_IN, SBIT_L, NBT_INV_SIDE_AUTO_IN, SIDE_LEFT, NBT_INV_SIDE_OUT, SBIT_R, NBT_INV_SIDE_AUTO_OUT, SIDE_RIGHT, NBT_ENERGY_ACCEPTED_SIDES, SBIT_B), "SGS", "wMh", 'M', OP.casingMachine.dat(aMat), 'G', OP.gearGt.dat(aMat), 'S', OP.gearGtSmall.dat(aMat));
		aMat = MT.DATA.Heat_T[5];    aRegistry.add("Wiremill (" + aMat.getLocal() + ")"                  , "Basic Machines"                      , 20286, 20001, aClass, aMat.mToolQuality, 16, aMachine     , UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS, HARDNESS[5], NBT_RESISTANCE, HARDNESS[5], NBT_COLOR, UT.Code.getRGBInt(aMat.fRGBaSolid), NBT_INPUT, V[5], NBT_TEXTURE, "wiremill", NBT_ENERGY_ACCEPTED, TD.Energy.RU, NBT_RECIPEMAP, RM.Wiremill, NBT_INV_SIDE_IN, SBIT_L, NBT_INV_SIDE_AUTO_IN, SIDE_LEFT, NBT_INV_SIDE_OUT, SBIT_R, NBT_INV_SIDE_AUTO_OUT, SIDE_RIGHT, NBT_ENERGY_ACCEPTED_SIDES, SBIT_B), "SGS", "wMh", 'M', OP.casingMachine.dat(aMat), 'G', OP.gearGt.dat(aMat), 'S', OP.gearGtSmall.dat(aMat));
		aMat = MT.DATA.Heat_T[6];    aRegistry.add("Wiremill (" + aMat.getLocal() + ")"                  , "Basic Machines"                      , 20287, 20001, aClass, aMat.mToolQuality, 16, aMachine     , UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS, HARDNESS[6], NBT_RESISTANCE, HARDNESS[6], NBT_COLOR, UT.Code.getRGBInt(aMat.fRGBaSolid), NBT_INPUT, V[6], NBT_TEXTURE, "wiremill", NBT_ENERGY_ACCEPTED, TD.Energy.RU, NBT_RECIPEMAP, RM.Wiremill, NBT_INV_SIDE_IN, SBIT_L, NBT_INV_SIDE_AUTO_IN, SIDE_LEFT, NBT_INV_SIDE_OUT, SBIT_R, NBT_INV_SIDE_AUTO_OUT, SIDE_RIGHT, NBT_ENERGY_ACCEPTED_SIDES, SBIT_B), "SGS", "wMh", 'M', OP.casingMachine.dat(aMat), 'G', OP.gearGt.dat(aMat), 'S', OP.gearGtSmall.dat(aMat));
		aMat = MT.DATA.Heat_T[7];    aRegistry.add("Wiremill (" + aMat.getLocal() + ")"                  , "Basic Machines"                      , 20288, 20001, aClass, aMat.mToolQuality, 16, aMachine     , UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS, HARDNESS[7], NBT_RESISTANCE, HARDNESS[7], NBT_COLOR, UT.Code.getRGBInt(aMat.fRGBaSolid), NBT_INPUT, V[7], NBT_TEXTURE, "wiremill", NBT_ENERGY_ACCEPTED, TD.Energy.RU, NBT_RECIPEMAP, RM.Wiremill, NBT_INV_SIDE_IN, SBIT_L, NBT_INV_SIDE_AUTO_IN, SIDE_LEFT, NBT_INV_SIDE_OUT, SBIT_R, NBT_INV_SIDE_AUTO_OUT, SIDE_RIGHT, NBT_ENERGY_ACCEPTED_SIDES, SBIT_B), "SGS", "wMh", 'M', OP.casingMachine.dat(aMat), 'G', OP.gearGt.dat(aMat), 'S', OP.gearGtSmall.dat(aMat));
		aMat = MT.DATA.Heat_T[8];    aRegistry.add("Wiremill (" + aMat.getLocal() + ")"                  , "Basic Machines"                      , 20289, 20001, aClass, aMat.mToolQuality, 16, aMachine     , UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS, HARDNESS[8], NBT_RESISTANCE, HARDNESS[8], NBT_COLOR, UT.Code.getRGBInt(aMat.fRGBaSolid), NBT_INPUT, V[8], NBT_TEXTURE, "wiremill", NBT_ENERGY_ACCEPTED, TD.Energy.RU, NBT_RECIPEMAP, RM.Wiremill, NBT_INV_SIDE_IN, SBIT_L, NBT_INV_SIDE_AUTO_IN, SIDE_LEFT, NBT_INV_SIDE_OUT, SBIT_R, NBT_INV_SIDE_AUTO_OUT, SIDE_RIGHT, NBT_ENERGY_ACCEPTED_SIDES, SBIT_B), "SGS", "wMh", 'M', OP.casingMachine.dat(aMat), 'G', OP.gearGt.dat(aMat), 'S', OP.gearGtSmall.dat(aMat));
		aMat = MT.DATA.Heat_T[9];    aRegistry.add("Wiremill (" + aMat.getLocal() + ")"                  , "Basic Machines"                      , 20290, 20001, aClass, aMat.mToolQuality, 16, aMachine     , UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS, HARDNESS[9], NBT_RESISTANCE, HARDNESS[9], NBT_COLOR, UT.Code.getRGBInt(aMat.fRGBaSolid), NBT_INPUT, V[9], NBT_TEXTURE, "wiremill", NBT_ENERGY_ACCEPTED, TD.Energy.RU, NBT_RECIPEMAP, RM.Wiremill, NBT_INV_SIDE_IN, SBIT_L, NBT_INV_SIDE_AUTO_IN, SIDE_LEFT, NBT_INV_SIDE_OUT, SBIT_R, NBT_INV_SIDE_AUTO_OUT, SIDE_RIGHT, NBT_ENERGY_ACCEPTED_SIDES, SBIT_B), "SGS", "wMh", 'M', OP.casingMachine.dat(aMat), 'G', OP.gearGt.dat(aMat), 'S', OP.gearGtSmall.dat(aMat));
		aMat = MT.DATA.Heat_T[10];    aRegistry.add("Wiremill (" + aMat.getLocal() + ")"                  , "Basic Machines"                      , 20291, 20001, aClass, aMat.mToolQuality, 16, aMachine     , UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS, HARDNESS[10], NBT_RESISTANCE, HARDNESS[10], NBT_COLOR, UT.Code.getRGBInt(aMat.fRGBaSolid), NBT_INPUT, V[10], NBT_TEXTURE, "wiremill", NBT_ENERGY_ACCEPTED, TD.Energy.RU, NBT_RECIPEMAP, RM.Wiremill, NBT_INV_SIDE_IN, SBIT_L, NBT_INV_SIDE_AUTO_IN, SIDE_LEFT, NBT_INV_SIDE_OUT, SBIT_R, NBT_INV_SIDE_AUTO_OUT, SIDE_RIGHT, NBT_ENERGY_ACCEPTED_SIDES, SBIT_B), "SGS", "wMh", 'M', OP.casingMachine.dat(aMat), 'G', OP.gearGt.dat(aMat), 'S', OP.gearGtSmall.dat(aMat));
		aMat = MT.DATA.Heat_T[11];    aRegistry.add("Wiremill (" + aMat.getLocal() + ")"                  , "Basic Machines"                      , 20292, 20001, aClass, aMat.mToolQuality, 16, aMachine     , UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS, HARDNESS[11], NBT_RESISTANCE, HARDNESS[11], NBT_COLOR, UT.Code.getRGBInt(aMat.fRGBaSolid), NBT_INPUT, V[11], NBT_TEXTURE, "wiremill", NBT_ENERGY_ACCEPTED, TD.Energy.RU, NBT_RECIPEMAP, RM.Wiremill, NBT_INV_SIDE_IN, SBIT_L, NBT_INV_SIDE_AUTO_IN, SIDE_LEFT, NBT_INV_SIDE_OUT, SBIT_R, NBT_INV_SIDE_AUTO_OUT, SIDE_RIGHT, NBT_ENERGY_ACCEPTED_SIDES, SBIT_B), "SGS", "wMh", 'M', OP.casingMachine.dat(aMat), 'G', OP.gearGt.dat(aMat), 'S', OP.gearGtSmall.dat(aMat));
		aMat = MT.DATA.Heat_T[12];    aRegistry.add("Wiremill (" + aMat.getLocal() + ")"                  , "Basic Machines"                      , 20293, 20001, aClass, aMat.mToolQuality, 16, aMachine     , UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS, HARDNESS[12], NBT_RESISTANCE, HARDNESS[12], NBT_COLOR, UT.Code.getRGBInt(aMat.fRGBaSolid), NBT_INPUT, V[12], NBT_TEXTURE, "wiremill", NBT_ENERGY_ACCEPTED, TD.Energy.RU, NBT_RECIPEMAP, RM.Wiremill, NBT_INV_SIDE_IN, SBIT_L, NBT_INV_SIDE_AUTO_IN, SIDE_LEFT, NBT_INV_SIDE_OUT, SBIT_R, NBT_INV_SIDE_AUTO_OUT, SIDE_RIGHT, NBT_ENERGY_ACCEPTED_SIDES, SBIT_B), "SGS", "wMh", 'M', OP.casingMachine.dat(aMat), 'G', OP.gearGt.dat(aMat), 'S', OP.gearGtSmall.dat(aMat));
		aMat = MT.DATA.Heat_T[13];    aRegistry.add("Wiremill (" + aMat.getLocal() + ")"                  , "Basic Machines"                      , 20294, 20001, aClass, aMat.mToolQuality, 16, aMachine     , UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS, HARDNESS[13], NBT_RESISTANCE, HARDNESS[13], NBT_COLOR, UT.Code.getRGBInt(aMat.fRGBaSolid), NBT_INPUT, V[13], NBT_TEXTURE, "wiremill", NBT_ENERGY_ACCEPTED, TD.Energy.RU, NBT_RECIPEMAP, RM.Wiremill, NBT_INV_SIDE_IN, SBIT_L, NBT_INV_SIDE_AUTO_IN, SIDE_LEFT, NBT_INV_SIDE_OUT, SBIT_R, NBT_INV_SIDE_AUTO_OUT, SIDE_RIGHT, NBT_ENERGY_ACCEPTED_SIDES, SBIT_B), "SGS", "wMh", 'M', OP.casingMachine.dat(aMat), 'G', OP.gearGt.dat(aMat), 'S', OP.gearGtSmall.dat(aMat));
		aMat = MT.DATA.Heat_T[14];    aRegistry.add("Wiremill (" + aMat.getLocal() + ")"                  , "Basic Machines"                      , 20295, 20001, aClass, aMat.mToolQuality, 16, aMachine     , UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS, HARDNESS[14], NBT_RESISTANCE, HARDNESS[14], NBT_COLOR, UT.Code.getRGBInt(aMat.fRGBaSolid), NBT_INPUT, V[14], NBT_TEXTURE, "wiremill", NBT_ENERGY_ACCEPTED, TD.Energy.RU, NBT_RECIPEMAP, RM.Wiremill, NBT_INV_SIDE_IN, SBIT_L, NBT_INV_SIDE_AUTO_IN, SIDE_LEFT, NBT_INV_SIDE_OUT, SBIT_R, NBT_INV_SIDE_AUTO_OUT, SIDE_RIGHT, NBT_ENERGY_ACCEPTED_SIDES, SBIT_B), "SGS", "wMh", 'M', OP.casingMachine.dat(aMat), 'G', OP.gearGt.dat(aMat), 'S', OP.gearGtSmall.dat(aMat));
		aMat = MT.DATA.Heat_T[15];    aRegistry.add("Wiremill (" + aMat.getLocal() + ")"                  , "Basic Machines"                      , 20296, 20001, aClass, aMat.mToolQuality, 16, aMachine     , UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS, HARDNESS[15], NBT_RESISTANCE, HARDNESS[15], NBT_COLOR, UT.Code.getRGBInt(aMat.fRGBaSolid), NBT_INPUT, V[15], NBT_TEXTURE, "wiremill", NBT_ENERGY_ACCEPTED, TD.Energy.RU, NBT_RECIPEMAP, RM.Wiremill, NBT_INV_SIDE_IN, SBIT_L, NBT_INV_SIDE_AUTO_IN, SIDE_LEFT, NBT_INV_SIDE_OUT, SBIT_R, NBT_INV_SIDE_AUTO_OUT, SIDE_RIGHT, NBT_ENERGY_ACCEPTED_SIDES, SBIT_B), "SGS", "wMh", 'M', OP.casingMachine.dat(aMat), 'G', OP.gearGt.dat(aMat), 'S', OP.gearGtSmall.dat(aMat));

		aClass = MultiTileEntityBasicMachineElectric.class;
		aMat = MT.DATA.Electric_T[1];   aRegistry.add("Canning Machine ("+VN[0]+")"                         , "Basic Machines"                      , 20301, 20001, aClass, aMat.mToolQuality, 16, aMachine     , UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS,   4.0F, NBT_RESISTANCE,   4.0F, NBT_COLOR, UT.Code.getRGBInt(aMat.fRGBaSolid), NBT_INPUT,   V[0], NBT_TEXTURE, "canner", NBT_ENERGY_ACCEPTED, TD.Energy.EU, NBT_RECIPEMAP, RM.Canner, NBT_INV_SIDE_IN, SBIT_U|SBIT_L, NBT_INV_SIDE_AUTO_IN, SIDE_LEFT, NBT_INV_SIDE_OUT, SBIT_R|SBIT_D, NBT_INV_SIDE_AUTO_OUT, SIDE_RIGHT, NBT_TANK_SIDE_IN, SBIT_U|SBIT_L, NBT_TANK_SIDE_AUTO_IN, SIDE_TOP, NBT_TANK_SIDE_OUT, SBIT_R|SBIT_D, NBT_TANK_SIDE_AUTO_OUT, SIDE_BOTTOM, NBT_ENERGY_ACCEPTED_SIDES, SBIT_B, NBT_USE_OUTPUT_TANK, T), "wPh", "XMX", "CPW", 'M', OP.casingMachine.dat(aMat), 'X', IL.PUMPS[0], 'C', OD_CIRCUITS[0], 'W', MT.DATA.CABLES_01[0], 'P', OP.pipeTiny  .dat(MT.StainlessSteel));
		aMat = MT.DATA.Electric_T[1];   aRegistry.add("Canning Machine ("+VN[1]+")"                         , "Basic Machines"                      , 20302, 20001, aClass, aMat.mToolQuality, 16, aMachine     , UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS,   4.0F, NBT_RESISTANCE,   4.0F, NBT_COLOR, UT.Code.getRGBInt(aMat.fRGBaSolid), NBT_INPUT,   V[1], NBT_TEXTURE, "canner", NBT_ENERGY_ACCEPTED, TD.Energy.EU, NBT_RECIPEMAP, RM.Canner, NBT_INV_SIDE_IN, SBIT_U|SBIT_L, NBT_INV_SIDE_AUTO_IN, SIDE_LEFT, NBT_INV_SIDE_OUT, SBIT_R|SBIT_D, NBT_INV_SIDE_AUTO_OUT, SIDE_RIGHT, NBT_TANK_SIDE_IN, SBIT_U|SBIT_L, NBT_TANK_SIDE_AUTO_IN, SIDE_TOP, NBT_TANK_SIDE_OUT, SBIT_R|SBIT_D, NBT_TANK_SIDE_AUTO_OUT, SIDE_BOTTOM, NBT_ENERGY_ACCEPTED_SIDES, SBIT_B, NBT_USE_OUTPUT_TANK, T), "wPh", "XMX", "CPW", 'M', OP.casingMachine.dat(aMat), 'X', IL.PUMPS[1], 'C', OD_CIRCUITS[1], 'W', MT.DATA.CABLES_01[1], 'P', OP.pipeTiny  .dat(MT.StainlessSteel));
		aMat = MT.DATA.Electric_T[2];   aRegistry.add("Canning Machine ("+VN[2]+")"                         , "Basic Machines"                      , 20303, 20001, aClass, aMat.mToolQuality, 16, aMachine     , UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS,   4.0F, NBT_RESISTANCE,   4.0F, NBT_COLOR, UT.Code.getRGBInt(aMat.fRGBaSolid), NBT_INPUT,   V[2], NBT_TEXTURE, "canner", NBT_ENERGY_ACCEPTED, TD.Energy.EU, NBT_RECIPEMAP, RM.Canner, NBT_INV_SIDE_IN, SBIT_U|SBIT_L, NBT_INV_SIDE_AUTO_IN, SIDE_LEFT, NBT_INV_SIDE_OUT, SBIT_R|SBIT_D, NBT_INV_SIDE_AUTO_OUT, SIDE_RIGHT, NBT_TANK_SIDE_IN, SBIT_U|SBIT_L, NBT_TANK_SIDE_AUTO_IN, SIDE_TOP, NBT_TANK_SIDE_OUT, SBIT_R|SBIT_D, NBT_TANK_SIDE_AUTO_OUT, SIDE_BOTTOM, NBT_ENERGY_ACCEPTED_SIDES, SBIT_B, NBT_USE_OUTPUT_TANK, T), "wPh", "XMX", "CPW", 'M', OP.casingMachine.dat(aMat), 'X', IL.PUMPS[2], 'C', OD_CIRCUITS[2], 'W', MT.DATA.CABLES_01[2], 'P', OP.pipeSmall .dat(MT.StainlessSteel));
		aMat = MT.DATA.Electric_T[3];   aRegistry.add("Canning Machine ("+VN[3]+")"                         , "Basic Machines"                      , 20304, 20001, aClass, aMat.mToolQuality, 16, aMachine     , UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS,   4.0F, NBT_RESISTANCE,   4.0F, NBT_COLOR, UT.Code.getRGBInt(aMat.fRGBaSolid), NBT_INPUT,   V[3], NBT_TEXTURE, "canner", NBT_ENERGY_ACCEPTED, TD.Energy.EU, NBT_RECIPEMAP, RM.Canner, NBT_INV_SIDE_IN, SBIT_U|SBIT_L, NBT_INV_SIDE_AUTO_IN, SIDE_LEFT, NBT_INV_SIDE_OUT, SBIT_R|SBIT_D, NBT_INV_SIDE_AUTO_OUT, SIDE_RIGHT, NBT_TANK_SIDE_IN, SBIT_U|SBIT_L, NBT_TANK_SIDE_AUTO_IN, SIDE_TOP, NBT_TANK_SIDE_OUT, SBIT_R|SBIT_D, NBT_TANK_SIDE_AUTO_OUT, SIDE_BOTTOM, NBT_ENERGY_ACCEPTED_SIDES, SBIT_B, NBT_USE_OUTPUT_TANK, T), "wPh", "XMX", "CPW", 'M', OP.casingMachine.dat(aMat), 'X', IL.PUMPS[3], 'C', OD_CIRCUITS[3], 'W', MT.DATA.CABLES_01[3], 'P', OP.pipeMedium.dat(MT.StainlessSteel));
		aMat = MT.DATA.Electric_T[4];   aRegistry.add("Canning Machine ("+VN[4]+")"                         , "Basic Machines"                      , 20305, 20001, aClass, aMat.mToolQuality, 16, aMachine     , UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS,   4.0F, NBT_RESISTANCE,   4.0F, NBT_COLOR, UT.Code.getRGBInt(aMat.fRGBaSolid), NBT_INPUT,   V[4], NBT_TEXTURE, "canner", NBT_ENERGY_ACCEPTED, TD.Energy.EU, NBT_RECIPEMAP, RM.Canner, NBT_INV_SIDE_IN, SBIT_U|SBIT_L, NBT_INV_SIDE_AUTO_IN, SIDE_LEFT, NBT_INV_SIDE_OUT, SBIT_R|SBIT_D, NBT_INV_SIDE_AUTO_OUT, SIDE_RIGHT, NBT_TANK_SIDE_IN, SBIT_U|SBIT_L, NBT_TANK_SIDE_AUTO_IN, SIDE_TOP, NBT_TANK_SIDE_OUT, SBIT_R|SBIT_D, NBT_TANK_SIDE_AUTO_OUT, SIDE_BOTTOM, NBT_ENERGY_ACCEPTED_SIDES, SBIT_B, NBT_USE_OUTPUT_TANK, T), "wPh", "XMX", "CPW", 'M', OP.casingMachine.dat(aMat), 'X', IL.PUMPS[4], 'C', OD_CIRCUITS[4], 'W', MT.DATA.CABLES_01[4], 'P', OP.pipeLarge .dat(MT.StainlessSteel));
		aMat = MT.DATA.Electric_T[5];   aRegistry.add("Canning Machine ("+VN[5]+")"                         , "Basic Machines"                      , 20306, 20001, aClass, aMat.mToolQuality, 16, aMachine     , UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS,   4.0F, NBT_RESISTANCE,   4.0F, NBT_COLOR, UT.Code.getRGBInt(aMat.fRGBaSolid), NBT_INPUT,   V[5], NBT_TEXTURE, "canner", NBT_ENERGY_ACCEPTED, TD.Energy.EU, NBT_RECIPEMAP, RM.Canner, NBT_INV_SIDE_IN, SBIT_U|SBIT_L, NBT_INV_SIDE_AUTO_IN, SIDE_LEFT, NBT_INV_SIDE_OUT, SBIT_R|SBIT_D, NBT_INV_SIDE_AUTO_OUT, SIDE_RIGHT, NBT_TANK_SIDE_IN, SBIT_U|SBIT_L, NBT_TANK_SIDE_AUTO_IN, SIDE_TOP, NBT_TANK_SIDE_OUT, SBIT_R|SBIT_D, NBT_TANK_SIDE_AUTO_OUT, SIDE_BOTTOM, NBT_ENERGY_ACCEPTED_SIDES, SBIT_B, NBT_USE_OUTPUT_TANK, T), "wPh", "XMX", "CPW", 'M', OP.casingMachine.dat(aMat), 'X', IL.PUMPS[5], 'C', OD_CIRCUITS[5], 'W', MT.DATA.CABLES_01[5], 'P', OP.pipeHuge  .dat(MT.StainlessSteel));
		aMat = MT.DATA.Electric_T[6];   aRegistry.add("Canning Machine ("+VN[6]+")"                         , "Basic Machines"                      , 20307, 20001, aClass, aMat.mToolQuality, 16, aMachine     , UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS,   4.0F, NBT_RESISTANCE,   4.0F, NBT_COLOR, UT.Code.getRGBInt(aMat.fRGBaSolid), NBT_INPUT,   V[6], NBT_TEXTURE, "canner", NBT_ENERGY_ACCEPTED, TD.Energy.EU, NBT_RECIPEMAP, RM.Canner, NBT_INV_SIDE_IN, SBIT_U|SBIT_L, NBT_INV_SIDE_AUTO_IN, SIDE_LEFT, NBT_INV_SIDE_OUT, SBIT_R|SBIT_D, NBT_INV_SIDE_AUTO_OUT, SIDE_RIGHT, NBT_TANK_SIDE_IN, SBIT_U|SBIT_L, NBT_TANK_SIDE_AUTO_IN, SIDE_TOP, NBT_TANK_SIDE_OUT, SBIT_R|SBIT_D, NBT_TANK_SIDE_AUTO_OUT, SIDE_BOTTOM, NBT_ENERGY_ACCEPTED_SIDES, SBIT_B, NBT_USE_OUTPUT_TANK, T), "wPh", "XMX", "CPW", 'M', OP.casingMachine.dat(aMat), 'X', IL.PUMPS[6], 'C', OD_CIRCUITS[6], 'W', MT.DATA.CABLES_01[6], 'P', OP.pipeTiny  .dat(MT.StainlessSteel));
		aMat = MT.DATA.Electric_T[7];   aRegistry.add("Canning Machine ("+VN[7]+")"                         , "Basic Machines"                      , 20308, 20001, aClass, aMat.mToolQuality, 16, aMachine     , UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS,   4.0F, NBT_RESISTANCE,   4.0F, NBT_COLOR, UT.Code.getRGBInt(aMat.fRGBaSolid), NBT_INPUT,   V[7], NBT_TEXTURE, "canner", NBT_ENERGY_ACCEPTED, TD.Energy.EU, NBT_RECIPEMAP, RM.Canner, NBT_INV_SIDE_IN, SBIT_U|SBIT_L, NBT_INV_SIDE_AUTO_IN, SIDE_LEFT, NBT_INV_SIDE_OUT, SBIT_R|SBIT_D, NBT_INV_SIDE_AUTO_OUT, SIDE_RIGHT, NBT_TANK_SIDE_IN, SBIT_U|SBIT_L, NBT_TANK_SIDE_AUTO_IN, SIDE_TOP, NBT_TANK_SIDE_OUT, SBIT_R|SBIT_D, NBT_TANK_SIDE_AUTO_OUT, SIDE_BOTTOM, NBT_ENERGY_ACCEPTED_SIDES, SBIT_B, NBT_USE_OUTPUT_TANK, T), "wPh", "XMX", "CPW", 'M', OP.casingMachine.dat(aMat), 'X', IL.PUMPS[7], 'C', OD_CIRCUITS[7], 'W', MT.DATA.CABLES_01[7], 'P', OP.pipeSmall .dat(MT.StainlessSteel));
		aMat = MT.DATA.Electric_T[8];   aRegistry.add("Canning Machine ("+VN[8]+")"                         , "Basic Machines"                      , 20309, 20001, aClass, aMat.mToolQuality, 16, aMachine     , UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS,   4.0F, NBT_RESISTANCE,   4.0F, NBT_COLOR, UT.Code.getRGBInt(aMat.fRGBaSolid), NBT_INPUT,   V[8], NBT_TEXTURE, "canner", NBT_ENERGY_ACCEPTED, TD.Energy.EU, NBT_RECIPEMAP, RM.Canner, NBT_INV_SIDE_IN, SBIT_U|SBIT_L, NBT_INV_SIDE_AUTO_IN, SIDE_LEFT, NBT_INV_SIDE_OUT, SBIT_R|SBIT_D, NBT_INV_SIDE_AUTO_OUT, SIDE_RIGHT, NBT_TANK_SIDE_IN, SBIT_U|SBIT_L, NBT_TANK_SIDE_AUTO_IN, SIDE_TOP, NBT_TANK_SIDE_OUT, SBIT_R|SBIT_D, NBT_TANK_SIDE_AUTO_OUT, SIDE_BOTTOM, NBT_ENERGY_ACCEPTED_SIDES, SBIT_B, NBT_USE_OUTPUT_TANK, T), "wPh", "XMX", "CPW", 'M', OP.casingMachine.dat(aMat), 'X', IL.PUMPS[8], 'C', OD_CIRCUITS[8], 'W', MT.DATA.CABLES_01[8], 'P', OP.pipeMedium.dat(MT.StainlessSteel));
		aMat = MT.DATA.Electric_T[9];   aRegistry.add("Canning Machine ("+VN[9]+")"                         , "Basic Machines"                      , 20310, 20001, aClass, aMat.mToolQuality, 16, aMachine     , UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS,   4.0F, NBT_RESISTANCE,   4.0F, NBT_COLOR, UT.Code.getRGBInt(aMat.fRGBaSolid), NBT_INPUT,   V[9], NBT_TEXTURE, "canner", NBT_ENERGY_ACCEPTED, TD.Energy.EU, NBT_RECIPEMAP, RM.Canner, NBT_INV_SIDE_IN, SBIT_U|SBIT_L, NBT_INV_SIDE_AUTO_IN, SIDE_LEFT, NBT_INV_SIDE_OUT, SBIT_R|SBIT_D, NBT_INV_SIDE_AUTO_OUT, SIDE_RIGHT, NBT_TANK_SIDE_IN, SBIT_U|SBIT_L, NBT_TANK_SIDE_AUTO_IN, SIDE_TOP, NBT_TANK_SIDE_OUT, SBIT_R|SBIT_D, NBT_TANK_SIDE_AUTO_OUT, SIDE_BOTTOM, NBT_ENERGY_ACCEPTED_SIDES, SBIT_B, NBT_USE_OUTPUT_TANK, T), "wPh", "XMX", "CPW", 'M', OP.casingMachine.dat(aMat), 'X', IL.PUMPS[9], 'C', OD_CIRCUITS[9], 'W', MT.DATA.CABLES_01[9], 'P', OP.pipeLarge .dat(MT.StainlessSteel));
		aMat = MT.DATA.Electric_T[10];   aRegistry.add("Canning Machine ("+VN[10]+")"                         , "Basic Machines"                      , 20311, 20001, aClass, aMat.mToolQuality, 16, aMachine     , UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS,   4.0F, NBT_RESISTANCE,   4.0F, NBT_COLOR, UT.Code.getRGBInt(aMat.fRGBaSolid), NBT_INPUT, V[10], NBT_TEXTURE, "canner", NBT_ENERGY_ACCEPTED, TD.Energy.EU, NBT_RECIPEMAP, RM.Canner, NBT_INV_SIDE_IN, SBIT_U|SBIT_L, NBT_INV_SIDE_AUTO_IN, SIDE_LEFT, NBT_INV_SIDE_OUT, SBIT_R|SBIT_D, NBT_INV_SIDE_AUTO_OUT, SIDE_RIGHT, NBT_TANK_SIDE_IN, SBIT_U|SBIT_L, NBT_TANK_SIDE_AUTO_IN, SIDE_TOP, NBT_TANK_SIDE_OUT, SBIT_R|SBIT_D, NBT_TANK_SIDE_AUTO_OUT, SIDE_BOTTOM, NBT_ENERGY_ACCEPTED_SIDES, SBIT_B, NBT_USE_OUTPUT_TANK, T), "wPh", "XMX", "CPW", 'M', OP.casingMachine.dat(aMat), 'X', IL.PUMPS[10], 'C', OD_CIRCUITS[10], 'W', MT.DATA.CABLES_01[10], 'P', OP.pipeHuge  .dat(MT.StainlessSteel));
		aMat = MT.DATA.Electric_T[11];   aRegistry.add("Canning Machine ("+VN[11]+")"                         , "Basic Machines"                      , 20312, 20001, aClass, aMat.mToolQuality, 16, aMachine     , UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS,   4.0F, NBT_RESISTANCE,   4.0F, NBT_COLOR, UT.Code.getRGBInt(aMat.fRGBaSolid), NBT_INPUT, V[11], NBT_TEXTURE, "canner", NBT_ENERGY_ACCEPTED, TD.Energy.EU, NBT_RECIPEMAP, RM.Canner, NBT_INV_SIDE_IN, SBIT_U|SBIT_L, NBT_INV_SIDE_AUTO_IN, SIDE_LEFT, NBT_INV_SIDE_OUT, SBIT_R|SBIT_D, NBT_INV_SIDE_AUTO_OUT, SIDE_RIGHT, NBT_TANK_SIDE_IN, SBIT_U|SBIT_L, NBT_TANK_SIDE_AUTO_IN, SIDE_TOP, NBT_TANK_SIDE_OUT, SBIT_R|SBIT_D, NBT_TANK_SIDE_AUTO_OUT, SIDE_BOTTOM, NBT_ENERGY_ACCEPTED_SIDES, SBIT_B, NBT_USE_OUTPUT_TANK, T), "wPh", "XMX", "CPW", 'M', OP.casingMachine.dat(aMat), 'X', IL.PUMPS[11], 'C', OD_CIRCUITS[11], 'W', MT.DATA.CABLES_01[11], 'P', OP.pipeTiny  .dat(MT.StainlessSteel));
		aMat = MT.DATA.Electric_T[12];   aRegistry.add("Canning Machine ("+VN[12]+")"                         , "Basic Machines"                      , 20313, 20001, aClass, aMat.mToolQuality, 16, aMachine     , UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS,   4.0F, NBT_RESISTANCE,   4.0F, NBT_COLOR, UT.Code.getRGBInt(aMat.fRGBaSolid), NBT_INPUT, V[12], NBT_TEXTURE, "canner", NBT_ENERGY_ACCEPTED, TD.Energy.EU, NBT_RECIPEMAP, RM.Canner, NBT_INV_SIDE_IN, SBIT_U|SBIT_L, NBT_INV_SIDE_AUTO_IN, SIDE_LEFT, NBT_INV_SIDE_OUT, SBIT_R|SBIT_D, NBT_INV_SIDE_AUTO_OUT, SIDE_RIGHT, NBT_TANK_SIDE_IN, SBIT_U|SBIT_L, NBT_TANK_SIDE_AUTO_IN, SIDE_TOP, NBT_TANK_SIDE_OUT, SBIT_R|SBIT_D, NBT_TANK_SIDE_AUTO_OUT, SIDE_BOTTOM, NBT_ENERGY_ACCEPTED_SIDES, SBIT_B, NBT_USE_OUTPUT_TANK, T), "wPh", "XMX", "CPW", 'M', OP.casingMachine.dat(aMat), 'X', IL.PUMPS[12], 'C', OD_CIRCUITS[12], 'W', MT.DATA.CABLES_01[12], 'P', OP.pipeSmall .dat(MT.StainlessSteel));
		aMat = MT.DATA.Electric_T[13];   aRegistry.add("Canning Machine ("+VN[13]+")"                         , "Basic Machines"                      , 20314, 20001, aClass, aMat.mToolQuality, 16, aMachine     , UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS,   4.0F, NBT_RESISTANCE,   4.0F, NBT_COLOR, UT.Code.getRGBInt(aMat.fRGBaSolid), NBT_INPUT, V[13], NBT_TEXTURE, "canner", NBT_ENERGY_ACCEPTED, TD.Energy.EU, NBT_RECIPEMAP, RM.Canner, NBT_INV_SIDE_IN, SBIT_U|SBIT_L, NBT_INV_SIDE_AUTO_IN, SIDE_LEFT, NBT_INV_SIDE_OUT, SBIT_R|SBIT_D, NBT_INV_SIDE_AUTO_OUT, SIDE_RIGHT, NBT_TANK_SIDE_IN, SBIT_U|SBIT_L, NBT_TANK_SIDE_AUTO_IN, SIDE_TOP, NBT_TANK_SIDE_OUT, SBIT_R|SBIT_D, NBT_TANK_SIDE_AUTO_OUT, SIDE_BOTTOM, NBT_ENERGY_ACCEPTED_SIDES, SBIT_B, NBT_USE_OUTPUT_TANK, T), "wPh", "XMX", "CPW", 'M', OP.casingMachine.dat(aMat), 'X', IL.PUMPS[13], 'C', OD_CIRCUITS[13], 'W', MT.DATA.CABLES_01[13], 'P', OP.pipeMedium.dat(MT.StainlessSteel));
		aMat = MT.DATA.Electric_T[14];   aRegistry.add("Canning Machine ("+VN[14]+")"                         , "Basic Machines"                      , 20315, 20001, aClass, aMat.mToolQuality, 16, aMachine     , UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS,   4.0F, NBT_RESISTANCE,   4.0F, NBT_COLOR, UT.Code.getRGBInt(aMat.fRGBaSolid), NBT_INPUT, V[14], NBT_TEXTURE, "canner", NBT_ENERGY_ACCEPTED, TD.Energy.EU, NBT_RECIPEMAP, RM.Canner, NBT_INV_SIDE_IN, SBIT_U|SBIT_L, NBT_INV_SIDE_AUTO_IN, SIDE_LEFT, NBT_INV_SIDE_OUT, SBIT_R|SBIT_D, NBT_INV_SIDE_AUTO_OUT, SIDE_RIGHT, NBT_TANK_SIDE_IN, SBIT_U|SBIT_L, NBT_TANK_SIDE_AUTO_IN, SIDE_TOP, NBT_TANK_SIDE_OUT, SBIT_R|SBIT_D, NBT_TANK_SIDE_AUTO_OUT, SIDE_BOTTOM, NBT_ENERGY_ACCEPTED_SIDES, SBIT_B, NBT_USE_OUTPUT_TANK, T), "wPh", "XMX", "CPW", 'M', OP.casingMachine.dat(aMat), 'X', IL.PUMPS[14], 'C', OD_CIRCUITS[14], 'W', MT.DATA.CABLES_01[14], 'P', OP.pipeLarge .dat(MT.StainlessSteel));
		aMat = MT.DATA.Electric_T[15];   aRegistry.add("Canning Machine ("+VN[15]+")"                         , "Basic Machines"                      , 20316, 20001, aClass, aMat.mToolQuality, 16, aMachine     , UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS,   4.0F, NBT_RESISTANCE,   4.0F, NBT_COLOR, UT.Code.getRGBInt(aMat.fRGBaSolid), NBT_INPUT, V[15], NBT_TEXTURE, "canner", NBT_ENERGY_ACCEPTED, TD.Energy.EU, NBT_RECIPEMAP, RM.Canner, NBT_INV_SIDE_IN, SBIT_U|SBIT_L, NBT_INV_SIDE_AUTO_IN, SIDE_LEFT, NBT_INV_SIDE_OUT, SBIT_R|SBIT_D, NBT_INV_SIDE_AUTO_OUT, SIDE_RIGHT, NBT_TANK_SIDE_IN, SBIT_U|SBIT_L, NBT_TANK_SIDE_AUTO_IN, SIDE_TOP, NBT_TANK_SIDE_OUT, SBIT_R|SBIT_D, NBT_TANK_SIDE_AUTO_OUT, SIDE_BOTTOM, NBT_ENERGY_ACCEPTED_SIDES, SBIT_B, NBT_USE_OUTPUT_TANK, T), "wPh", "XMX", "CPW", 'M', OP.casingMachine.dat(aMat), 'X', IL.PUMPS[15], 'C', OD_CIRCUITS[15], 'W', MT.DATA.CABLES_01[15], 'P', OP.pipeHuge  .dat(MT.StainlessSteel));

		aClass = MultiTileEntityBasicMachine.class;
		aMat = MT.DATA.Heat_T[0];       aRegistry.add("Roasting Oven (" + aMat.getLocal() + ")"             , "Basic Machines"                      , 20321, 20001, aClass, aMat.mToolQuality, 16, aMachine     , UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS, HARDNESS[0], NBT_RESISTANCE, HARDNESS[0], NBT_COLOR, UT.Code.getRGBInt(aMat.fRGBaSolid), NBT_INPUT, V[0], NBT_TEXTURE, "roaster", NBT_ENERGY_ACCEPTED, TD.Energy.HU, NBT_RECIPEMAP, RM.Roasting, NBT_INV_SIDE_IN, SBIT_B|SBIT_L, NBT_INV_SIDE_AUTO_IN, SIDE_LEFT, NBT_INV_SIDE_OUT, SBIT_R, NBT_INV_SIDE_AUTO_OUT, SIDE_RIGHT, NBT_TANK_SIDE_IN, SBIT_B|SBIT_L, NBT_TANK_SIDE_AUTO_IN, SIDE_BACK, NBT_TANK_SIDE_OUT, SBIT_U, NBT_TANK_SIDE_AUTO_OUT, SIDE_TOP, NBT_ENERGY_ACCEPTED_SIDES, SBIT_D), "wPh", "PMP", "BCB", 'M', OP.casingMachine.dat(aMat), 'C', OP.plateDouble.dat(ANY.Cu), 'B', Blocks.brick_block, 'P', OP.pipeMedium.dat(aMat));
		aMat = MT.DATA.Heat_T[1];       aRegistry.add("Roasting Oven (" + aMat.getLocal() + ")"             , "Basic Machines"                      , 20322, 20001, aClass, aMat.mToolQuality, 16, aMachine     , UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS, HARDNESS[1], NBT_RESISTANCE, HARDNESS[1], NBT_COLOR, UT.Code.getRGBInt(aMat.fRGBaSolid), NBT_INPUT, V[1], NBT_TEXTURE, "roaster", NBT_ENERGY_ACCEPTED, TD.Energy.HU, NBT_RECIPEMAP, RM.Roasting, NBT_INV_SIDE_IN, SBIT_B|SBIT_L, NBT_INV_SIDE_AUTO_IN, SIDE_LEFT, NBT_INV_SIDE_OUT, SBIT_R, NBT_INV_SIDE_AUTO_OUT, SIDE_RIGHT, NBT_TANK_SIDE_IN, SBIT_B|SBIT_L, NBT_TANK_SIDE_AUTO_IN, SIDE_BACK, NBT_TANK_SIDE_OUT, SBIT_U, NBT_TANK_SIDE_AUTO_OUT, SIDE_TOP, NBT_ENERGY_ACCEPTED_SIDES, SBIT_D), "wPh", "PMP", "BCB", 'M', OP.casingMachine.dat(aMat), 'C', OP.plateDouble.dat(ANY.Cu), 'B', Blocks.brick_block, 'P', OP.pipeMedium.dat(aMat));
		aMat = MT.DATA.Heat_T[2];       aRegistry.add("Roasting Oven (" + aMat.getLocal() + ")"             , "Basic Machines"                      , 20323, 20001, aClass, aMat.mToolQuality, 16, aMachine     , UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS, HARDNESS[2], NBT_RESISTANCE, HARDNESS[2], NBT_COLOR, UT.Code.getRGBInt(aMat.fRGBaSolid), NBT_INPUT, V[2], NBT_TEXTURE, "roaster", NBT_ENERGY_ACCEPTED, TD.Energy.HU, NBT_RECIPEMAP, RM.Roasting, NBT_INV_SIDE_IN, SBIT_B|SBIT_L, NBT_INV_SIDE_AUTO_IN, SIDE_LEFT, NBT_INV_SIDE_OUT, SBIT_R, NBT_INV_SIDE_AUTO_OUT, SIDE_RIGHT, NBT_TANK_SIDE_IN, SBIT_B|SBIT_L, NBT_TANK_SIDE_AUTO_IN, SIDE_BACK, NBT_TANK_SIDE_OUT, SBIT_U, NBT_TANK_SIDE_AUTO_OUT, SIDE_TOP, NBT_ENERGY_ACCEPTED_SIDES, SBIT_D), "wPh", "PMP", "BCB", 'M', OP.casingMachine.dat(aMat), 'C', OP.plateDouble.dat(ANY.Cu), 'B', Blocks.brick_block, 'P', OP.pipeMedium.dat(aMat));
		aMat = MT.DATA.Heat_T[3];       aRegistry.add("Roasting Oven (" + aMat.getLocal() + ")"             , "Basic Machines"                      , 20324, 20001, aClass, aMat.mToolQuality, 16, aMachine     , UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS, HARDNESS[3], NBT_RESISTANCE, HARDNESS[3], NBT_COLOR, UT.Code.getRGBInt(aMat.fRGBaSolid), NBT_INPUT, V[3], NBT_TEXTURE, "roaster", NBT_ENERGY_ACCEPTED, TD.Energy.HU, NBT_RECIPEMAP, RM.Roasting, NBT_INV_SIDE_IN, SBIT_B|SBIT_L, NBT_INV_SIDE_AUTO_IN, SIDE_LEFT, NBT_INV_SIDE_OUT, SBIT_R, NBT_INV_SIDE_AUTO_OUT, SIDE_RIGHT, NBT_TANK_SIDE_IN, SBIT_B|SBIT_L, NBT_TANK_SIDE_AUTO_IN, SIDE_BACK, NBT_TANK_SIDE_OUT, SBIT_U, NBT_TANK_SIDE_AUTO_OUT, SIDE_TOP, NBT_ENERGY_ACCEPTED_SIDES, SBIT_D), "wPh", "PMP", "BCB", 'M', OP.casingMachine.dat(aMat), 'C', OP.plateDouble.dat(ANY.Cu), 'B', Blocks.brick_block, 'P', OP.pipeMedium.dat(aMat));
		aMat = MT.DATA.Heat_T[4];       aRegistry.add("Roasting Oven (" + aMat.getLocal() + ")"             , "Basic Machines"                      , 20325, 20001, aClass, aMat.mToolQuality, 16, aMachine     , UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS, HARDNESS[4], NBT_RESISTANCE, HARDNESS[4], NBT_COLOR, UT.Code.getRGBInt(aMat.fRGBaSolid), NBT_INPUT, V[4], NBT_TEXTURE, "roaster", NBT_ENERGY_ACCEPTED, TD.Energy.HU, NBT_RECIPEMAP, RM.Roasting, NBT_INV_SIDE_IN, SBIT_B|SBIT_L, NBT_INV_SIDE_AUTO_IN, SIDE_LEFT, NBT_INV_SIDE_OUT, SBIT_R, NBT_INV_SIDE_AUTO_OUT, SIDE_RIGHT, NBT_TANK_SIDE_IN, SBIT_B|SBIT_L, NBT_TANK_SIDE_AUTO_IN, SIDE_BACK, NBT_TANK_SIDE_OUT, SBIT_U, NBT_TANK_SIDE_AUTO_OUT, SIDE_TOP, NBT_ENERGY_ACCEPTED_SIDES, SBIT_D), "wPh", "PMP", "BCB", 'M', OP.casingMachine.dat(aMat), 'C', OP.plateDouble.dat(ANY.Cu), 'B', Blocks.brick_block, 'P', OP.pipeMedium.dat(aMat));
		aMat = MT.DATA.Heat_T[5];       aRegistry.add("Roasting Oven (" + aMat.getLocal() + ")"             , "Basic Machines"                      , 20326, 20001, aClass, aMat.mToolQuality, 16, aMachine     , UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS, HARDNESS[5], NBT_RESISTANCE, HARDNESS[5], NBT_COLOR, UT.Code.getRGBInt(aMat.fRGBaSolid), NBT_INPUT, V[5], NBT_TEXTURE, "roaster", NBT_ENERGY_ACCEPTED, TD.Energy.HU, NBT_RECIPEMAP, RM.Roasting, NBT_INV_SIDE_IN, SBIT_B|SBIT_L, NBT_INV_SIDE_AUTO_IN, SIDE_LEFT, NBT_INV_SIDE_OUT, SBIT_R, NBT_INV_SIDE_AUTO_OUT, SIDE_RIGHT, NBT_TANK_SIDE_IN, SBIT_B|SBIT_L, NBT_TANK_SIDE_AUTO_IN, SIDE_BACK, NBT_TANK_SIDE_OUT, SBIT_U, NBT_TANK_SIDE_AUTO_OUT, SIDE_TOP, NBT_ENERGY_ACCEPTED_SIDES, SBIT_D), "wPh", "PMP", "BCB", 'M', OP.casingMachine.dat(aMat), 'C', OP.plateDouble.dat(ANY.Cu), 'B', Blocks.brick_block, 'P', OP.pipeMedium.dat(aMat));
		aMat = MT.DATA.Heat_T[6];       aRegistry.add("Roasting Oven (" + aMat.getLocal() + ")"             , "Basic Machines"                      , 20327, 20001, aClass, aMat.mToolQuality, 16, aMachine     , UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS, HARDNESS[6], NBT_RESISTANCE, HARDNESS[6], NBT_COLOR, UT.Code.getRGBInt(aMat.fRGBaSolid), NBT_INPUT, V[6], NBT_TEXTURE, "roaster", NBT_ENERGY_ACCEPTED, TD.Energy.HU, NBT_RECIPEMAP, RM.Roasting, NBT_INV_SIDE_IN, SBIT_B|SBIT_L, NBT_INV_SIDE_AUTO_IN, SIDE_LEFT, NBT_INV_SIDE_OUT, SBIT_R, NBT_INV_SIDE_AUTO_OUT, SIDE_RIGHT, NBT_TANK_SIDE_IN, SBIT_B|SBIT_L, NBT_TANK_SIDE_AUTO_IN, SIDE_BACK, NBT_TANK_SIDE_OUT, SBIT_U, NBT_TANK_SIDE_AUTO_OUT, SIDE_TOP, NBT_ENERGY_ACCEPTED_SIDES, SBIT_D), "wPh", "PMP", "BCB", 'M', OP.casingMachine.dat(aMat), 'C', OP.plateDouble.dat(ANY.Cu), 'B', Blocks.brick_block, 'P', OP.pipeMedium.dat(aMat));
		aMat = MT.DATA.Heat_T[7];       aRegistry.add("Roasting Oven (" + aMat.getLocal() + ")"             , "Basic Machines"                      , 20328, 20001, aClass, aMat.mToolQuality, 16, aMachine     , UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS, HARDNESS[7], NBT_RESISTANCE, HARDNESS[7], NBT_COLOR, UT.Code.getRGBInt(aMat.fRGBaSolid), NBT_INPUT, V[7], NBT_TEXTURE, "roaster", NBT_ENERGY_ACCEPTED, TD.Energy.HU, NBT_RECIPEMAP, RM.Roasting, NBT_INV_SIDE_IN, SBIT_B|SBIT_L, NBT_INV_SIDE_AUTO_IN, SIDE_LEFT, NBT_INV_SIDE_OUT, SBIT_R, NBT_INV_SIDE_AUTO_OUT, SIDE_RIGHT, NBT_TANK_SIDE_IN, SBIT_B|SBIT_L, NBT_TANK_SIDE_AUTO_IN, SIDE_BACK, NBT_TANK_SIDE_OUT, SBIT_U, NBT_TANK_SIDE_AUTO_OUT, SIDE_TOP, NBT_ENERGY_ACCEPTED_SIDES, SBIT_D), "wPh", "PMP", "BCB", 'M', OP.casingMachine.dat(aMat), 'C', OP.plateDouble.dat(ANY.Cu), 'B', Blocks.brick_block, 'P', OP.pipeMedium.dat(aMat));
		aMat = MT.DATA.Heat_T[8];       aRegistry.add("Roasting Oven (" + aMat.getLocal() + ")"             , "Basic Machines"                      , 20329, 20001, aClass, aMat.mToolQuality, 16, aMachine     , UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS, HARDNESS[8], NBT_RESISTANCE, HARDNESS[8], NBT_COLOR, UT.Code.getRGBInt(aMat.fRGBaSolid), NBT_INPUT, V[8], NBT_TEXTURE, "roaster", NBT_ENERGY_ACCEPTED, TD.Energy.HU, NBT_RECIPEMAP, RM.Roasting, NBT_INV_SIDE_IN, SBIT_B|SBIT_L, NBT_INV_SIDE_AUTO_IN, SIDE_LEFT, NBT_INV_SIDE_OUT, SBIT_R, NBT_INV_SIDE_AUTO_OUT, SIDE_RIGHT, NBT_TANK_SIDE_IN, SBIT_B|SBIT_L, NBT_TANK_SIDE_AUTO_IN, SIDE_BACK, NBT_TANK_SIDE_OUT, SBIT_U, NBT_TANK_SIDE_AUTO_OUT, SIDE_TOP, NBT_ENERGY_ACCEPTED_SIDES, SBIT_D), "wPh", "PMP", "BCB", 'M', OP.casingMachine.dat(aMat), 'C', OP.plateDouble.dat(ANY.Cu), 'B', Blocks.brick_block, 'P', OP.pipeMedium.dat(aMat));
		aMat = MT.DATA.Heat_T[9];       aRegistry.add("Roasting Oven (" + aMat.getLocal() + ")"             , "Basic Machines"                      , 20330, 20001, aClass, aMat.mToolQuality, 16, aMachine     , UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS, HARDNESS[9], NBT_RESISTANCE, HARDNESS[9], NBT_COLOR, UT.Code.getRGBInt(aMat.fRGBaSolid), NBT_INPUT, V[9], NBT_TEXTURE, "roaster", NBT_ENERGY_ACCEPTED, TD.Energy.HU, NBT_RECIPEMAP, RM.Roasting, NBT_INV_SIDE_IN, SBIT_B|SBIT_L, NBT_INV_SIDE_AUTO_IN, SIDE_LEFT, NBT_INV_SIDE_OUT, SBIT_R, NBT_INV_SIDE_AUTO_OUT, SIDE_RIGHT, NBT_TANK_SIDE_IN, SBIT_B|SBIT_L, NBT_TANK_SIDE_AUTO_IN, SIDE_BACK, NBT_TANK_SIDE_OUT, SBIT_U, NBT_TANK_SIDE_AUTO_OUT, SIDE_TOP, NBT_ENERGY_ACCEPTED_SIDES, SBIT_D), "wPh", "PMP", "BCB", 'M', OP.casingMachine.dat(aMat), 'C', OP.plateDouble.dat(ANY.Cu), 'B', Blocks.brick_block, 'P', OP.pipeMedium.dat(aMat));
		aMat = MT.DATA.Heat_T[10];       aRegistry.add("Roasting Oven (" + aMat.getLocal() + ")"             , "Basic Machines"                      , 20331, 20001, aClass, aMat.mToolQuality, 16, aMachine     , UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS, HARDNESS[10], NBT_RESISTANCE, HARDNESS[10], NBT_COLOR, UT.Code.getRGBInt(aMat.fRGBaSolid), NBT_INPUT, V[10], NBT_TEXTURE, "roaster", NBT_ENERGY_ACCEPTED, TD.Energy.HU, NBT_RECIPEMAP, RM.Roasting, NBT_INV_SIDE_IN, SBIT_B|SBIT_L, NBT_INV_SIDE_AUTO_IN, SIDE_LEFT, NBT_INV_SIDE_OUT, SBIT_R, NBT_INV_SIDE_AUTO_OUT, SIDE_RIGHT, NBT_TANK_SIDE_IN, SBIT_B|SBIT_L, NBT_TANK_SIDE_AUTO_IN, SIDE_BACK, NBT_TANK_SIDE_OUT, SBIT_U, NBT_TANK_SIDE_AUTO_OUT, SIDE_TOP, NBT_ENERGY_ACCEPTED_SIDES, SBIT_D), "wPh", "PMP", "BCB", 'M', OP.casingMachine.dat(aMat), 'C', OP.plateDouble.dat(ANY.Cu), 'B', Blocks.brick_block, 'P', OP.pipeMedium.dat(aMat));
		aMat = MT.DATA.Heat_T[11];       aRegistry.add("Roasting Oven (" + aMat.getLocal() + ")"             , "Basic Machines"                      , 20332, 20001, aClass, aMat.mToolQuality, 16, aMachine     , UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS, HARDNESS[11], NBT_RESISTANCE, HARDNESS[11], NBT_COLOR, UT.Code.getRGBInt(aMat.fRGBaSolid), NBT_INPUT, V[11], NBT_TEXTURE, "roaster", NBT_ENERGY_ACCEPTED, TD.Energy.HU, NBT_RECIPEMAP, RM.Roasting, NBT_INV_SIDE_IN, SBIT_B|SBIT_L, NBT_INV_SIDE_AUTO_IN, SIDE_LEFT, NBT_INV_SIDE_OUT, SBIT_R, NBT_INV_SIDE_AUTO_OUT, SIDE_RIGHT, NBT_TANK_SIDE_IN, SBIT_B|SBIT_L, NBT_TANK_SIDE_AUTO_IN, SIDE_BACK, NBT_TANK_SIDE_OUT, SBIT_U, NBT_TANK_SIDE_AUTO_OUT, SIDE_TOP, NBT_ENERGY_ACCEPTED_SIDES, SBIT_D), "wPh", "PMP", "BCB", 'M', OP.casingMachine.dat(aMat), 'C', OP.plateDouble.dat(ANY.Cu), 'B', Blocks.brick_block, 'P', OP.pipeMedium.dat(aMat));
		aMat = MT.DATA.Heat_T[12];       aRegistry.add("Roasting Oven (" + aMat.getLocal() + ")"             , "Basic Machines"                      , 20333, 20001, aClass, aMat.mToolQuality, 16, aMachine     , UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS, HARDNESS[12], NBT_RESISTANCE, HARDNESS[12], NBT_COLOR, UT.Code.getRGBInt(aMat.fRGBaSolid), NBT_INPUT, V[12], NBT_TEXTURE, "roaster", NBT_ENERGY_ACCEPTED, TD.Energy.HU, NBT_RECIPEMAP, RM.Roasting, NBT_INV_SIDE_IN, SBIT_B|SBIT_L, NBT_INV_SIDE_AUTO_IN, SIDE_LEFT, NBT_INV_SIDE_OUT, SBIT_R, NBT_INV_SIDE_AUTO_OUT, SIDE_RIGHT, NBT_TANK_SIDE_IN, SBIT_B|SBIT_L, NBT_TANK_SIDE_AUTO_IN, SIDE_BACK, NBT_TANK_SIDE_OUT, SBIT_U, NBT_TANK_SIDE_AUTO_OUT, SIDE_TOP, NBT_ENERGY_ACCEPTED_SIDES, SBIT_D), "wPh", "PMP", "BCB", 'M', OP.casingMachine.dat(aMat), 'C', OP.plateDouble.dat(ANY.Cu), 'B', Blocks.brick_block, 'P', OP.pipeMedium.dat(aMat));
		aMat = MT.DATA.Heat_T[13];       aRegistry.add("Roasting Oven (" + aMat.getLocal() + ")"             , "Basic Machines"                      , 20334, 20001, aClass, aMat.mToolQuality, 16, aMachine     , UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS, HARDNESS[13], NBT_RESISTANCE, HARDNESS[13], NBT_COLOR, UT.Code.getRGBInt(aMat.fRGBaSolid), NBT_INPUT, V[13], NBT_TEXTURE, "roaster", NBT_ENERGY_ACCEPTED, TD.Energy.HU, NBT_RECIPEMAP, RM.Roasting, NBT_INV_SIDE_IN, SBIT_B|SBIT_L, NBT_INV_SIDE_AUTO_IN, SIDE_LEFT, NBT_INV_SIDE_OUT, SBIT_R, NBT_INV_SIDE_AUTO_OUT, SIDE_RIGHT, NBT_TANK_SIDE_IN, SBIT_B|SBIT_L, NBT_TANK_SIDE_AUTO_IN, SIDE_BACK, NBT_TANK_SIDE_OUT, SBIT_U, NBT_TANK_SIDE_AUTO_OUT, SIDE_TOP, NBT_ENERGY_ACCEPTED_SIDES, SBIT_D), "wPh", "PMP", "BCB", 'M', OP.casingMachine.dat(aMat), 'C', OP.plateDouble.dat(ANY.Cu), 'B', Blocks.brick_block, 'P', OP.pipeMedium.dat(aMat));
		aMat = MT.DATA.Heat_T[14];       aRegistry.add("Roasting Oven (" + aMat.getLocal() + ")"             , "Basic Machines"                      , 20335, 20001, aClass, aMat.mToolQuality, 16, aMachine     , UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS, HARDNESS[14], NBT_RESISTANCE, HARDNESS[14], NBT_COLOR, UT.Code.getRGBInt(aMat.fRGBaSolid), NBT_INPUT, V[14], NBT_TEXTURE, "roaster", NBT_ENERGY_ACCEPTED, TD.Energy.HU, NBT_RECIPEMAP, RM.Roasting, NBT_INV_SIDE_IN, SBIT_B|SBIT_L, NBT_INV_SIDE_AUTO_IN, SIDE_LEFT, NBT_INV_SIDE_OUT, SBIT_R, NBT_INV_SIDE_AUTO_OUT, SIDE_RIGHT, NBT_TANK_SIDE_IN, SBIT_B|SBIT_L, NBT_TANK_SIDE_AUTO_IN, SIDE_BACK, NBT_TANK_SIDE_OUT, SBIT_U, NBT_TANK_SIDE_AUTO_OUT, SIDE_TOP, NBT_ENERGY_ACCEPTED_SIDES, SBIT_D), "wPh", "PMP", "BCB", 'M', OP.casingMachine.dat(aMat), 'C', OP.plateDouble.dat(ANY.Cu), 'B', Blocks.brick_block, 'P', OP.pipeMedium.dat(aMat));
		aMat = MT.DATA.Heat_T[15];       aRegistry.add("Roasting Oven (" + aMat.getLocal() + ")"             , "Basic Machines"                      , 20336, 20001, aClass, aMat.mToolQuality, 16, aMachine     , UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS, HARDNESS[15], NBT_RESISTANCE, HARDNESS[15], NBT_COLOR, UT.Code.getRGBInt(aMat.fRGBaSolid), NBT_INPUT, V[15], NBT_TEXTURE, "roaster", NBT_ENERGY_ACCEPTED, TD.Energy.HU, NBT_RECIPEMAP, RM.Roasting, NBT_INV_SIDE_IN, SBIT_B|SBIT_L, NBT_INV_SIDE_AUTO_IN, SIDE_LEFT, NBT_INV_SIDE_OUT, SBIT_R, NBT_INV_SIDE_AUTO_OUT, SIDE_RIGHT, NBT_TANK_SIDE_IN, SBIT_B|SBIT_L, NBT_TANK_SIDE_AUTO_IN, SIDE_BACK, NBT_TANK_SIDE_OUT, SBIT_U, NBT_TANK_SIDE_AUTO_OUT, SIDE_TOP, NBT_ENERGY_ACCEPTED_SIDES, SBIT_D), "wPh", "PMP", "BCB", 'M', OP.casingMachine.dat(aMat), 'C', OP.plateDouble.dat(ANY.Cu), 'B', Blocks.brick_block, 'P', OP.pipeMedium.dat(aMat));

		aClass = MultiTileEntityBasicMachine.class;
		aMat = MT.DATA.Heat_T[0];    aRegistry.add("Mixer (" + aMat.getLocal() + ")"                     , "Basic Machines"                      , 20341, 20001, aClass, aMat.mToolQuality, 16, aMachine     , UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS, HARDNESS[0], NBT_RESISTANCE, HARDNESS[0], NBT_COLOR, UT.Code.getRGBInt(aMat.fRGBaSolid), NBT_INPUT, V[0], NBT_TEXTURE, "mixer", NBT_ENERGY_ACCEPTED, TD.Energy.RU, NBT_RECIPEMAP, RM.Mixer, NBT_INV_SIDE_IN, SBIT_L|SBIT_U, NBT_INV_SIDE_AUTO_IN, SIDE_LEFT, NBT_INV_SIDE_OUT, SBIT_R|SBIT_B, NBT_INV_SIDE_AUTO_OUT, SIDE_RIGHT, NBT_TANK_SIDE_IN, SBIT_L|SBIT_U, NBT_TANK_SIDE_AUTO_IN, SIDE_TOP, NBT_TANK_SIDE_OUT, SBIT_R|SBIT_B, NBT_TANK_SIDE_AUTO_OUT, SIDE_BACK, NBT_ENERGY_ACCEPTED_SIDES, SBIT_D, NBT_PARALLEL, 1, NBT_PARALLEL_DURATION, T), "PMP", "PRP", "hSw", 'M', OP.casingMachine.dat(aMat), 'S', OP.stick.dat(aMat), 'R', OP.rotor.dat(MT.StainlessSteel), 'P', OP.plate.dat(MT.StainlessSteel));
		aMat = MT.DATA.Heat_T[1];    aRegistry.add("Mixer (" + aMat.getLocal() + ")"                     , "Basic Machines"                      , 20342, 20001, aClass, aMat.mToolQuality, 16, aMachine     , UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS, HARDNESS[1], NBT_RESISTANCE, HARDNESS[1], NBT_COLOR, UT.Code.getRGBInt(aMat.fRGBaSolid), NBT_INPUT, V[1], NBT_TEXTURE, "mixer", NBT_ENERGY_ACCEPTED, TD.Energy.RU, NBT_RECIPEMAP, RM.Mixer, NBT_INV_SIDE_IN, SBIT_L|SBIT_U, NBT_INV_SIDE_AUTO_IN, SIDE_LEFT, NBT_INV_SIDE_OUT, SBIT_R|SBIT_B, NBT_INV_SIDE_AUTO_OUT, SIDE_RIGHT, NBT_TANK_SIDE_IN, SBIT_L|SBIT_U, NBT_TANK_SIDE_AUTO_IN, SIDE_TOP, NBT_TANK_SIDE_OUT, SBIT_R|SBIT_B, NBT_TANK_SIDE_AUTO_OUT, SIDE_BACK, NBT_ENERGY_ACCEPTED_SIDES, SBIT_D, NBT_PARALLEL, 1, NBT_PARALLEL_DURATION, T), "PMP", "PRP", "hSw", 'M', OP.casingMachine.dat(aMat), 'S', OP.stick.dat(aMat), 'R', OP.rotor.dat(MT.StainlessSteel), 'P', OP.plate.dat(MT.StainlessSteel));
		aMat = MT.DATA.Heat_T[2];    aRegistry.add("Mixer (" + aMat.getLocal() + ")"                     , "Basic Machines"                      , 20343, 20001, aClass, aMat.mToolQuality, 16, aMachine     , UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS, HARDNESS[2], NBT_RESISTANCE, HARDNESS[2], NBT_COLOR, UT.Code.getRGBInt(aMat.fRGBaSolid), NBT_INPUT, V[2], NBT_TEXTURE, "mixer", NBT_ENERGY_ACCEPTED, TD.Energy.RU, NBT_RECIPEMAP, RM.Mixer, NBT_INV_SIDE_IN, SBIT_L|SBIT_U, NBT_INV_SIDE_AUTO_IN, SIDE_LEFT, NBT_INV_SIDE_OUT, SBIT_R|SBIT_B, NBT_INV_SIDE_AUTO_OUT, SIDE_RIGHT, NBT_TANK_SIDE_IN, SBIT_L|SBIT_U, NBT_TANK_SIDE_AUTO_IN, SIDE_TOP, NBT_TANK_SIDE_OUT, SBIT_R|SBIT_B, NBT_TANK_SIDE_AUTO_OUT, SIDE_BACK, NBT_ENERGY_ACCEPTED_SIDES, SBIT_D, NBT_PARALLEL, 2, NBT_PARALLEL_DURATION, T), "PMP", "PRP", "hSw", 'M', OP.casingMachine.dat(aMat), 'S', OP.stick.dat(aMat), 'R', OP.rotor.dat(MT.StainlessSteel), 'P', OP.plateDouble.dat(MT.StainlessSteel));
		aMat = MT.DATA.Heat_T[3];    aRegistry.add("Mixer (" + aMat.getLocal() + ")"                     , "Basic Machines"                      , 20344, 20001, aClass, aMat.mToolQuality, 16, aMachine     , UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS, HARDNESS[3], NBT_RESISTANCE, HARDNESS[3], NBT_COLOR, UT.Code.getRGBInt(aMat.fRGBaSolid), NBT_INPUT, V[3], NBT_TEXTURE, "mixer", NBT_ENERGY_ACCEPTED, TD.Energy.RU, NBT_RECIPEMAP, RM.Mixer, NBT_INV_SIDE_IN, SBIT_L|SBIT_U, NBT_INV_SIDE_AUTO_IN, SIDE_LEFT, NBT_INV_SIDE_OUT, SBIT_R|SBIT_B, NBT_INV_SIDE_AUTO_OUT, SIDE_RIGHT, NBT_TANK_SIDE_IN, SBIT_L|SBIT_U, NBT_TANK_SIDE_AUTO_IN, SIDE_TOP, NBT_TANK_SIDE_OUT, SBIT_R|SBIT_B, NBT_TANK_SIDE_AUTO_OUT, SIDE_BACK, NBT_ENERGY_ACCEPTED_SIDES, SBIT_D, NBT_PARALLEL,4, NBT_PARALLEL_DURATION, T), "PMP", "PRP", "hSw", 'M', OP.casingMachine.dat(aMat), 'S', OP.stick.dat(aMat), 'R', OP.rotor.dat(MT.StainlessSteel), 'P', OP.plateTriple.dat(MT.StainlessSteel));
		aMat = MT.DATA.Heat_T[4];    aRegistry.add("Mixer (" + aMat.getLocal() + ")"                     , "Basic Machines"                      , 20345, 20001, aClass, aMat.mToolQuality, 16, aMachine     , UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS, HARDNESS[4], NBT_RESISTANCE, HARDNESS[4], NBT_COLOR, UT.Code.getRGBInt(aMat.fRGBaSolid), NBT_INPUT, V[4], NBT_TEXTURE, "mixer", NBT_ENERGY_ACCEPTED, TD.Energy.RU, NBT_RECIPEMAP, RM.Mixer, NBT_INV_SIDE_IN, SBIT_L|SBIT_U, NBT_INV_SIDE_AUTO_IN, SIDE_LEFT, NBT_INV_SIDE_OUT, SBIT_R|SBIT_B, NBT_INV_SIDE_AUTO_OUT, SIDE_RIGHT, NBT_TANK_SIDE_IN, SBIT_L|SBIT_U, NBT_TANK_SIDE_AUTO_IN, SIDE_TOP, NBT_TANK_SIDE_OUT, SBIT_R|SBIT_B, NBT_TANK_SIDE_AUTO_OUT, SIDE_BACK, NBT_ENERGY_ACCEPTED_SIDES, SBIT_D, NBT_PARALLEL,8, NBT_PARALLEL_DURATION, T), "PMP", "PRP", "hSw", 'M', OP.casingMachine.dat(aMat), 'S', OP.stick.dat(aMat), 'R', OP.rotor.dat(MT.StainlessSteel), 'P', OP.plateQuadruple.dat(MT.StainlessSteel));
		aMat = MT.DATA.Heat_T[5];    aRegistry.add("Mixer (" + aMat.getLocal() + ")"                     , "Basic Machines"                      , 20346, 20001, aClass, aMat.mToolQuality, 16, aMachine     , UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS, HARDNESS[5], NBT_RESISTANCE, HARDNESS[5], NBT_COLOR, UT.Code.getRGBInt(aMat.fRGBaSolid), NBT_INPUT, V[5], NBT_TEXTURE, "mixer", NBT_ENERGY_ACCEPTED, TD.Energy.RU, NBT_RECIPEMAP, RM.Mixer, NBT_INV_SIDE_IN, SBIT_L|SBIT_U, NBT_INV_SIDE_AUTO_IN, SIDE_LEFT, NBT_INV_SIDE_OUT, SBIT_R|SBIT_B, NBT_INV_SIDE_AUTO_OUT, SIDE_RIGHT, NBT_TANK_SIDE_IN, SBIT_L|SBIT_U, NBT_TANK_SIDE_AUTO_IN, SIDE_TOP, NBT_TANK_SIDE_OUT, SBIT_R|SBIT_B, NBT_TANK_SIDE_AUTO_OUT, SIDE_BACK, NBT_ENERGY_ACCEPTED_SIDES, SBIT_D, NBT_PARALLEL, 16, NBT_PARALLEL_DURATION, T), "PMP", "PRP", "hSw", 'M', OP.casingMachine.dat(aMat), 'S', OP.stick.dat(aMat), 'R', OP.rotor.dat(MT.StainlessSteel), 'P', OP.plate.dat(MT.StainlessSteel));
		aMat = MT.DATA.Heat_T[6];    aRegistry.add("Mixer (" + aMat.getLocal() + ")"                     , "Basic Machines"                      , 20347, 20001, aClass, aMat.mToolQuality, 16, aMachine     , UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS, HARDNESS[6], NBT_RESISTANCE, HARDNESS[6], NBT_COLOR, UT.Code.getRGBInt(aMat.fRGBaSolid), NBT_INPUT, V[6], NBT_TEXTURE, "mixer", NBT_ENERGY_ACCEPTED, TD.Energy.RU, NBT_RECIPEMAP, RM.Mixer, NBT_INV_SIDE_IN, SBIT_L|SBIT_U, NBT_INV_SIDE_AUTO_IN, SIDE_LEFT, NBT_INV_SIDE_OUT, SBIT_R|SBIT_B, NBT_INV_SIDE_AUTO_OUT, SIDE_RIGHT, NBT_TANK_SIDE_IN, SBIT_L|SBIT_U, NBT_TANK_SIDE_AUTO_IN, SIDE_TOP, NBT_TANK_SIDE_OUT, SBIT_R|SBIT_B, NBT_TANK_SIDE_AUTO_OUT, SIDE_BACK, NBT_ENERGY_ACCEPTED_SIDES, SBIT_D, NBT_PARALLEL, 32, NBT_PARALLEL_DURATION, T), "PMP", "PRP", "hSw", 'M', OP.casingMachine.dat(aMat), 'S', OP.stick.dat(aMat), 'R', OP.rotor.dat(MT.StainlessSteel), 'P', OP.plate.dat(MT.StainlessSteel));
		aMat = MT.DATA.Heat_T[7];    aRegistry.add("Mixer (" + aMat.getLocal() + ")"                     , "Basic Machines"                      , 20348, 20001, aClass, aMat.mToolQuality, 16, aMachine     , UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS, HARDNESS[7], NBT_RESISTANCE, HARDNESS[7], NBT_COLOR, UT.Code.getRGBInt(aMat.fRGBaSolid), NBT_INPUT, V[7], NBT_TEXTURE, "mixer", NBT_ENERGY_ACCEPTED, TD.Energy.RU, NBT_RECIPEMAP, RM.Mixer, NBT_INV_SIDE_IN, SBIT_L|SBIT_U, NBT_INV_SIDE_AUTO_IN, SIDE_LEFT, NBT_INV_SIDE_OUT, SBIT_R|SBIT_B, NBT_INV_SIDE_AUTO_OUT, SIDE_RIGHT, NBT_TANK_SIDE_IN, SBIT_L|SBIT_U, NBT_TANK_SIDE_AUTO_IN, SIDE_TOP, NBT_TANK_SIDE_OUT, SBIT_R|SBIT_B, NBT_TANK_SIDE_AUTO_OUT, SIDE_BACK, NBT_ENERGY_ACCEPTED_SIDES, SBIT_D, NBT_PARALLEL, 64, NBT_PARALLEL_DURATION, T), "PMP", "PRP", "hSw", 'M', OP.casingMachine.dat(aMat), 'S', OP.stick.dat(aMat), 'R', OP.rotor.dat(MT.StainlessSteel), 'P', OP.plateDouble.dat(MT.StainlessSteel));
		aMat = MT.DATA.Heat_T[8];    aRegistry.add("Mixer (" + aMat.getLocal() + ")"                     , "Basic Machines"                      , 20349, 20001, aClass, aMat.mToolQuality, 16, aMachine     , UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS, HARDNESS[8], NBT_RESISTANCE, HARDNESS[8], NBT_COLOR, UT.Code.getRGBInt(aMat.fRGBaSolid), NBT_INPUT, V[8], NBT_TEXTURE, "mixer", NBT_ENERGY_ACCEPTED, TD.Energy.RU, NBT_RECIPEMAP, RM.Mixer, NBT_INV_SIDE_IN, SBIT_L|SBIT_U, NBT_INV_SIDE_AUTO_IN, SIDE_LEFT, NBT_INV_SIDE_OUT, SBIT_R|SBIT_B, NBT_INV_SIDE_AUTO_OUT, SIDE_RIGHT, NBT_TANK_SIDE_IN, SBIT_L|SBIT_U, NBT_TANK_SIDE_AUTO_IN, SIDE_TOP, NBT_TANK_SIDE_OUT, SBIT_R|SBIT_B, NBT_TANK_SIDE_AUTO_OUT, SIDE_BACK, NBT_ENERGY_ACCEPTED_SIDES, SBIT_D, NBT_PARALLEL,64, NBT_PARALLEL_DURATION, T), "PMP", "PRP", "hSw", 'M', OP.casingMachine.dat(aMat), 'S', OP.stick.dat(aMat), 'R', OP.rotor.dat(MT.StainlessSteel), 'P', OP.plateTriple.dat(MT.StainlessSteel));
		aMat = MT.DATA.Heat_T[9];    aRegistry.add("Mixer (" + aMat.getLocal() + ")"                     , "Basic Machines"                      , 20350, 20001, aClass, aMat.mToolQuality, 16, aMachine     , UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS, HARDNESS[9], NBT_RESISTANCE, HARDNESS[9], NBT_COLOR, UT.Code.getRGBInt(aMat.fRGBaSolid), NBT_INPUT, V[9], NBT_TEXTURE, "mixer", NBT_ENERGY_ACCEPTED, TD.Energy.RU, NBT_RECIPEMAP, RM.Mixer, NBT_INV_SIDE_IN, SBIT_L|SBIT_U, NBT_INV_SIDE_AUTO_IN, SIDE_LEFT, NBT_INV_SIDE_OUT, SBIT_R|SBIT_B, NBT_INV_SIDE_AUTO_OUT, SIDE_RIGHT, NBT_TANK_SIDE_IN, SBIT_L|SBIT_U, NBT_TANK_SIDE_AUTO_IN, SIDE_TOP, NBT_TANK_SIDE_OUT, SBIT_R|SBIT_B, NBT_TANK_SIDE_AUTO_OUT, SIDE_BACK, NBT_ENERGY_ACCEPTED_SIDES, SBIT_D, NBT_PARALLEL,64, NBT_PARALLEL_DURATION, T), "PMP", "PRP", "hSw", 'M', OP.casingMachine.dat(aMat), 'S', OP.stick.dat(aMat), 'R', OP.rotor.dat(MT.StainlessSteel), 'P', OP.plateQuadruple.dat(MT.StainlessSteel));
		aMat = MT.DATA.Heat_T[10];    aRegistry.add("Mixer (" + aMat.getLocal() + ")"                     , "Basic Machines"                      , 20351, 20001, aClass, aMat.mToolQuality, 16, aMachine     , UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS, HARDNESS[10], NBT_RESISTANCE, HARDNESS[10], NBT_COLOR, UT.Code.getRGBInt(aMat.fRGBaSolid), NBT_INPUT, V[10], NBT_TEXTURE, "mixer", NBT_ENERGY_ACCEPTED, TD.Energy.RU, NBT_RECIPEMAP, RM.Mixer, NBT_INV_SIDE_IN, SBIT_L|SBIT_U, NBT_INV_SIDE_AUTO_IN, SIDE_LEFT, NBT_INV_SIDE_OUT, SBIT_R|SBIT_B, NBT_INV_SIDE_AUTO_OUT, SIDE_RIGHT, NBT_TANK_SIDE_IN, SBIT_L|SBIT_U, NBT_TANK_SIDE_AUTO_IN, SIDE_TOP, NBT_TANK_SIDE_OUT, SBIT_R|SBIT_B, NBT_TANK_SIDE_AUTO_OUT, SIDE_BACK, NBT_ENERGY_ACCEPTED_SIDES, SBIT_D, NBT_PARALLEL, 64, NBT_PARALLEL_DURATION, T), "PMP", "PRP", "hSw", 'M', OP.casingMachine.dat(aMat), 'S', OP.stick.dat(aMat), 'R', OP.rotor.dat(MT.StainlessSteel), 'P', OP.plate.dat(MT.StainlessSteel));
		aMat = MT.DATA.Heat_T[11];    aRegistry.add("Mixer (" + aMat.getLocal() + ")"                     , "Basic Machines"                      , 20352, 20001, aClass, aMat.mToolQuality, 16, aMachine     , UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS, HARDNESS[11], NBT_RESISTANCE, HARDNESS[11], NBT_COLOR, UT.Code.getRGBInt(aMat.fRGBaSolid), NBT_INPUT, V[11], NBT_TEXTURE, "mixer", NBT_ENERGY_ACCEPTED, TD.Energy.RU, NBT_RECIPEMAP, RM.Mixer, NBT_INV_SIDE_IN, SBIT_L|SBIT_U, NBT_INV_SIDE_AUTO_IN, SIDE_LEFT, NBT_INV_SIDE_OUT, SBIT_R|SBIT_B, NBT_INV_SIDE_AUTO_OUT, SIDE_RIGHT, NBT_TANK_SIDE_IN, SBIT_L|SBIT_U, NBT_TANK_SIDE_AUTO_IN, SIDE_TOP, NBT_TANK_SIDE_OUT, SBIT_R|SBIT_B, NBT_TANK_SIDE_AUTO_OUT, SIDE_BACK, NBT_ENERGY_ACCEPTED_SIDES, SBIT_D, NBT_PARALLEL, 64, NBT_PARALLEL_DURATION, T), "PMP", "PRP", "hSw", 'M', OP.casingMachine.dat(aMat), 'S', OP.stick.dat(aMat), 'R', OP.rotor.dat(MT.StainlessSteel), 'P', OP.plate.dat(MT.StainlessSteel));
		aMat = MT.DATA.Heat_T[12];    aRegistry.add("Mixer (" + aMat.getLocal() + ")"                     , "Basic Machines"                      , 20353, 20001, aClass, aMat.mToolQuality, 16, aMachine     , UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS, HARDNESS[12], NBT_RESISTANCE, HARDNESS[12], NBT_COLOR, UT.Code.getRGBInt(aMat.fRGBaSolid), NBT_INPUT, V[12], NBT_TEXTURE, "mixer", NBT_ENERGY_ACCEPTED, TD.Energy.RU, NBT_RECIPEMAP, RM.Mixer, NBT_INV_SIDE_IN, SBIT_L|SBIT_U, NBT_INV_SIDE_AUTO_IN, SIDE_LEFT, NBT_INV_SIDE_OUT, SBIT_R|SBIT_B, NBT_INV_SIDE_AUTO_OUT, SIDE_RIGHT, NBT_TANK_SIDE_IN, SBIT_L|SBIT_U, NBT_TANK_SIDE_AUTO_IN, SIDE_TOP, NBT_TANK_SIDE_OUT, SBIT_R|SBIT_B, NBT_TANK_SIDE_AUTO_OUT, SIDE_BACK, NBT_ENERGY_ACCEPTED_SIDES, SBIT_D, NBT_PARALLEL, 64, NBT_PARALLEL_DURATION, T), "PMP", "PRP", "hSw", 'M', OP.casingMachine.dat(aMat), 'S', OP.stick.dat(aMat), 'R', OP.rotor.dat(MT.StainlessSteel), 'P', OP.plateDouble.dat(MT.StainlessSteel));
		aMat = MT.DATA.Heat_T[13];    aRegistry.add("Mixer (" + aMat.getLocal() + ")"                     , "Basic Machines"                      , 20354, 20001, aClass, aMat.mToolQuality, 16, aMachine     , UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS, HARDNESS[13], NBT_RESISTANCE, HARDNESS[13], NBT_COLOR, UT.Code.getRGBInt(aMat.fRGBaSolid), NBT_INPUT, V[13], NBT_TEXTURE, "mixer", NBT_ENERGY_ACCEPTED, TD.Energy.RU, NBT_RECIPEMAP, RM.Mixer, NBT_INV_SIDE_IN, SBIT_L|SBIT_U, NBT_INV_SIDE_AUTO_IN, SIDE_LEFT, NBT_INV_SIDE_OUT, SBIT_R|SBIT_B, NBT_INV_SIDE_AUTO_OUT, SIDE_RIGHT, NBT_TANK_SIDE_IN, SBIT_L|SBIT_U, NBT_TANK_SIDE_AUTO_IN, SIDE_TOP, NBT_TANK_SIDE_OUT, SBIT_R|SBIT_B, NBT_TANK_SIDE_AUTO_OUT, SIDE_BACK, NBT_ENERGY_ACCEPTED_SIDES, SBIT_D, NBT_PARALLEL,64, NBT_PARALLEL_DURATION, T), "PMP", "PRP", "hSw", 'M', OP.casingMachine.dat(aMat), 'S', OP.stick.dat(aMat), 'R', OP.rotor.dat(MT.StainlessSteel), 'P', OP.plateTriple.dat(MT.StainlessSteel));
		aMat = MT.DATA.Heat_T[14];    aRegistry.add("Mixer (" + aMat.getLocal() + ")"                     , "Basic Machines"                      , 20355, 20001, aClass, aMat.mToolQuality, 16, aMachine     , UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS, HARDNESS[14], NBT_RESISTANCE, HARDNESS[14], NBT_COLOR, UT.Code.getRGBInt(aMat.fRGBaSolid), NBT_INPUT, V[14], NBT_TEXTURE, "mixer", NBT_ENERGY_ACCEPTED, TD.Energy.RU, NBT_RECIPEMAP, RM.Mixer, NBT_INV_SIDE_IN, SBIT_L|SBIT_U, NBT_INV_SIDE_AUTO_IN, SIDE_LEFT, NBT_INV_SIDE_OUT, SBIT_R|SBIT_B, NBT_INV_SIDE_AUTO_OUT, SIDE_RIGHT, NBT_TANK_SIDE_IN, SBIT_L|SBIT_U, NBT_TANK_SIDE_AUTO_IN, SIDE_TOP, NBT_TANK_SIDE_OUT, SBIT_R|SBIT_B, NBT_TANK_SIDE_AUTO_OUT, SIDE_BACK, NBT_ENERGY_ACCEPTED_SIDES, SBIT_D, NBT_PARALLEL,64, NBT_PARALLEL_DURATION, T), "PMP", "PRP", "hSw", 'M', OP.casingMachine.dat(aMat), 'S', OP.stick.dat(aMat), 'R', OP.rotor.dat(MT.StainlessSteel), 'P', OP.plateQuadruple.dat(MT.StainlessSteel));
		aMat = MT.DATA.Heat_T[15];    aRegistry.add("Mixer (" + aMat.getLocal() + ")"                     , "Basic Machines"                      , 20356, 20001, aClass, aMat.mToolQuality, 16, aMachine     , UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS, HARDNESS[15], NBT_RESISTANCE, HARDNESS[15], NBT_COLOR, UT.Code.getRGBInt(aMat.fRGBaSolid), NBT_INPUT, V[15], NBT_TEXTURE, "mixer", NBT_ENERGY_ACCEPTED, TD.Energy.RU, NBT_RECIPEMAP, RM.Mixer, NBT_INV_SIDE_IN, SBIT_L|SBIT_U, NBT_INV_SIDE_AUTO_IN, SIDE_LEFT, NBT_INV_SIDE_OUT, SBIT_R|SBIT_B, NBT_INV_SIDE_AUTO_OUT, SIDE_RIGHT, NBT_TANK_SIDE_IN, SBIT_L|SBIT_U, NBT_TANK_SIDE_AUTO_IN, SIDE_TOP, NBT_TANK_SIDE_OUT, SBIT_R|SBIT_B, NBT_TANK_SIDE_AUTO_OUT, SIDE_BACK, NBT_ENERGY_ACCEPTED_SIDES, SBIT_D, NBT_PARALLEL, 64, NBT_PARALLEL_DURATION, T), "PMP", "PRP", "hSw", 'M', OP.casingMachine.dat(aMat), 'S', OP.stick.dat(aMat), 'R', OP.rotor.dat(MT.StainlessSteel), 'P', OP.plate.dat(MT.StainlessSteel));

		aClass = MultiTileEntityBasicMachine.class;
		aMat = MT.DATA.Heat_T[0];       aRegistry.add("Distillery (" + aMat.getLocal() + ")"                , "Basic Machines"                      , 20361, 20001, aClass, aMat.mToolQuality, 16, aMachine     , UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS, HARDNESS[0], NBT_RESISTANCE, HARDNESS[0], NBT_COLOR, UT.Code.getRGBInt(aMat.fRGBaSolid), NBT_INPUT, V[0], NBT_TEXTURE, "distillery", NBT_ENERGY_ACCEPTED, TD.Energy.HU, NBT_RECIPEMAP, RM.Distillery, NBT_INV_SIDE_IN, SBIT_U|SBIT_L, NBT_INV_SIDE_AUTO_IN, SIDE_LEFT, NBT_INV_SIDE_OUT, SBIT_R, NBT_INV_SIDE_AUTO_OUT, SIDE_RIGHT, NBT_TANK_SIDE_IN, SBIT_U|SBIT_L, NBT_TANK_SIDE_AUTO_IN, SIDE_TOP, NBT_TANK_SIDE_OUT, SBIT_B, NBT_TANK_SIDE_AUTO_OUT, SIDE_BACK, NBT_ENERGY_ACCEPTED_SIDES, SBIT_D, NBT_CHEAP_OVERCLOCKING, T, NBT_PARALLEL, 1, NBT_PARALLEL_DURATION, T), "GPG", "SMS", "hCw", 'M', OP.casingMachine.dat(aMat), 'S', OP.stick.dat(MT.Blaze), 'C', OP.plateDouble.dat(ANY.Cu), 'G', Blocks.glass, 'P', OP.pipeTiny  .dat(MT.StainlessSteel));
		aMat = MT.DATA.Heat_T[1];       aRegistry.add("Distillery (" + aMat.getLocal() + ")"                , "Basic Machines"                      , 20362, 20001, aClass, aMat.mToolQuality, 16, aMachine     , UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS, HARDNESS[1], NBT_RESISTANCE, HARDNESS[1], NBT_COLOR, UT.Code.getRGBInt(aMat.fRGBaSolid), NBT_INPUT, V[1], NBT_TEXTURE, "distillery", NBT_ENERGY_ACCEPTED, TD.Energy.HU, NBT_RECIPEMAP, RM.Distillery, NBT_INV_SIDE_IN, SBIT_U|SBIT_L, NBT_INV_SIDE_AUTO_IN, SIDE_LEFT, NBT_INV_SIDE_OUT, SBIT_R, NBT_INV_SIDE_AUTO_OUT, SIDE_RIGHT, NBT_TANK_SIDE_IN, SBIT_U|SBIT_L, NBT_TANK_SIDE_AUTO_IN, SIDE_TOP, NBT_TANK_SIDE_OUT, SBIT_B, NBT_TANK_SIDE_AUTO_OUT, SIDE_BACK, NBT_ENERGY_ACCEPTED_SIDES, SBIT_D, NBT_CHEAP_OVERCLOCKING, T, NBT_PARALLEL, 1, NBT_PARALLEL_DURATION, T), "GPG", "SMS", "hCw", 'M', OP.casingMachine.dat(aMat), 'S', OP.stick.dat(MT.Blaze), 'C', OP.plateDouble.dat(ANY.Cu), 'G', Blocks.glass, 'P', OP.pipeTiny  .dat(MT.StainlessSteel));
		aMat = MT.DATA.Heat_T[2];       aRegistry.add("Distillery (" + aMat.getLocal() + ")"                , "Basic Machines"                      , 20363, 20001, aClass, aMat.mToolQuality, 16, aMachine     , UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS, HARDNESS[2], NBT_RESISTANCE, HARDNESS[2], NBT_COLOR, UT.Code.getRGBInt(aMat.fRGBaSolid), NBT_INPUT, V[2], NBT_TEXTURE, "distillery", NBT_ENERGY_ACCEPTED, TD.Energy.HU, NBT_RECIPEMAP, RM.Distillery, NBT_INV_SIDE_IN, SBIT_U|SBIT_L, NBT_INV_SIDE_AUTO_IN, SIDE_LEFT, NBT_INV_SIDE_OUT, SBIT_R, NBT_INV_SIDE_AUTO_OUT, SIDE_RIGHT, NBT_TANK_SIDE_IN, SBIT_U|SBIT_L, NBT_TANK_SIDE_AUTO_IN, SIDE_TOP, NBT_TANK_SIDE_OUT, SBIT_B, NBT_TANK_SIDE_AUTO_OUT, SIDE_BACK, NBT_ENERGY_ACCEPTED_SIDES, SBIT_D, NBT_CHEAP_OVERCLOCKING, T, NBT_PARALLEL, 2, NBT_PARALLEL_DURATION, T), "GPG", "SMS", "hCw", 'M', OP.casingMachine.dat(aMat), 'S', OP.stick.dat(MT.Blaze), 'C', OP.plateDouble.dat(ANY.Cu), 'G', Blocks.glass, 'P', OP.pipeSmall .dat(MT.StainlessSteel));
		aMat = MT.DATA.Heat_T[3];       aRegistry.add("Distillery (" + aMat.getLocal() + ")"                , "Basic Machines"                      , 20364, 20001, aClass, aMat.mToolQuality, 16, aMachine     , UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS, HARDNESS[3], NBT_RESISTANCE, HARDNESS[3], NBT_COLOR, UT.Code.getRGBInt(aMat.fRGBaSolid), NBT_INPUT, V[3], NBT_TEXTURE, "distillery", NBT_ENERGY_ACCEPTED, TD.Energy.HU, NBT_RECIPEMAP, RM.Distillery, NBT_INV_SIDE_IN, SBIT_U|SBIT_L, NBT_INV_SIDE_AUTO_IN, SIDE_LEFT, NBT_INV_SIDE_OUT, SBIT_R, NBT_INV_SIDE_AUTO_OUT, SIDE_RIGHT, NBT_TANK_SIDE_IN, SBIT_U|SBIT_L, NBT_TANK_SIDE_AUTO_IN, SIDE_TOP, NBT_TANK_SIDE_OUT, SBIT_B, NBT_TANK_SIDE_AUTO_OUT, SIDE_BACK, NBT_ENERGY_ACCEPTED_SIDES, SBIT_D, NBT_CHEAP_OVERCLOCKING, T, NBT_PARALLEL, 4, NBT_PARALLEL_DURATION, T), "GPG", "SMS", "hCw", 'M', OP.casingMachine.dat(aMat), 'S', OP.stick.dat(MT.Blaze), 'C', OP.plateDouble.dat(ANY.Cu), 'G', Blocks.glass, 'P', OP.pipeMedium.dat(MT.StainlessSteel));
		aMat = MT.DATA.Heat_T[4];       aRegistry.add("Distillery (" + aMat.getLocal() + ")"                , "Basic Machines"                      , 20365, 20001, aClass, aMat.mToolQuality, 16, aMachine     , UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS, HARDNESS[4], NBT_RESISTANCE, HARDNESS[4], NBT_COLOR, UT.Code.getRGBInt(aMat.fRGBaSolid), NBT_INPUT, V[4], NBT_TEXTURE, "distillery", NBT_ENERGY_ACCEPTED, TD.Energy.HU, NBT_RECIPEMAP, RM.Distillery, NBT_INV_SIDE_IN, SBIT_U|SBIT_L, NBT_INV_SIDE_AUTO_IN, SIDE_LEFT, NBT_INV_SIDE_OUT, SBIT_R, NBT_INV_SIDE_AUTO_OUT, SIDE_RIGHT, NBT_TANK_SIDE_IN, SBIT_U|SBIT_L, NBT_TANK_SIDE_AUTO_IN, SIDE_TOP, NBT_TANK_SIDE_OUT, SBIT_B, NBT_TANK_SIDE_AUTO_OUT, SIDE_BACK, NBT_ENERGY_ACCEPTED_SIDES, SBIT_D, NBT_CHEAP_OVERCLOCKING, T, NBT_PARALLEL, 8, NBT_PARALLEL_DURATION, T), "GPG", "SMS", "hCw", 'M', OP.casingMachine.dat(aMat), 'S', OP.stick.dat(MT.Blaze), 'C', OP.plateDouble.dat(ANY.Cu), 'G', Blocks.glass, 'P', OP.pipeLarge .dat(MT.StainlessSteel));
		aMat = MT.DATA.Heat_T[5];       aRegistry.add("Distillery (" + aMat.getLocal() + ")"                , "Basic Machines"                      , 20366, 20001, aClass, aMat.mToolQuality, 16, aMachine     , UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS, HARDNESS[5], NBT_RESISTANCE, HARDNESS[5], NBT_COLOR, UT.Code.getRGBInt(aMat.fRGBaSolid), NBT_INPUT, V[5], NBT_TEXTURE, "distillery", NBT_ENERGY_ACCEPTED, TD.Energy.HU, NBT_RECIPEMAP, RM.Distillery, NBT_INV_SIDE_IN, SBIT_U|SBIT_L, NBT_INV_SIDE_AUTO_IN, SIDE_LEFT, NBT_INV_SIDE_OUT, SBIT_R, NBT_INV_SIDE_AUTO_OUT, SIDE_RIGHT, NBT_TANK_SIDE_IN, SBIT_U|SBIT_L, NBT_TANK_SIDE_AUTO_IN, SIDE_TOP, NBT_TANK_SIDE_OUT, SBIT_B, NBT_TANK_SIDE_AUTO_OUT, SIDE_BACK, NBT_ENERGY_ACCEPTED_SIDES, SBIT_D, NBT_CHEAP_OVERCLOCKING, T, NBT_PARALLEL, 16, NBT_PARALLEL_DURATION, T), "GPG", "SMS", "hCw", 'M', OP.casingMachine.dat(aMat), 'S', OP.stick.dat(MT.Blaze), 'C', OP.plateDouble.dat(ANY.Cu), 'G', Blocks.glass, 'P', OP.pipeTiny  .dat(MT.StainlessSteel));
		aMat = MT.DATA.Heat_T[6];       aRegistry.add("Distillery (" + aMat.getLocal() + ")"                , "Basic Machines"                      , 20367, 20001, aClass, aMat.mToolQuality, 16, aMachine     , UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS, HARDNESS[6], NBT_RESISTANCE, HARDNESS[6], NBT_COLOR, UT.Code.getRGBInt(aMat.fRGBaSolid), NBT_INPUT, V[6], NBT_TEXTURE, "distillery", NBT_ENERGY_ACCEPTED, TD.Energy.HU, NBT_RECIPEMAP, RM.Distillery, NBT_INV_SIDE_IN, SBIT_U|SBIT_L, NBT_INV_SIDE_AUTO_IN, SIDE_LEFT, NBT_INV_SIDE_OUT, SBIT_R, NBT_INV_SIDE_AUTO_OUT, SIDE_RIGHT, NBT_TANK_SIDE_IN, SBIT_U|SBIT_L, NBT_TANK_SIDE_AUTO_IN, SIDE_TOP, NBT_TANK_SIDE_OUT, SBIT_B, NBT_TANK_SIDE_AUTO_OUT, SIDE_BACK, NBT_ENERGY_ACCEPTED_SIDES, SBIT_D, NBT_CHEAP_OVERCLOCKING, T, NBT_PARALLEL, 32, NBT_PARALLEL_DURATION, T), "GPG", "SMS", "hCw", 'M', OP.casingMachine.dat(aMat), 'S', OP.stick.dat(MT.Blaze), 'C', OP.plateDouble.dat(ANY.Cu), 'G', Blocks.glass, 'P', OP.pipeTiny  .dat(MT.StainlessSteel));
		aMat = MT.DATA.Heat_T[7];       aRegistry.add("Distillery (" + aMat.getLocal() + ")"                , "Basic Machines"                      , 20368, 20001, aClass, aMat.mToolQuality, 16, aMachine     , UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS, HARDNESS[7], NBT_RESISTANCE, HARDNESS[7], NBT_COLOR, UT.Code.getRGBInt(aMat.fRGBaSolid), NBT_INPUT, V[7], NBT_TEXTURE, "distillery", NBT_ENERGY_ACCEPTED, TD.Energy.HU, NBT_RECIPEMAP, RM.Distillery, NBT_INV_SIDE_IN, SBIT_U|SBIT_L, NBT_INV_SIDE_AUTO_IN, SIDE_LEFT, NBT_INV_SIDE_OUT, SBIT_R, NBT_INV_SIDE_AUTO_OUT, SIDE_RIGHT, NBT_TANK_SIDE_IN, SBIT_U|SBIT_L, NBT_TANK_SIDE_AUTO_IN, SIDE_TOP, NBT_TANK_SIDE_OUT, SBIT_B, NBT_TANK_SIDE_AUTO_OUT, SIDE_BACK, NBT_ENERGY_ACCEPTED_SIDES, SBIT_D, NBT_CHEAP_OVERCLOCKING, T, NBT_PARALLEL, 64, NBT_PARALLEL_DURATION, T), "GPG", "SMS", "hCw", 'M', OP.casingMachine.dat(aMat), 'S', OP.stick.dat(MT.Blaze), 'C', OP.plateDouble.dat(ANY.Cu), 'G', Blocks.glass, 'P', OP.pipeSmall .dat(MT.StainlessSteel));
		aMat = MT.DATA.Heat_T[8];       aRegistry.add("Distillery (" + aMat.getLocal() + ")"                , "Basic Machines"                      , 20369, 20001, aClass, aMat.mToolQuality, 16, aMachine     , UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS, HARDNESS[8], NBT_RESISTANCE, HARDNESS[8], NBT_COLOR, UT.Code.getRGBInt(aMat.fRGBaSolid), NBT_INPUT, V[8], NBT_TEXTURE, "distillery", NBT_ENERGY_ACCEPTED, TD.Energy.HU, NBT_RECIPEMAP, RM.Distillery, NBT_INV_SIDE_IN, SBIT_U|SBIT_L, NBT_INV_SIDE_AUTO_IN, SIDE_LEFT, NBT_INV_SIDE_OUT, SBIT_R, NBT_INV_SIDE_AUTO_OUT, SIDE_RIGHT, NBT_TANK_SIDE_IN, SBIT_U|SBIT_L, NBT_TANK_SIDE_AUTO_IN, SIDE_TOP, NBT_TANK_SIDE_OUT, SBIT_B, NBT_TANK_SIDE_AUTO_OUT, SIDE_BACK, NBT_ENERGY_ACCEPTED_SIDES, SBIT_D, NBT_CHEAP_OVERCLOCKING, T, NBT_PARALLEL, 64, NBT_PARALLEL_DURATION, T), "GPG", "SMS", "hCw", 'M', OP.casingMachine.dat(aMat), 'S', OP.stick.dat(MT.Blaze), 'C', OP.plateDouble.dat(ANY.Cu), 'G', Blocks.glass, 'P', OP.pipeMedium.dat(MT.StainlessSteel));
		aMat = MT.DATA.Heat_T[9];       aRegistry.add("Distillery (" + aMat.getLocal() + ")"                , "Basic Machines"                      , 20370, 20001, aClass, aMat.mToolQuality, 16, aMachine     , UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS, HARDNESS[9], NBT_RESISTANCE, HARDNESS[9], NBT_COLOR, UT.Code.getRGBInt(aMat.fRGBaSolid), NBT_INPUT, V[9], NBT_TEXTURE, "distillery", NBT_ENERGY_ACCEPTED, TD.Energy.HU, NBT_RECIPEMAP, RM.Distillery, NBT_INV_SIDE_IN, SBIT_U|SBIT_L, NBT_INV_SIDE_AUTO_IN, SIDE_LEFT, NBT_INV_SIDE_OUT, SBIT_R, NBT_INV_SIDE_AUTO_OUT, SIDE_RIGHT, NBT_TANK_SIDE_IN, SBIT_U|SBIT_L, NBT_TANK_SIDE_AUTO_IN, SIDE_TOP, NBT_TANK_SIDE_OUT, SBIT_B, NBT_TANK_SIDE_AUTO_OUT, SIDE_BACK, NBT_ENERGY_ACCEPTED_SIDES, SBIT_D, NBT_CHEAP_OVERCLOCKING, T, NBT_PARALLEL, 64, NBT_PARALLEL_DURATION, T), "GPG", "SMS", "hCw", 'M', OP.casingMachine.dat(aMat), 'S', OP.stick.dat(MT.Blaze), 'C', OP.plateDouble.dat(ANY.Cu), 'G', Blocks.glass, 'P', OP.pipeLarge .dat(MT.StainlessSteel));
		aMat = MT.DATA.Heat_T[10];       aRegistry.add("Distillery (" + aMat.getLocal() + ")"                , "Basic Machines"                      , 20371, 20001, aClass, aMat.mToolQuality, 16, aMachine     , UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS, HARDNESS[10], NBT_RESISTANCE, HARDNESS[10], NBT_COLOR, UT.Code.getRGBInt(aMat.fRGBaSolid), NBT_INPUT, V[10], NBT_TEXTURE, "distillery", NBT_ENERGY_ACCEPTED, TD.Energy.HU, NBT_RECIPEMAP, RM.Distillery, NBT_INV_SIDE_IN, SBIT_U|SBIT_L, NBT_INV_SIDE_AUTO_IN, SIDE_LEFT, NBT_INV_SIDE_OUT, SBIT_R, NBT_INV_SIDE_AUTO_OUT, SIDE_RIGHT, NBT_TANK_SIDE_IN, SBIT_U|SBIT_L, NBT_TANK_SIDE_AUTO_IN, SIDE_TOP, NBT_TANK_SIDE_OUT, SBIT_B, NBT_TANK_SIDE_AUTO_OUT, SIDE_BACK, NBT_ENERGY_ACCEPTED_SIDES, SBIT_D, NBT_CHEAP_OVERCLOCKING, T, NBT_PARALLEL, 64, NBT_PARALLEL_DURATION, T), "GPG", "SMS", "hCw", 'M', OP.casingMachine.dat(aMat), 'S', OP.stick.dat(MT.Blaze), 'C', OP.plateDouble.dat(ANY.Cu), 'G', Blocks.glass, 'P', OP.pipeTiny  .dat(MT.StainlessSteel));
		aMat = MT.DATA.Heat_T[11];       aRegistry.add("Distillery (" + aMat.getLocal() + ")"                , "Basic Machines"                      , 20372, 20001, aClass, aMat.mToolQuality, 16, aMachine     , UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS, HARDNESS[11], NBT_RESISTANCE, HARDNESS[11], NBT_COLOR, UT.Code.getRGBInt(aMat.fRGBaSolid), NBT_INPUT, V[11], NBT_TEXTURE, "distillery", NBT_ENERGY_ACCEPTED, TD.Energy.HU, NBT_RECIPEMAP, RM.Distillery, NBT_INV_SIDE_IN, SBIT_U|SBIT_L, NBT_INV_SIDE_AUTO_IN, SIDE_LEFT, NBT_INV_SIDE_OUT, SBIT_R, NBT_INV_SIDE_AUTO_OUT, SIDE_RIGHT, NBT_TANK_SIDE_IN, SBIT_U|SBIT_L, NBT_TANK_SIDE_AUTO_IN, SIDE_TOP, NBT_TANK_SIDE_OUT, SBIT_B, NBT_TANK_SIDE_AUTO_OUT, SIDE_BACK, NBT_ENERGY_ACCEPTED_SIDES, SBIT_D, NBT_CHEAP_OVERCLOCKING, T, NBT_PARALLEL, 64, NBT_PARALLEL_DURATION, T), "GPG", "SMS", "hCw", 'M', OP.casingMachine.dat(aMat), 'S', OP.stick.dat(MT.Blaze), 'C', OP.plateDouble.dat(ANY.Cu), 'G', Blocks.glass, 'P', OP.pipeTiny  .dat(MT.StainlessSteel));
		aMat = MT.DATA.Heat_T[12];       aRegistry.add("Distillery (" + aMat.getLocal() + ")"                , "Basic Machines"                      , 20373, 20001, aClass, aMat.mToolQuality, 16, aMachine     , UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS, HARDNESS[12], NBT_RESISTANCE, HARDNESS[12], NBT_COLOR, UT.Code.getRGBInt(aMat.fRGBaSolid), NBT_INPUT, V[12], NBT_TEXTURE, "distillery", NBT_ENERGY_ACCEPTED, TD.Energy.HU, NBT_RECIPEMAP, RM.Distillery, NBT_INV_SIDE_IN, SBIT_U|SBIT_L, NBT_INV_SIDE_AUTO_IN, SIDE_LEFT, NBT_INV_SIDE_OUT, SBIT_R, NBT_INV_SIDE_AUTO_OUT, SIDE_RIGHT, NBT_TANK_SIDE_IN, SBIT_U|SBIT_L, NBT_TANK_SIDE_AUTO_IN, SIDE_TOP, NBT_TANK_SIDE_OUT, SBIT_B, NBT_TANK_SIDE_AUTO_OUT, SIDE_BACK, NBT_ENERGY_ACCEPTED_SIDES, SBIT_D, NBT_CHEAP_OVERCLOCKING, T, NBT_PARALLEL, 64, NBT_PARALLEL_DURATION, T), "GPG", "SMS", "hCw", 'M', OP.casingMachine.dat(aMat), 'S', OP.stick.dat(MT.Blaze), 'C', OP.plateDouble.dat(ANY.Cu), 'G', Blocks.glass, 'P', OP.pipeSmall .dat(MT.StainlessSteel));
		aMat = MT.DATA.Heat_T[13];       aRegistry.add("Distillery (" + aMat.getLocal() + ")"                , "Basic Machines"                      , 20374, 20001, aClass, aMat.mToolQuality, 16, aMachine     , UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS, HARDNESS[13], NBT_RESISTANCE, HARDNESS[13], NBT_COLOR, UT.Code.getRGBInt(aMat.fRGBaSolid), NBT_INPUT, V[13], NBT_TEXTURE, "distillery", NBT_ENERGY_ACCEPTED, TD.Energy.HU, NBT_RECIPEMAP, RM.Distillery, NBT_INV_SIDE_IN, SBIT_U|SBIT_L, NBT_INV_SIDE_AUTO_IN, SIDE_LEFT, NBT_INV_SIDE_OUT, SBIT_R, NBT_INV_SIDE_AUTO_OUT, SIDE_RIGHT, NBT_TANK_SIDE_IN, SBIT_U|SBIT_L, NBT_TANK_SIDE_AUTO_IN, SIDE_TOP, NBT_TANK_SIDE_OUT, SBIT_B, NBT_TANK_SIDE_AUTO_OUT, SIDE_BACK, NBT_ENERGY_ACCEPTED_SIDES, SBIT_D, NBT_CHEAP_OVERCLOCKING, T, NBT_PARALLEL, 64, NBT_PARALLEL_DURATION, T), "GPG", "SMS", "hCw", 'M', OP.casingMachine.dat(aMat), 'S', OP.stick.dat(MT.Blaze), 'C', OP.plateDouble.dat(ANY.Cu), 'G', Blocks.glass, 'P', OP.pipeMedium.dat(MT.StainlessSteel));
		aMat = MT.DATA.Heat_T[14];       aRegistry.add("Distillery (" + aMat.getLocal() + ")"                , "Basic Machines"                      , 20375, 20001, aClass, aMat.mToolQuality, 16, aMachine     , UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS, HARDNESS[14], NBT_RESISTANCE, HARDNESS[14], NBT_COLOR, UT.Code.getRGBInt(aMat.fRGBaSolid), NBT_INPUT, V[14], NBT_TEXTURE, "distillery", NBT_ENERGY_ACCEPTED, TD.Energy.HU, NBT_RECIPEMAP, RM.Distillery, NBT_INV_SIDE_IN, SBIT_U|SBIT_L, NBT_INV_SIDE_AUTO_IN, SIDE_LEFT, NBT_INV_SIDE_OUT, SBIT_R, NBT_INV_SIDE_AUTO_OUT, SIDE_RIGHT, NBT_TANK_SIDE_IN, SBIT_U|SBIT_L, NBT_TANK_SIDE_AUTO_IN, SIDE_TOP, NBT_TANK_SIDE_OUT, SBIT_B, NBT_TANK_SIDE_AUTO_OUT, SIDE_BACK, NBT_ENERGY_ACCEPTED_SIDES, SBIT_D, NBT_CHEAP_OVERCLOCKING, T, NBT_PARALLEL, 64, NBT_PARALLEL_DURATION, T), "GPG", "SMS", "hCw", 'M', OP.casingMachine.dat(aMat), 'S', OP.stick.dat(MT.Blaze), 'C', OP.plateDouble.dat(ANY.Cu), 'G', Blocks.glass, 'P', OP.pipeLarge .dat(MT.StainlessSteel));
		aMat = MT.DATA.Heat_T[15];       aRegistry.add("Distillery (" + aMat.getLocal() + ")"                , "Basic Machines"                      , 20376, 20001, aClass, aMat.mToolQuality, 16, aMachine     , UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS, HARDNESS[15], NBT_RESISTANCE, HARDNESS[15], NBT_COLOR, UT.Code.getRGBInt(aMat.fRGBaSolid), NBT_INPUT, V[15], NBT_TEXTURE, "distillery", NBT_ENERGY_ACCEPTED, TD.Energy.HU, NBT_RECIPEMAP, RM.Distillery, NBT_INV_SIDE_IN, SBIT_U|SBIT_L, NBT_INV_SIDE_AUTO_IN, SIDE_LEFT, NBT_INV_SIDE_OUT, SBIT_R, NBT_INV_SIDE_AUTO_OUT, SIDE_RIGHT, NBT_TANK_SIDE_IN, SBIT_U|SBIT_L, NBT_TANK_SIDE_AUTO_IN, SIDE_TOP, NBT_TANK_SIDE_OUT, SBIT_B, NBT_TANK_SIDE_AUTO_OUT, SIDE_BACK, NBT_ENERGY_ACCEPTED_SIDES, SBIT_D, NBT_CHEAP_OVERCLOCKING, T, NBT_PARALLEL, 64, NBT_PARALLEL_DURATION, T), "GPG", "SMS", "hCw", 'M', OP.casingMachine.dat(aMat), 'S', OP.stick.dat(MT.Blaze), 'C', OP.plateDouble.dat(ANY.Cu), 'G', Blocks.glass, 'P', OP.pipeTiny  .dat(MT.StainlessSteel));
	}

	private static void machines2(MultiTileEntityRegistry aRegistry, MultiTileEntityBlock aMetal, MultiTileEntityBlock aMetalChips, MultiTileEntityBlock aMetalWires, MultiTileEntityBlock aMachine, MultiTileEntityBlock aWooden, MultiTileEntityBlock aBush, MultiTileEntityBlock aStone, MultiTileEntityBlock aWool, MultiTileEntityBlock aTNT, MultiTileEntityBlock aHive, MultiTileEntityBlock aUtilMetal, MultiTileEntityBlock aUtilStone, MultiTileEntityBlock aUtilWood, MultiTileEntityBlock aUtilWool, OreDictMaterial aMat, Class<? extends TileEntity> aClass) {
		aClass = MultiTileEntityBasicMachine.class;
		//Stone Age
		aMat = MT.Stone;       aRegistry.add("Low Heat Extruder (" + aMat.getLocal() + ")"         , "Basic Machines"                      , 20380, 20001, aClass, aMat.mToolQuality, 16, aMachine     , UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS, HARDNESS[0], NBT_RESISTANCE, HARDNESS[0], NBT_COLOR, UT.Code.getRGBInt(aMat.fRGBaSolid), NBT_INPUT, V[0]/2, NBT_TEXTURE, "extruder", NBT_ENERGY_ACCEPTED, TD.Energy.HU, NBT_RECIPEMAP, RM.Extruder, NBT_INV_SIDE_IN, SBIT_L, NBT_INV_SIDE_AUTO_IN, SIDE_LEFT, NBT_INV_SIDE_OUT, SBIT_R, NBT_INV_SIDE_AUTO_OUT, SIDE_RIGHT, NBT_ENERGY_ACCEPTED_SIDES, SBIT_D), "GPw", "PMS", "GPG", 'M', OP.casingMachineDouble.dat(aMat), 'S', OP.toolHeadBuzzSaw.dat(aMat          ), 'G', OP.gearGt.dat(aMat), 'P', OP.plate            .dat(aMat));

		aMat = MT.DATA.Heat_T[0];       aRegistry.add("Low Heat Extruder (" + aMat.getLocal() + ")"         , "Basic Machines"                      , 20381, 20001, aClass, aMat.mToolQuality, 16, aMachine     , UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS, HARDNESS[0], NBT_RESISTANCE, HARDNESS[0], NBT_COLOR, UT.Code.getRGBInt(aMat.fRGBaSolid), NBT_INPUT, V[0], NBT_TEXTURE, "extruder", NBT_ENERGY_ACCEPTED, TD.Energy.HU, NBT_RECIPEMAP, RM.Extruder, NBT_INV_SIDE_IN, SBIT_L, NBT_INV_SIDE_AUTO_IN, SIDE_LEFT, NBT_INV_SIDE_OUT, SBIT_R, NBT_INV_SIDE_AUTO_OUT, SIDE_RIGHT, NBT_ENERGY_ACCEPTED_SIDES, SBIT_D), "GPw", "PMS", "GPG", 'M', OP.casingMachineDouble.dat(aMat), 'S', OP.toolHeadBuzzSaw.dat(aMat          ), 'G', OP.gearGt.dat(aMat), 'P', OP.plate            .dat(aMat));
		aMat = MT.DATA.Heat_T[1];       aRegistry.add("Low Heat Extruder (" + aMat.getLocal() + ")"         , "Basic Machines"                      , 20382, 20001, aClass, aMat.mToolQuality, 16, aMachine     , UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS, HARDNESS[1], NBT_RESISTANCE, HARDNESS[1], NBT_COLOR, UT.Code.getRGBInt(aMat.fRGBaSolid), NBT_INPUT, V[1], NBT_TEXTURE, "extruder", NBT_ENERGY_ACCEPTED, TD.Energy.HU, NBT_RECIPEMAP, RM.Extruder, NBT_INV_SIDE_IN, SBIT_L, NBT_INV_SIDE_AUTO_IN, SIDE_LEFT, NBT_INV_SIDE_OUT, SBIT_R, NBT_INV_SIDE_AUTO_OUT, SIDE_RIGHT, NBT_ENERGY_ACCEPTED_SIDES, SBIT_D), "GPw", "PMS", "GPD", 'M', OP.casingMachineDouble.dat(aMat), 'S', OP.toolHeadBuzzSaw.dat(ANY.Steel          ), 'D', OP.dust.dat(ANY.Diamond), 'G', OP.gearGt.dat(aMat), 'P', OP.plate            .dat(ANY.Steel));
		aMat = MT.DATA.Heat_T[2];       aRegistry.add("Extruder (" + aMat.getLocal() + ")"                  , "Basic Machines"                      , 20383, 20001, aClass, aMat.mToolQuality, 16, aMachine     , UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS, HARDNESS[2], NBT_RESISTANCE, HARDNESS[2], NBT_COLOR, UT.Code.getRGBInt(aMat.fRGBaSolid), NBT_INPUT, V[2], NBT_TEXTURE, "extruder", NBT_ENERGY_ACCEPTED, TD.Energy.HU, NBT_RECIPEMAP, RM.Extruder, NBT_INV_SIDE_IN, SBIT_L, NBT_INV_SIDE_AUTO_IN, SIDE_LEFT, NBT_INV_SIDE_OUT, SBIT_R, NBT_INV_SIDE_AUTO_OUT, SIDE_RIGHT, NBT_ENERGY_ACCEPTED_SIDES, SBIT_D), "GPw", "PMS", "GPD", 'M', OP.casingMachineDouble.dat(aMat), 'S', OP.toolHeadBuzzSaw.dat(MT.TungstenCarbide ), 'D', OP.dust.dat(ANY.Diamond), 'G', OP.gearGt.dat(aMat), 'P', OP.plateDouble      .dat(MT.TungstenCarbide));
		aMat = MT.DATA.Heat_T[3];       aRegistry.add("Extruder (" + aMat.getLocal() + ")"                  , "Basic Machines"                      , 20384, 20001, aClass, aMat.mToolQuality, 16, aMachine     , UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS, HARDNESS[3], NBT_RESISTANCE, HARDNESS[3], NBT_COLOR, UT.Code.getRGBInt(aMat.fRGBaSolid), NBT_INPUT, V[3], NBT_TEXTURE, "extruder", NBT_ENERGY_ACCEPTED, TD.Energy.HU, NBT_RECIPEMAP, RM.Extruder, NBT_INV_SIDE_IN, SBIT_L, NBT_INV_SIDE_AUTO_IN, SIDE_LEFT, NBT_INV_SIDE_OUT, SBIT_R, NBT_INV_SIDE_AUTO_OUT, SIDE_RIGHT, NBT_ENERGY_ACCEPTED_SIDES, SBIT_D), "GPw", "PMS", "GPD", 'M', OP.casingMachineDouble.dat(aMat), 'S', OP.toolHeadBuzzSaw.dat(MT.TungstenCarbide ), 'D', OP.dust.dat(ANY.Diamond), 'G', OP.gearGt.dat(aMat), 'P', OP.plateTriple      .dat(MT.TungstenCarbide));
		aMat = MT.DATA.Heat_T[4];       aRegistry.add("Extruder (" + aMat.getLocal() + ")"                  , "Basic Machines"                      , 20385, 20001, aClass, aMat.mToolQuality, 16, aMachine     , UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS, HARDNESS[4], NBT_RESISTANCE, HARDNESS[4], NBT_COLOR, UT.Code.getRGBInt(aMat.fRGBaSolid), NBT_INPUT, V[4], NBT_TEXTURE, "extruder", NBT_ENERGY_ACCEPTED, TD.Energy.HU, NBT_RECIPEMAP, RM.Extruder, NBT_INV_SIDE_IN, SBIT_L, NBT_INV_SIDE_AUTO_IN, SIDE_LEFT, NBT_INV_SIDE_OUT, SBIT_R, NBT_INV_SIDE_AUTO_OUT, SIDE_RIGHT, NBT_ENERGY_ACCEPTED_SIDES, SBIT_D), "GPw", "PMS", "GPD", 'M', OP.casingMachineDouble.dat(aMat), 'S', OP.toolHeadBuzzSaw.dat(MT.TungstenCarbide ), 'D', OP.dust.dat(ANY.Diamond), 'G', OP.gearGt.dat(aMat), 'P', OP.plateQuadruple   .dat(MT.TungstenCarbide));
		aMat = MT.DATA.Heat_T[5];       aRegistry.add("Extruder (" + aMat.getLocal() + ")"                  , "Basic Machines"                      , 20386, 20001, aClass, aMat.mToolQuality, 16, aMachine     , UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS, HARDNESS[5], NBT_RESISTANCE, HARDNESS[5], NBT_COLOR, UT.Code.getRGBInt(aMat.fRGBaSolid), NBT_INPUT, V[5], NBT_TEXTURE, "extruder", NBT_ENERGY_ACCEPTED, TD.Energy.HU, NBT_RECIPEMAP, RM.Extruder, NBT_INV_SIDE_IN, SBIT_L, NBT_INV_SIDE_AUTO_IN, SIDE_LEFT, NBT_INV_SIDE_OUT, SBIT_R, NBT_INV_SIDE_AUTO_OUT, SIDE_RIGHT, NBT_ENERGY_ACCEPTED_SIDES, SBIT_D), "GPw", "PMS", "GPD", 'M', OP.casingMachineDouble.dat(aMat), 'S', OP.toolHeadBuzzSaw.dat(MT.TungstenCarbide ), 'D', OP.dust.dat(ANY.Diamond), 'G', OP.gearGt.dat(aMat), 'P', OP.plateDouble      .dat(MT.TungstenCarbide));
		aMat = MT.DATA.Heat_T[6];       aRegistry.add("Extruder (" + aMat.getLocal() + ")"                  , "Basic Machines"                      , 20387, 20001, aClass, aMat.mToolQuality, 16, aMachine     , UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS, HARDNESS[6], NBT_RESISTANCE, HARDNESS[6], NBT_COLOR, UT.Code.getRGBInt(aMat.fRGBaSolid), NBT_INPUT, V[6], NBT_TEXTURE, "extruder", NBT_ENERGY_ACCEPTED, TD.Energy.HU, NBT_RECIPEMAP, RM.Extruder, NBT_INV_SIDE_IN, SBIT_L, NBT_INV_SIDE_AUTO_IN, SIDE_LEFT, NBT_INV_SIDE_OUT, SBIT_R, NBT_INV_SIDE_AUTO_OUT, SIDE_RIGHT, NBT_ENERGY_ACCEPTED_SIDES, SBIT_D), "GPw", "PMS", "GPD", 'M', OP.casingMachineDouble.dat(aMat), 'S', OP.toolHeadBuzzSaw.dat(MT.TungstenCarbide ), 'D', OP.dust.dat(ANY.Diamond), 'G', OP.gearGt.dat(aMat), 'P', OP.plateTriple      .dat(MT.TungstenCarbide));
		aMat = MT.DATA.Heat_T[7];       aRegistry.add("Extruder (" + aMat.getLocal() + ")"                  , "Basic Machines"                      , 20388, 20001, aClass, aMat.mToolQuality, 16, aMachine     , UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS, HARDNESS[7], NBT_RESISTANCE, HARDNESS[7], NBT_COLOR, UT.Code.getRGBInt(aMat.fRGBaSolid), NBT_INPUT, V[7], NBT_TEXTURE, "extruder", NBT_ENERGY_ACCEPTED, TD.Energy.HU, NBT_RECIPEMAP, RM.Extruder, NBT_INV_SIDE_IN, SBIT_L, NBT_INV_SIDE_AUTO_IN, SIDE_LEFT, NBT_INV_SIDE_OUT, SBIT_R, NBT_INV_SIDE_AUTO_OUT, SIDE_RIGHT, NBT_ENERGY_ACCEPTED_SIDES, SBIT_D), "GPw", "PMS", "GPD", 'M', OP.casingMachineDouble.dat(aMat), 'S', OP.toolHeadBuzzSaw.dat(MT.TungstenCarbide ), 'D', OP.dust.dat(ANY.Diamond), 'G', OP.gearGt.dat(aMat), 'P', OP.plateQuadruple   .dat(MT.TungstenCarbide));
		aMat = MT.DATA.Heat_T[8];       aRegistry.add("Extruder (" + aMat.getLocal() + ")"                  , "Basic Machines"                      , 20389, 20001, aClass, aMat.mToolQuality, 16, aMachine     , UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS, HARDNESS[8], NBT_RESISTANCE, HARDNESS[8], NBT_COLOR, UT.Code.getRGBInt(aMat.fRGBaSolid), NBT_INPUT, V[8], NBT_TEXTURE, "extruder", NBT_ENERGY_ACCEPTED, TD.Energy.HU, NBT_RECIPEMAP, RM.Extruder, NBT_INV_SIDE_IN, SBIT_L, NBT_INV_SIDE_AUTO_IN, SIDE_LEFT, NBT_INV_SIDE_OUT, SBIT_R, NBT_INV_SIDE_AUTO_OUT, SIDE_RIGHT, NBT_ENERGY_ACCEPTED_SIDES, SBIT_D), "GPw", "PMS", "GPD", 'M', OP.casingMachineDouble.dat(aMat), 'S', OP.toolHeadBuzzSaw.dat(MT.TungstenCarbide ), 'D', OP.dust.dat(ANY.Diamond), 'G', OP.gearGt.dat(aMat), 'P', OP.plateDouble      .dat(MT.TungstenCarbide));
		aMat = MT.DATA.Heat_T[9];       aRegistry.add("Extruder (" + aMat.getLocal() + ")"                  , "Basic Machines"                      , 20390, 20001, aClass, aMat.mToolQuality, 16, aMachine     , UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS, HARDNESS[9], NBT_RESISTANCE, HARDNESS[9], NBT_COLOR, UT.Code.getRGBInt(aMat.fRGBaSolid), NBT_INPUT, V[9], NBT_TEXTURE, "extruder", NBT_ENERGY_ACCEPTED, TD.Energy.HU, NBT_RECIPEMAP, RM.Extruder, NBT_INV_SIDE_IN, SBIT_L, NBT_INV_SIDE_AUTO_IN, SIDE_LEFT, NBT_INV_SIDE_OUT, SBIT_R, NBT_INV_SIDE_AUTO_OUT, SIDE_RIGHT, NBT_ENERGY_ACCEPTED_SIDES, SBIT_D), "GPw", "PMS", "GPD", 'M', OP.casingMachineDouble.dat(aMat), 'S', OP.toolHeadBuzzSaw.dat(MT.TungstenCarbide ), 'D', OP.dust.dat(ANY.Diamond), 'G', OP.gearGt.dat(aMat), 'P', OP.plateTriple      .dat(MT.TungstenCarbide));
		aMat = MT.DATA.Heat_T[10];       aRegistry.add("Extruder (" + aMat.getLocal() + ")"                  , "Basic Machines"                      , 20391, 20001, aClass, aMat.mToolQuality, 16, aMachine     , UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS, HARDNESS[10], NBT_RESISTANCE, HARDNESS[10], NBT_COLOR, UT.Code.getRGBInt(aMat.fRGBaSolid), NBT_INPUT, V[10], NBT_TEXTURE, "extruder", NBT_ENERGY_ACCEPTED, TD.Energy.HU, NBT_RECIPEMAP, RM.Extruder, NBT_INV_SIDE_IN, SBIT_L, NBT_INV_SIDE_AUTO_IN, SIDE_LEFT, NBT_INV_SIDE_OUT, SBIT_R, NBT_INV_SIDE_AUTO_OUT, SIDE_RIGHT, NBT_ENERGY_ACCEPTED_SIDES, SBIT_D), "GPw", "PMS", "GPD", 'M', OP.casingMachineDouble.dat(aMat), 'S', OP.toolHeadBuzzSaw.dat(MT.TungstenCarbide ), 'D', OP.dust.dat(ANY.Diamond), 'G', OP.gearGt.dat(aMat), 'P', OP.plateQuadruple   .dat(MT.TungstenCarbide));
		aMat = MT.DATA.Heat_T[11];       aRegistry.add("Extruder (" + aMat.getLocal() + ")"                  , "Basic Machines"                      , 20392, 20001, aClass, aMat.mToolQuality, 16, aMachine     , UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS, HARDNESS[11], NBT_RESISTANCE, HARDNESS[11], NBT_COLOR, UT.Code.getRGBInt(aMat.fRGBaSolid), NBT_INPUT, V[11], NBT_TEXTURE, "extruder", NBT_ENERGY_ACCEPTED, TD.Energy.HU, NBT_RECIPEMAP, RM.Extruder, NBT_INV_SIDE_IN, SBIT_L, NBT_INV_SIDE_AUTO_IN, SIDE_LEFT, NBT_INV_SIDE_OUT, SBIT_R, NBT_INV_SIDE_AUTO_OUT, SIDE_RIGHT, NBT_ENERGY_ACCEPTED_SIDES, SBIT_D), "GPw", "PMS", "GPD", 'M', OP.casingMachineDouble.dat(aMat), 'S', OP.toolHeadBuzzSaw.dat(MT.TungstenCarbide ), 'D', OP.dust.dat(ANY.Diamond), 'G', OP.gearGt.dat(aMat), 'P', OP.plateDouble      .dat(MT.TungstenCarbide));
		aMat = MT.DATA.Heat_T[12];       aRegistry.add("Extruder (" + aMat.getLocal() + ")"                  , "Basic Machines"                      , 20393, 20001, aClass, aMat.mToolQuality, 16, aMachine     , UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS, HARDNESS[12], NBT_RESISTANCE, HARDNESS[12], NBT_COLOR, UT.Code.getRGBInt(aMat.fRGBaSolid), NBT_INPUT, V[12], NBT_TEXTURE, "extruder", NBT_ENERGY_ACCEPTED, TD.Energy.HU, NBT_RECIPEMAP, RM.Extruder, NBT_INV_SIDE_IN, SBIT_L, NBT_INV_SIDE_AUTO_IN, SIDE_LEFT, NBT_INV_SIDE_OUT, SBIT_R, NBT_INV_SIDE_AUTO_OUT, SIDE_RIGHT, NBT_ENERGY_ACCEPTED_SIDES, SBIT_D), "GPw", "PMS", "GPD", 'M', OP.casingMachineDouble.dat(aMat), 'S', OP.toolHeadBuzzSaw.dat(MT.TungstenCarbide ), 'D', OP.dust.dat(ANY.Diamond), 'G', OP.gearGt.dat(aMat), 'P', OP.plateTriple      .dat(MT.TungstenCarbide));
		aMat = MT.DATA.Heat_T[13];       aRegistry.add("Extruder (" + aMat.getLocal() + ")"                  , "Basic Machines"                      , 20394, 20001, aClass, aMat.mToolQuality, 16, aMachine     , UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS, HARDNESS[13], NBT_RESISTANCE, HARDNESS[13], NBT_COLOR, UT.Code.getRGBInt(aMat.fRGBaSolid), NBT_INPUT, V[13], NBT_TEXTURE, "extruder", NBT_ENERGY_ACCEPTED, TD.Energy.HU, NBT_RECIPEMAP, RM.Extruder, NBT_INV_SIDE_IN, SBIT_L, NBT_INV_SIDE_AUTO_IN, SIDE_LEFT, NBT_INV_SIDE_OUT, SBIT_R, NBT_INV_SIDE_AUTO_OUT, SIDE_RIGHT, NBT_ENERGY_ACCEPTED_SIDES, SBIT_D), "GPw", "PMS", "GPD", 'M', OP.casingMachineDouble.dat(aMat), 'S', OP.toolHeadBuzzSaw.dat(MT.TungstenCarbide ), 'D', OP.dust.dat(ANY.Diamond), 'G', OP.gearGt.dat(aMat), 'P', OP.plateQuadruple   .dat(MT.TungstenCarbide));
		aMat = MT.DATA.Heat_T[14];       aRegistry.add("Extruder (" + aMat.getLocal() + ")"                  , "Basic Machines"                      , 20395, 20001, aClass, aMat.mToolQuality, 16, aMachine     , UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS, HARDNESS[14], NBT_RESISTANCE, HARDNESS[14], NBT_COLOR, UT.Code.getRGBInt(aMat.fRGBaSolid), NBT_INPUT, V[14], NBT_TEXTURE, "extruder", NBT_ENERGY_ACCEPTED, TD.Energy.HU, NBT_RECIPEMAP, RM.Extruder, NBT_INV_SIDE_IN, SBIT_L, NBT_INV_SIDE_AUTO_IN, SIDE_LEFT, NBT_INV_SIDE_OUT, SBIT_R, NBT_INV_SIDE_AUTO_OUT, SIDE_RIGHT, NBT_ENERGY_ACCEPTED_SIDES, SBIT_D), "GPw", "PMS", "GPD", 'M', OP.casingMachineDouble.dat(aMat), 'S', OP.toolHeadBuzzSaw.dat(MT.TungstenCarbide ), 'D', OP.dust.dat(ANY.Diamond), 'G', OP.gearGt.dat(aMat), 'P', OP.plateDouble      .dat(MT.TungstenCarbide));
		aMat = MT.DATA.Heat_T[15];       aRegistry.add("Extruder (" + aMat.getLocal() + ")"                  , "Basic Machines"                      , 20396, 20001, aClass, aMat.mToolQuality, 16, aMachine     , UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS, HARDNESS[15], NBT_RESISTANCE, HARDNESS[15], NBT_COLOR, UT.Code.getRGBInt(aMat.fRGBaSolid), NBT_INPUT, V[15], NBT_TEXTURE, "extruder", NBT_ENERGY_ACCEPTED, TD.Energy.HU, NBT_RECIPEMAP, RM.Extruder, NBT_INV_SIDE_IN, SBIT_L, NBT_INV_SIDE_AUTO_IN, SIDE_LEFT, NBT_INV_SIDE_OUT, SBIT_R, NBT_INV_SIDE_AUTO_OUT, SIDE_RIGHT, NBT_ENERGY_ACCEPTED_SIDES, SBIT_D), "GPw", "PMS", "GPD", 'M', OP.casingMachineDouble.dat(aMat), 'S', OP.toolHeadBuzzSaw.dat(MT.TungstenCarbide ), 'D', OP.dust.dat(ANY.Diamond), 'G', OP.gearGt.dat(aMat), 'P', OP.plateTriple      .dat(MT.TungstenCarbide));

		aClass = MultiTileEntityBasicMachine.class;
		aMat = MT.DATA.Heat_T[0];    aRegistry.add("Loom (" + aMat.getLocal() + ")"                      , "Basic Machines"                      , 20401, 20001, aClass, aMat.mToolQuality, 16, aMachine     , UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS, HARDNESS[0], NBT_RESISTANCE, HARDNESS[0], NBT_COLOR, UT.Code.getRGBInt(aMat.fRGBaSolid), NBT_INPUT, V[0], NBT_TEXTURE, "loom", NBT_ENERGY_ACCEPTED, TD.Energy.RU, NBT_RECIPEMAP, RM.Loom, NBT_INV_SIDE_IN, SBIT_U, NBT_INV_SIDE_AUTO_IN, SIDE_TOP, NBT_INV_SIDE_OUT, SBIT_D, NBT_INV_SIDE_AUTO_OUT, SIDE_BOTTOM, NBT_ENERGY_ACCEPTED_SIDES, SBIT_L|SBIT_R), "ShS", "GMG", "SwS", 'M', OP.casingMachine.dat(aMat), 'G', OP.gearGt.dat(aMat), 'S', OP.stickLong.dat(aMat));
		aMat = MT.DATA.Heat_T[1];    aRegistry.add("Loom (" + aMat.getLocal() + ")"                      , "Basic Machines"                      , 20402, 20001, aClass, aMat.mToolQuality, 16, aMachine     , UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS, HARDNESS[1], NBT_RESISTANCE, HARDNESS[1], NBT_COLOR, UT.Code.getRGBInt(aMat.fRGBaSolid), NBT_INPUT, V[1], NBT_TEXTURE, "loom", NBT_ENERGY_ACCEPTED, TD.Energy.RU, NBT_RECIPEMAP, RM.Loom, NBT_INV_SIDE_IN, SBIT_U, NBT_INV_SIDE_AUTO_IN, SIDE_TOP, NBT_INV_SIDE_OUT, SBIT_D, NBT_INV_SIDE_AUTO_OUT, SIDE_BOTTOM, NBT_ENERGY_ACCEPTED_SIDES, SBIT_L|SBIT_R), "ShS", "GMG", "SwS", 'M', OP.casingMachine.dat(aMat), 'G', OP.gearGt.dat(aMat), 'S', OP.stickLong.dat(aMat));
		aMat = MT.DATA.Heat_T[2];    aRegistry.add("Loom (" + aMat.getLocal() + ")"                      , "Basic Machines"                      , 20403, 20001, aClass, aMat.mToolQuality, 16, aMachine     , UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS, HARDNESS[2], NBT_RESISTANCE, HARDNESS[2], NBT_COLOR, UT.Code.getRGBInt(aMat.fRGBaSolid), NBT_INPUT, V[2], NBT_TEXTURE, "loom", NBT_ENERGY_ACCEPTED, TD.Energy.RU, NBT_RECIPEMAP, RM.Loom, NBT_INV_SIDE_IN, SBIT_U, NBT_INV_SIDE_AUTO_IN, SIDE_TOP, NBT_INV_SIDE_OUT, SBIT_D, NBT_INV_SIDE_AUTO_OUT, SIDE_BOTTOM, NBT_ENERGY_ACCEPTED_SIDES, SBIT_L|SBIT_R), "ShS", "GMG", "SwS", 'M', OP.casingMachine.dat(aMat), 'G', OP.gearGt.dat(aMat), 'S', OP.stickLong.dat(aMat));
		aMat = MT.DATA.Heat_T[3];    aRegistry.add("Loom (" + aMat.getLocal() + ")"                      , "Basic Machines"                      , 20404, 20001, aClass, aMat.mToolQuality, 16, aMachine     , UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS, HARDNESS[3], NBT_RESISTANCE, HARDNESS[3], NBT_COLOR, UT.Code.getRGBInt(aMat.fRGBaSolid), NBT_INPUT, V[3], NBT_TEXTURE, "loom", NBT_ENERGY_ACCEPTED, TD.Energy.RU, NBT_RECIPEMAP, RM.Loom, NBT_INV_SIDE_IN, SBIT_U, NBT_INV_SIDE_AUTO_IN, SIDE_TOP, NBT_INV_SIDE_OUT, SBIT_D, NBT_INV_SIDE_AUTO_OUT, SIDE_BOTTOM, NBT_ENERGY_ACCEPTED_SIDES, SBIT_L|SBIT_R), "ShS", "GMG", "SwS", 'M', OP.casingMachine.dat(aMat), 'G', OP.gearGt.dat(aMat), 'S', OP.stickLong.dat(aMat));
		aMat = MT.DATA.Heat_T[4];    aRegistry.add("Loom (" + aMat.getLocal() + ")"                      , "Basic Machines"                      , 20405, 20001, aClass, aMat.mToolQuality, 16, aMachine     , UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS, HARDNESS[4], NBT_RESISTANCE, HARDNESS[4], NBT_COLOR, UT.Code.getRGBInt(aMat.fRGBaSolid), NBT_INPUT, V[4], NBT_TEXTURE, "loom", NBT_ENERGY_ACCEPTED, TD.Energy.RU, NBT_RECIPEMAP, RM.Loom, NBT_INV_SIDE_IN, SBIT_U, NBT_INV_SIDE_AUTO_IN, SIDE_TOP, NBT_INV_SIDE_OUT, SBIT_D, NBT_INV_SIDE_AUTO_OUT, SIDE_BOTTOM, NBT_ENERGY_ACCEPTED_SIDES, SBIT_L|SBIT_R), "ShS", "GMG", "SwS", 'M', OP.casingMachine.dat(aMat), 'G', OP.gearGt.dat(aMat), 'S', OP.stickLong.dat(aMat));
		aMat = MT.DATA.Heat_T[5];    aRegistry.add("Loom (" + aMat.getLocal() + ")"                      , "Basic Machines"                      , 20406, 20001, aClass, aMat.mToolQuality, 16, aMachine     , UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS, HARDNESS[5], NBT_RESISTANCE, HARDNESS[5], NBT_COLOR, UT.Code.getRGBInt(aMat.fRGBaSolid), NBT_INPUT, V[5], NBT_TEXTURE, "loom", NBT_ENERGY_ACCEPTED, TD.Energy.RU, NBT_RECIPEMAP, RM.Loom, NBT_INV_SIDE_IN, SBIT_U, NBT_INV_SIDE_AUTO_IN, SIDE_TOP, NBT_INV_SIDE_OUT, SBIT_D, NBT_INV_SIDE_AUTO_OUT, SIDE_BOTTOM, NBT_ENERGY_ACCEPTED_SIDES, SBIT_L|SBIT_R), "ShS", "GMG", "SwS", 'M', OP.casingMachine.dat(aMat), 'G', OP.gearGt.dat(aMat), 'S', OP.stickLong.dat(aMat));
		aMat = MT.DATA.Heat_T[6];    aRegistry.add("Loom (" + aMat.getLocal() + ")"                      , "Basic Machines"                      , 20407, 20001, aClass, aMat.mToolQuality, 16, aMachine     , UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS, HARDNESS[6], NBT_RESISTANCE, HARDNESS[6], NBT_COLOR, UT.Code.getRGBInt(aMat.fRGBaSolid), NBT_INPUT, V[6], NBT_TEXTURE, "loom", NBT_ENERGY_ACCEPTED, TD.Energy.RU, NBT_RECIPEMAP, RM.Loom, NBT_INV_SIDE_IN, SBIT_U, NBT_INV_SIDE_AUTO_IN, SIDE_TOP, NBT_INV_SIDE_OUT, SBIT_D, NBT_INV_SIDE_AUTO_OUT, SIDE_BOTTOM, NBT_ENERGY_ACCEPTED_SIDES, SBIT_L|SBIT_R), "ShS", "GMG", "SwS", 'M', OP.casingMachine.dat(aMat), 'G', OP.gearGt.dat(aMat), 'S', OP.stickLong.dat(aMat));
		aMat = MT.DATA.Heat_T[7];    aRegistry.add("Loom (" + aMat.getLocal() + ")"                      , "Basic Machines"                      , 20408, 20001, aClass, aMat.mToolQuality, 16, aMachine     , UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS, HARDNESS[7], NBT_RESISTANCE, HARDNESS[7], NBT_COLOR, UT.Code.getRGBInt(aMat.fRGBaSolid), NBT_INPUT, V[7], NBT_TEXTURE, "loom", NBT_ENERGY_ACCEPTED, TD.Energy.RU, NBT_RECIPEMAP, RM.Loom, NBT_INV_SIDE_IN, SBIT_U, NBT_INV_SIDE_AUTO_IN, SIDE_TOP, NBT_INV_SIDE_OUT, SBIT_D, NBT_INV_SIDE_AUTO_OUT, SIDE_BOTTOM, NBT_ENERGY_ACCEPTED_SIDES, SBIT_L|SBIT_R), "ShS", "GMG", "SwS", 'M', OP.casingMachine.dat(aMat), 'G', OP.gearGt.dat(aMat), 'S', OP.stickLong.dat(aMat));
		aMat = MT.DATA.Heat_T[8];    aRegistry.add("Loom (" + aMat.getLocal() + ")"                      , "Basic Machines"                      , 20409, 20001, aClass, aMat.mToolQuality, 16, aMachine     , UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS, HARDNESS[8], NBT_RESISTANCE, HARDNESS[8], NBT_COLOR, UT.Code.getRGBInt(aMat.fRGBaSolid), NBT_INPUT, V[8], NBT_TEXTURE, "loom", NBT_ENERGY_ACCEPTED, TD.Energy.RU, NBT_RECIPEMAP, RM.Loom, NBT_INV_SIDE_IN, SBIT_U, NBT_INV_SIDE_AUTO_IN, SIDE_TOP, NBT_INV_SIDE_OUT, SBIT_D, NBT_INV_SIDE_AUTO_OUT, SIDE_BOTTOM, NBT_ENERGY_ACCEPTED_SIDES, SBIT_L|SBIT_R), "ShS", "GMG", "SwS", 'M', OP.casingMachine.dat(aMat), 'G', OP.gearGt.dat(aMat), 'S', OP.stickLong.dat(aMat));
		aMat = MT.DATA.Heat_T[9];    aRegistry.add("Loom (" + aMat.getLocal() + ")"                      , "Basic Machines"                      , 20410, 20001, aClass, aMat.mToolQuality, 16, aMachine     , UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS, HARDNESS[9], NBT_RESISTANCE, HARDNESS[9], NBT_COLOR, UT.Code.getRGBInt(aMat.fRGBaSolid), NBT_INPUT, V[9], NBT_TEXTURE, "loom", NBT_ENERGY_ACCEPTED, TD.Energy.RU, NBT_RECIPEMAP, RM.Loom, NBT_INV_SIDE_IN, SBIT_U, NBT_INV_SIDE_AUTO_IN, SIDE_TOP, NBT_INV_SIDE_OUT, SBIT_D, NBT_INV_SIDE_AUTO_OUT, SIDE_BOTTOM, NBT_ENERGY_ACCEPTED_SIDES, SBIT_L|SBIT_R), "ShS", "GMG", "SwS", 'M', OP.casingMachine.dat(aMat), 'G', OP.gearGt.dat(aMat), 'S', OP.stickLong.dat(aMat));
		aMat = MT.DATA.Heat_T[10];    aRegistry.add("Loom (" + aMat.getLocal() + ")"                      , "Basic Machines"                      , 20411, 20001, aClass, aMat.mToolQuality, 16, aMachine     , UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS, HARDNESS[10], NBT_RESISTANCE, HARDNESS[10], NBT_COLOR, UT.Code.getRGBInt(aMat.fRGBaSolid), NBT_INPUT, V[10], NBT_TEXTURE, "loom", NBT_ENERGY_ACCEPTED, TD.Energy.RU, NBT_RECIPEMAP, RM.Loom, NBT_INV_SIDE_IN, SBIT_U, NBT_INV_SIDE_AUTO_IN, SIDE_TOP, NBT_INV_SIDE_OUT, SBIT_D, NBT_INV_SIDE_AUTO_OUT, SIDE_BOTTOM, NBT_ENERGY_ACCEPTED_SIDES, SBIT_L|SBIT_R), "ShS", "GMG", "SwS", 'M', OP.casingMachine.dat(aMat), 'G', OP.gearGt.dat(aMat), 'S', OP.stickLong.dat(aMat));
		aMat = MT.DATA.Heat_T[11];    aRegistry.add("Loom (" + aMat.getLocal() + ")"                      , "Basic Machines"                      , 20412, 20001, aClass, aMat.mToolQuality, 16, aMachine     , UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS, HARDNESS[11], NBT_RESISTANCE, HARDNESS[11], NBT_COLOR, UT.Code.getRGBInt(aMat.fRGBaSolid), NBT_INPUT, V[11], NBT_TEXTURE, "loom", NBT_ENERGY_ACCEPTED, TD.Energy.RU, NBT_RECIPEMAP, RM.Loom, NBT_INV_SIDE_IN, SBIT_U, NBT_INV_SIDE_AUTO_IN, SIDE_TOP, NBT_INV_SIDE_OUT, SBIT_D, NBT_INV_SIDE_AUTO_OUT, SIDE_BOTTOM, NBT_ENERGY_ACCEPTED_SIDES, SBIT_L|SBIT_R), "ShS", "GMG", "SwS", 'M', OP.casingMachine.dat(aMat), 'G', OP.gearGt.dat(aMat), 'S', OP.stickLong.dat(aMat));
		aMat = MT.DATA.Heat_T[12];    aRegistry.add("Loom (" + aMat.getLocal() + ")"                      , "Basic Machines"                      , 20413, 20001, aClass, aMat.mToolQuality, 16, aMachine     , UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS, HARDNESS[12], NBT_RESISTANCE, HARDNESS[12], NBT_COLOR, UT.Code.getRGBInt(aMat.fRGBaSolid), NBT_INPUT, V[12], NBT_TEXTURE, "loom", NBT_ENERGY_ACCEPTED, TD.Energy.RU, NBT_RECIPEMAP, RM.Loom, NBT_INV_SIDE_IN, SBIT_U, NBT_INV_SIDE_AUTO_IN, SIDE_TOP, NBT_INV_SIDE_OUT, SBIT_D, NBT_INV_SIDE_AUTO_OUT, SIDE_BOTTOM, NBT_ENERGY_ACCEPTED_SIDES, SBIT_L|SBIT_R), "ShS", "GMG", "SwS", 'M', OP.casingMachine.dat(aMat), 'G', OP.gearGt.dat(aMat), 'S', OP.stickLong.dat(aMat));
		aMat = MT.DATA.Heat_T[13];    aRegistry.add("Loom (" + aMat.getLocal() + ")"                      , "Basic Machines"                      , 20414, 20001, aClass, aMat.mToolQuality, 16, aMachine     , UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS, HARDNESS[13], NBT_RESISTANCE, HARDNESS[13], NBT_COLOR, UT.Code.getRGBInt(aMat.fRGBaSolid), NBT_INPUT, V[13], NBT_TEXTURE, "loom", NBT_ENERGY_ACCEPTED, TD.Energy.RU, NBT_RECIPEMAP, RM.Loom, NBT_INV_SIDE_IN, SBIT_U, NBT_INV_SIDE_AUTO_IN, SIDE_TOP, NBT_INV_SIDE_OUT, SBIT_D, NBT_INV_SIDE_AUTO_OUT, SIDE_BOTTOM, NBT_ENERGY_ACCEPTED_SIDES, SBIT_L|SBIT_R), "ShS", "GMG", "SwS", 'M', OP.casingMachine.dat(aMat), 'G', OP.gearGt.dat(aMat), 'S', OP.stickLong.dat(aMat));
		aMat = MT.DATA.Heat_T[14];    aRegistry.add("Loom (" + aMat.getLocal() + ")"                      , "Basic Machines"                      , 20415, 20001, aClass, aMat.mToolQuality, 16, aMachine     , UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS, HARDNESS[14], NBT_RESISTANCE, HARDNESS[14], NBT_COLOR, UT.Code.getRGBInt(aMat.fRGBaSolid), NBT_INPUT, V[14], NBT_TEXTURE, "loom", NBT_ENERGY_ACCEPTED, TD.Energy.RU, NBT_RECIPEMAP, RM.Loom, NBT_INV_SIDE_IN, SBIT_U, NBT_INV_SIDE_AUTO_IN, SIDE_TOP, NBT_INV_SIDE_OUT, SBIT_D, NBT_INV_SIDE_AUTO_OUT, SIDE_BOTTOM, NBT_ENERGY_ACCEPTED_SIDES, SBIT_L|SBIT_R), "ShS", "GMG", "SwS", 'M', OP.casingMachine.dat(aMat), 'G', OP.gearGt.dat(aMat), 'S', OP.stickLong.dat(aMat));
		aMat = MT.DATA.Heat_T[15];    aRegistry.add("Loom (" + aMat.getLocal() + ")"                      , "Basic Machines"                      , 20416, 20001, aClass, aMat.mToolQuality, 16, aMachine     , UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS, HARDNESS[15], NBT_RESISTANCE, HARDNESS[15], NBT_COLOR, UT.Code.getRGBInt(aMat.fRGBaSolid), NBT_INPUT, V[15], NBT_TEXTURE, "loom", NBT_ENERGY_ACCEPTED, TD.Energy.RU, NBT_RECIPEMAP, RM.Loom, NBT_INV_SIDE_IN, SBIT_U, NBT_INV_SIDE_AUTO_IN, SIDE_TOP, NBT_INV_SIDE_OUT, SBIT_D, NBT_INV_SIDE_AUTO_OUT, SIDE_BOTTOM, NBT_ENERGY_ACCEPTED_SIDES, SBIT_L|SBIT_R), "ShS", "GMG", "SwS", 'M', OP.casingMachine.dat(aMat), 'G', OP.gearGt.dat(aMat), 'S', OP.stickLong.dat(aMat));

		aClass = MultiTileEntityBasicMachine.class;
		aMat = MT.DATA.Electric_T[0];   aRegistry.add("Polarizer (" + aMat.getLocal() + ")"                 , "Basic Machines"                      , 20421, 20001, aClass, aMat.mToolQuality, 16, aMachine     , UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS,   4.0F, NBT_RESISTANCE,   4.0F, NBT_COLOR, UT.Code.getRGBInt(aMat.fRGBaSolid), NBT_INPUT,   V[0], NBT_TEXTURE, "polarizer", NBT_ENERGY_ACCEPTED, TD.Energy.MU, NBT_RECIPEMAP, RM.Polarizer, NBT_INV_SIDE_IN, SBIT_L, NBT_INV_SIDE_AUTO_IN, SIDE_LEFT, NBT_INV_SIDE_OUT, SBIT_R, NBT_INV_SIDE_AUTO_OUT, SIDE_RIGHT, NBT_ENERGY_ACCEPTED_SIDES, SBIT_U|SBIT_D), "TwT", "PMP", "TdT", 'M', OP.casingMachine.dat(aMat), 'P', OP.plate.dat(aMat), 'T', OP.screw.dat(aMat));
		aMat = MT.DATA.Electric_T[1];   aRegistry.add("Polarizer (" + aMat.getLocal() + ")"                 , "Basic Machines"                      , 20422, 20001, aClass, aMat.mToolQuality, 16, aMachine     , UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS,   4.0F, NBT_RESISTANCE,   4.0F, NBT_COLOR, UT.Code.getRGBInt(aMat.fRGBaSolid), NBT_INPUT,   V[1], NBT_TEXTURE, "polarizer", NBT_ENERGY_ACCEPTED, TD.Energy.MU, NBT_RECIPEMAP, RM.Polarizer, NBT_INV_SIDE_IN, SBIT_L, NBT_INV_SIDE_AUTO_IN, SIDE_LEFT, NBT_INV_SIDE_OUT, SBIT_R, NBT_INV_SIDE_AUTO_OUT, SIDE_RIGHT, NBT_ENERGY_ACCEPTED_SIDES, SBIT_U|SBIT_D), "TwT", "PMP", "TdT", 'M', OP.casingMachine.dat(aMat), 'P', OP.plate.dat(aMat), 'T', OP.screw.dat(aMat));
		aMat = MT.DATA.Electric_T[2];   aRegistry.add("Polarizer (" + aMat.getLocal() + ")"                 , "Basic Machines"                      , 20423, 20001, aClass, aMat.mToolQuality, 16, aMachine     , UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS,   4.0F, NBT_RESISTANCE,   4.0F, NBT_COLOR, UT.Code.getRGBInt(aMat.fRGBaSolid), NBT_INPUT,   V[2], NBT_TEXTURE, "polarizer", NBT_ENERGY_ACCEPTED, TD.Energy.MU, NBT_RECIPEMAP, RM.Polarizer, NBT_INV_SIDE_IN, SBIT_L, NBT_INV_SIDE_AUTO_IN, SIDE_LEFT, NBT_INV_SIDE_OUT, SBIT_R, NBT_INV_SIDE_AUTO_OUT, SIDE_RIGHT, NBT_ENERGY_ACCEPTED_SIDES, SBIT_U|SBIT_D), "TwT", "PMP", "TdT", 'M', OP.casingMachine.dat(aMat), 'P', OP.plate.dat(aMat), 'T', OP.screw.dat(aMat));
		aMat = MT.DATA.Electric_T[3];   aRegistry.add("Polarizer (" + aMat.getLocal() + ")"                 , "Basic Machines"                      , 20424, 20001, aClass, aMat.mToolQuality, 16, aMachine     , UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS,   4.0F, NBT_RESISTANCE,   4.0F, NBT_COLOR, UT.Code.getRGBInt(aMat.fRGBaSolid), NBT_INPUT,   V[3], NBT_TEXTURE, "polarizer", NBT_ENERGY_ACCEPTED, TD.Energy.MU, NBT_RECIPEMAP, RM.Polarizer, NBT_INV_SIDE_IN, SBIT_L, NBT_INV_SIDE_AUTO_IN, SIDE_LEFT, NBT_INV_SIDE_OUT, SBIT_R, NBT_INV_SIDE_AUTO_OUT, SIDE_RIGHT, NBT_ENERGY_ACCEPTED_SIDES, SBIT_U|SBIT_D), "TwT", "PMP", "TdT", 'M', OP.casingMachine.dat(aMat), 'P', OP.plate.dat(aMat), 'T', OP.screw.dat(aMat));
		aMat = MT.DATA.Electric_T[4];   aRegistry.add("Polarizer (" + aMat.getLocal() + ")"                 , "Basic Machines"                      , 20425, 20001, aClass, aMat.mToolQuality, 16, aMachine     , UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS,   4.0F, NBT_RESISTANCE,   4.0F, NBT_COLOR, UT.Code.getRGBInt(aMat.fRGBaSolid), NBT_INPUT,   V[4], NBT_TEXTURE, "polarizer", NBT_ENERGY_ACCEPTED, TD.Energy.MU, NBT_RECIPEMAP, RM.Polarizer, NBT_INV_SIDE_IN, SBIT_L, NBT_INV_SIDE_AUTO_IN, SIDE_LEFT, NBT_INV_SIDE_OUT, SBIT_R, NBT_INV_SIDE_AUTO_OUT, SIDE_RIGHT, NBT_ENERGY_ACCEPTED_SIDES, SBIT_U|SBIT_D), "TwT", "PMP", "TdT", 'M', OP.casingMachine.dat(aMat), 'P', OP.plate.dat(aMat), 'T', OP.screw.dat(aMat));
		aMat = MT.DATA.Electric_T[5];   aRegistry.add("Polarizer (" + aMat.getLocal() + ")"                 , "Basic Machines"                      , 20426, 20001, aClass, aMat.mToolQuality, 16, aMachine     , UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS,   4.0F, NBT_RESISTANCE,   4.0F, NBT_COLOR, UT.Code.getRGBInt(aMat.fRGBaSolid), NBT_INPUT,   V[5], NBT_TEXTURE, "polarizer", NBT_ENERGY_ACCEPTED, TD.Energy.MU, NBT_RECIPEMAP, RM.Polarizer, NBT_INV_SIDE_IN, SBIT_L, NBT_INV_SIDE_AUTO_IN, SIDE_LEFT, NBT_INV_SIDE_OUT, SBIT_R, NBT_INV_SIDE_AUTO_OUT, SIDE_RIGHT, NBT_ENERGY_ACCEPTED_SIDES, SBIT_U|SBIT_D), "TwT", "PMP", "TdT", 'M', OP.casingMachine.dat(aMat), 'P', OP.plate.dat(aMat), 'T', OP.screw.dat(aMat));
		aMat = MT.DATA.Electric_T[6];   aRegistry.add("Polarizer (" + aMat.getLocal() + ")"                 , "Basic Machines"                      , 20427, 20001, aClass, aMat.mToolQuality, 16, aMachine     , UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS,   4.0F, NBT_RESISTANCE,   4.0F, NBT_COLOR, UT.Code.getRGBInt(aMat.fRGBaSolid), NBT_INPUT,   V[6], NBT_TEXTURE, "polarizer", NBT_ENERGY_ACCEPTED, TD.Energy.MU, NBT_RECIPEMAP, RM.Polarizer, NBT_INV_SIDE_IN, SBIT_L, NBT_INV_SIDE_AUTO_IN, SIDE_LEFT, NBT_INV_SIDE_OUT, SBIT_R, NBT_INV_SIDE_AUTO_OUT, SIDE_RIGHT, NBT_ENERGY_ACCEPTED_SIDES, SBIT_U|SBIT_D), "TwT", "PMP", "TdT", 'M', OP.casingMachine.dat(aMat), 'P', OP.plate.dat(aMat), 'T', OP.screw.dat(aMat));
		aMat = MT.DATA.Electric_T[7];   aRegistry.add("Polarizer (" + aMat.getLocal() + ")"                 , "Basic Machines"                      , 20428, 20001, aClass, aMat.mToolQuality, 16, aMachine     , UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS,   4.0F, NBT_RESISTANCE,   4.0F, NBT_COLOR, UT.Code.getRGBInt(aMat.fRGBaSolid), NBT_INPUT,   V[7], NBT_TEXTURE, "polarizer", NBT_ENERGY_ACCEPTED, TD.Energy.MU, NBT_RECIPEMAP, RM.Polarizer, NBT_INV_SIDE_IN, SBIT_L, NBT_INV_SIDE_AUTO_IN, SIDE_LEFT, NBT_INV_SIDE_OUT, SBIT_R, NBT_INV_SIDE_AUTO_OUT, SIDE_RIGHT, NBT_ENERGY_ACCEPTED_SIDES, SBIT_U|SBIT_D), "TwT", "PMP", "TdT", 'M', OP.casingMachine.dat(aMat), 'P', OP.plate.dat(aMat), 'T', OP.screw.dat(aMat));
		aMat = MT.DATA.Electric_T[8];   aRegistry.add("Polarizer (" + aMat.getLocal() + ")"                 , "Basic Machines"                      , 20429, 20001, aClass, aMat.mToolQuality, 16, aMachine     , UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS,   4.0F, NBT_RESISTANCE,   4.0F, NBT_COLOR, UT.Code.getRGBInt(aMat.fRGBaSolid), NBT_INPUT,   V[8], NBT_TEXTURE, "polarizer", NBT_ENERGY_ACCEPTED, TD.Energy.MU, NBT_RECIPEMAP, RM.Polarizer, NBT_INV_SIDE_IN, SBIT_L, NBT_INV_SIDE_AUTO_IN, SIDE_LEFT, NBT_INV_SIDE_OUT, SBIT_R, NBT_INV_SIDE_AUTO_OUT, SIDE_RIGHT, NBT_ENERGY_ACCEPTED_SIDES, SBIT_U|SBIT_D), "TwT", "PMP", "TdT", 'M', OP.casingMachine.dat(aMat), 'P', OP.plate.dat(aMat), 'T', OP.screw.dat(aMat));
		aMat = MT.DATA.Electric_T[9];   aRegistry.add("Polarizer (" + aMat.getLocal() + ")"                 , "Basic Machines"                      , 20430, 20001, aClass, aMat.mToolQuality, 16, aMachine     , UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS,   4.0F, NBT_RESISTANCE,   4.0F, NBT_COLOR, UT.Code.getRGBInt(aMat.fRGBaSolid), NBT_INPUT,   V[9], NBT_TEXTURE, "polarizer", NBT_ENERGY_ACCEPTED, TD.Energy.MU, NBT_RECIPEMAP, RM.Polarizer, NBT_INV_SIDE_IN, SBIT_L, NBT_INV_SIDE_AUTO_IN, SIDE_LEFT, NBT_INV_SIDE_OUT, SBIT_R, NBT_INV_SIDE_AUTO_OUT, SIDE_RIGHT, NBT_ENERGY_ACCEPTED_SIDES, SBIT_U|SBIT_D), "TwT", "PMP", "TdT", 'M', OP.casingMachine.dat(aMat), 'P', OP.plate.dat(aMat), 'T', OP.screw.dat(aMat));
		aMat = MT.DATA.Electric_T[10];   aRegistry.add("Polarizer (" + aMat.getLocal() + ")"                 , "Basic Machines"                      , 20431, 20001, aClass, aMat.mToolQuality, 16, aMachine     , UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS,   4.0F, NBT_RESISTANCE,   4.0F, NBT_COLOR, UT.Code.getRGBInt(aMat.fRGBaSolid), NBT_INPUT,   V[10], NBT_TEXTURE, "polarizer", NBT_ENERGY_ACCEPTED, TD.Energy.MU, NBT_RECIPEMAP, RM.Polarizer, NBT_INV_SIDE_IN, SBIT_L, NBT_INV_SIDE_AUTO_IN, SIDE_LEFT, NBT_INV_SIDE_OUT, SBIT_R, NBT_INV_SIDE_AUTO_OUT, SIDE_RIGHT, NBT_ENERGY_ACCEPTED_SIDES, SBIT_U|SBIT_D), "TwT", "PMP", "TdT", 'M', OP.casingMachine.dat(aMat), 'P', OP.plate.dat(aMat), 'T', OP.screw.dat(aMat));
		aMat = MT.DATA.Electric_T[11];   aRegistry.add("Polarizer (" + aMat.getLocal() + ")"                 , "Basic Machines"                      , 20432, 20001, aClass, aMat.mToolQuality, 16, aMachine     , UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS,   4.0F, NBT_RESISTANCE,   4.0F, NBT_COLOR, UT.Code.getRGBInt(aMat.fRGBaSolid), NBT_INPUT,   V[11], NBT_TEXTURE, "polarizer", NBT_ENERGY_ACCEPTED, TD.Energy.MU, NBT_RECIPEMAP, RM.Polarizer, NBT_INV_SIDE_IN, SBIT_L, NBT_INV_SIDE_AUTO_IN, SIDE_LEFT, NBT_INV_SIDE_OUT, SBIT_R, NBT_INV_SIDE_AUTO_OUT, SIDE_RIGHT, NBT_ENERGY_ACCEPTED_SIDES, SBIT_U|SBIT_D), "TwT", "PMP", "TdT", 'M', OP.casingMachine.dat(aMat), 'P', OP.plate.dat(aMat), 'T', OP.screw.dat(aMat));
		aMat = MT.DATA.Electric_T[12];   aRegistry.add("Polarizer (" + aMat.getLocal() + ")"                 , "Basic Machines"                      , 20433, 20001, aClass, aMat.mToolQuality, 16, aMachine     , UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS,   4.0F, NBT_RESISTANCE,   4.0F, NBT_COLOR, UT.Code.getRGBInt(aMat.fRGBaSolid), NBT_INPUT,   V[12], NBT_TEXTURE, "polarizer", NBT_ENERGY_ACCEPTED, TD.Energy.MU, NBT_RECIPEMAP, RM.Polarizer, NBT_INV_SIDE_IN, SBIT_L, NBT_INV_SIDE_AUTO_IN, SIDE_LEFT, NBT_INV_SIDE_OUT, SBIT_R, NBT_INV_SIDE_AUTO_OUT, SIDE_RIGHT, NBT_ENERGY_ACCEPTED_SIDES, SBIT_U|SBIT_D), "TwT", "PMP", "TdT", 'M', OP.casingMachine.dat(aMat), 'P', OP.plate.dat(aMat), 'T', OP.screw.dat(aMat));
		aMat = MT.DATA.Electric_T[13];   aRegistry.add("Polarizer (" + aMat.getLocal() + ")"                 , "Basic Machines"                      , 20434, 20001, aClass, aMat.mToolQuality, 16, aMachine     , UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS,   4.0F, NBT_RESISTANCE,   4.0F, NBT_COLOR, UT.Code.getRGBInt(aMat.fRGBaSolid), NBT_INPUT,   V[13], NBT_TEXTURE, "polarizer", NBT_ENERGY_ACCEPTED, TD.Energy.MU, NBT_RECIPEMAP, RM.Polarizer, NBT_INV_SIDE_IN, SBIT_L, NBT_INV_SIDE_AUTO_IN, SIDE_LEFT, NBT_INV_SIDE_OUT, SBIT_R, NBT_INV_SIDE_AUTO_OUT, SIDE_RIGHT, NBT_ENERGY_ACCEPTED_SIDES, SBIT_U|SBIT_D), "TwT", "PMP", "TdT", 'M', OP.casingMachine.dat(aMat), 'P', OP.plate.dat(aMat), 'T', OP.screw.dat(aMat));
		aMat = MT.DATA.Electric_T[14];   aRegistry.add("Polarizer (" + aMat.getLocal() + ")"                 , "Basic Machines"                      , 20435, 20001, aClass, aMat.mToolQuality, 16, aMachine     , UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS,   4.0F, NBT_RESISTANCE,   4.0F, NBT_COLOR, UT.Code.getRGBInt(aMat.fRGBaSolid), NBT_INPUT,   V[14], NBT_TEXTURE, "polarizer", NBT_ENERGY_ACCEPTED, TD.Energy.MU, NBT_RECIPEMAP, RM.Polarizer, NBT_INV_SIDE_IN, SBIT_L, NBT_INV_SIDE_AUTO_IN, SIDE_LEFT, NBT_INV_SIDE_OUT, SBIT_R, NBT_INV_SIDE_AUTO_OUT, SIDE_RIGHT, NBT_ENERGY_ACCEPTED_SIDES, SBIT_U|SBIT_D), "TwT", "PMP", "TdT", 'M', OP.casingMachine.dat(aMat), 'P', OP.plate.dat(aMat), 'T', OP.screw.dat(aMat));
		aMat = MT.DATA.Electric_T[15];   aRegistry.add("Polarizer (" + aMat.getLocal() + ")"                 , "Basic Machines"                      , 20436, 20001, aClass, aMat.mToolQuality, 16, aMachine     , UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS,   4.0F, NBT_RESISTANCE,   4.0F, NBT_COLOR, UT.Code.getRGBInt(aMat.fRGBaSolid), NBT_INPUT,   V[15], NBT_TEXTURE, "polarizer", NBT_ENERGY_ACCEPTED, TD.Energy.MU, NBT_RECIPEMAP, RM.Polarizer, NBT_INV_SIDE_IN, SBIT_L, NBT_INV_SIDE_AUTO_IN, SIDE_LEFT, NBT_INV_SIDE_OUT, SBIT_R, NBT_INV_SIDE_AUTO_OUT, SIDE_RIGHT, NBT_ENERGY_ACCEPTED_SIDES, SBIT_U|SBIT_D), "TwT", "PMP", "TdT", 'M', OP.casingMachine.dat(aMat), 'P', OP.plate.dat(aMat), 'T', OP.screw.dat(aMat));

		aClass = MultiTileEntityBasicMachine.class;
		aMat = MT.DATA.Heat_T[0];    aRegistry.add("Press (" + aMat.getLocal() + ")"                     , "Basic Machines"                      , 20441, 20001, aClass, aMat.mToolQuality, 16, aMachine     , UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS, HARDNESS[0], NBT_RESISTANCE, HARDNESS[0], NBT_COLOR, UT.Code.getRGBInt(aMat.fRGBaSolid), NBT_INPUT, V[0], NBT_TEXTURE, "press", NBT_ENERGY_ACCEPTED, TD.Energy.KU, NBT_RECIPEMAP, RM.Press, NBT_INV_SIDE_IN, SBIT_L, NBT_INV_SIDE_AUTO_IN, SIDE_LEFT, NBT_INV_SIDE_OUT, SBIT_R, NBT_INV_SIDE_AUTO_OUT, SIDE_RIGHT, NBT_ENERGY_ACCEPTED_SIDES, SBIT_U, NBT_PARALLEL, 1, NBT_PARALLEL_DURATION, T), "RS", "PM", "Pw", 'M', OP.casingMachine.dat(aMat), 'P', OP.plateDouble.dat(aMat), 'S', OP.spring.dat(aMat), 'R', OP.stick.dat(aMat));
		aMat = MT.DATA.Heat_T[1];    aRegistry.add("Press (" + aMat.getLocal() + ")"                     , "Basic Machines"                      , 20442, 20001, aClass, aMat.mToolQuality, 16, aMachine     , UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS, HARDNESS[1], NBT_RESISTANCE, HARDNESS[1], NBT_COLOR, UT.Code.getRGBInt(aMat.fRGBaSolid), NBT_INPUT, V[1], NBT_TEXTURE, "press", NBT_ENERGY_ACCEPTED, TD.Energy.KU, NBT_RECIPEMAP, RM.Press, NBT_INV_SIDE_IN, SBIT_L, NBT_INV_SIDE_AUTO_IN, SIDE_LEFT, NBT_INV_SIDE_OUT, SBIT_R, NBT_INV_SIDE_AUTO_OUT, SIDE_RIGHT, NBT_ENERGY_ACCEPTED_SIDES, SBIT_U, NBT_PARALLEL, 1, NBT_PARALLEL_DURATION, T), "RS", "PM", "Pw", 'M', OP.casingMachine.dat(aMat), 'P', OP.plateDouble.dat(aMat), 'S', OP.spring.dat(aMat), 'R', OP.stick.dat(aMat));
		aMat = MT.DATA.Heat_T[2];    aRegistry.add("Press (" + aMat.getLocal() + ")"                     , "Basic Machines"                      , 20443, 20001, aClass, aMat.mToolQuality, 16, aMachine     , UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS, HARDNESS[2], NBT_RESISTANCE, HARDNESS[2], NBT_COLOR, UT.Code.getRGBInt(aMat.fRGBaSolid), NBT_INPUT, V[2], NBT_TEXTURE, "press", NBT_ENERGY_ACCEPTED, TD.Energy.KU, NBT_RECIPEMAP, RM.Press, NBT_INV_SIDE_IN, SBIT_L, NBT_INV_SIDE_AUTO_IN, SIDE_LEFT, NBT_INV_SIDE_OUT, SBIT_R, NBT_INV_SIDE_AUTO_OUT, SIDE_RIGHT, NBT_ENERGY_ACCEPTED_SIDES, SBIT_U, NBT_PARALLEL, 2, NBT_PARALLEL_DURATION, T), "RS", "PM", "Pw", 'M', OP.casingMachine.dat(aMat), 'P', OP.plateDouble.dat(aMat), 'S', OP.spring.dat(aMat), 'R', OP.stick.dat(aMat));
		aMat = MT.DATA.Heat_T[3];    aRegistry.add("Press (" + aMat.getLocal() + ")"                     , "Basic Machines"                      , 20444, 20001, aClass, aMat.mToolQuality, 16, aMachine     , UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS, HARDNESS[3], NBT_RESISTANCE, HARDNESS[3], NBT_COLOR, UT.Code.getRGBInt(aMat.fRGBaSolid), NBT_INPUT, V[3], NBT_TEXTURE, "press", NBT_ENERGY_ACCEPTED, TD.Energy.KU, NBT_RECIPEMAP, RM.Press, NBT_INV_SIDE_IN, SBIT_L, NBT_INV_SIDE_AUTO_IN, SIDE_LEFT, NBT_INV_SIDE_OUT, SBIT_R, NBT_INV_SIDE_AUTO_OUT, SIDE_RIGHT, NBT_ENERGY_ACCEPTED_SIDES, SBIT_U, NBT_PARALLEL, 4, NBT_PARALLEL_DURATION, T), "RS", "PM", "Pw", 'M', OP.casingMachine.dat(aMat), 'P', OP.plateDouble.dat(aMat), 'S', OP.spring.dat(aMat), 'R', OP.stick.dat(aMat));
		aMat = MT.DATA.Heat_T[4];    aRegistry.add("Press (" + aMat.getLocal() + ")"                     , "Basic Machines"                      , 20445, 20001, aClass, aMat.mToolQuality, 16, aMachine     , UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS, HARDNESS[4], NBT_RESISTANCE, HARDNESS[4], NBT_COLOR, UT.Code.getRGBInt(aMat.fRGBaSolid), NBT_INPUT, V[4], NBT_TEXTURE, "press", NBT_ENERGY_ACCEPTED, TD.Energy.KU, NBT_RECIPEMAP, RM.Press, NBT_INV_SIDE_IN, SBIT_L, NBT_INV_SIDE_AUTO_IN, SIDE_LEFT, NBT_INV_SIDE_OUT, SBIT_R, NBT_INV_SIDE_AUTO_OUT, SIDE_RIGHT, NBT_ENERGY_ACCEPTED_SIDES, SBIT_U, NBT_PARALLEL, 8, NBT_PARALLEL_DURATION, T), "RS", "PM", "Pw", 'M', OP.casingMachine.dat(aMat), 'P', OP.plateDouble.dat(aMat), 'S', OP.spring.dat(aMat), 'R', OP.stick.dat(aMat));
		aMat = MT.DATA.Heat_T[5];    aRegistry.add("Press (" + aMat.getLocal() + ")"                     , "Basic Machines"                      , 20446, 20001, aClass, aMat.mToolQuality, 16, aMachine     , UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS, HARDNESS[5], NBT_RESISTANCE, HARDNESS[5], NBT_COLOR, UT.Code.getRGBInt(aMat.fRGBaSolid), NBT_INPUT, V[5], NBT_TEXTURE, "press", NBT_ENERGY_ACCEPTED, TD.Energy.KU, NBT_RECIPEMAP, RM.Press, NBT_INV_SIDE_IN, SBIT_L, NBT_INV_SIDE_AUTO_IN, SIDE_LEFT, NBT_INV_SIDE_OUT, SBIT_R, NBT_INV_SIDE_AUTO_OUT, SIDE_RIGHT, NBT_ENERGY_ACCEPTED_SIDES, SBIT_U, NBT_PARALLEL, 16, NBT_PARALLEL_DURATION, T), "RS", "PM", "Pw", 'M', OP.casingMachine.dat(aMat), 'P', OP.plateDouble.dat(aMat), 'S', OP.spring.dat(aMat), 'R', OP.stick.dat(aMat));
		aMat = MT.DATA.Heat_T[6];    aRegistry.add("Press (" + aMat.getLocal() + ")"                     , "Basic Machines"                      , 20447, 20001, aClass, aMat.mToolQuality, 16, aMachine     , UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS, HARDNESS[6], NBT_RESISTANCE, HARDNESS[6], NBT_COLOR, UT.Code.getRGBInt(aMat.fRGBaSolid), NBT_INPUT, V[6], NBT_TEXTURE, "press", NBT_ENERGY_ACCEPTED, TD.Energy.KU, NBT_RECIPEMAP, RM.Press, NBT_INV_SIDE_IN, SBIT_L, NBT_INV_SIDE_AUTO_IN, SIDE_LEFT, NBT_INV_SIDE_OUT, SBIT_R, NBT_INV_SIDE_AUTO_OUT, SIDE_RIGHT, NBT_ENERGY_ACCEPTED_SIDES, SBIT_U, NBT_PARALLEL, 32, NBT_PARALLEL_DURATION, T), "RS", "PM", "Pw", 'M', OP.casingMachine.dat(aMat), 'P', OP.plateDouble.dat(aMat), 'S', OP.spring.dat(aMat), 'R', OP.stick.dat(aMat));
		aMat = MT.DATA.Heat_T[7];    aRegistry.add("Press (" + aMat.getLocal() + ")"                     , "Basic Machines"                      , 20448, 20001, aClass, aMat.mToolQuality, 16, aMachine     , UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS, HARDNESS[7], NBT_RESISTANCE, HARDNESS[7], NBT_COLOR, UT.Code.getRGBInt(aMat.fRGBaSolid), NBT_INPUT, V[7], NBT_TEXTURE, "press", NBT_ENERGY_ACCEPTED, TD.Energy.KU, NBT_RECIPEMAP, RM.Press, NBT_INV_SIDE_IN, SBIT_L, NBT_INV_SIDE_AUTO_IN, SIDE_LEFT, NBT_INV_SIDE_OUT, SBIT_R, NBT_INV_SIDE_AUTO_OUT, SIDE_RIGHT, NBT_ENERGY_ACCEPTED_SIDES, SBIT_U, NBT_PARALLEL, 64, NBT_PARALLEL_DURATION, T), "RS", "PM", "Pw", 'M', OP.casingMachine.dat(aMat), 'P', OP.plateDouble.dat(aMat), 'S', OP.spring.dat(aMat), 'R', OP.stick.dat(aMat));
		aMat = MT.DATA.Heat_T[8];    aRegistry.add("Press (" + aMat.getLocal() + ")"                     , "Basic Machines"                      , 20449, 20001, aClass, aMat.mToolQuality, 16, aMachine     , UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS, HARDNESS[8], NBT_RESISTANCE, HARDNESS[8], NBT_COLOR, UT.Code.getRGBInt(aMat.fRGBaSolid), NBT_INPUT, V[8], NBT_TEXTURE, "press", NBT_ENERGY_ACCEPTED, TD.Energy.KU, NBT_RECIPEMAP, RM.Press, NBT_INV_SIDE_IN, SBIT_L, NBT_INV_SIDE_AUTO_IN, SIDE_LEFT, NBT_INV_SIDE_OUT, SBIT_R, NBT_INV_SIDE_AUTO_OUT, SIDE_RIGHT, NBT_ENERGY_ACCEPTED_SIDES, SBIT_U, NBT_PARALLEL, 64, NBT_PARALLEL_DURATION, T), "RS", "PM", "Pw", 'M', OP.casingMachine.dat(aMat), 'P', OP.plateDouble.dat(aMat), 'S', OP.spring.dat(aMat), 'R', OP.stick.dat(aMat));
		aMat = MT.DATA.Heat_T[9];    aRegistry.add("Press (" + aMat.getLocal() + ")"                     , "Basic Machines"                      , 20450, 20001, aClass, aMat.mToolQuality, 16, aMachine     , UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS, HARDNESS[9], NBT_RESISTANCE, HARDNESS[9], NBT_COLOR, UT.Code.getRGBInt(aMat.fRGBaSolid), NBT_INPUT, V[9], NBT_TEXTURE, "press", NBT_ENERGY_ACCEPTED, TD.Energy.KU, NBT_RECIPEMAP, RM.Press, NBT_INV_SIDE_IN, SBIT_L, NBT_INV_SIDE_AUTO_IN, SIDE_LEFT, NBT_INV_SIDE_OUT, SBIT_R, NBT_INV_SIDE_AUTO_OUT, SIDE_RIGHT, NBT_ENERGY_ACCEPTED_SIDES, SBIT_U, NBT_PARALLEL, 64, NBT_PARALLEL_DURATION, T), "RS", "PM", "Pw", 'M', OP.casingMachine.dat(aMat), 'P', OP.plateDouble.dat(aMat), 'S', OP.spring.dat(aMat), 'R', OP.stick.dat(aMat));
		aMat = MT.DATA.Heat_T[10];    aRegistry.add("Press (" + aMat.getLocal() + ")"                     , "Basic Machines"                      , 20451, 20001, aClass, aMat.mToolQuality, 16, aMachine     , UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS, HARDNESS[10], NBT_RESISTANCE, HARDNESS[10], NBT_COLOR, UT.Code.getRGBInt(aMat.fRGBaSolid), NBT_INPUT, V[10], NBT_TEXTURE, "press", NBT_ENERGY_ACCEPTED, TD.Energy.KU, NBT_RECIPEMAP, RM.Press, NBT_INV_SIDE_IN, SBIT_L, NBT_INV_SIDE_AUTO_IN, SIDE_LEFT, NBT_INV_SIDE_OUT, SBIT_R, NBT_INV_SIDE_AUTO_OUT, SIDE_RIGHT, NBT_ENERGY_ACCEPTED_SIDES, SBIT_U, NBT_PARALLEL, 64, NBT_PARALLEL_DURATION, T), "RS", "PM", "Pw", 'M', OP.casingMachine.dat(aMat), 'P', OP.plateDouble.dat(aMat), 'S', OP.spring.dat(aMat), 'R', OP.stick.dat(aMat));
		aMat = MT.DATA.Heat_T[11];    aRegistry.add("Press (" + aMat.getLocal() + ")"                     , "Basic Machines"                      , 20452, 20001, aClass, aMat.mToolQuality, 16, aMachine     , UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS, HARDNESS[11], NBT_RESISTANCE, HARDNESS[11], NBT_COLOR, UT.Code.getRGBInt(aMat.fRGBaSolid), NBT_INPUT, V[11], NBT_TEXTURE, "press", NBT_ENERGY_ACCEPTED, TD.Energy.KU, NBT_RECIPEMAP, RM.Press, NBT_INV_SIDE_IN, SBIT_L, NBT_INV_SIDE_AUTO_IN, SIDE_LEFT, NBT_INV_SIDE_OUT, SBIT_R, NBT_INV_SIDE_AUTO_OUT, SIDE_RIGHT, NBT_ENERGY_ACCEPTED_SIDES, SBIT_U, NBT_PARALLEL, 64, NBT_PARALLEL_DURATION, T), "RS", "PM", "Pw", 'M', OP.casingMachine.dat(aMat), 'P', OP.plateDouble.dat(aMat), 'S', OP.spring.dat(aMat), 'R', OP.stick.dat(aMat));
		aMat = MT.DATA.Heat_T[12];    aRegistry.add("Press (" + aMat.getLocal() + ")"                     , "Basic Machines"                      , 20453, 20001, aClass, aMat.mToolQuality, 16, aMachine     , UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS, HARDNESS[12], NBT_RESISTANCE, HARDNESS[12], NBT_COLOR, UT.Code.getRGBInt(aMat.fRGBaSolid), NBT_INPUT, V[12], NBT_TEXTURE, "press", NBT_ENERGY_ACCEPTED, TD.Energy.KU, NBT_RECIPEMAP, RM.Press, NBT_INV_SIDE_IN, SBIT_L, NBT_INV_SIDE_AUTO_IN, SIDE_LEFT, NBT_INV_SIDE_OUT, SBIT_R, NBT_INV_SIDE_AUTO_OUT, SIDE_RIGHT, NBT_ENERGY_ACCEPTED_SIDES, SBIT_U, NBT_PARALLEL, 64, NBT_PARALLEL_DURATION, T), "RS", "PM", "Pw", 'M', OP.casingMachine.dat(aMat), 'P', OP.plateDouble.dat(aMat), 'S', OP.spring.dat(aMat), 'R', OP.stick.dat(aMat));
		aMat = MT.DATA.Heat_T[13];    aRegistry.add("Press (" + aMat.getLocal() + ")"                     , "Basic Machines"                      , 20454, 20001, aClass, aMat.mToolQuality, 16, aMachine     , UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS, HARDNESS[13], NBT_RESISTANCE, HARDNESS[13], NBT_COLOR, UT.Code.getRGBInt(aMat.fRGBaSolid), NBT_INPUT, V[13], NBT_TEXTURE, "press", NBT_ENERGY_ACCEPTED, TD.Energy.KU, NBT_RECIPEMAP, RM.Press, NBT_INV_SIDE_IN, SBIT_L, NBT_INV_SIDE_AUTO_IN, SIDE_LEFT, NBT_INV_SIDE_OUT, SBIT_R, NBT_INV_SIDE_AUTO_OUT, SIDE_RIGHT, NBT_ENERGY_ACCEPTED_SIDES, SBIT_U, NBT_PARALLEL, 64, NBT_PARALLEL_DURATION, T), "RS", "PM", "Pw", 'M', OP.casingMachine.dat(aMat), 'P', OP.plateDouble.dat(aMat), 'S', OP.spring.dat(aMat), 'R', OP.stick.dat(aMat));
		aMat = MT.DATA.Heat_T[14];    aRegistry.add("Press (" + aMat.getLocal() + ")"                     , "Basic Machines"                      , 20455, 20001, aClass, aMat.mToolQuality, 16, aMachine     , UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS, HARDNESS[14], NBT_RESISTANCE, HARDNESS[14], NBT_COLOR, UT.Code.getRGBInt(aMat.fRGBaSolid), NBT_INPUT, V[14], NBT_TEXTURE, "press", NBT_ENERGY_ACCEPTED, TD.Energy.KU, NBT_RECIPEMAP, RM.Press, NBT_INV_SIDE_IN, SBIT_L, NBT_INV_SIDE_AUTO_IN, SIDE_LEFT, NBT_INV_SIDE_OUT, SBIT_R, NBT_INV_SIDE_AUTO_OUT, SIDE_RIGHT, NBT_ENERGY_ACCEPTED_SIDES, SBIT_U, NBT_PARALLEL, 64, NBT_PARALLEL_DURATION, T), "RS", "PM", "Pw", 'M', OP.casingMachine.dat(aMat), 'P', OP.plateDouble.dat(aMat), 'S', OP.spring.dat(aMat), 'R', OP.stick.dat(aMat));
		aMat = MT.DATA.Heat_T[15];    aRegistry.add("Press (" + aMat.getLocal() + ")"                     , "Basic Machines"                      , 20456, 20001, aClass, aMat.mToolQuality, 16, aMachine     , UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS, HARDNESS[15], NBT_RESISTANCE, HARDNESS[15], NBT_COLOR, UT.Code.getRGBInt(aMat.fRGBaSolid), NBT_INPUT, V[15], NBT_TEXTURE, "press", NBT_ENERGY_ACCEPTED, TD.Energy.KU, NBT_RECIPEMAP, RM.Press, NBT_INV_SIDE_IN, SBIT_L, NBT_INV_SIDE_AUTO_IN, SIDE_LEFT, NBT_INV_SIDE_OUT, SBIT_R, NBT_INV_SIDE_AUTO_OUT, SIDE_RIGHT, NBT_ENERGY_ACCEPTED_SIDES, SBIT_U, NBT_PARALLEL, 64, NBT_PARALLEL_DURATION, T), "RS", "PM", "Pw", 'M', OP.casingMachine.dat(aMat), 'P', OP.plateDouble.dat(aMat), 'S', OP.spring.dat(aMat), 'R', OP.stick.dat(aMat));

		aClass = MultiTileEntityBasicMachine.class;
		aMat = MT.DATA.Heat_T[0];       aRegistry.add("Smelter (" + aMat.getLocal() + ")"                   , "Basic Machines"                      , 20461, 20001, aClass, aMat.mToolQuality, 16, aMachine     , UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS, HARDNESS[0], NBT_RESISTANCE, HARDNESS[0], NBT_COLOR, UT.Code.getRGBInt(aMat.fRGBaSolid), NBT_INPUT, V[0], NBT_TEXTURE, "smelter", NBT_ENERGY_ACCEPTED, TD.Energy.HU, NBT_RECIPEMAP, RM.Smelter, NBT_CHEAP_OVERCLOCKING, T, NBT_INV_SIDE_IN, SBIT_U, NBT_INV_SIDE_AUTO_IN, SIDE_TOP, NBT_INV_SIDE_OUT, SBIT_L, NBT_INV_SIDE_AUTO_OUT, SIDE_LEFT, NBT_TANK_SIDE_IN, SBIT_U, NBT_TANK_SIDE_AUTO_IN, SIDE_TOP, NBT_TANK_SIDE_OUT, SBIT_R, NBT_TANK_SIDE_AUTO_OUT, SIDE_RIGHT, NBT_ENERGY_ACCEPTED_SIDES, SBIT_D, NBT_PARALLEL,  1, NBT_PARALLEL_DURATION, T), "wUh", "PMP", "BCB", 'M', OP.casingMachine.dat(aMat), 'U', aRegistry.getItem(1024), 'C', OP.plateDouble.dat(ANY.Cu), 'B', Blocks.brick_block, 'P', OP.pipeMedium.dat(aMat));
		aMat = MT.DATA.Heat_T[1];       aRegistry.add("Smelter (" + aMat.getLocal() + ")"                   , "Basic Machines"                      , 20462, 20001, aClass, aMat.mToolQuality, 16, aMachine     , UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS, HARDNESS[1], NBT_RESISTANCE, HARDNESS[1], NBT_COLOR, UT.Code.getRGBInt(aMat.fRGBaSolid), NBT_INPUT, V[1], NBT_TEXTURE, "smelter", NBT_ENERGY_ACCEPTED, TD.Energy.HU, NBT_RECIPEMAP, RM.Smelter, NBT_CHEAP_OVERCLOCKING, T, NBT_INV_SIDE_IN, SBIT_U, NBT_INV_SIDE_AUTO_IN, SIDE_TOP, NBT_INV_SIDE_OUT, SBIT_L, NBT_INV_SIDE_AUTO_OUT, SIDE_LEFT, NBT_TANK_SIDE_IN, SBIT_U, NBT_TANK_SIDE_AUTO_IN, SIDE_TOP, NBT_TANK_SIDE_OUT, SBIT_R, NBT_TANK_SIDE_AUTO_OUT, SIDE_RIGHT, NBT_ENERGY_ACCEPTED_SIDES, SBIT_D, NBT_PARALLEL,  1, NBT_PARALLEL_DURATION, T), "wUh", "PMP", "BCB", 'M', OP.casingMachine.dat(aMat), 'U', aRegistry.getItem(1024), 'C', OP.plateDouble.dat(ANY.Cu), 'B', Blocks.brick_block, 'P', OP.pipeMedium.dat(aMat));
		aMat = MT.DATA.Heat_T[2];       aRegistry.add("Smelter (" + aMat.getLocal() + ")"                   , "Basic Machines"                      , 20463, 20001, aClass, aMat.mToolQuality, 16, aMachine     , UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS, HARDNESS[2], NBT_RESISTANCE, HARDNESS[2], NBT_COLOR, UT.Code.getRGBInt(aMat.fRGBaSolid), NBT_INPUT, V[2], NBT_TEXTURE, "smelter", NBT_ENERGY_ACCEPTED, TD.Energy.HU, NBT_RECIPEMAP, RM.Smelter, NBT_CHEAP_OVERCLOCKING, T, NBT_INV_SIDE_IN, SBIT_U, NBT_INV_SIDE_AUTO_IN, SIDE_TOP, NBT_INV_SIDE_OUT, SBIT_L, NBT_INV_SIDE_AUTO_OUT, SIDE_LEFT, NBT_TANK_SIDE_IN, SBIT_U, NBT_TANK_SIDE_AUTO_IN, SIDE_TOP, NBT_TANK_SIDE_OUT, SBIT_R, NBT_TANK_SIDE_AUTO_OUT, SIDE_RIGHT, NBT_ENERGY_ACCEPTED_SIDES, SBIT_D, NBT_PARALLEL, 2, NBT_PARALLEL_DURATION, T), "wUh", "PMP", "BCB", 'M', OP.casingMachine.dat(aMat), 'U', aRegistry.getItem(1019), 'C', OP.plateDouble.dat(ANY.Cu), 'B', Blocks.brick_block, 'P', OP.pipeMedium.dat(aMat));
		aMat = MT.DATA.Heat_T[3];       aRegistry.add("Smelter (" + aMat.getLocal() + ")"                   , "Basic Machines"                      , 20464, 20001, aClass, aMat.mToolQuality, 16, aMachine     , UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS, HARDNESS[3], NBT_RESISTANCE, HARDNESS[3], NBT_COLOR, UT.Code.getRGBInt(aMat.fRGBaSolid), NBT_INPUT, V[3], NBT_TEXTURE, "smelter", NBT_ENERGY_ACCEPTED, TD.Energy.HU, NBT_RECIPEMAP, RM.Smelter, NBT_CHEAP_OVERCLOCKING, T, NBT_INV_SIDE_IN, SBIT_U, NBT_INV_SIDE_AUTO_IN, SIDE_TOP, NBT_INV_SIDE_OUT, SBIT_L, NBT_INV_SIDE_AUTO_OUT, SIDE_LEFT, NBT_TANK_SIDE_IN, SBIT_U, NBT_TANK_SIDE_AUTO_IN, SIDE_TOP, NBT_TANK_SIDE_OUT, SBIT_R, NBT_TANK_SIDE_AUTO_OUT, SIDE_RIGHT, NBT_ENERGY_ACCEPTED_SIDES, SBIT_D, NBT_PARALLEL, 4, NBT_PARALLEL_DURATION, T), "wUh", "PMP", "BCB", 'M', OP.casingMachine.dat(aMat), 'U', aRegistry.getItem(1019), 'C', OP.plateDouble.dat(ANY.Cu), 'B', Blocks.brick_block, 'P', OP.pipeMedium.dat(aMat));
		aMat = MT.DATA.Heat_T[4];       aRegistry.add("Smelter (" + aMat.getLocal() + ")"                   , "Basic Machines"                      , 20465, 20001, aClass, aMat.mToolQuality, 16, aMachine     , UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS, HARDNESS[4], NBT_RESISTANCE, HARDNESS[4], NBT_COLOR, UT.Code.getRGBInt(aMat.fRGBaSolid), NBT_INPUT, V[4], NBT_TEXTURE, "smelter", NBT_ENERGY_ACCEPTED, TD.Energy.HU, NBT_RECIPEMAP, RM.Smelter, NBT_CHEAP_OVERCLOCKING, T, NBT_INV_SIDE_IN, SBIT_U, NBT_INV_SIDE_AUTO_IN, SIDE_TOP, NBT_INV_SIDE_OUT, SBIT_L, NBT_INV_SIDE_AUTO_OUT, SIDE_LEFT, NBT_TANK_SIDE_IN, SBIT_U, NBT_TANK_SIDE_AUTO_IN, SIDE_TOP, NBT_TANK_SIDE_OUT, SBIT_R, NBT_TANK_SIDE_AUTO_OUT, SIDE_RIGHT, NBT_ENERGY_ACCEPTED_SIDES, SBIT_D, NBT_PARALLEL, 8, NBT_PARALLEL_DURATION, T), "wUh", "PMP", "BCB", 'M', OP.casingMachine.dat(aMat), 'U', aRegistry.getItem(1043), 'C', OP.plateDouble.dat(ANY.Cu), 'B', Blocks.brick_block, 'P', OP.pipeMedium.dat(aMat));
		aMat = MT.DATA.Heat_T[5];       aRegistry.add("Smelter (" + aMat.getLocal() + ")"                   , "Basic Machines"                      , 20466, 20001, aClass, aMat.mToolQuality, 16, aMachine     , UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS, HARDNESS[5], NBT_RESISTANCE, HARDNESS[5], NBT_COLOR, UT.Code.getRGBInt(aMat.fRGBaSolid), NBT_INPUT, V[5], NBT_TEXTURE, "smelter", NBT_ENERGY_ACCEPTED, TD.Energy.HU, NBT_RECIPEMAP, RM.Smelter, NBT_CHEAP_OVERCLOCKING, T, NBT_INV_SIDE_IN, SBIT_U, NBT_INV_SIDE_AUTO_IN, SIDE_TOP, NBT_INV_SIDE_OUT, SBIT_L, NBT_INV_SIDE_AUTO_OUT, SIDE_LEFT, NBT_TANK_SIDE_IN, SBIT_U, NBT_TANK_SIDE_AUTO_IN, SIDE_TOP, NBT_TANK_SIDE_OUT, SBIT_R, NBT_TANK_SIDE_AUTO_OUT, SIDE_RIGHT, NBT_ENERGY_ACCEPTED_SIDES, SBIT_D, NBT_PARALLEL,  16, NBT_PARALLEL_DURATION, T), "wUh", "PMP", "BCB", 'M', OP.casingMachine.dat(aMat), 'U', aRegistry.getItem(1024), 'C', OP.plateDouble.dat(ANY.Cu), 'B', Blocks.brick_block, 'P', OP.pipeMedium.dat(aMat));
		aMat = MT.DATA.Heat_T[6];       aRegistry.add("Smelter (" + aMat.getLocal() + ")"                   , "Basic Machines"                      , 20467, 20001, aClass, aMat.mToolQuality, 16, aMachine     , UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS, HARDNESS[6], NBT_RESISTANCE, HARDNESS[6], NBT_COLOR, UT.Code.getRGBInt(aMat.fRGBaSolid), NBT_INPUT, V[6], NBT_TEXTURE, "smelter", NBT_ENERGY_ACCEPTED, TD.Energy.HU, NBT_RECIPEMAP, RM.Smelter, NBT_CHEAP_OVERCLOCKING, T, NBT_INV_SIDE_IN, SBIT_U, NBT_INV_SIDE_AUTO_IN, SIDE_TOP, NBT_INV_SIDE_OUT, SBIT_L, NBT_INV_SIDE_AUTO_OUT, SIDE_LEFT, NBT_TANK_SIDE_IN, SBIT_U, NBT_TANK_SIDE_AUTO_IN, SIDE_TOP, NBT_TANK_SIDE_OUT, SBIT_R, NBT_TANK_SIDE_AUTO_OUT, SIDE_RIGHT, NBT_ENERGY_ACCEPTED_SIDES, SBIT_D, NBT_PARALLEL,  32, NBT_PARALLEL_DURATION, T), "wUh", "PMP", "BCB", 'M', OP.casingMachine.dat(aMat), 'U', aRegistry.getItem(1024), 'C', OP.plateDouble.dat(ANY.Cu), 'B', Blocks.brick_block, 'P', OP.pipeMedium.dat(aMat));
		aMat = MT.DATA.Heat_T[7];       aRegistry.add("Smelter (" + aMat.getLocal() + ")"                   , "Basic Machines"                      , 20468, 20001, aClass, aMat.mToolQuality, 16, aMachine     , UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS, HARDNESS[7], NBT_RESISTANCE, HARDNESS[7], NBT_COLOR, UT.Code.getRGBInt(aMat.fRGBaSolid), NBT_INPUT, V[7], NBT_TEXTURE, "smelter", NBT_ENERGY_ACCEPTED, TD.Energy.HU, NBT_RECIPEMAP, RM.Smelter, NBT_CHEAP_OVERCLOCKING, T, NBT_INV_SIDE_IN, SBIT_U, NBT_INV_SIDE_AUTO_IN, SIDE_TOP, NBT_INV_SIDE_OUT, SBIT_L, NBT_INV_SIDE_AUTO_OUT, SIDE_LEFT, NBT_TANK_SIDE_IN, SBIT_U, NBT_TANK_SIDE_AUTO_IN, SIDE_TOP, NBT_TANK_SIDE_OUT, SBIT_R, NBT_TANK_SIDE_AUTO_OUT, SIDE_RIGHT, NBT_ENERGY_ACCEPTED_SIDES, SBIT_D, NBT_PARALLEL, 64, NBT_PARALLEL_DURATION, T), "wUh", "PMP", "BCB", 'M', OP.casingMachine.dat(aMat), 'U', aRegistry.getItem(1019), 'C', OP.plateDouble.dat(ANY.Cu), 'B', Blocks.brick_block, 'P', OP.pipeMedium.dat(aMat));
		aMat = MT.DATA.Heat_T[8];       aRegistry.add("Smelter (" + aMat.getLocal() + ")"                   , "Basic Machines"                      , 20469, 20001, aClass, aMat.mToolQuality, 16, aMachine     , UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS, HARDNESS[8], NBT_RESISTANCE, HARDNESS[8], NBT_COLOR, UT.Code.getRGBInt(aMat.fRGBaSolid), NBT_INPUT, V[8], NBT_TEXTURE, "smelter", NBT_ENERGY_ACCEPTED, TD.Energy.HU, NBT_RECIPEMAP, RM.Smelter, NBT_CHEAP_OVERCLOCKING, T, NBT_INV_SIDE_IN, SBIT_U, NBT_INV_SIDE_AUTO_IN, SIDE_TOP, NBT_INV_SIDE_OUT, SBIT_L, NBT_INV_SIDE_AUTO_OUT, SIDE_LEFT, NBT_TANK_SIDE_IN, SBIT_U, NBT_TANK_SIDE_AUTO_IN, SIDE_TOP, NBT_TANK_SIDE_OUT, SBIT_R, NBT_TANK_SIDE_AUTO_OUT, SIDE_RIGHT, NBT_ENERGY_ACCEPTED_SIDES, SBIT_D, NBT_PARALLEL, 64, NBT_PARALLEL_DURATION, T), "wUh", "PMP", "BCB", 'M', OP.casingMachine.dat(aMat), 'U', aRegistry.getItem(1019), 'C', OP.plateDouble.dat(ANY.Cu), 'B', Blocks.brick_block, 'P', OP.pipeMedium.dat(aMat));
		aMat = MT.DATA.Heat_T[9];       aRegistry.add("Smelter (" + aMat.getLocal() + ")"                   , "Basic Machines"                      , 20470, 20001, aClass, aMat.mToolQuality, 16, aMachine     , UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS, HARDNESS[9], NBT_RESISTANCE, HARDNESS[9], NBT_COLOR, UT.Code.getRGBInt(aMat.fRGBaSolid), NBT_INPUT, V[9], NBT_TEXTURE, "smelter", NBT_ENERGY_ACCEPTED, TD.Energy.HU, NBT_RECIPEMAP, RM.Smelter, NBT_CHEAP_OVERCLOCKING, T, NBT_INV_SIDE_IN, SBIT_U, NBT_INV_SIDE_AUTO_IN, SIDE_TOP, NBT_INV_SIDE_OUT, SBIT_L, NBT_INV_SIDE_AUTO_OUT, SIDE_LEFT, NBT_TANK_SIDE_IN, SBIT_U, NBT_TANK_SIDE_AUTO_IN, SIDE_TOP, NBT_TANK_SIDE_OUT, SBIT_R, NBT_TANK_SIDE_AUTO_OUT, SIDE_RIGHT, NBT_ENERGY_ACCEPTED_SIDES, SBIT_D, NBT_PARALLEL, 64, NBT_PARALLEL_DURATION, T), "wUh", "PMP", "BCB", 'M', OP.casingMachine.dat(aMat), 'U', aRegistry.getItem(1043), 'C', OP.plateDouble.dat(ANY.Cu), 'B', Blocks.brick_block, 'P', OP.pipeMedium.dat(aMat));
		aMat = MT.DATA.Heat_T[10];       aRegistry.add("Smelter (" + aMat.getLocal() + ")"                   , "Basic Machines"                      , 20471, 20001, aClass, aMat.mToolQuality, 16, aMachine     , UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS, HARDNESS[10], NBT_RESISTANCE, HARDNESS[10], NBT_COLOR, UT.Code.getRGBInt(aMat.fRGBaSolid), NBT_INPUT, V[10], NBT_TEXTURE, "smelter", NBT_ENERGY_ACCEPTED, TD.Energy.HU, NBT_RECIPEMAP, RM.Smelter, NBT_CHEAP_OVERCLOCKING, T, NBT_INV_SIDE_IN, SBIT_U, NBT_INV_SIDE_AUTO_IN, SIDE_TOP, NBT_INV_SIDE_OUT, SBIT_L, NBT_INV_SIDE_AUTO_OUT, SIDE_LEFT, NBT_TANK_SIDE_IN, SBIT_U, NBT_TANK_SIDE_AUTO_IN, SIDE_TOP, NBT_TANK_SIDE_OUT, SBIT_R, NBT_TANK_SIDE_AUTO_OUT, SIDE_RIGHT, NBT_ENERGY_ACCEPTED_SIDES, SBIT_D, NBT_PARALLEL, 64, NBT_PARALLEL_DURATION, T), "wUh", "PMP", "BCB", 'M', OP.casingMachine.dat(aMat), 'U', aRegistry.getItem(1024), 'C', OP.plateDouble.dat(ANY.Cu), 'B', Blocks.brick_block, 'P', OP.pipeMedium.dat(aMat));
		aMat = MT.DATA.Heat_T[11];       aRegistry.add("Smelter (" + aMat.getLocal() + ")"                   , "Basic Machines"                      , 20472, 20001, aClass, aMat.mToolQuality, 16, aMachine     , UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS, HARDNESS[11], NBT_RESISTANCE, HARDNESS[11], NBT_COLOR, UT.Code.getRGBInt(aMat.fRGBaSolid), NBT_INPUT, V[11], NBT_TEXTURE, "smelter", NBT_ENERGY_ACCEPTED, TD.Energy.HU, NBT_RECIPEMAP, RM.Smelter, NBT_CHEAP_OVERCLOCKING, T, NBT_INV_SIDE_IN, SBIT_U, NBT_INV_SIDE_AUTO_IN, SIDE_TOP, NBT_INV_SIDE_OUT, SBIT_L, NBT_INV_SIDE_AUTO_OUT, SIDE_LEFT, NBT_TANK_SIDE_IN, SBIT_U, NBT_TANK_SIDE_AUTO_IN, SIDE_TOP, NBT_TANK_SIDE_OUT, SBIT_R, NBT_TANK_SIDE_AUTO_OUT, SIDE_RIGHT, NBT_ENERGY_ACCEPTED_SIDES, SBIT_D, NBT_PARALLEL, 64, NBT_PARALLEL_DURATION, T), "wUh", "PMP", "BCB", 'M', OP.casingMachine.dat(aMat), 'U', aRegistry.getItem(1024), 'C', OP.plateDouble.dat(ANY.Cu), 'B', Blocks.brick_block, 'P', OP.pipeMedium.dat(aMat));
		aMat = MT.DATA.Heat_T[12];       aRegistry.add("Smelter (" + aMat.getLocal() + ")"                   , "Basic Machines"                      , 20473, 20001, aClass, aMat.mToolQuality, 16, aMachine     , UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS, HARDNESS[12], NBT_RESISTANCE, HARDNESS[12], NBT_COLOR, UT.Code.getRGBInt(aMat.fRGBaSolid), NBT_INPUT, V[12], NBT_TEXTURE, "smelter", NBT_ENERGY_ACCEPTED, TD.Energy.HU, NBT_RECIPEMAP, RM.Smelter, NBT_CHEAP_OVERCLOCKING, T, NBT_INV_SIDE_IN, SBIT_U, NBT_INV_SIDE_AUTO_IN, SIDE_TOP, NBT_INV_SIDE_OUT, SBIT_L, NBT_INV_SIDE_AUTO_OUT, SIDE_LEFT, NBT_TANK_SIDE_IN, SBIT_U, NBT_TANK_SIDE_AUTO_IN, SIDE_TOP, NBT_TANK_SIDE_OUT, SBIT_R, NBT_TANK_SIDE_AUTO_OUT, SIDE_RIGHT, NBT_ENERGY_ACCEPTED_SIDES, SBIT_D, NBT_PARALLEL, 64, NBT_PARALLEL_DURATION, T), "wUh", "PMP", "BCB", 'M', OP.casingMachine.dat(aMat), 'U', aRegistry.getItem(1019), 'C', OP.plateDouble.dat(ANY.Cu), 'B', Blocks.brick_block, 'P', OP.pipeMedium.dat(aMat));
		aMat = MT.DATA.Heat_T[13];       aRegistry.add("Smelter (" + aMat.getLocal() + ")"                   , "Basic Machines"                      , 20474, 20001, aClass, aMat.mToolQuality, 16, aMachine     , UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS, HARDNESS[13], NBT_RESISTANCE, HARDNESS[13], NBT_COLOR, UT.Code.getRGBInt(aMat.fRGBaSolid), NBT_INPUT, V[13], NBT_TEXTURE, "smelter", NBT_ENERGY_ACCEPTED, TD.Energy.HU, NBT_RECIPEMAP, RM.Smelter, NBT_CHEAP_OVERCLOCKING, T, NBT_INV_SIDE_IN, SBIT_U, NBT_INV_SIDE_AUTO_IN, SIDE_TOP, NBT_INV_SIDE_OUT, SBIT_L, NBT_INV_SIDE_AUTO_OUT, SIDE_LEFT, NBT_TANK_SIDE_IN, SBIT_U, NBT_TANK_SIDE_AUTO_IN, SIDE_TOP, NBT_TANK_SIDE_OUT, SBIT_R, NBT_TANK_SIDE_AUTO_OUT, SIDE_RIGHT, NBT_ENERGY_ACCEPTED_SIDES, SBIT_D, NBT_PARALLEL, 64, NBT_PARALLEL_DURATION, T), "wUh", "PMP", "BCB", 'M', OP.casingMachine.dat(aMat), 'U', aRegistry.getItem(1019), 'C', OP.plateDouble.dat(ANY.Cu), 'B', Blocks.brick_block, 'P', OP.pipeMedium.dat(aMat));
		aMat = MT.DATA.Heat_T[14];       aRegistry.add("Smelter (" + aMat.getLocal() + ")"                   , "Basic Machines"                      , 20475, 20001, aClass, aMat.mToolQuality, 16, aMachine     , UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS, HARDNESS[14], NBT_RESISTANCE, HARDNESS[14], NBT_COLOR, UT.Code.getRGBInt(aMat.fRGBaSolid), NBT_INPUT, V[14], NBT_TEXTURE, "smelter", NBT_ENERGY_ACCEPTED, TD.Energy.HU, NBT_RECIPEMAP, RM.Smelter, NBT_CHEAP_OVERCLOCKING, T, NBT_INV_SIDE_IN, SBIT_U, NBT_INV_SIDE_AUTO_IN, SIDE_TOP, NBT_INV_SIDE_OUT, SBIT_L, NBT_INV_SIDE_AUTO_OUT, SIDE_LEFT, NBT_TANK_SIDE_IN, SBIT_U, NBT_TANK_SIDE_AUTO_IN, SIDE_TOP, NBT_TANK_SIDE_OUT, SBIT_R, NBT_TANK_SIDE_AUTO_OUT, SIDE_RIGHT, NBT_ENERGY_ACCEPTED_SIDES, SBIT_D, NBT_PARALLEL, 64, NBT_PARALLEL_DURATION, T), "wUh", "PMP", "BCB", 'M', OP.casingMachine.dat(aMat), 'U', aRegistry.getItem(1043), 'C', OP.plateDouble.dat(ANY.Cu), 'B', Blocks.brick_block, 'P', OP.pipeMedium.dat(aMat));
		aMat = MT.DATA.Heat_T[15];       aRegistry.add("Smelter (" + aMat.getLocal() + ")"                   , "Basic Machines"                      , 20476, 20001, aClass, aMat.mToolQuality, 16, aMachine     , UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS, HARDNESS[15], NBT_RESISTANCE, HARDNESS[15], NBT_COLOR, UT.Code.getRGBInt(aMat.fRGBaSolid), NBT_INPUT, V[15], NBT_TEXTURE, "smelter", NBT_ENERGY_ACCEPTED, TD.Energy.HU, NBT_RECIPEMAP, RM.Smelter, NBT_CHEAP_OVERCLOCKING, T, NBT_INV_SIDE_IN, SBIT_U, NBT_INV_SIDE_AUTO_IN, SIDE_TOP, NBT_INV_SIDE_OUT, SBIT_L, NBT_INV_SIDE_AUTO_OUT, SIDE_LEFT, NBT_TANK_SIDE_IN, SBIT_U, NBT_TANK_SIDE_AUTO_IN, SIDE_TOP, NBT_TANK_SIDE_OUT, SBIT_R, NBT_TANK_SIDE_AUTO_OUT, SIDE_RIGHT, NBT_ENERGY_ACCEPTED_SIDES, SBIT_D, NBT_PARALLEL, 64, NBT_PARALLEL_DURATION, T), "wUh", "PMP", "BCB", 'M', OP.casingMachine.dat(aMat), 'U', aRegistry.getItem(1024), 'C', OP.plateDouble.dat(ANY.Cu), 'B', Blocks.brick_block, 'P', OP.pipeMedium.dat(aMat));

		aClass = MultiTileEntityBasicMachine.class;
		aMat = MT.DATA.Heat_T[0];       aRegistry.add("Crystallisation Crucible (" + aMat.getLocal() + ")"  , "Basic Machines"                      , 20481, 20001, aClass, aMat.mToolQuality, 16, aMachine     , UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS, HARDNESS[0], NBT_RESISTANCE, HARDNESS[0], NBT_COLOR, UT.Code.getRGBInt(aMat.fRGBaSolid), NBT_INPUT, V[0], NBT_TEXTURE, "crystallisationcrucible", NBT_ENERGY_ACCEPTED, TD.Energy.HU, NBT_RECIPEMAP, RM.CrystallisationCrucible, NBT_INV_SIDE_IN, SBIT_L|SBIT_B|SBIT_U, NBT_INV_SIDE_AUTO_IN, SIDE_TOP, NBT_INV_SIDE_OUT, SBIT_R, NBT_INV_SIDE_AUTO_OUT, SIDE_RIGHT, NBT_TANK_SIDE_IN, SBIT_L|SBIT_B|SBIT_U, NBT_TANK_SIDE_AUTO_IN, SIDE_LEFT, NBT_ENERGY_ACCEPTED_SIDES, SBIT_D), "wUh", "PMP", "BCB", 'M', OP.casingMachineDouble.dat(aMat), 'U', aRegistry.getItem(1018), 'C', OP.plateDouble.dat(ANY.Cu), 'B', Blocks.brick_block, 'P', OP.pipeMedium.dat(aMat));
		aMat = MT.DATA.Heat_T[1];       aRegistry.add("Crystallisation Crucible (" + aMat.getLocal() + ")"  , "Basic Machines"                      , 20482, 20001, aClass, aMat.mToolQuality, 16, aMachine     , UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS, HARDNESS[1], NBT_RESISTANCE, HARDNESS[1], NBT_COLOR, UT.Code.getRGBInt(aMat.fRGBaSolid), NBT_INPUT, V[1], NBT_TEXTURE, "crystallisationcrucible", NBT_ENERGY_ACCEPTED, TD.Energy.HU, NBT_RECIPEMAP, RM.CrystallisationCrucible, NBT_INV_SIDE_IN, SBIT_L|SBIT_B|SBIT_U, NBT_INV_SIDE_AUTO_IN, SIDE_TOP, NBT_INV_SIDE_OUT, SBIT_R, NBT_INV_SIDE_AUTO_OUT, SIDE_RIGHT, NBT_TANK_SIDE_IN, SBIT_L|SBIT_B|SBIT_U, NBT_TANK_SIDE_AUTO_IN, SIDE_LEFT, NBT_ENERGY_ACCEPTED_SIDES, SBIT_D), "wUh", "PMP", "BCB", 'M', OP.casingMachineDouble.dat(aMat), 'U', aRegistry.getItem(1018), 'C', OP.plateDouble.dat(ANY.Cu), 'B', Blocks.brick_block, 'P', OP.pipeMedium.dat(aMat));
		aMat = MT.DATA.Heat_T[2];       aRegistry.add("Crystallisation Crucible (" + aMat.getLocal() + ")"  , "Basic Machines"                      , 20483, 20001, aClass, aMat.mToolQuality, 16, aMachine     , UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS, HARDNESS[2], NBT_RESISTANCE, HARDNESS[2], NBT_COLOR, UT.Code.getRGBInt(aMat.fRGBaSolid), NBT_INPUT, V[2], NBT_TEXTURE, "crystallisationcrucible", NBT_ENERGY_ACCEPTED, TD.Energy.HU, NBT_RECIPEMAP, RM.CrystallisationCrucible, NBT_INV_SIDE_IN, SBIT_L|SBIT_B|SBIT_U, NBT_INV_SIDE_AUTO_IN, SIDE_TOP, NBT_INV_SIDE_OUT, SBIT_R, NBT_INV_SIDE_AUTO_OUT, SIDE_RIGHT, NBT_TANK_SIDE_IN, SBIT_L|SBIT_B|SBIT_U, NBT_TANK_SIDE_AUTO_IN, SIDE_LEFT, NBT_ENERGY_ACCEPTED_SIDES, SBIT_D), "wUh", "PMP", "BCB", 'M', OP.casingMachineDouble.dat(aMat), 'U', aRegistry.getItem(1039), 'C', OP.plateDouble.dat(ANY.Cu), 'B', Blocks.brick_block, 'P', OP.pipeMedium.dat(aMat));
		aMat = MT.DATA.Heat_T[3];       aRegistry.add("Crystallisation Crucible (" + aMat.getLocal() + ")"  , "Basic Machines"                      , 20484, 20001, aClass, aMat.mToolQuality, 16, aMachine     , UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS, HARDNESS[3], NBT_RESISTANCE, HARDNESS[3], NBT_COLOR, UT.Code.getRGBInt(aMat.fRGBaSolid), NBT_INPUT, V[3], NBT_TEXTURE, "crystallisationcrucible", NBT_ENERGY_ACCEPTED, TD.Energy.HU, NBT_RECIPEMAP, RM.CrystallisationCrucible, NBT_INV_SIDE_IN, SBIT_L|SBIT_B|SBIT_U, NBT_INV_SIDE_AUTO_IN, SIDE_TOP, NBT_INV_SIDE_OUT, SBIT_R, NBT_INV_SIDE_AUTO_OUT, SIDE_RIGHT, NBT_TANK_SIDE_IN, SBIT_L|SBIT_B|SBIT_U, NBT_TANK_SIDE_AUTO_IN, SIDE_LEFT, NBT_ENERGY_ACCEPTED_SIDES, SBIT_D), "wUh", "PMP", "BCB", 'M', OP.casingMachineDouble.dat(aMat), 'U', aRegistry.getItem(1039), 'C', OP.plateDouble.dat(ANY.Cu), 'B', Blocks.brick_block, 'P', OP.pipeMedium.dat(aMat));
		aMat = MT.DATA.Heat_T[4];       aRegistry.add("Crystallisation Crucible (" + aMat.getLocal() + ")"  , "Basic Machines"                      , 20485, 20001, aClass, aMat.mToolQuality, 16, aMachine     , UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS, HARDNESS[4], NBT_RESISTANCE, HARDNESS[4], NBT_COLOR, UT.Code.getRGBInt(aMat.fRGBaSolid), NBT_INPUT, V[4], NBT_TEXTURE, "crystallisationcrucible", NBT_ENERGY_ACCEPTED, TD.Energy.HU, NBT_RECIPEMAP, RM.CrystallisationCrucible, NBT_INV_SIDE_IN, SBIT_L|SBIT_B|SBIT_U, NBT_INV_SIDE_AUTO_IN, SIDE_TOP, NBT_INV_SIDE_OUT, SBIT_R, NBT_INV_SIDE_AUTO_OUT, SIDE_RIGHT, NBT_TANK_SIDE_IN, SBIT_L|SBIT_B|SBIT_U, NBT_TANK_SIDE_AUTO_IN, SIDE_LEFT, NBT_ENERGY_ACCEPTED_SIDES, SBIT_D), "wUh", "PMP", "BCB", 'M', OP.casingMachineDouble.dat(aMat), 'U', aRegistry.getItem(1039), 'C', OP.plateDouble.dat(ANY.Cu), 'B', Blocks.brick_block, 'P', OP.pipeMedium.dat(aMat));
		aMat = MT.DATA.Heat_T[5];       aRegistry.add("Crystallisation Crucible (" + aMat.getLocal() + ")"  , "Basic Machines"                      , 20486, 20001, aClass, aMat.mToolQuality, 16, aMachine     , UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS, HARDNESS[5], NBT_RESISTANCE, HARDNESS[5], NBT_COLOR, UT.Code.getRGBInt(aMat.fRGBaSolid), NBT_INPUT, V[5], NBT_TEXTURE, "crystallisationcrucible", NBT_ENERGY_ACCEPTED, TD.Energy.HU, NBT_RECIPEMAP, RM.CrystallisationCrucible, NBT_INV_SIDE_IN, SBIT_L|SBIT_B|SBIT_U, NBT_INV_SIDE_AUTO_IN, SIDE_TOP, NBT_INV_SIDE_OUT, SBIT_R, NBT_INV_SIDE_AUTO_OUT, SIDE_RIGHT, NBT_TANK_SIDE_IN, SBIT_L|SBIT_B|SBIT_U, NBT_TANK_SIDE_AUTO_IN, SIDE_LEFT, NBT_ENERGY_ACCEPTED_SIDES, SBIT_D), "wUh", "PMP", "BCB", 'M', OP.casingMachineDouble.dat(aMat), 'U', aRegistry.getItem(1018), 'C', OP.plateDouble.dat(ANY.Cu), 'B', Blocks.brick_block, 'P', OP.pipeMedium.dat(aMat));
		aMat = MT.DATA.Heat_T[6];       aRegistry.add("Crystallisation Crucible (" + aMat.getLocal() + ")"  , "Basic Machines"                      , 20487, 20001, aClass, aMat.mToolQuality, 16, aMachine     , UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS, HARDNESS[6], NBT_RESISTANCE, HARDNESS[6], NBT_COLOR, UT.Code.getRGBInt(aMat.fRGBaSolid), NBT_INPUT, V[6], NBT_TEXTURE, "crystallisationcrucible", NBT_ENERGY_ACCEPTED, TD.Energy.HU, NBT_RECIPEMAP, RM.CrystallisationCrucible, NBT_INV_SIDE_IN, SBIT_L|SBIT_B|SBIT_U, NBT_INV_SIDE_AUTO_IN, SIDE_TOP, NBT_INV_SIDE_OUT, SBIT_R, NBT_INV_SIDE_AUTO_OUT, SIDE_RIGHT, NBT_TANK_SIDE_IN, SBIT_L|SBIT_B|SBIT_U, NBT_TANK_SIDE_AUTO_IN, SIDE_LEFT, NBT_ENERGY_ACCEPTED_SIDES, SBIT_D), "wUh", "PMP", "BCB", 'M', OP.casingMachineDouble.dat(aMat), 'U', aRegistry.getItem(1018), 'C', OP.plateDouble.dat(ANY.Cu), 'B', Blocks.brick_block, 'P', OP.pipeMedium.dat(aMat));
		aMat = MT.DATA.Heat_T[7];       aRegistry.add("Crystallisation Crucible (" + aMat.getLocal() + ")"  , "Basic Machines"                      , 20488, 20001, aClass, aMat.mToolQuality, 16, aMachine     , UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS, HARDNESS[7], NBT_RESISTANCE, HARDNESS[7], NBT_COLOR, UT.Code.getRGBInt(aMat.fRGBaSolid), NBT_INPUT, V[7], NBT_TEXTURE, "crystallisationcrucible", NBT_ENERGY_ACCEPTED, TD.Energy.HU, NBT_RECIPEMAP, RM.CrystallisationCrucible, NBT_INV_SIDE_IN, SBIT_L|SBIT_B|SBIT_U, NBT_INV_SIDE_AUTO_IN, SIDE_TOP, NBT_INV_SIDE_OUT, SBIT_R, NBT_INV_SIDE_AUTO_OUT, SIDE_RIGHT, NBT_TANK_SIDE_IN, SBIT_L|SBIT_B|SBIT_U, NBT_TANK_SIDE_AUTO_IN, SIDE_LEFT, NBT_ENERGY_ACCEPTED_SIDES, SBIT_D), "wUh", "PMP", "BCB", 'M', OP.casingMachineDouble.dat(aMat), 'U', aRegistry.getItem(1039), 'C', OP.plateDouble.dat(ANY.Cu), 'B', Blocks.brick_block, 'P', OP.pipeMedium.dat(aMat));
		aMat = MT.DATA.Heat_T[8];       aRegistry.add("Crystallisation Crucible (" + aMat.getLocal() + ")"  , "Basic Machines"                      , 20489, 20001, aClass, aMat.mToolQuality, 16, aMachine     , UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS, HARDNESS[8], NBT_RESISTANCE, HARDNESS[8], NBT_COLOR, UT.Code.getRGBInt(aMat.fRGBaSolid), NBT_INPUT, V[8], NBT_TEXTURE, "crystallisationcrucible", NBT_ENERGY_ACCEPTED, TD.Energy.HU, NBT_RECIPEMAP, RM.CrystallisationCrucible, NBT_INV_SIDE_IN, SBIT_L|SBIT_B|SBIT_U, NBT_INV_SIDE_AUTO_IN, SIDE_TOP, NBT_INV_SIDE_OUT, SBIT_R, NBT_INV_SIDE_AUTO_OUT, SIDE_RIGHT, NBT_TANK_SIDE_IN, SBIT_L|SBIT_B|SBIT_U, NBT_TANK_SIDE_AUTO_IN, SIDE_LEFT, NBT_ENERGY_ACCEPTED_SIDES, SBIT_D), "wUh", "PMP", "BCB", 'M', OP.casingMachineDouble.dat(aMat), 'U', aRegistry.getItem(1039), 'C', OP.plateDouble.dat(ANY.Cu), 'B', Blocks.brick_block, 'P', OP.pipeMedium.dat(aMat));
		aMat = MT.DATA.Heat_T[9];       aRegistry.add("Crystallisation Crucible (" + aMat.getLocal() + ")"  , "Basic Machines"                      , 20490, 20001, aClass, aMat.mToolQuality, 16, aMachine     , UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS, HARDNESS[9], NBT_RESISTANCE, HARDNESS[9], NBT_COLOR, UT.Code.getRGBInt(aMat.fRGBaSolid), NBT_INPUT, V[9], NBT_TEXTURE, "crystallisationcrucible", NBT_ENERGY_ACCEPTED, TD.Energy.HU, NBT_RECIPEMAP, RM.CrystallisationCrucible, NBT_INV_SIDE_IN, SBIT_L|SBIT_B|SBIT_U, NBT_INV_SIDE_AUTO_IN, SIDE_TOP, NBT_INV_SIDE_OUT, SBIT_R, NBT_INV_SIDE_AUTO_OUT, SIDE_RIGHT, NBT_TANK_SIDE_IN, SBIT_L|SBIT_B|SBIT_U, NBT_TANK_SIDE_AUTO_IN, SIDE_LEFT, NBT_ENERGY_ACCEPTED_SIDES, SBIT_D), "wUh", "PMP", "BCB", 'M', OP.casingMachineDouble.dat(aMat), 'U', aRegistry.getItem(1039), 'C', OP.plateDouble.dat(ANY.Cu), 'B', Blocks.brick_block, 'P', OP.pipeMedium.dat(aMat));
		aMat = MT.DATA.Heat_T[10];       aRegistry.add("Crystallisation Crucible (" + aMat.getLocal() + ")"  , "Basic Machines"                      , 20491, 20001, aClass, aMat.mToolQuality, 16, aMachine     , UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS, HARDNESS[10], NBT_RESISTANCE, HARDNESS[10], NBT_COLOR, UT.Code.getRGBInt(aMat.fRGBaSolid), NBT_INPUT, V[10], NBT_TEXTURE, "crystallisationcrucible", NBT_ENERGY_ACCEPTED, TD.Energy.HU, NBT_RECIPEMAP, RM.CrystallisationCrucible, NBT_INV_SIDE_IN, SBIT_L|SBIT_B|SBIT_U, NBT_INV_SIDE_AUTO_IN, SIDE_TOP, NBT_INV_SIDE_OUT, SBIT_R, NBT_INV_SIDE_AUTO_OUT, SIDE_RIGHT, NBT_TANK_SIDE_IN, SBIT_L|SBIT_B|SBIT_U, NBT_TANK_SIDE_AUTO_IN, SIDE_LEFT, NBT_ENERGY_ACCEPTED_SIDES, SBIT_D), "wUh", "PMP", "BCB", 'M', OP.casingMachineDouble.dat(aMat), 'U', aRegistry.getItem(1018), 'C', OP.plateDouble.dat(ANY.Cu), 'B', Blocks.brick_block, 'P', OP.pipeMedium.dat(aMat));
		aMat = MT.DATA.Heat_T[11];       aRegistry.add("Crystallisation Crucible (" + aMat.getLocal() + ")"  , "Basic Machines"                      , 20492, 20001, aClass, aMat.mToolQuality, 16, aMachine     , UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS, HARDNESS[11], NBT_RESISTANCE, HARDNESS[11], NBT_COLOR, UT.Code.getRGBInt(aMat.fRGBaSolid), NBT_INPUT, V[11], NBT_TEXTURE, "crystallisationcrucible", NBT_ENERGY_ACCEPTED, TD.Energy.HU, NBT_RECIPEMAP, RM.CrystallisationCrucible, NBT_INV_SIDE_IN, SBIT_L|SBIT_B|SBIT_U, NBT_INV_SIDE_AUTO_IN, SIDE_TOP, NBT_INV_SIDE_OUT, SBIT_R, NBT_INV_SIDE_AUTO_OUT, SIDE_RIGHT, NBT_TANK_SIDE_IN, SBIT_L|SBIT_B|SBIT_U, NBT_TANK_SIDE_AUTO_IN, SIDE_LEFT, NBT_ENERGY_ACCEPTED_SIDES, SBIT_D), "wUh", "PMP", "BCB", 'M', OP.casingMachineDouble.dat(aMat), 'U', aRegistry.getItem(1018), 'C', OP.plateDouble.dat(ANY.Cu), 'B', Blocks.brick_block, 'P', OP.pipeMedium.dat(aMat));
		aMat = MT.DATA.Heat_T[12];       aRegistry.add("Crystallisation Crucible (" + aMat.getLocal() + ")"  , "Basic Machines"                      , 20493, 20001, aClass, aMat.mToolQuality, 16, aMachine     , UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS, HARDNESS[12], NBT_RESISTANCE, HARDNESS[12], NBT_COLOR, UT.Code.getRGBInt(aMat.fRGBaSolid), NBT_INPUT, V[12], NBT_TEXTURE, "crystallisationcrucible", NBT_ENERGY_ACCEPTED, TD.Energy.HU, NBT_RECIPEMAP, RM.CrystallisationCrucible, NBT_INV_SIDE_IN, SBIT_L|SBIT_B|SBIT_U, NBT_INV_SIDE_AUTO_IN, SIDE_TOP, NBT_INV_SIDE_OUT, SBIT_R, NBT_INV_SIDE_AUTO_OUT, SIDE_RIGHT, NBT_TANK_SIDE_IN, SBIT_L|SBIT_B|SBIT_U, NBT_TANK_SIDE_AUTO_IN, SIDE_LEFT, NBT_ENERGY_ACCEPTED_SIDES, SBIT_D), "wUh", "PMP", "BCB", 'M', OP.casingMachineDouble.dat(aMat), 'U', aRegistry.getItem(1039), 'C', OP.plateDouble.dat(ANY.Cu), 'B', Blocks.brick_block, 'P', OP.pipeMedium.dat(aMat));
		aMat = MT.DATA.Heat_T[13];       aRegistry.add("Crystallisation Crucible (" + aMat.getLocal() + ")"  , "Basic Machines"                      , 20494, 20001, aClass, aMat.mToolQuality, 16, aMachine     , UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS, HARDNESS[13], NBT_RESISTANCE, HARDNESS[13], NBT_COLOR, UT.Code.getRGBInt(aMat.fRGBaSolid), NBT_INPUT, V[13], NBT_TEXTURE, "crystallisationcrucible", NBT_ENERGY_ACCEPTED, TD.Energy.HU, NBT_RECIPEMAP, RM.CrystallisationCrucible, NBT_INV_SIDE_IN, SBIT_L|SBIT_B|SBIT_U, NBT_INV_SIDE_AUTO_IN, SIDE_TOP, NBT_INV_SIDE_OUT, SBIT_R, NBT_INV_SIDE_AUTO_OUT, SIDE_RIGHT, NBT_TANK_SIDE_IN, SBIT_L|SBIT_B|SBIT_U, NBT_TANK_SIDE_AUTO_IN, SIDE_LEFT, NBT_ENERGY_ACCEPTED_SIDES, SBIT_D), "wUh", "PMP", "BCB", 'M', OP.casingMachineDouble.dat(aMat), 'U', aRegistry.getItem(1039), 'C', OP.plateDouble.dat(ANY.Cu), 'B', Blocks.brick_block, 'P', OP.pipeMedium.dat(aMat));
		aMat = MT.DATA.Heat_T[14];       aRegistry.add("Crystallisation Crucible (" + aMat.getLocal() + ")"  , "Basic Machines"                      , 20495, 20001, aClass, aMat.mToolQuality, 16, aMachine     , UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS, HARDNESS[14], NBT_RESISTANCE, HARDNESS[14], NBT_COLOR, UT.Code.getRGBInt(aMat.fRGBaSolid), NBT_INPUT, V[14], NBT_TEXTURE, "crystallisationcrucible", NBT_ENERGY_ACCEPTED, TD.Energy.HU, NBT_RECIPEMAP, RM.CrystallisationCrucible, NBT_INV_SIDE_IN, SBIT_L|SBIT_B|SBIT_U, NBT_INV_SIDE_AUTO_IN, SIDE_TOP, NBT_INV_SIDE_OUT, SBIT_R, NBT_INV_SIDE_AUTO_OUT, SIDE_RIGHT, NBT_TANK_SIDE_IN, SBIT_L|SBIT_B|SBIT_U, NBT_TANK_SIDE_AUTO_IN, SIDE_LEFT, NBT_ENERGY_ACCEPTED_SIDES, SBIT_D), "wUh", "PMP", "BCB", 'M', OP.casingMachineDouble.dat(aMat), 'U', aRegistry.getItem(1039), 'C', OP.plateDouble.dat(ANY.Cu), 'B', Blocks.brick_block, 'P', OP.pipeMedium.dat(aMat));
		aMat = MT.DATA.Heat_T[15];       aRegistry.add("Crystallisation Crucible (" + aMat.getLocal() + ")"  , "Basic Machines"                      , 20496, 20001, aClass, aMat.mToolQuality, 16, aMachine     , UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS, HARDNESS[15], NBT_RESISTANCE, HARDNESS[15], NBT_COLOR, UT.Code.getRGBInt(aMat.fRGBaSolid), NBT_INPUT, V[15], NBT_TEXTURE, "crystallisationcrucible", NBT_ENERGY_ACCEPTED, TD.Energy.HU, NBT_RECIPEMAP, RM.CrystallisationCrucible, NBT_INV_SIDE_IN, SBIT_L|SBIT_B|SBIT_U, NBT_INV_SIDE_AUTO_IN, SIDE_TOP, NBT_INV_SIDE_OUT, SBIT_R, NBT_INV_SIDE_AUTO_OUT, SIDE_RIGHT, NBT_TANK_SIDE_IN, SBIT_L|SBIT_B|SBIT_U, NBT_TANK_SIDE_AUTO_IN, SIDE_LEFT, NBT_ENERGY_ACCEPTED_SIDES, SBIT_D), "wUh", "PMP", "BCB", 'M', OP.casingMachineDouble.dat(aMat), 'U', aRegistry.getItem(1018), 'C', OP.plateDouble.dat(ANY.Cu), 'B', Blocks.brick_block, 'P', OP.pipeMedium.dat(aMat));

		aClass = MultiTileEntityBasicMachineElectric.class;
		aMat = MT.DATA.Electric_T[0];   aRegistry.add("Injector ("+VN[0]+")"                                , "Basic Machines"                      , 20501, 20001, aClass, aMat.mToolQuality, 16, aMachine     , UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS,   4.0F, NBT_RESISTANCE,   4.0F, NBT_COLOR, UT.Code.getRGBInt(aMat.fRGBaSolid), NBT_INPUT,   V[0], NBT_TEXTURE, "injector", NBT_ENERGY_ACCEPTED, TD.Energy.EU, NBT_RECIPEMAP, RM.Injector, NBT_INV_SIDE_IN, SBIT_U|SBIT_L, NBT_INV_SIDE_AUTO_IN, SIDE_LEFT, NBT_INV_SIDE_OUT, SBIT_R|SBIT_D, NBT_INV_SIDE_AUTO_OUT, SIDE_RIGHT, NBT_TANK_SIDE_IN, SBIT_U|SBIT_L, NBT_TANK_SIDE_AUTO_IN, SIDE_TOP, NBT_TANK_SIDE_OUT, SBIT_R|SBIT_D, NBT_TANK_SIDE_AUTO_OUT, SIDE_BOTTOM, NBT_ENERGY_ACCEPTED_SIDES, SBIT_B), "XPw", "CMW", 'M', OP.casingMachine.dat(aMat), 'X', IL.PISTONS[0], 'C', OD_CIRCUITS[1], 'W', MT.DATA.CABLES_01[0], 'P', OP.pipeTiny  .dat(MT.StainlessSteel));
		aMat = MT.DATA.Electric_T[1];   aRegistry.add("Injector ("+VN[1]+")"                                , "Basic Machines"                      , 20502, 20001, aClass, aMat.mToolQuality, 16, aMachine     , UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS,   4.0F, NBT_RESISTANCE,   4.0F, NBT_COLOR, UT.Code.getRGBInt(aMat.fRGBaSolid), NBT_INPUT,   V[1], NBT_TEXTURE, "injector", NBT_ENERGY_ACCEPTED, TD.Energy.EU, NBT_RECIPEMAP, RM.Injector, NBT_INV_SIDE_IN, SBIT_U|SBIT_L, NBT_INV_SIDE_AUTO_IN, SIDE_LEFT, NBT_INV_SIDE_OUT, SBIT_R|SBIT_D, NBT_INV_SIDE_AUTO_OUT, SIDE_RIGHT, NBT_TANK_SIDE_IN, SBIT_U|SBIT_L, NBT_TANK_SIDE_AUTO_IN, SIDE_TOP, NBT_TANK_SIDE_OUT, SBIT_R|SBIT_D, NBT_TANK_SIDE_AUTO_OUT, SIDE_BOTTOM, NBT_ENERGY_ACCEPTED_SIDES, SBIT_B), "XPw", "CMW", 'M', OP.casingMachine.dat(aMat), 'X', IL.PISTONS[1], 'C', OD_CIRCUITS[1], 'W', MT.DATA.CABLES_01[1], 'P', OP.pipeTiny  .dat(MT.StainlessSteel));
		aMat = MT.DATA.Electric_T[2];   aRegistry.add("Injector ("+VN[2]+")"                                , "Basic Machines"                      , 20503, 20001, aClass, aMat.mToolQuality, 16, aMachine     , UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS,   4.0F, NBT_RESISTANCE,   4.0F, NBT_COLOR, UT.Code.getRGBInt(aMat.fRGBaSolid), NBT_INPUT,   V[2], NBT_TEXTURE, "injector", NBT_ENERGY_ACCEPTED, TD.Energy.EU, NBT_RECIPEMAP, RM.Injector, NBT_INV_SIDE_IN, SBIT_U|SBIT_L, NBT_INV_SIDE_AUTO_IN, SIDE_LEFT, NBT_INV_SIDE_OUT, SBIT_R|SBIT_D, NBT_INV_SIDE_AUTO_OUT, SIDE_RIGHT, NBT_TANK_SIDE_IN, SBIT_U|SBIT_L, NBT_TANK_SIDE_AUTO_IN, SIDE_TOP, NBT_TANK_SIDE_OUT, SBIT_R|SBIT_D, NBT_TANK_SIDE_AUTO_OUT, SIDE_BOTTOM, NBT_ENERGY_ACCEPTED_SIDES, SBIT_B), "XPw", "CMW", 'M', OP.casingMachine.dat(aMat), 'X', IL.PISTONS[2], 'C', OD_CIRCUITS[2], 'W', MT.DATA.CABLES_01[2], 'P', OP.pipeSmall .dat(MT.StainlessSteel));
		aMat = MT.DATA.Electric_T[3];   aRegistry.add("Injector ("+VN[3]+")"                                , "Basic Machines"                      , 20504, 20001, aClass, aMat.mToolQuality, 16, aMachine     , UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS,   4.0F, NBT_RESISTANCE,   4.0F, NBT_COLOR, UT.Code.getRGBInt(aMat.fRGBaSolid), NBT_INPUT,   V[3], NBT_TEXTURE, "injector", NBT_ENERGY_ACCEPTED, TD.Energy.EU, NBT_RECIPEMAP, RM.Injector, NBT_INV_SIDE_IN, SBIT_U|SBIT_L, NBT_INV_SIDE_AUTO_IN, SIDE_LEFT, NBT_INV_SIDE_OUT, SBIT_R|SBIT_D, NBT_INV_SIDE_AUTO_OUT, SIDE_RIGHT, NBT_TANK_SIDE_IN, SBIT_U|SBIT_L, NBT_TANK_SIDE_AUTO_IN, SIDE_TOP, NBT_TANK_SIDE_OUT, SBIT_R|SBIT_D, NBT_TANK_SIDE_AUTO_OUT, SIDE_BOTTOM, NBT_ENERGY_ACCEPTED_SIDES, SBIT_B), "XPw", "CMW", 'M', OP.casingMachine.dat(aMat), 'X', IL.PISTONS[3], 'C', OD_CIRCUITS[3], 'W', MT.DATA.CABLES_01[3], 'P', OP.pipeMedium.dat(MT.StainlessSteel));
		aMat = MT.DATA.Electric_T[4];   aRegistry.add("Injector ("+VN[4]+")"                                , "Basic Machines"                      , 20505, 20001, aClass, aMat.mToolQuality, 16, aMachine     , UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS,   4.0F, NBT_RESISTANCE,   4.0F, NBT_COLOR, UT.Code.getRGBInt(aMat.fRGBaSolid), NBT_INPUT,   V[4], NBT_TEXTURE, "injector", NBT_ENERGY_ACCEPTED, TD.Energy.EU, NBT_RECIPEMAP, RM.Injector, NBT_INV_SIDE_IN, SBIT_U|SBIT_L, NBT_INV_SIDE_AUTO_IN, SIDE_LEFT, NBT_INV_SIDE_OUT, SBIT_R|SBIT_D, NBT_INV_SIDE_AUTO_OUT, SIDE_RIGHT, NBT_TANK_SIDE_IN, SBIT_U|SBIT_L, NBT_TANK_SIDE_AUTO_IN, SIDE_TOP, NBT_TANK_SIDE_OUT, SBIT_R|SBIT_D, NBT_TANK_SIDE_AUTO_OUT, SIDE_BOTTOM, NBT_ENERGY_ACCEPTED_SIDES, SBIT_B), "XPw", "CMW", 'M', OP.casingMachine.dat(aMat), 'X', IL.PISTONS[4], 'C', OD_CIRCUITS[4], 'W', MT.DATA.CABLES_01[4], 'P', OP.pipeLarge .dat(MT.StainlessSteel));
		aMat = MT.DATA.Electric_T[5];   aRegistry.add("Injector ("+VN[5]+")"                                , "Basic Machines"                      , 20506, 20001, aClass, aMat.mToolQuality, 16, aMachine     , UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS,   4.0F, NBT_RESISTANCE,   4.0F, NBT_COLOR, UT.Code.getRGBInt(aMat.fRGBaSolid), NBT_INPUT,   V[5], NBT_TEXTURE, "injector", NBT_ENERGY_ACCEPTED, TD.Energy.EU, NBT_RECIPEMAP, RM.Injector, NBT_INV_SIDE_IN, SBIT_U|SBIT_L, NBT_INV_SIDE_AUTO_IN, SIDE_LEFT, NBT_INV_SIDE_OUT, SBIT_R|SBIT_D, NBT_INV_SIDE_AUTO_OUT, SIDE_RIGHT, NBT_TANK_SIDE_IN, SBIT_U|SBIT_L, NBT_TANK_SIDE_AUTO_IN, SIDE_TOP, NBT_TANK_SIDE_OUT, SBIT_R|SBIT_D, NBT_TANK_SIDE_AUTO_OUT, SIDE_BOTTOM, NBT_ENERGY_ACCEPTED_SIDES, SBIT_B), "XPw", "CMW", 'M', OP.casingMachine.dat(aMat), 'X', IL.PISTONS[5], 'C', OD_CIRCUITS[5], 'W', MT.DATA.CABLES_01[5], 'P', OP.pipeHuge  .dat(MT.StainlessSteel));
		aMat = MT.DATA.Electric_T[6];   aRegistry.add("Injector ("+VN[6]+")"                                , "Basic Machines"                      , 20507, 20001, aClass, aMat.mToolQuality, 16, aMachine     , UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS,   4.0F, NBT_RESISTANCE,   4.0F, NBT_COLOR, UT.Code.getRGBInt(aMat.fRGBaSolid), NBT_INPUT,   V[6], NBT_TEXTURE, "injector", NBT_ENERGY_ACCEPTED, TD.Energy.EU, NBT_RECIPEMAP, RM.Injector, NBT_INV_SIDE_IN, SBIT_U|SBIT_L, NBT_INV_SIDE_AUTO_IN, SIDE_LEFT, NBT_INV_SIDE_OUT, SBIT_R|SBIT_D, NBT_INV_SIDE_AUTO_OUT, SIDE_RIGHT, NBT_TANK_SIDE_IN, SBIT_U|SBIT_L, NBT_TANK_SIDE_AUTO_IN, SIDE_TOP, NBT_TANK_SIDE_OUT, SBIT_R|SBIT_D, NBT_TANK_SIDE_AUTO_OUT, SIDE_BOTTOM, NBT_ENERGY_ACCEPTED_SIDES, SBIT_B), "XPw", "CMW", 'M', OP.casingMachine.dat(aMat), 'X', IL.PISTONS[0], 'C', OD_CIRCUITS[6], 'W', MT.DATA.CABLES_01[6], 'P', OP.pipeTiny  .dat(MT.StainlessSteel));
		aMat = MT.DATA.Electric_T[7];   aRegistry.add("Injector ("+VN[7]+")"                                , "Basic Machines"                      , 20508, 20001, aClass, aMat.mToolQuality, 16, aMachine     , UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS,   4.0F, NBT_RESISTANCE,   4.0F, NBT_COLOR, UT.Code.getRGBInt(aMat.fRGBaSolid), NBT_INPUT,   V[7], NBT_TEXTURE, "injector", NBT_ENERGY_ACCEPTED, TD.Energy.EU, NBT_RECIPEMAP, RM.Injector, NBT_INV_SIDE_IN, SBIT_U|SBIT_L, NBT_INV_SIDE_AUTO_IN, SIDE_LEFT, NBT_INV_SIDE_OUT, SBIT_R|SBIT_D, NBT_INV_SIDE_AUTO_OUT, SIDE_RIGHT, NBT_TANK_SIDE_IN, SBIT_U|SBIT_L, NBT_TANK_SIDE_AUTO_IN, SIDE_TOP, NBT_TANK_SIDE_OUT, SBIT_R|SBIT_D, NBT_TANK_SIDE_AUTO_OUT, SIDE_BOTTOM, NBT_ENERGY_ACCEPTED_SIDES, SBIT_B), "XPw", "CMW", 'M', OP.casingMachine.dat(aMat), 'X', IL.PISTONS[1], 'C', OD_CIRCUITS[7], 'W', MT.DATA.CABLES_01[7], 'P', OP.pipeTiny  .dat(MT.StainlessSteel));
		aMat = MT.DATA.Electric_T[8];   aRegistry.add("Injector ("+VN[8]+")"                                , "Basic Machines"                      , 20509, 20001, aClass, aMat.mToolQuality, 16, aMachine     , UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS,   4.0F, NBT_RESISTANCE,   4.0F, NBT_COLOR, UT.Code.getRGBInt(aMat.fRGBaSolid), NBT_INPUT,   V[8], NBT_TEXTURE, "injector", NBT_ENERGY_ACCEPTED, TD.Energy.EU, NBT_RECIPEMAP, RM.Injector, NBT_INV_SIDE_IN, SBIT_U|SBIT_L, NBT_INV_SIDE_AUTO_IN, SIDE_LEFT, NBT_INV_SIDE_OUT, SBIT_R|SBIT_D, NBT_INV_SIDE_AUTO_OUT, SIDE_RIGHT, NBT_TANK_SIDE_IN, SBIT_U|SBIT_L, NBT_TANK_SIDE_AUTO_IN, SIDE_TOP, NBT_TANK_SIDE_OUT, SBIT_R|SBIT_D, NBT_TANK_SIDE_AUTO_OUT, SIDE_BOTTOM, NBT_ENERGY_ACCEPTED_SIDES, SBIT_B), "XPw", "CMW", 'M', OP.casingMachine.dat(aMat), 'X', IL.PISTONS[2], 'C', OD_CIRCUITS[8], 'W', MT.DATA.CABLES_01[8], 'P', OP.pipeSmall .dat(MT.StainlessSteel));
		aMat = MT.DATA.Electric_T[9];   aRegistry.add("Injector ("+VN[9]+")"                                , "Basic Machines"                      , 205010, 20001, aClass, aMat.mToolQuality, 16, aMachine     , UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS,   4.0F, NBT_RESISTANCE,   4.0F, NBT_COLOR, UT.Code.getRGBInt(aMat.fRGBaSolid), NBT_INPUT,   V[9], NBT_TEXTURE, "injector", NBT_ENERGY_ACCEPTED, TD.Energy.EU, NBT_RECIPEMAP, RM.Injector, NBT_INV_SIDE_IN, SBIT_U|SBIT_L, NBT_INV_SIDE_AUTO_IN, SIDE_LEFT, NBT_INV_SIDE_OUT, SBIT_R|SBIT_D, NBT_INV_SIDE_AUTO_OUT, SIDE_RIGHT, NBT_TANK_SIDE_IN, SBIT_U|SBIT_L, NBT_TANK_SIDE_AUTO_IN, SIDE_TOP, NBT_TANK_SIDE_OUT, SBIT_R|SBIT_D, NBT_TANK_SIDE_AUTO_OUT, SIDE_BOTTOM, NBT_ENERGY_ACCEPTED_SIDES, SBIT_B), "XPw", "CMW", 'M', OP.casingMachine.dat(aMat), 'X', IL.PISTONS[3], 'C', OD_CIRCUITS[9], 'W', MT.DATA.CABLES_01[9], 'P', OP.pipeMedium.dat(MT.StainlessSteel));
		aMat = MT.DATA.Electric_T[10];   aRegistry.add("Injector ("+VN[10]+")"                                , "Basic Machines"                      , 20511, 20001, aClass, aMat.mToolQuality, 16, aMachine     , UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS,   4.0F, NBT_RESISTANCE,   4.0F, NBT_COLOR, UT.Code.getRGBInt(aMat.fRGBaSolid), NBT_INPUT,   V[10], NBT_TEXTURE, "injector", NBT_ENERGY_ACCEPTED, TD.Energy.EU, NBT_RECIPEMAP, RM.Injector, NBT_INV_SIDE_IN, SBIT_U|SBIT_L, NBT_INV_SIDE_AUTO_IN, SIDE_LEFT, NBT_INV_SIDE_OUT, SBIT_R|SBIT_D, NBT_INV_SIDE_AUTO_OUT, SIDE_RIGHT, NBT_TANK_SIDE_IN, SBIT_U|SBIT_L, NBT_TANK_SIDE_AUTO_IN, SIDE_TOP, NBT_TANK_SIDE_OUT, SBIT_R|SBIT_D, NBT_TANK_SIDE_AUTO_OUT, SIDE_BOTTOM, NBT_ENERGY_ACCEPTED_SIDES, SBIT_B), "XPw", "CMW", 'M', OP.casingMachine.dat(aMat), 'X', IL.PISTONS[4], 'C', OD_CIRCUITS[10], 'W', MT.DATA.CABLES_01[10], 'P', OP.pipeLarge .dat(MT.StainlessSteel));
		aMat = MT.DATA.Electric_T[11];   aRegistry.add("Injector ("+VN[11]+")"                                , "Basic Machines"                      , 20512, 20001, aClass, aMat.mToolQuality, 16, aMachine     , UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS,   4.0F, NBT_RESISTANCE,   4.0F, NBT_COLOR, UT.Code.getRGBInt(aMat.fRGBaSolid), NBT_INPUT,   V[11], NBT_TEXTURE, "injector", NBT_ENERGY_ACCEPTED, TD.Energy.EU, NBT_RECIPEMAP, RM.Injector, NBT_INV_SIDE_IN, SBIT_U|SBIT_L, NBT_INV_SIDE_AUTO_IN, SIDE_LEFT, NBT_INV_SIDE_OUT, SBIT_R|SBIT_D, NBT_INV_SIDE_AUTO_OUT, SIDE_RIGHT, NBT_TANK_SIDE_IN, SBIT_U|SBIT_L, NBT_TANK_SIDE_AUTO_IN, SIDE_TOP, NBT_TANK_SIDE_OUT, SBIT_R|SBIT_D, NBT_TANK_SIDE_AUTO_OUT, SIDE_BOTTOM, NBT_ENERGY_ACCEPTED_SIDES, SBIT_B), "XPw", "CMW", 'M', OP.casingMachine.dat(aMat), 'X', IL.PISTONS[5], 'C', OD_CIRCUITS[11], 'W', MT.DATA.CABLES_01[11], 'P', OP.pipeHuge  .dat(MT.StainlessSteel));
		aMat = MT.DATA.Electric_T[12];   aRegistry.add("Injector ("+VN[12]+")"                                , "Basic Machines"                      , 20513, 20001, aClass, aMat.mToolQuality, 16, aMachine     , UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS,   4.0F, NBT_RESISTANCE,   4.0F, NBT_COLOR, UT.Code.getRGBInt(aMat.fRGBaSolid), NBT_INPUT,   V[12], NBT_TEXTURE, "injector", NBT_ENERGY_ACCEPTED, TD.Energy.EU, NBT_RECIPEMAP, RM.Injector, NBT_INV_SIDE_IN, SBIT_U|SBIT_L, NBT_INV_SIDE_AUTO_IN, SIDE_LEFT, NBT_INV_SIDE_OUT, SBIT_R|SBIT_D, NBT_INV_SIDE_AUTO_OUT, SIDE_RIGHT, NBT_TANK_SIDE_IN, SBIT_U|SBIT_L, NBT_TANK_SIDE_AUTO_IN, SIDE_TOP, NBT_TANK_SIDE_OUT, SBIT_R|SBIT_D, NBT_TANK_SIDE_AUTO_OUT, SIDE_BOTTOM, NBT_ENERGY_ACCEPTED_SIDES, SBIT_B), "XPw", "CMW", 'M', OP.casingMachine.dat(aMat), 'X', IL.PISTONS[0], 'C', OD_CIRCUITS[12], 'W', MT.DATA.CABLES_01[12], 'P', OP.pipeTiny  .dat(MT.StainlessSteel));
		aMat = MT.DATA.Electric_T[13];   aRegistry.add("Injector ("+VN[13]+")"                                , "Basic Machines"                      , 20514, 20001, aClass, aMat.mToolQuality, 16, aMachine     , UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS,   4.0F, NBT_RESISTANCE,   4.0F, NBT_COLOR, UT.Code.getRGBInt(aMat.fRGBaSolid), NBT_INPUT,   V[13], NBT_TEXTURE, "injector", NBT_ENERGY_ACCEPTED, TD.Energy.EU, NBT_RECIPEMAP, RM.Injector, NBT_INV_SIDE_IN, SBIT_U|SBIT_L, NBT_INV_SIDE_AUTO_IN, SIDE_LEFT, NBT_INV_SIDE_OUT, SBIT_R|SBIT_D, NBT_INV_SIDE_AUTO_OUT, SIDE_RIGHT, NBT_TANK_SIDE_IN, SBIT_U|SBIT_L, NBT_TANK_SIDE_AUTO_IN, SIDE_TOP, NBT_TANK_SIDE_OUT, SBIT_R|SBIT_D, NBT_TANK_SIDE_AUTO_OUT, SIDE_BOTTOM, NBT_ENERGY_ACCEPTED_SIDES, SBIT_B), "XPw", "CMW", 'M', OP.casingMachine.dat(aMat), 'X', IL.PISTONS[1], 'C', OD_CIRCUITS[13], 'W', MT.DATA.CABLES_01[13], 'P', OP.pipeTiny  .dat(MT.StainlessSteel));
		aMat = MT.DATA.Electric_T[14];   aRegistry.add("Injector ("+VN[14]+")"                                , "Basic Machines"                      , 20515, 20001, aClass, aMat.mToolQuality, 16, aMachine     , UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS,   4.0F, NBT_RESISTANCE,   4.0F, NBT_COLOR, UT.Code.getRGBInt(aMat.fRGBaSolid), NBT_INPUT,   V[14], NBT_TEXTURE, "injector", NBT_ENERGY_ACCEPTED, TD.Energy.EU, NBT_RECIPEMAP, RM.Injector, NBT_INV_SIDE_IN, SBIT_U|SBIT_L, NBT_INV_SIDE_AUTO_IN, SIDE_LEFT, NBT_INV_SIDE_OUT, SBIT_R|SBIT_D, NBT_INV_SIDE_AUTO_OUT, SIDE_RIGHT, NBT_TANK_SIDE_IN, SBIT_U|SBIT_L, NBT_TANK_SIDE_AUTO_IN, SIDE_TOP, NBT_TANK_SIDE_OUT, SBIT_R|SBIT_D, NBT_TANK_SIDE_AUTO_OUT, SIDE_BOTTOM, NBT_ENERGY_ACCEPTED_SIDES, SBIT_B), "XPw", "CMW", 'M', OP.casingMachine.dat(aMat), 'X', IL.PISTONS[2], 'C', OD_CIRCUITS[14], 'W', MT.DATA.CABLES_01[14], 'P', OP.pipeSmall .dat(MT.StainlessSteel));
		aMat = MT.DATA.Electric_T[15];   aRegistry.add("Injector ("+VN[15]+")"                                , "Basic Machines"                      , 20516, 20001, aClass, aMat.mToolQuality, 16, aMachine     , UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS,   4.0F, NBT_RESISTANCE,   4.0F, NBT_COLOR, UT.Code.getRGBInt(aMat.fRGBaSolid), NBT_INPUT,   V[15], NBT_TEXTURE, "injector", NBT_ENERGY_ACCEPTED, TD.Energy.EU, NBT_RECIPEMAP, RM.Injector, NBT_INV_SIDE_IN, SBIT_U|SBIT_L, NBT_INV_SIDE_AUTO_IN, SIDE_LEFT, NBT_INV_SIDE_OUT, SBIT_R|SBIT_D, NBT_INV_SIDE_AUTO_OUT, SIDE_RIGHT, NBT_TANK_SIDE_IN, SBIT_U|SBIT_L, NBT_TANK_SIDE_AUTO_IN, SIDE_TOP, NBT_TANK_SIDE_OUT, SBIT_R|SBIT_D, NBT_TANK_SIDE_AUTO_OUT, SIDE_BOTTOM, NBT_ENERGY_ACCEPTED_SIDES, SBIT_B), "XPw", "CMW", 'M', OP.casingMachine.dat(aMat), 'X', IL.PISTONS[3], 'C', OD_CIRCUITS[15], 'W', MT.DATA.CABLES_01[15], 'P', OP.pipeMedium.dat(MT.StainlessSteel));

		aClass = MultiTileEntityBasicMachineElectric.class;
		aMat = MT.DATA.Electric_T[1];   aRegistry.add("Printer ("+VN[0]+")"                                 , "Basic Machines"                      , 20521, 20001, aClass, aMat.mToolQuality, 16, aMachine     , UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS,   4.0F, NBT_RESISTANCE,   4.0F, NBT_COLOR, UT.Code.getRGBInt(aMat.fRGBaSolid), NBT_INPUT,   V[0], NBT_TEXTURE, "printer", NBT_ENERGY_ACCEPTED, TD.Energy.EU, NBT_RECIPEMAP, RM.Printer, NBT_INV_SIDE_IN, SBIT_U|SBIT_L, NBT_INV_SIDE_AUTO_IN, SIDE_LEFT, NBT_INV_SIDE_OUT, SBIT_R|SBIT_D, NBT_INV_SIDE_AUTO_OUT, SIDE_RIGHT, NBT_TANK_SIDE_IN, SBIT_U|SBIT_L, NBT_TANK_SIDE_AUTO_IN, SIDE_TOP, NBT_ENERGY_ACCEPTED_SIDES, SBIT_B), "CPC", "wXh", "WMW", 'M', OP.casingMachine.dat(aMat), 'X', IL.CONVEYERS[0], 'C', OD_CIRCUITS[0], 'W', MT.DATA.CABLES_01[0], 'P', OP.pipeTiny.dat(MT.StainlessSteel));
		aMat = MT.DATA.Electric_T[1];   aRegistry.add("Printer ("+VN[1]+")"                                 , "Basic Machines"                      , 20522, 20001, aClass, aMat.mToolQuality, 16, aMachine     , UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS,   4.0F, NBT_RESISTANCE,   4.0F, NBT_COLOR, UT.Code.getRGBInt(aMat.fRGBaSolid), NBT_INPUT,   V[1], NBT_TEXTURE, "printer", NBT_ENERGY_ACCEPTED, TD.Energy.EU, NBT_RECIPEMAP, RM.Printer, NBT_INV_SIDE_IN, SBIT_U|SBIT_L, NBT_INV_SIDE_AUTO_IN, SIDE_LEFT, NBT_INV_SIDE_OUT, SBIT_R|SBIT_D, NBT_INV_SIDE_AUTO_OUT, SIDE_RIGHT, NBT_TANK_SIDE_IN, SBIT_U|SBIT_L, NBT_TANK_SIDE_AUTO_IN, SIDE_TOP, NBT_ENERGY_ACCEPTED_SIDES, SBIT_B), "CPC", "wXh", "WMW", 'M', OP.casingMachine.dat(aMat), 'X', IL.CONVEYERS[1], 'C', OD_CIRCUITS[1], 'W', MT.DATA.CABLES_01[1], 'P', OP.pipeTiny.dat(MT.StainlessSteel));
		aMat = MT.DATA.Electric_T[2];   aRegistry.add("Printer ("+VN[2]+")"                                 , "Basic Machines"                      , 20523, 20001, aClass, aMat.mToolQuality, 16, aMachine     , UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS,   4.0F, NBT_RESISTANCE,   4.0F, NBT_COLOR, UT.Code.getRGBInt(aMat.fRGBaSolid), NBT_INPUT,   V[2], NBT_TEXTURE, "printer", NBT_ENERGY_ACCEPTED, TD.Energy.EU, NBT_RECIPEMAP, RM.Printer, NBT_INV_SIDE_IN, SBIT_U|SBIT_L, NBT_INV_SIDE_AUTO_IN, SIDE_LEFT, NBT_INV_SIDE_OUT, SBIT_R|SBIT_D, NBT_INV_SIDE_AUTO_OUT, SIDE_RIGHT, NBT_TANK_SIDE_IN, SBIT_U|SBIT_L, NBT_TANK_SIDE_AUTO_IN, SIDE_TOP, NBT_ENERGY_ACCEPTED_SIDES, SBIT_B), "CPC", "wXh", "WMW", 'M', OP.casingMachine.dat(aMat), 'X', IL.CONVEYERS[2], 'C', OD_CIRCUITS[2], 'W', MT.DATA.CABLES_01[2], 'P', OP.pipeTiny.dat(MT.StainlessSteel));
		aMat = MT.DATA.Electric_T[3];   aRegistry.add("Printer ("+VN[3]+")"                                 , "Basic Machines"                      , 20524, 20001, aClass, aMat.mToolQuality, 16, aMachine     , UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS,   4.0F, NBT_RESISTANCE,   4.0F, NBT_COLOR, UT.Code.getRGBInt(aMat.fRGBaSolid), NBT_INPUT,   V[3], NBT_TEXTURE, "printer", NBT_ENERGY_ACCEPTED, TD.Energy.EU, NBT_RECIPEMAP, RM.Printer, NBT_INV_SIDE_IN, SBIT_U|SBIT_L, NBT_INV_SIDE_AUTO_IN, SIDE_LEFT, NBT_INV_SIDE_OUT, SBIT_R|SBIT_D, NBT_INV_SIDE_AUTO_OUT, SIDE_RIGHT, NBT_TANK_SIDE_IN, SBIT_U|SBIT_L, NBT_TANK_SIDE_AUTO_IN, SIDE_TOP, NBT_ENERGY_ACCEPTED_SIDES, SBIT_B), "CPC", "wXh", "WMW", 'M', OP.casingMachine.dat(aMat), 'X', IL.CONVEYERS[3], 'C', OD_CIRCUITS[3], 'W', MT.DATA.CABLES_01[3], 'P', OP.pipeTiny.dat(MT.StainlessSteel));
		aMat = MT.DATA.Electric_T[4];   aRegistry.add("Printer ("+VN[4]+")"                                 , "Basic Machines"                      , 20525, 20001, aClass, aMat.mToolQuality, 16, aMachine     , UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS,   4.0F, NBT_RESISTANCE,   4.0F, NBT_COLOR, UT.Code.getRGBInt(aMat.fRGBaSolid), NBT_INPUT,   V[4], NBT_TEXTURE, "printer", NBT_ENERGY_ACCEPTED, TD.Energy.EU, NBT_RECIPEMAP, RM.Printer, NBT_INV_SIDE_IN, SBIT_U|SBIT_L, NBT_INV_SIDE_AUTO_IN, SIDE_LEFT, NBT_INV_SIDE_OUT, SBIT_R|SBIT_D, NBT_INV_SIDE_AUTO_OUT, SIDE_RIGHT, NBT_TANK_SIDE_IN, SBIT_U|SBIT_L, NBT_TANK_SIDE_AUTO_IN, SIDE_TOP, NBT_ENERGY_ACCEPTED_SIDES, SBIT_B), "CPC", "wXh", "WMW", 'M', OP.casingMachine.dat(aMat), 'X', IL.CONVEYERS[4], 'C', OD_CIRCUITS[4], 'W', MT.DATA.CABLES_01[4], 'P', OP.pipeTiny.dat(MT.StainlessSteel));
		aMat = MT.DATA.Electric_T[5];   aRegistry.add("Printer ("+VN[5]+")"                                 , "Basic Machines"                      , 20526, 20001, aClass, aMat.mToolQuality, 16, aMachine     , UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS,   4.0F, NBT_RESISTANCE,   4.0F, NBT_COLOR, UT.Code.getRGBInt(aMat.fRGBaSolid), NBT_INPUT,   V[5], NBT_TEXTURE, "printer", NBT_ENERGY_ACCEPTED, TD.Energy.EU, NBT_RECIPEMAP, RM.Printer, NBT_INV_SIDE_IN, SBIT_U|SBIT_L, NBT_INV_SIDE_AUTO_IN, SIDE_LEFT, NBT_INV_SIDE_OUT, SBIT_R|SBIT_D, NBT_INV_SIDE_AUTO_OUT, SIDE_RIGHT, NBT_TANK_SIDE_IN, SBIT_U|SBIT_L, NBT_TANK_SIDE_AUTO_IN, SIDE_TOP, NBT_ENERGY_ACCEPTED_SIDES, SBIT_B), "CPC", "wXh", "WMW", 'M', OP.casingMachine.dat(aMat), 'X', IL.CONVEYERS[5], 'C', OD_CIRCUITS[5], 'W', MT.DATA.CABLES_01[5], 'P', OP.pipeTiny.dat(MT.StainlessSteel));
		aMat = MT.DATA.Electric_T[6];   aRegistry.add("Printer ("+VN[6]+")"                                 , "Basic Machines"                      , 20527, 20001, aClass, aMat.mToolQuality, 16, aMachine     , UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS,   4.0F, NBT_RESISTANCE,   4.0F, NBT_COLOR, UT.Code.getRGBInt(aMat.fRGBaSolid), NBT_INPUT,   V[6], NBT_TEXTURE, "printer", NBT_ENERGY_ACCEPTED, TD.Energy.EU, NBT_RECIPEMAP, RM.Printer, NBT_INV_SIDE_IN, SBIT_U|SBIT_L, NBT_INV_SIDE_AUTO_IN, SIDE_LEFT, NBT_INV_SIDE_OUT, SBIT_R|SBIT_D, NBT_INV_SIDE_AUTO_OUT, SIDE_RIGHT, NBT_TANK_SIDE_IN, SBIT_U|SBIT_L, NBT_TANK_SIDE_AUTO_IN, SIDE_TOP, NBT_ENERGY_ACCEPTED_SIDES, SBIT_B), "CPC", "wXh", "WMW", 'M', OP.casingMachine.dat(aMat), 'X', IL.CONVEYERS[6], 'C', OD_CIRCUITS[6], 'W', MT.DATA.CABLES_01[6], 'P', OP.pipeTiny.dat(MT.StainlessSteel));
		aMat = MT.DATA.Electric_T[7];   aRegistry.add("Printer ("+VN[7]+")"                                 , "Basic Machines"                      , 20528, 20001, aClass, aMat.mToolQuality, 16, aMachine     , UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS,   4.0F, NBT_RESISTANCE,   4.0F, NBT_COLOR, UT.Code.getRGBInt(aMat.fRGBaSolid), NBT_INPUT,   V[7], NBT_TEXTURE, "printer", NBT_ENERGY_ACCEPTED, TD.Energy.EU, NBT_RECIPEMAP, RM.Printer, NBT_INV_SIDE_IN, SBIT_U|SBIT_L, NBT_INV_SIDE_AUTO_IN, SIDE_LEFT, NBT_INV_SIDE_OUT, SBIT_R|SBIT_D, NBT_INV_SIDE_AUTO_OUT, SIDE_RIGHT, NBT_TANK_SIDE_IN, SBIT_U|SBIT_L, NBT_TANK_SIDE_AUTO_IN, SIDE_TOP, NBT_ENERGY_ACCEPTED_SIDES, SBIT_B), "CPC", "wXh", "WMW", 'M', OP.casingMachine.dat(aMat), 'X', IL.CONVEYERS[7], 'C', OD_CIRCUITS[7], 'W', MT.DATA.CABLES_01[7], 'P', OP.pipeTiny.dat(MT.StainlessSteel));
		aMat = MT.DATA.Electric_T[8];   aRegistry.add("Printer ("+VN[8]+")"                                 , "Basic Machines"                      , 20529, 20001, aClass, aMat.mToolQuality, 16, aMachine     , UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS,   4.0F, NBT_RESISTANCE,   4.0F, NBT_COLOR, UT.Code.getRGBInt(aMat.fRGBaSolid), NBT_INPUT,   V[8], NBT_TEXTURE, "printer", NBT_ENERGY_ACCEPTED, TD.Energy.EU, NBT_RECIPEMAP, RM.Printer, NBT_INV_SIDE_IN, SBIT_U|SBIT_L, NBT_INV_SIDE_AUTO_IN, SIDE_LEFT, NBT_INV_SIDE_OUT, SBIT_R|SBIT_D, NBT_INV_SIDE_AUTO_OUT, SIDE_RIGHT, NBT_TANK_SIDE_IN, SBIT_U|SBIT_L, NBT_TANK_SIDE_AUTO_IN, SIDE_TOP, NBT_ENERGY_ACCEPTED_SIDES, SBIT_B), "CPC", "wXh", "WMW", 'M', OP.casingMachine.dat(aMat), 'X', IL.CONVEYERS[8], 'C', OD_CIRCUITS[8], 'W', MT.DATA.CABLES_01[8], 'P', OP.pipeTiny.dat(MT.StainlessSteel));
		aMat = MT.DATA.Electric_T[9];   aRegistry.add("Printer ("+VN[9]+")"                                 , "Basic Machines"                      , 20530, 20001, aClass, aMat.mToolQuality, 16, aMachine     , UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS,   4.0F, NBT_RESISTANCE,   4.0F, NBT_COLOR, UT.Code.getRGBInt(aMat.fRGBaSolid), NBT_INPUT,   V[9], NBT_TEXTURE, "printer", NBT_ENERGY_ACCEPTED, TD.Energy.EU, NBT_RECIPEMAP, RM.Printer, NBT_INV_SIDE_IN, SBIT_U|SBIT_L, NBT_INV_SIDE_AUTO_IN, SIDE_LEFT, NBT_INV_SIDE_OUT, SBIT_R|SBIT_D, NBT_INV_SIDE_AUTO_OUT, SIDE_RIGHT, NBT_TANK_SIDE_IN, SBIT_U|SBIT_L, NBT_TANK_SIDE_AUTO_IN, SIDE_TOP, NBT_ENERGY_ACCEPTED_SIDES, SBIT_B), "CPC", "wXh", "WMW", 'M', OP.casingMachine.dat(aMat), 'X', IL.CONVEYERS[9], 'C', OD_CIRCUITS[9], 'W', MT.DATA.CABLES_01[9], 'P', OP.pipeTiny.dat(MT.StainlessSteel));
		aMat = MT.DATA.Electric_T[10];   aRegistry.add("Printer ("+VN[10]+")"                                 , "Basic Machines"                      , 20531, 20001, aClass, aMat.mToolQuality, 16, aMachine     , UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS,   4.0F, NBT_RESISTANCE,   4.0F, NBT_COLOR, UT.Code.getRGBInt(aMat.fRGBaSolid), NBT_INPUT,   V[10], NBT_TEXTURE, "printer", NBT_ENERGY_ACCEPTED, TD.Energy.EU, NBT_RECIPEMAP, RM.Printer, NBT_INV_SIDE_IN, SBIT_U|SBIT_L, NBT_INV_SIDE_AUTO_IN, SIDE_LEFT, NBT_INV_SIDE_OUT, SBIT_R|SBIT_D, NBT_INV_SIDE_AUTO_OUT, SIDE_RIGHT, NBT_TANK_SIDE_IN, SBIT_U|SBIT_L, NBT_TANK_SIDE_AUTO_IN, SIDE_TOP, NBT_ENERGY_ACCEPTED_SIDES, SBIT_B), "CPC", "wXh", "WMW", 'M', OP.casingMachine.dat(aMat), 'X', IL.CONVEYERS[10], 'C', OD_CIRCUITS[10], 'W', MT.DATA.CABLES_01[10], 'P', OP.pipeTiny.dat(MT.StainlessSteel));
		aMat = MT.DATA.Electric_T[11];   aRegistry.add("Printer ("+VN[11]+")"                                 , "Basic Machines"                      , 20532, 20001, aClass, aMat.mToolQuality, 16, aMachine     , UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS,   4.0F, NBT_RESISTANCE,   4.0F, NBT_COLOR, UT.Code.getRGBInt(aMat.fRGBaSolid), NBT_INPUT,   V[11], NBT_TEXTURE, "printer", NBT_ENERGY_ACCEPTED, TD.Energy.EU, NBT_RECIPEMAP, RM.Printer, NBT_INV_SIDE_IN, SBIT_U|SBIT_L, NBT_INV_SIDE_AUTO_IN, SIDE_LEFT, NBT_INV_SIDE_OUT, SBIT_R|SBIT_D, NBT_INV_SIDE_AUTO_OUT, SIDE_RIGHT, NBT_TANK_SIDE_IN, SBIT_U|SBIT_L, NBT_TANK_SIDE_AUTO_IN, SIDE_TOP, NBT_ENERGY_ACCEPTED_SIDES, SBIT_B), "CPC", "wXh", "WMW", 'M', OP.casingMachine.dat(aMat), 'X', IL.CONVEYERS[11], 'C', OD_CIRCUITS[11], 'W', MT.DATA.CABLES_01[11], 'P', OP.pipeTiny.dat(MT.StainlessSteel));
		aMat = MT.DATA.Electric_T[12];   aRegistry.add("Printer ("+VN[12]+")"                                 , "Basic Machines"                      , 20533, 20001, aClass, aMat.mToolQuality, 16, aMachine     , UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS,   4.0F, NBT_RESISTANCE,   4.0F, NBT_COLOR, UT.Code.getRGBInt(aMat.fRGBaSolid), NBT_INPUT,   V[12], NBT_TEXTURE, "printer", NBT_ENERGY_ACCEPTED, TD.Energy.EU, NBT_RECIPEMAP, RM.Printer, NBT_INV_SIDE_IN, SBIT_U|SBIT_L, NBT_INV_SIDE_AUTO_IN, SIDE_LEFT, NBT_INV_SIDE_OUT, SBIT_R|SBIT_D, NBT_INV_SIDE_AUTO_OUT, SIDE_RIGHT, NBT_TANK_SIDE_IN, SBIT_U|SBIT_L, NBT_TANK_SIDE_AUTO_IN, SIDE_TOP, NBT_ENERGY_ACCEPTED_SIDES, SBIT_B), "CPC", "wXh", "WMW", 'M', OP.casingMachine.dat(aMat), 'X', IL.CONVEYERS[12], 'C', OD_CIRCUITS[12], 'W', MT.DATA.CABLES_01[12], 'P', OP.pipeTiny.dat(MT.StainlessSteel));
		aMat = MT.DATA.Electric_T[13];   aRegistry.add("Printer ("+VN[13]+")"                                 , "Basic Machines"                      , 20534, 20001, aClass, aMat.mToolQuality, 16, aMachine     , UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS,   4.0F, NBT_RESISTANCE,   4.0F, NBT_COLOR, UT.Code.getRGBInt(aMat.fRGBaSolid), NBT_INPUT,   V[13], NBT_TEXTURE, "printer", NBT_ENERGY_ACCEPTED, TD.Energy.EU, NBT_RECIPEMAP, RM.Printer, NBT_INV_SIDE_IN, SBIT_U|SBIT_L, NBT_INV_SIDE_AUTO_IN, SIDE_LEFT, NBT_INV_SIDE_OUT, SBIT_R|SBIT_D, NBT_INV_SIDE_AUTO_OUT, SIDE_RIGHT, NBT_TANK_SIDE_IN, SBIT_U|SBIT_L, NBT_TANK_SIDE_AUTO_IN, SIDE_TOP, NBT_ENERGY_ACCEPTED_SIDES, SBIT_B), "CPC", "wXh", "WMW", 'M', OP.casingMachine.dat(aMat), 'X', IL.CONVEYERS[13], 'C', OD_CIRCUITS[13], 'W', MT.DATA.CABLES_01[13], 'P', OP.pipeTiny.dat(MT.StainlessSteel));
		aMat = MT.DATA.Electric_T[14];   aRegistry.add("Printer ("+VN[14]+")"                                 , "Basic Machines"                      , 20535, 20001, aClass, aMat.mToolQuality, 16, aMachine     , UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS,   4.0F, NBT_RESISTANCE,   4.0F, NBT_COLOR, UT.Code.getRGBInt(aMat.fRGBaSolid), NBT_INPUT,   V[14], NBT_TEXTURE, "printer", NBT_ENERGY_ACCEPTED, TD.Energy.EU, NBT_RECIPEMAP, RM.Printer, NBT_INV_SIDE_IN, SBIT_U|SBIT_L, NBT_INV_SIDE_AUTO_IN, SIDE_LEFT, NBT_INV_SIDE_OUT, SBIT_R|SBIT_D, NBT_INV_SIDE_AUTO_OUT, SIDE_RIGHT, NBT_TANK_SIDE_IN, SBIT_U|SBIT_L, NBT_TANK_SIDE_AUTO_IN, SIDE_TOP, NBT_ENERGY_ACCEPTED_SIDES, SBIT_B), "CPC", "wXh", "WMW", 'M', OP.casingMachine.dat(aMat), 'X', IL.CONVEYERS[14], 'C', OD_CIRCUITS[14], 'W', MT.DATA.CABLES_01[14], 'P', OP.pipeTiny.dat(MT.StainlessSteel));
		aMat = MT.DATA.Electric_T[15];   aRegistry.add("Printer ("+VN[15]+")"                                 , "Basic Machines"                      , 20536, 20001, aClass, aMat.mToolQuality, 16, aMachine     , UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS,   4.0F, NBT_RESISTANCE,   4.0F, NBT_COLOR, UT.Code.getRGBInt(aMat.fRGBaSolid), NBT_INPUT,   V[15], NBT_TEXTURE, "printer", NBT_ENERGY_ACCEPTED, TD.Energy.EU, NBT_RECIPEMAP, RM.Printer, NBT_INV_SIDE_IN, SBIT_U|SBIT_L, NBT_INV_SIDE_AUTO_IN, SIDE_LEFT, NBT_INV_SIDE_OUT, SBIT_R|SBIT_D, NBT_INV_SIDE_AUTO_OUT, SIDE_RIGHT, NBT_TANK_SIDE_IN, SBIT_U|SBIT_L, NBT_TANK_SIDE_AUTO_IN, SIDE_TOP, NBT_ENERGY_ACCEPTED_SIDES, SBIT_B), "CPC", "wXh", "WMW", 'M', OP.casingMachine.dat(aMat), 'X', IL.CONVEYERS[15], 'C', OD_CIRCUITS[15], 'W', MT.DATA.CABLES_01[15], 'P', OP.pipeTiny.dat(MT.StainlessSteel));

		aClass = MultiTileEntityBasicMachineElectric.class;
		aMat = MT.DATA.Electric_T[0];   aRegistry.add("Scanner (Visuals, "+VN[0]+")"                        , "Basic Machines"                      , 20541, 20001, aClass, aMat.mToolQuality, 16, aMachine     , UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS,   4.0F, NBT_RESISTANCE,   4.0F, NBT_COLOR, UT.Code.getRGBInt(aMat.fRGBaSolid), NBT_INPUT,   V[0], NBT_TEXTURE, "scannervisuals", NBT_ENERGY_ACCEPTED, TD.Energy.EU, NBT_RECIPEMAP, RM.ScannerVisuals, NBT_INV_SIDE_IN, SBIT_U|SBIT_L, NBT_INV_SIDE_AUTO_IN, SIDE_LEFT, NBT_INV_SIDE_OUT, SBIT_R|SBIT_D, NBT_INV_SIDE_AUTO_OUT, SIDE_RIGHT, NBT_ENERGY_ACCEPTED_SIDES, SBIT_B), "CPC", "wXh", "WMW", 'M', OP.casingMachine.dat(aMat), 'X', IL.CONVEYERS[0], 'C', OD_CIRCUITS[0], 'W', MT.DATA.CABLES_01[0], 'P', OP.plate.dat(MT.Lumium));
		aMat = MT.DATA.Electric_T[1];   aRegistry.add("Scanner (Visuals, "+VN[1]+")"                        , "Basic Machines"                      , 20542, 20001, aClass, aMat.mToolQuality, 16, aMachine     , UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS,   4.0F, NBT_RESISTANCE,   4.0F, NBT_COLOR, UT.Code.getRGBInt(aMat.fRGBaSolid), NBT_INPUT,   V[1], NBT_TEXTURE, "scannervisuals", NBT_ENERGY_ACCEPTED, TD.Energy.EU, NBT_RECIPEMAP, RM.ScannerVisuals, NBT_INV_SIDE_IN, SBIT_U|SBIT_L, NBT_INV_SIDE_AUTO_IN, SIDE_LEFT, NBT_INV_SIDE_OUT, SBIT_R|SBIT_D, NBT_INV_SIDE_AUTO_OUT, SIDE_RIGHT, NBT_ENERGY_ACCEPTED_SIDES, SBIT_B), "CPC", "wXh", "WMW", 'M', OP.casingMachine.dat(aMat), 'X', IL.CONVEYERS[1], 'C', OD_CIRCUITS[1], 'W', MT.DATA.CABLES_01[1], 'P', OP.plate.dat(MT.Lumium));
		aMat = MT.DATA.Electric_T[2];   aRegistry.add("Scanner (Visuals, "+VN[2]+")"                        , "Basic Machines"                      , 20543, 20001, aClass, aMat.mToolQuality, 16, aMachine     , UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS,   4.0F, NBT_RESISTANCE,   4.0F, NBT_COLOR, UT.Code.getRGBInt(aMat.fRGBaSolid), NBT_INPUT,   V[2], NBT_TEXTURE, "scannervisuals", NBT_ENERGY_ACCEPTED, TD.Energy.EU, NBT_RECIPEMAP, RM.ScannerVisuals, NBT_INV_SIDE_IN, SBIT_U|SBIT_L, NBT_INV_SIDE_AUTO_IN, SIDE_LEFT, NBT_INV_SIDE_OUT, SBIT_R|SBIT_D, NBT_INV_SIDE_AUTO_OUT, SIDE_RIGHT, NBT_ENERGY_ACCEPTED_SIDES, SBIT_B), "CPC", "wXh", "WMW", 'M', OP.casingMachine.dat(aMat), 'X', IL.CONVEYERS[2], 'C', OD_CIRCUITS[2], 'W', MT.DATA.CABLES_01[2], 'P', OP.plate.dat(MT.Lumium));
		aMat = MT.DATA.Electric_T[3];   aRegistry.add("Scanner (Visuals, "+VN[3]+")"                        , "Basic Machines"                      , 20544, 20001, aClass, aMat.mToolQuality, 16, aMachine     , UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS,   4.0F, NBT_RESISTANCE,   4.0F, NBT_COLOR, UT.Code.getRGBInt(aMat.fRGBaSolid), NBT_INPUT,   V[3], NBT_TEXTURE, "scannervisuals", NBT_ENERGY_ACCEPTED, TD.Energy.EU, NBT_RECIPEMAP, RM.ScannerVisuals, NBT_INV_SIDE_IN, SBIT_U|SBIT_L, NBT_INV_SIDE_AUTO_IN, SIDE_LEFT, NBT_INV_SIDE_OUT, SBIT_R|SBIT_D, NBT_INV_SIDE_AUTO_OUT, SIDE_RIGHT, NBT_ENERGY_ACCEPTED_SIDES, SBIT_B), "CPC", "wXh", "WMW", 'M', OP.casingMachine.dat(aMat), 'X', IL.CONVEYERS[3], 'C', OD_CIRCUITS[3], 'W', MT.DATA.CABLES_01[3], 'P', OP.plate.dat(MT.Lumium));
		aMat = MT.DATA.Electric_T[4];   aRegistry.add("Scanner (Visuals, "+VN[4]+")"                        , "Basic Machines"                      , 20545, 20001, aClass, aMat.mToolQuality, 16, aMachine     , UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS,   4.0F, NBT_RESISTANCE,   4.0F, NBT_COLOR, UT.Code.getRGBInt(aMat.fRGBaSolid), NBT_INPUT,   V[4], NBT_TEXTURE, "scannervisuals", NBT_ENERGY_ACCEPTED, TD.Energy.EU, NBT_RECIPEMAP, RM.ScannerVisuals, NBT_INV_SIDE_IN, SBIT_U|SBIT_L, NBT_INV_SIDE_AUTO_IN, SIDE_LEFT, NBT_INV_SIDE_OUT, SBIT_R|SBIT_D, NBT_INV_SIDE_AUTO_OUT, SIDE_RIGHT, NBT_ENERGY_ACCEPTED_SIDES, SBIT_B), "CPC", "wXh", "WMW", 'M', OP.casingMachine.dat(aMat), 'X', IL.CONVEYERS[4], 'C', OD_CIRCUITS[4], 'W', MT.DATA.CABLES_01[4], 'P', OP.plate.dat(MT.Lumium));
		aMat = MT.DATA.Electric_T[5];   aRegistry.add("Scanner (Visuals, "+VN[5]+")"                        , "Basic Machines"                      , 20546, 20001, aClass, aMat.mToolQuality, 16, aMachine     , UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS,   4.0F, NBT_RESISTANCE,   4.0F, NBT_COLOR, UT.Code.getRGBInt(aMat.fRGBaSolid), NBT_INPUT,   V[5], NBT_TEXTURE, "scannervisuals", NBT_ENERGY_ACCEPTED, TD.Energy.EU, NBT_RECIPEMAP, RM.ScannerVisuals, NBT_INV_SIDE_IN, SBIT_U|SBIT_L, NBT_INV_SIDE_AUTO_IN, SIDE_LEFT, NBT_INV_SIDE_OUT, SBIT_R|SBIT_D, NBT_INV_SIDE_AUTO_OUT, SIDE_RIGHT, NBT_ENERGY_ACCEPTED_SIDES, SBIT_B), "CPC", "wXh", "WMW", 'M', OP.casingMachine.dat(aMat), 'X', IL.CONVEYERS[5], 'C', OD_CIRCUITS[5], 'W', MT.DATA.CABLES_01[5], 'P', OP.plate.dat(MT.Lumium));
		aMat = MT.DATA.Electric_T[6];   aRegistry.add("Scanner (Visuals, "+VN[6]+")"                        , "Basic Machines"                      , 20547, 20001, aClass, aMat.mToolQuality, 16, aMachine     , UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS,   4.0F, NBT_RESISTANCE,   4.0F, NBT_COLOR, UT.Code.getRGBInt(aMat.fRGBaSolid), NBT_INPUT,   V[6], NBT_TEXTURE, "scannervisuals", NBT_ENERGY_ACCEPTED, TD.Energy.EU, NBT_RECIPEMAP, RM.ScannerVisuals, NBT_INV_SIDE_IN, SBIT_U|SBIT_L, NBT_INV_SIDE_AUTO_IN, SIDE_LEFT, NBT_INV_SIDE_OUT, SBIT_R|SBIT_D, NBT_INV_SIDE_AUTO_OUT, SIDE_RIGHT, NBT_ENERGY_ACCEPTED_SIDES, SBIT_B), "CPC", "wXh", "WMW", 'M', OP.casingMachine.dat(aMat), 'X', IL.CONVEYERS[6], 'C', OD_CIRCUITS[6], 'W', MT.DATA.CABLES_01[6], 'P', OP.plate.dat(MT.Lumium));
		aMat = MT.DATA.Electric_T[7];   aRegistry.add("Scanner (Visuals, "+VN[7]+")"                        , "Basic Machines"                      , 20548, 20001, aClass, aMat.mToolQuality, 16, aMachine     , UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS,   4.0F, NBT_RESISTANCE,   4.0F, NBT_COLOR, UT.Code.getRGBInt(aMat.fRGBaSolid), NBT_INPUT,   V[7], NBT_TEXTURE, "scannervisuals", NBT_ENERGY_ACCEPTED, TD.Energy.EU, NBT_RECIPEMAP, RM.ScannerVisuals, NBT_INV_SIDE_IN, SBIT_U|SBIT_L, NBT_INV_SIDE_AUTO_IN, SIDE_LEFT, NBT_INV_SIDE_OUT, SBIT_R|SBIT_D, NBT_INV_SIDE_AUTO_OUT, SIDE_RIGHT, NBT_ENERGY_ACCEPTED_SIDES, SBIT_B), "CPC", "wXh", "WMW", 'M', OP.casingMachine.dat(aMat), 'X', IL.CONVEYERS[7], 'C', OD_CIRCUITS[7], 'W', MT.DATA.CABLES_01[7], 'P', OP.plate.dat(MT.Lumium));
		aMat = MT.DATA.Electric_T[8];   aRegistry.add("Scanner (Visuals, "+VN[8]+")"                        , "Basic Machines"                      , 20549, 20001, aClass, aMat.mToolQuality, 16, aMachine     , UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS,   4.0F, NBT_RESISTANCE,   4.0F, NBT_COLOR, UT.Code.getRGBInt(aMat.fRGBaSolid), NBT_INPUT,   V[8], NBT_TEXTURE, "scannervisuals", NBT_ENERGY_ACCEPTED, TD.Energy.EU, NBT_RECIPEMAP, RM.ScannerVisuals, NBT_INV_SIDE_IN, SBIT_U|SBIT_L, NBT_INV_SIDE_AUTO_IN, SIDE_LEFT, NBT_INV_SIDE_OUT, SBIT_R|SBIT_D, NBT_INV_SIDE_AUTO_OUT, SIDE_RIGHT, NBT_ENERGY_ACCEPTED_SIDES, SBIT_B), "CPC", "wXh", "WMW", 'M', OP.casingMachine.dat(aMat), 'X', IL.CONVEYERS[8], 'C', OD_CIRCUITS[8], 'W', MT.DATA.CABLES_01[8], 'P', OP.plate.dat(MT.Lumium));
		aMat = MT.DATA.Electric_T[9];   aRegistry.add("Scanner (Visuals, "+VN[9]+")"                        , "Basic Machines"                      , 20550, 20001, aClass, aMat.mToolQuality, 16, aMachine     , UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS,   4.0F, NBT_RESISTANCE,   4.0F, NBT_COLOR, UT.Code.getRGBInt(aMat.fRGBaSolid), NBT_INPUT,   V[9], NBT_TEXTURE, "scannervisuals", NBT_ENERGY_ACCEPTED, TD.Energy.EU, NBT_RECIPEMAP, RM.ScannerVisuals, NBT_INV_SIDE_IN, SBIT_U|SBIT_L, NBT_INV_SIDE_AUTO_IN, SIDE_LEFT, NBT_INV_SIDE_OUT, SBIT_R|SBIT_D, NBT_INV_SIDE_AUTO_OUT, SIDE_RIGHT, NBT_ENERGY_ACCEPTED_SIDES, SBIT_B), "CPC", "wXh", "WMW", 'M', OP.casingMachine.dat(aMat), 'X', IL.CONVEYERS[9], 'C', OD_CIRCUITS[9], 'W', MT.DATA.CABLES_01[9], 'P', OP.plate.dat(MT.Lumium));
		aMat = MT.DATA.Electric_T[10];   aRegistry.add("Scanner (Visuals, "+VN[10]+")"                        , "Basic Machines"                      , 20551, 20001, aClass, aMat.mToolQuality, 16, aMachine     , UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS,   4.0F, NBT_RESISTANCE,   4.0F, NBT_COLOR, UT.Code.getRGBInt(aMat.fRGBaSolid), NBT_INPUT,   V[10], NBT_TEXTURE, "scannervisuals", NBT_ENERGY_ACCEPTED, TD.Energy.EU, NBT_RECIPEMAP, RM.ScannerVisuals, NBT_INV_SIDE_IN, SBIT_U|SBIT_L, NBT_INV_SIDE_AUTO_IN, SIDE_LEFT, NBT_INV_SIDE_OUT, SBIT_R|SBIT_D, NBT_INV_SIDE_AUTO_OUT, SIDE_RIGHT, NBT_ENERGY_ACCEPTED_SIDES, SBIT_B), "CPC", "wXh", "WMW", 'M', OP.casingMachine.dat(aMat), 'X', IL.CONVEYERS[10], 'C', OD_CIRCUITS[10], 'W', MT.DATA.CABLES_01[10], 'P', OP.plate.dat(MT.Lumium));
		aMat = MT.DATA.Electric_T[11];   aRegistry.add("Scanner (Visuals, "+VN[11]+")"                        , "Basic Machines"                      , 20552, 20001, aClass, aMat.mToolQuality, 16, aMachine     , UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS,   4.0F, NBT_RESISTANCE,   4.0F, NBT_COLOR, UT.Code.getRGBInt(aMat.fRGBaSolid), NBT_INPUT,   V[11], NBT_TEXTURE, "scannervisuals", NBT_ENERGY_ACCEPTED, TD.Energy.EU, NBT_RECIPEMAP, RM.ScannerVisuals, NBT_INV_SIDE_IN, SBIT_U|SBIT_L, NBT_INV_SIDE_AUTO_IN, SIDE_LEFT, NBT_INV_SIDE_OUT, SBIT_R|SBIT_D, NBT_INV_SIDE_AUTO_OUT, SIDE_RIGHT, NBT_ENERGY_ACCEPTED_SIDES, SBIT_B), "CPC", "wXh", "WMW", 'M', OP.casingMachine.dat(aMat), 'X', IL.CONVEYERS[11], 'C', OD_CIRCUITS[11], 'W', MT.DATA.CABLES_01[11], 'P', OP.plate.dat(MT.Lumium));
		aMat = MT.DATA.Electric_T[12];   aRegistry.add("Scanner (Visuals, "+VN[12]+")"                        , "Basic Machines"                      , 20553, 20001, aClass, aMat.mToolQuality, 16, aMachine     , UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS,   4.0F, NBT_RESISTANCE,   4.0F, NBT_COLOR, UT.Code.getRGBInt(aMat.fRGBaSolid), NBT_INPUT,   V[12], NBT_TEXTURE, "scannervisuals", NBT_ENERGY_ACCEPTED, TD.Energy.EU, NBT_RECIPEMAP, RM.ScannerVisuals, NBT_INV_SIDE_IN, SBIT_U|SBIT_L, NBT_INV_SIDE_AUTO_IN, SIDE_LEFT, NBT_INV_SIDE_OUT, SBIT_R|SBIT_D, NBT_INV_SIDE_AUTO_OUT, SIDE_RIGHT, NBT_ENERGY_ACCEPTED_SIDES, SBIT_B), "CPC", "wXh", "WMW", 'M', OP.casingMachine.dat(aMat), 'X', IL.CONVEYERS[12], 'C', OD_CIRCUITS[12], 'W', MT.DATA.CABLES_01[12], 'P', OP.plate.dat(MT.Lumium));
		aMat = MT.DATA.Electric_T[13];   aRegistry.add("Scanner (Visuals, "+VN[13]+")"                        , "Basic Machines"                      , 20554, 20001, aClass, aMat.mToolQuality, 16, aMachine     , UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS,   4.0F, NBT_RESISTANCE,   4.0F, NBT_COLOR, UT.Code.getRGBInt(aMat.fRGBaSolid), NBT_INPUT,   V[13], NBT_TEXTURE, "scannervisuals", NBT_ENERGY_ACCEPTED, TD.Energy.EU, NBT_RECIPEMAP, RM.ScannerVisuals, NBT_INV_SIDE_IN, SBIT_U|SBIT_L, NBT_INV_SIDE_AUTO_IN, SIDE_LEFT, NBT_INV_SIDE_OUT, SBIT_R|SBIT_D, NBT_INV_SIDE_AUTO_OUT, SIDE_RIGHT, NBT_ENERGY_ACCEPTED_SIDES, SBIT_B), "CPC", "wXh", "WMW", 'M', OP.casingMachine.dat(aMat), 'X', IL.CONVEYERS[13], 'C', OD_CIRCUITS[13], 'W', MT.DATA.CABLES_01[13], 'P', OP.plate.dat(MT.Lumium));
		aMat = MT.DATA.Electric_T[14];   aRegistry.add("Scanner (Visuals, "+VN[14]+")"                        , "Basic Machines"                      , 20555, 20001, aClass, aMat.mToolQuality, 16, aMachine     , UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS,   4.0F, NBT_RESISTANCE,   4.0F, NBT_COLOR, UT.Code.getRGBInt(aMat.fRGBaSolid), NBT_INPUT,   V[14], NBT_TEXTURE, "scannervisuals", NBT_ENERGY_ACCEPTED, TD.Energy.EU, NBT_RECIPEMAP, RM.ScannerVisuals, NBT_INV_SIDE_IN, SBIT_U|SBIT_L, NBT_INV_SIDE_AUTO_IN, SIDE_LEFT, NBT_INV_SIDE_OUT, SBIT_R|SBIT_D, NBT_INV_SIDE_AUTO_OUT, SIDE_RIGHT, NBT_ENERGY_ACCEPTED_SIDES, SBIT_B), "CPC", "wXh", "WMW", 'M', OP.casingMachine.dat(aMat), 'X', IL.CONVEYERS[14], 'C', OD_CIRCUITS[14], 'W', MT.DATA.CABLES_01[14], 'P', OP.plate.dat(MT.Lumium));
		aMat = MT.DATA.Electric_T[15];   aRegistry.add("Scanner (Visuals, "+VN[15]+")"                        , "Basic Machines"                      , 20556, 20001, aClass, aMat.mToolQuality, 16, aMachine     , UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS,   4.0F, NBT_RESISTANCE,   4.0F, NBT_COLOR, UT.Code.getRGBInt(aMat.fRGBaSolid), NBT_INPUT,   V[15], NBT_TEXTURE, "scannervisuals", NBT_ENERGY_ACCEPTED, TD.Energy.EU, NBT_RECIPEMAP, RM.ScannerVisuals, NBT_INV_SIDE_IN, SBIT_U|SBIT_L, NBT_INV_SIDE_AUTO_IN, SIDE_LEFT, NBT_INV_SIDE_OUT, SBIT_R|SBIT_D, NBT_INV_SIDE_AUTO_OUT, SIDE_RIGHT, NBT_ENERGY_ACCEPTED_SIDES, SBIT_B), "CPC", "wXh", "WMW", 'M', OP.casingMachine.dat(aMat), 'X', IL.CONVEYERS[15], 'C', OD_CIRCUITS[15], 'W', MT.DATA.CABLES_01[15], 'P', OP.plate.dat(MT.Lumium));

		aClass = MultiTileEntityBasicMachine.class;
		aMat = MT.DATA.Heat_T[0];    aRegistry.add("Sluice (" + aMat.getLocal() + ")"                    , "Basic Machines"                      , 20561, 20001, aClass, aMat.mToolQuality, 16, aMachine     , UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS, HARDNESS[0], NBT_RESISTANCE, HARDNESS[0], NBT_COLOR, UT.Code.getRGBInt(aMat.fRGBaSolid), NBT_INPUT, V[0], NBT_TEXTURE, "sluice", NBT_ENERGY_ACCEPTED, TD.Energy.RU, NBT_RECIPEMAP, RM.Sluice, NBT_INV_SIDE_IN, SBIT_L|SBIT_U, NBT_INV_SIDE_AUTO_IN, SIDE_LEFT, NBT_INV_SIDE_OUT, SBIT_R|SBIT_D, NBT_INV_SIDE_AUTO_OUT, SIDE_RIGHT, NBT_TANK_SIDE_IN, SBIT_L|SBIT_U, NBT_TANK_SIDE_AUTO_IN, SIDE_TOP, NBT_TANK_SIDE_OUT, SBIT_R|SBIT_D, NBT_TANK_SIDE_AUTO_OUT, SIDE_BOTTOM, NBT_ENERGY_ACCEPTED_SIDES, SBIT_B), "PPP", "RGR", "GMG", 'M', OP.casingMachineDouble.dat(aMat), 'R', OP.rotor.dat(aMat), 'G', OP.gearGt.dat(aMat), 'P', OP.plateDouble.dat(aMat));
		aMat = MT.DATA.Heat_T[1];    aRegistry.add("Sluice (" + aMat.getLocal() + ")"                    , "Basic Machines"                      , 20562, 20001, aClass, aMat.mToolQuality, 16, aMachine     , UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS, HARDNESS[1], NBT_RESISTANCE, HARDNESS[1], NBT_COLOR, UT.Code.getRGBInt(aMat.fRGBaSolid), NBT_INPUT, V[1], NBT_TEXTURE, "sluice", NBT_ENERGY_ACCEPTED, TD.Energy.RU, NBT_RECIPEMAP, RM.Sluice, NBT_INV_SIDE_IN, SBIT_L|SBIT_U, NBT_INV_SIDE_AUTO_IN, SIDE_LEFT, NBT_INV_SIDE_OUT, SBIT_R|SBIT_D, NBT_INV_SIDE_AUTO_OUT, SIDE_RIGHT, NBT_TANK_SIDE_IN, SBIT_L|SBIT_U, NBT_TANK_SIDE_AUTO_IN, SIDE_TOP, NBT_TANK_SIDE_OUT, SBIT_R|SBIT_D, NBT_TANK_SIDE_AUTO_OUT, SIDE_BOTTOM, NBT_ENERGY_ACCEPTED_SIDES, SBIT_B), "PPP", "RGR", "GMG", 'M', OP.casingMachineDouble.dat(aMat), 'R', OP.rotor.dat(aMat), 'G', OP.gearGt.dat(aMat), 'P', OP.plateDouble.dat(aMat));
		aMat = MT.DATA.Heat_T[2];    aRegistry.add("Sluice (" + aMat.getLocal() + ")"                    , "Basic Machines"                      , 20563, 20001, aClass, aMat.mToolQuality, 16, aMachine     , UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS, HARDNESS[2], NBT_RESISTANCE, HARDNESS[2], NBT_COLOR, UT.Code.getRGBInt(aMat.fRGBaSolid), NBT_INPUT, V[2], NBT_TEXTURE, "sluice", NBT_ENERGY_ACCEPTED, TD.Energy.RU, NBT_RECIPEMAP, RM.Sluice, NBT_INV_SIDE_IN, SBIT_L|SBIT_U, NBT_INV_SIDE_AUTO_IN, SIDE_LEFT, NBT_INV_SIDE_OUT, SBIT_R|SBIT_D, NBT_INV_SIDE_AUTO_OUT, SIDE_RIGHT, NBT_TANK_SIDE_IN, SBIT_L|SBIT_U, NBT_TANK_SIDE_AUTO_IN, SIDE_TOP, NBT_TANK_SIDE_OUT, SBIT_R|SBIT_D, NBT_TANK_SIDE_AUTO_OUT, SIDE_BOTTOM, NBT_ENERGY_ACCEPTED_SIDES, SBIT_B), "PPP", "RGR", "GMG", 'M', OP.casingMachineDouble.dat(aMat), 'R', OP.rotor.dat(aMat), 'G', OP.gearGt.dat(aMat), 'P', OP.plateDouble.dat(aMat));
		aMat = MT.DATA.Heat_T[3];    aRegistry.add("Sluice (" + aMat.getLocal() + ")"                    , "Basic Machines"                      , 20564, 20001, aClass, aMat.mToolQuality, 16, aMachine     , UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS, HARDNESS[3], NBT_RESISTANCE, HARDNESS[3], NBT_COLOR, UT.Code.getRGBInt(aMat.fRGBaSolid), NBT_INPUT, V[3], NBT_TEXTURE, "sluice", NBT_ENERGY_ACCEPTED, TD.Energy.RU, NBT_RECIPEMAP, RM.Sluice, NBT_INV_SIDE_IN, SBIT_L|SBIT_U, NBT_INV_SIDE_AUTO_IN, SIDE_LEFT, NBT_INV_SIDE_OUT, SBIT_R|SBIT_D, NBT_INV_SIDE_AUTO_OUT, SIDE_RIGHT, NBT_TANK_SIDE_IN, SBIT_L|SBIT_U, NBT_TANK_SIDE_AUTO_IN, SIDE_TOP, NBT_TANK_SIDE_OUT, SBIT_R|SBIT_D, NBT_TANK_SIDE_AUTO_OUT, SIDE_BOTTOM, NBT_ENERGY_ACCEPTED_SIDES, SBIT_B), "PPP", "RGR", "GMG", 'M', OP.casingMachineDouble.dat(aMat), 'R', OP.rotor.dat(aMat), 'G', OP.gearGt.dat(aMat), 'P', OP.plateDouble.dat(aMat));
		aMat = MT.DATA.Heat_T[4];    aRegistry.add("Sluice (" + aMat.getLocal() + ")"                    , "Basic Machines"                      , 20565, 20001, aClass, aMat.mToolQuality, 16, aMachine     , UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS, HARDNESS[4], NBT_RESISTANCE, HARDNESS[4], NBT_COLOR, UT.Code.getRGBInt(aMat.fRGBaSolid), NBT_INPUT, V[4], NBT_TEXTURE, "sluice", NBT_ENERGY_ACCEPTED, TD.Energy.RU, NBT_RECIPEMAP, RM.Sluice, NBT_INV_SIDE_IN, SBIT_L|SBIT_U, NBT_INV_SIDE_AUTO_IN, SIDE_LEFT, NBT_INV_SIDE_OUT, SBIT_R|SBIT_D, NBT_INV_SIDE_AUTO_OUT, SIDE_RIGHT, NBT_TANK_SIDE_IN, SBIT_L|SBIT_U, NBT_TANK_SIDE_AUTO_IN, SIDE_TOP, NBT_TANK_SIDE_OUT, SBIT_R|SBIT_D, NBT_TANK_SIDE_AUTO_OUT, SIDE_BOTTOM, NBT_ENERGY_ACCEPTED_SIDES, SBIT_B), "PPP", "RGR", "GMG", 'M', OP.casingMachineDouble.dat(aMat), 'R', OP.rotor.dat(aMat), 'G', OP.gearGt.dat(aMat), 'P', OP.plateDouble.dat(aMat));
		aMat = MT.DATA.Heat_T[5];    aRegistry.add("Sluice (" + aMat.getLocal() + ")"                    , "Basic Machines"                      , 20566, 20001, aClass, aMat.mToolQuality, 16, aMachine     , UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS, HARDNESS[5], NBT_RESISTANCE, HARDNESS[5], NBT_COLOR, UT.Code.getRGBInt(aMat.fRGBaSolid), NBT_INPUT, V[5], NBT_TEXTURE, "sluice", NBT_ENERGY_ACCEPTED, TD.Energy.RU, NBT_RECIPEMAP, RM.Sluice, NBT_INV_SIDE_IN, SBIT_L|SBIT_U, NBT_INV_SIDE_AUTO_IN, SIDE_LEFT, NBT_INV_SIDE_OUT, SBIT_R|SBIT_D, NBT_INV_SIDE_AUTO_OUT, SIDE_RIGHT, NBT_TANK_SIDE_IN, SBIT_L|SBIT_U, NBT_TANK_SIDE_AUTO_IN, SIDE_TOP, NBT_TANK_SIDE_OUT, SBIT_R|SBIT_D, NBT_TANK_SIDE_AUTO_OUT, SIDE_BOTTOM, NBT_ENERGY_ACCEPTED_SIDES, SBIT_B), "PPP", "RGR", "GMG", 'M', OP.casingMachineDouble.dat(aMat), 'R', OP.rotor.dat(aMat), 'G', OP.gearGt.dat(aMat), 'P', OP.plateDouble.dat(aMat));
		aMat = MT.DATA.Heat_T[6];    aRegistry.add("Sluice (" + aMat.getLocal() + ")"                    , "Basic Machines"                      , 20567, 20001, aClass, aMat.mToolQuality, 16, aMachine     , UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS, HARDNESS[6], NBT_RESISTANCE, HARDNESS[6], NBT_COLOR, UT.Code.getRGBInt(aMat.fRGBaSolid), NBT_INPUT, V[6], NBT_TEXTURE, "sluice", NBT_ENERGY_ACCEPTED, TD.Energy.RU, NBT_RECIPEMAP, RM.Sluice, NBT_INV_SIDE_IN, SBIT_L|SBIT_U, NBT_INV_SIDE_AUTO_IN, SIDE_LEFT, NBT_INV_SIDE_OUT, SBIT_R|SBIT_D, NBT_INV_SIDE_AUTO_OUT, SIDE_RIGHT, NBT_TANK_SIDE_IN, SBIT_L|SBIT_U, NBT_TANK_SIDE_AUTO_IN, SIDE_TOP, NBT_TANK_SIDE_OUT, SBIT_R|SBIT_D, NBT_TANK_SIDE_AUTO_OUT, SIDE_BOTTOM, NBT_ENERGY_ACCEPTED_SIDES, SBIT_B), "PPP", "RGR", "GMG", 'M', OP.casingMachineDouble.dat(aMat), 'R', OP.rotor.dat(aMat), 'G', OP.gearGt.dat(aMat), 'P', OP.plateDouble.dat(aMat));
		aMat = MT.DATA.Heat_T[7];    aRegistry.add("Sluice (" + aMat.getLocal() + ")"                    , "Basic Machines"                      , 20568, 20001, aClass, aMat.mToolQuality, 16, aMachine     , UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS, HARDNESS[7], NBT_RESISTANCE, HARDNESS[7], NBT_COLOR, UT.Code.getRGBInt(aMat.fRGBaSolid), NBT_INPUT, V[7], NBT_TEXTURE, "sluice", NBT_ENERGY_ACCEPTED, TD.Energy.RU, NBT_RECIPEMAP, RM.Sluice, NBT_INV_SIDE_IN, SBIT_L|SBIT_U, NBT_INV_SIDE_AUTO_IN, SIDE_LEFT, NBT_INV_SIDE_OUT, SBIT_R|SBIT_D, NBT_INV_SIDE_AUTO_OUT, SIDE_RIGHT, NBT_TANK_SIDE_IN, SBIT_L|SBIT_U, NBT_TANK_SIDE_AUTO_IN, SIDE_TOP, NBT_TANK_SIDE_OUT, SBIT_R|SBIT_D, NBT_TANK_SIDE_AUTO_OUT, SIDE_BOTTOM, NBT_ENERGY_ACCEPTED_SIDES, SBIT_B), "PPP", "RGR", "GMG", 'M', OP.casingMachineDouble.dat(aMat), 'R', OP.rotor.dat(aMat), 'G', OP.gearGt.dat(aMat), 'P', OP.plateDouble.dat(aMat));
		aMat = MT.DATA.Heat_T[8];    aRegistry.add("Sluice (" + aMat.getLocal() + ")"                    , "Basic Machines"                      , 20569, 20001, aClass, aMat.mToolQuality, 16, aMachine     , UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS, HARDNESS[8], NBT_RESISTANCE, HARDNESS[8], NBT_COLOR, UT.Code.getRGBInt(aMat.fRGBaSolid), NBT_INPUT, V[8], NBT_TEXTURE, "sluice", NBT_ENERGY_ACCEPTED, TD.Energy.RU, NBT_RECIPEMAP, RM.Sluice, NBT_INV_SIDE_IN, SBIT_L|SBIT_U, NBT_INV_SIDE_AUTO_IN, SIDE_LEFT, NBT_INV_SIDE_OUT, SBIT_R|SBIT_D, NBT_INV_SIDE_AUTO_OUT, SIDE_RIGHT, NBT_TANK_SIDE_IN, SBIT_L|SBIT_U, NBT_TANK_SIDE_AUTO_IN, SIDE_TOP, NBT_TANK_SIDE_OUT, SBIT_R|SBIT_D, NBT_TANK_SIDE_AUTO_OUT, SIDE_BOTTOM, NBT_ENERGY_ACCEPTED_SIDES, SBIT_B), "PPP", "RGR", "GMG", 'M', OP.casingMachineDouble.dat(aMat), 'R', OP.rotor.dat(aMat), 'G', OP.gearGt.dat(aMat), 'P', OP.plateDouble.dat(aMat));
		aMat = MT.DATA.Heat_T[9];    aRegistry.add("Sluice (" + aMat.getLocal() + ")"                    , "Basic Machines"                      , 20570, 20001, aClass, aMat.mToolQuality, 16, aMachine     , UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS, HARDNESS[9], NBT_RESISTANCE, HARDNESS[9], NBT_COLOR, UT.Code.getRGBInt(aMat.fRGBaSolid), NBT_INPUT, V[9], NBT_TEXTURE, "sluice", NBT_ENERGY_ACCEPTED, TD.Energy.RU, NBT_RECIPEMAP, RM.Sluice, NBT_INV_SIDE_IN, SBIT_L|SBIT_U, NBT_INV_SIDE_AUTO_IN, SIDE_LEFT, NBT_INV_SIDE_OUT, SBIT_R|SBIT_D, NBT_INV_SIDE_AUTO_OUT, SIDE_RIGHT, NBT_TANK_SIDE_IN, SBIT_L|SBIT_U, NBT_TANK_SIDE_AUTO_IN, SIDE_TOP, NBT_TANK_SIDE_OUT, SBIT_R|SBIT_D, NBT_TANK_SIDE_AUTO_OUT, SIDE_BOTTOM, NBT_ENERGY_ACCEPTED_SIDES, SBIT_B), "PPP", "RGR", "GMG", 'M', OP.casingMachineDouble.dat(aMat), 'R', OP.rotor.dat(aMat), 'G', OP.gearGt.dat(aMat), 'P', OP.plateDouble.dat(aMat));
		aMat = MT.DATA.Heat_T[10];    aRegistry.add("Sluice (" + aMat.getLocal() + ")"                    , "Basic Machines"                      , 20571, 20001, aClass, aMat.mToolQuality, 16, aMachine     , UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS, HARDNESS[10], NBT_RESISTANCE, HARDNESS[10], NBT_COLOR, UT.Code.getRGBInt(aMat.fRGBaSolid), NBT_INPUT, V[10], NBT_TEXTURE, "sluice", NBT_ENERGY_ACCEPTED, TD.Energy.RU, NBT_RECIPEMAP, RM.Sluice, NBT_INV_SIDE_IN, SBIT_L|SBIT_U, NBT_INV_SIDE_AUTO_IN, SIDE_LEFT, NBT_INV_SIDE_OUT, SBIT_R|SBIT_D, NBT_INV_SIDE_AUTO_OUT, SIDE_RIGHT, NBT_TANK_SIDE_IN, SBIT_L|SBIT_U, NBT_TANK_SIDE_AUTO_IN, SIDE_TOP, NBT_TANK_SIDE_OUT, SBIT_R|SBIT_D, NBT_TANK_SIDE_AUTO_OUT, SIDE_BOTTOM, NBT_ENERGY_ACCEPTED_SIDES, SBIT_B), "PPP", "RGR", "GMG", 'M', OP.casingMachineDouble.dat(aMat), 'R', OP.rotor.dat(aMat), 'G', OP.gearGt.dat(aMat), 'P', OP.plateDouble.dat(aMat));
		aMat = MT.DATA.Heat_T[11];    aRegistry.add("Sluice (" + aMat.getLocal() + ")"                    , "Basic Machines"                      , 20572, 20001, aClass, aMat.mToolQuality, 16, aMachine     , UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS, HARDNESS[11], NBT_RESISTANCE, HARDNESS[11], NBT_COLOR, UT.Code.getRGBInt(aMat.fRGBaSolid), NBT_INPUT, V[11], NBT_TEXTURE, "sluice", NBT_ENERGY_ACCEPTED, TD.Energy.RU, NBT_RECIPEMAP, RM.Sluice, NBT_INV_SIDE_IN, SBIT_L|SBIT_U, NBT_INV_SIDE_AUTO_IN, SIDE_LEFT, NBT_INV_SIDE_OUT, SBIT_R|SBIT_D, NBT_INV_SIDE_AUTO_OUT, SIDE_RIGHT, NBT_TANK_SIDE_IN, SBIT_L|SBIT_U, NBT_TANK_SIDE_AUTO_IN, SIDE_TOP, NBT_TANK_SIDE_OUT, SBIT_R|SBIT_D, NBT_TANK_SIDE_AUTO_OUT, SIDE_BOTTOM, NBT_ENERGY_ACCEPTED_SIDES, SBIT_B), "PPP", "RGR", "GMG", 'M', OP.casingMachineDouble.dat(aMat), 'R', OP.rotor.dat(aMat), 'G', OP.gearGt.dat(aMat), 'P', OP.plateDouble.dat(aMat));
		aMat = MT.DATA.Heat_T[12];    aRegistry.add("Sluice (" + aMat.getLocal() + ")"                    , "Basic Machines"                      , 20573, 20001, aClass, aMat.mToolQuality, 16, aMachine     , UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS, HARDNESS[12], NBT_RESISTANCE, HARDNESS[12], NBT_COLOR, UT.Code.getRGBInt(aMat.fRGBaSolid), NBT_INPUT, V[12], NBT_TEXTURE, "sluice", NBT_ENERGY_ACCEPTED, TD.Energy.RU, NBT_RECIPEMAP, RM.Sluice, NBT_INV_SIDE_IN, SBIT_L|SBIT_U, NBT_INV_SIDE_AUTO_IN, SIDE_LEFT, NBT_INV_SIDE_OUT, SBIT_R|SBIT_D, NBT_INV_SIDE_AUTO_OUT, SIDE_RIGHT, NBT_TANK_SIDE_IN, SBIT_L|SBIT_U, NBT_TANK_SIDE_AUTO_IN, SIDE_TOP, NBT_TANK_SIDE_OUT, SBIT_R|SBIT_D, NBT_TANK_SIDE_AUTO_OUT, SIDE_BOTTOM, NBT_ENERGY_ACCEPTED_SIDES, SBIT_B), "PPP", "RGR", "GMG", 'M', OP.casingMachineDouble.dat(aMat), 'R', OP.rotor.dat(aMat), 'G', OP.gearGt.dat(aMat), 'P', OP.plateDouble.dat(aMat));
		aMat = MT.DATA.Heat_T[13];    aRegistry.add("Sluice (" + aMat.getLocal() + ")"                    , "Basic Machines"                      , 20574, 20001, aClass, aMat.mToolQuality, 16, aMachine     , UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS, HARDNESS[13], NBT_RESISTANCE, HARDNESS[13], NBT_COLOR, UT.Code.getRGBInt(aMat.fRGBaSolid), NBT_INPUT, V[13], NBT_TEXTURE, "sluice", NBT_ENERGY_ACCEPTED, TD.Energy.RU, NBT_RECIPEMAP, RM.Sluice, NBT_INV_SIDE_IN, SBIT_L|SBIT_U, NBT_INV_SIDE_AUTO_IN, SIDE_LEFT, NBT_INV_SIDE_OUT, SBIT_R|SBIT_D, NBT_INV_SIDE_AUTO_OUT, SIDE_RIGHT, NBT_TANK_SIDE_IN, SBIT_L|SBIT_U, NBT_TANK_SIDE_AUTO_IN, SIDE_TOP, NBT_TANK_SIDE_OUT, SBIT_R|SBIT_D, NBT_TANK_SIDE_AUTO_OUT, SIDE_BOTTOM, NBT_ENERGY_ACCEPTED_SIDES, SBIT_B), "PPP", "RGR", "GMG", 'M', OP.casingMachineDouble.dat(aMat), 'R', OP.rotor.dat(aMat), 'G', OP.gearGt.dat(aMat), 'P', OP.plateDouble.dat(aMat));
		aMat = MT.DATA.Heat_T[14];    aRegistry.add("Sluice (" + aMat.getLocal() + ")"                    , "Basic Machines"                      , 20575, 20001, aClass, aMat.mToolQuality, 16, aMachine     , UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS, HARDNESS[14], NBT_RESISTANCE, HARDNESS[14], NBT_COLOR, UT.Code.getRGBInt(aMat.fRGBaSolid), NBT_INPUT, V[14], NBT_TEXTURE, "sluice", NBT_ENERGY_ACCEPTED, TD.Energy.RU, NBT_RECIPEMAP, RM.Sluice, NBT_INV_SIDE_IN, SBIT_L|SBIT_U, NBT_INV_SIDE_AUTO_IN, SIDE_LEFT, NBT_INV_SIDE_OUT, SBIT_R|SBIT_D, NBT_INV_SIDE_AUTO_OUT, SIDE_RIGHT, NBT_TANK_SIDE_IN, SBIT_L|SBIT_U, NBT_TANK_SIDE_AUTO_IN, SIDE_TOP, NBT_TANK_SIDE_OUT, SBIT_R|SBIT_D, NBT_TANK_SIDE_AUTO_OUT, SIDE_BOTTOM, NBT_ENERGY_ACCEPTED_SIDES, SBIT_B), "PPP", "RGR", "GMG", 'M', OP.casingMachineDouble.dat(aMat), 'R', OP.rotor.dat(aMat), 'G', OP.gearGt.dat(aMat), 'P', OP.plateDouble.dat(aMat));
		aMat = MT.DATA.Heat_T[15];    aRegistry.add("Sluice (" + aMat.getLocal() + ")"                    , "Basic Machines"                      , 20576, 20001, aClass, aMat.mToolQuality, 16, aMachine     , UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS, HARDNESS[15], NBT_RESISTANCE, HARDNESS[15], NBT_COLOR, UT.Code.getRGBInt(aMat.fRGBaSolid), NBT_INPUT, V[15], NBT_TEXTURE, "sluice", NBT_ENERGY_ACCEPTED, TD.Energy.RU, NBT_RECIPEMAP, RM.Sluice, NBT_INV_SIDE_IN, SBIT_L|SBIT_U, NBT_INV_SIDE_AUTO_IN, SIDE_LEFT, NBT_INV_SIDE_OUT, SBIT_R|SBIT_D, NBT_INV_SIDE_AUTO_OUT, SIDE_RIGHT, NBT_TANK_SIDE_IN, SBIT_L|SBIT_U, NBT_TANK_SIDE_AUTO_IN, SIDE_TOP, NBT_TANK_SIDE_OUT, SBIT_R|SBIT_D, NBT_TANK_SIDE_AUTO_OUT, SIDE_BOTTOM, NBT_ENERGY_ACCEPTED_SIDES, SBIT_B), "PPP", "RGR", "GMG", 'M', OP.casingMachineDouble.dat(aMat), 'R', OP.rotor.dat(aMat), 'G', OP.gearGt.dat(aMat), 'P', OP.plateDouble.dat(aMat));
	}

	private static void machines2_2(MultiTileEntityRegistry aRegistry, MultiTileEntityBlock aMetal, MultiTileEntityBlock aMetalChips, MultiTileEntityBlock aMetalWires, MultiTileEntityBlock aMachine, MultiTileEntityBlock aWooden, MultiTileEntityBlock aBush, MultiTileEntityBlock aStone, MultiTileEntityBlock aWool, MultiTileEntityBlock aTNT, MultiTileEntityBlock aHive, MultiTileEntityBlock aUtilMetal, MultiTileEntityBlock aUtilStone, MultiTileEntityBlock aUtilWood, MultiTileEntityBlock aUtilWool, OreDictMaterial aMat, Class<? extends TileEntity> aClass) {
		aClass = MultiTileEntityBasicMachine.class;
		aMat = MT.DATA.Electric_T[0];   aRegistry.add("Magnetic Separator (" + aMat.getLocal() + ")"        , "Basic Machines"                      , 20581, 20001, aClass, aMat.mToolQuality, 16, aMachine     , UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS,   4.0F, NBT_RESISTANCE,   4.0F, NBT_COLOR, UT.Code.getRGBInt(aMat.fRGBaSolid), NBT_INPUT,   V[0], NBT_TEXTURE, "magneticseparator", NBT_ENERGY_ACCEPTED, TD.Energy.MU, NBT_RECIPEMAP, RM.MagneticSeparator, NBT_INV_SIDE_IN, SBIT_L, NBT_INV_SIDE_AUTO_IN, SIDE_LEFT, NBT_INV_SIDE_OUT, SBIT_R|SBIT_D, NBT_INV_SIDE_AUTO_OUT, SIDE_RIGHT, NBT_ENERGY_ACCEPTED_SIDES, SBIT_U), "TwT", "TdT", "PMP", 'M', OP.casingMachine.dat(aMat), 'P', OP.plate.dat(aMat), 'T', OP.screw.dat(aMat));
		aMat = MT.DATA.Electric_T[1];   aRegistry.add("Magnetic Separator (" + aMat.getLocal() + ")"        , "Basic Machines"                      , 20582, 20001, aClass, aMat.mToolQuality, 16, aMachine     , UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS,   4.0F, NBT_RESISTANCE,   4.0F, NBT_COLOR, UT.Code.getRGBInt(aMat.fRGBaSolid), NBT_INPUT,   V[1], NBT_TEXTURE, "magneticseparator", NBT_ENERGY_ACCEPTED, TD.Energy.MU, NBT_RECIPEMAP, RM.MagneticSeparator, NBT_INV_SIDE_IN, SBIT_L, NBT_INV_SIDE_AUTO_IN, SIDE_LEFT, NBT_INV_SIDE_OUT, SBIT_R|SBIT_D, NBT_INV_SIDE_AUTO_OUT, SIDE_RIGHT, NBT_ENERGY_ACCEPTED_SIDES, SBIT_U), "TwT", "TdT", "PMP", 'M', OP.casingMachine.dat(aMat), 'P', OP.plate.dat(aMat), 'T', OP.screw.dat(aMat));
		aMat = MT.DATA.Electric_T[2];   aRegistry.add("Magnetic Separator (" + aMat.getLocal() + ")"        , "Basic Machines"                      , 20583, 20001, aClass, aMat.mToolQuality, 16, aMachine     , UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS,   4.0F, NBT_RESISTANCE,   4.0F, NBT_COLOR, UT.Code.getRGBInt(aMat.fRGBaSolid), NBT_INPUT,   V[2], NBT_TEXTURE, "magneticseparator", NBT_ENERGY_ACCEPTED, TD.Energy.MU, NBT_RECIPEMAP, RM.MagneticSeparator, NBT_INV_SIDE_IN, SBIT_L, NBT_INV_SIDE_AUTO_IN, SIDE_LEFT, NBT_INV_SIDE_OUT, SBIT_R|SBIT_D, NBT_INV_SIDE_AUTO_OUT, SIDE_RIGHT, NBT_ENERGY_ACCEPTED_SIDES, SBIT_U), "TwT", "TdT", "PMP", 'M', OP.casingMachine.dat(aMat), 'P', OP.plate.dat(aMat), 'T', OP.screw.dat(aMat));
		aMat = MT.DATA.Electric_T[3];   aRegistry.add("Magnetic Separator (" + aMat.getLocal() + ")"        , "Basic Machines"                      , 20584, 20001, aClass, aMat.mToolQuality, 16, aMachine     , UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS,   4.0F, NBT_RESISTANCE,   4.0F, NBT_COLOR, UT.Code.getRGBInt(aMat.fRGBaSolid), NBT_INPUT,   V[3], NBT_TEXTURE, "magneticseparator", NBT_ENERGY_ACCEPTED, TD.Energy.MU, NBT_RECIPEMAP, RM.MagneticSeparator, NBT_INV_SIDE_IN, SBIT_L, NBT_INV_SIDE_AUTO_IN, SIDE_LEFT, NBT_INV_SIDE_OUT, SBIT_R|SBIT_D, NBT_INV_SIDE_AUTO_OUT, SIDE_RIGHT, NBT_ENERGY_ACCEPTED_SIDES, SBIT_U), "TwT", "TdT", "PMP", 'M', OP.casingMachine.dat(aMat), 'P', OP.plate.dat(aMat), 'T', OP.screw.dat(aMat));
		aMat = MT.DATA.Electric_T[4];   aRegistry.add("Magnetic Separator (" + aMat.getLocal() + ")"        , "Basic Machines"                      , 20585, 20001, aClass, aMat.mToolQuality, 16, aMachine     , UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS,   4.0F, NBT_RESISTANCE,   4.0F, NBT_COLOR, UT.Code.getRGBInt(aMat.fRGBaSolid), NBT_INPUT,   V[4], NBT_TEXTURE, "magneticseparator", NBT_ENERGY_ACCEPTED, TD.Energy.MU, NBT_RECIPEMAP, RM.MagneticSeparator, NBT_INV_SIDE_IN, SBIT_L, NBT_INV_SIDE_AUTO_IN, SIDE_LEFT, NBT_INV_SIDE_OUT, SBIT_R|SBIT_D, NBT_INV_SIDE_AUTO_OUT, SIDE_RIGHT, NBT_ENERGY_ACCEPTED_SIDES, SBIT_U), "TwT", "TdT", "PMP", 'M', OP.casingMachine.dat(aMat), 'P', OP.plate.dat(aMat), 'T', OP.screw.dat(aMat));
		aMat = MT.DATA.Electric_T[5];   aRegistry.add("Magnetic Separator (" + aMat.getLocal() + ")"        , "Basic Machines"                      , 20586, 20001, aClass, aMat.mToolQuality, 16, aMachine     , UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS,   4.0F, NBT_RESISTANCE,   4.0F, NBT_COLOR, UT.Code.getRGBInt(aMat.fRGBaSolid), NBT_INPUT,   V[5], NBT_TEXTURE, "magneticseparator", NBT_ENERGY_ACCEPTED, TD.Energy.MU, NBT_RECIPEMAP, RM.MagneticSeparator, NBT_INV_SIDE_IN, SBIT_L, NBT_INV_SIDE_AUTO_IN, SIDE_LEFT, NBT_INV_SIDE_OUT, SBIT_R|SBIT_D, NBT_INV_SIDE_AUTO_OUT, SIDE_RIGHT, NBT_ENERGY_ACCEPTED_SIDES, SBIT_U), "TwT", "TdT", "PMP", 'M', OP.casingMachine.dat(aMat), 'P', OP.plate.dat(aMat), 'T', OP.screw.dat(aMat));
		aMat = MT.DATA.Electric_T[6];   aRegistry.add("Magnetic Separator (" + aMat.getLocal() + ")"        , "Basic Machines"                      , 20587, 20001, aClass, aMat.mToolQuality, 16, aMachine     , UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS,   4.0F, NBT_RESISTANCE,   4.0F, NBT_COLOR, UT.Code.getRGBInt(aMat.fRGBaSolid), NBT_INPUT,   V[6], NBT_TEXTURE, "magneticseparator", NBT_ENERGY_ACCEPTED, TD.Energy.MU, NBT_RECIPEMAP, RM.MagneticSeparator, NBT_INV_SIDE_IN, SBIT_L, NBT_INV_SIDE_AUTO_IN, SIDE_LEFT, NBT_INV_SIDE_OUT, SBIT_R|SBIT_D, NBT_INV_SIDE_AUTO_OUT, SIDE_RIGHT, NBT_ENERGY_ACCEPTED_SIDES, SBIT_U), "TwT", "TdT", "PMP", 'M', OP.casingMachine.dat(aMat), 'P', OP.plate.dat(aMat), 'T', OP.screw.dat(aMat));
		aMat = MT.DATA.Electric_T[7];   aRegistry.add("Magnetic Separator (" + aMat.getLocal() + ")"        , "Basic Machines"                      , 20588, 20001, aClass, aMat.mToolQuality, 16, aMachine     , UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS,   4.0F, NBT_RESISTANCE,   4.0F, NBT_COLOR, UT.Code.getRGBInt(aMat.fRGBaSolid), NBT_INPUT,   V[7], NBT_TEXTURE, "magneticseparator", NBT_ENERGY_ACCEPTED, TD.Energy.MU, NBT_RECIPEMAP, RM.MagneticSeparator, NBT_INV_SIDE_IN, SBIT_L, NBT_INV_SIDE_AUTO_IN, SIDE_LEFT, NBT_INV_SIDE_OUT, SBIT_R|SBIT_D, NBT_INV_SIDE_AUTO_OUT, SIDE_RIGHT, NBT_ENERGY_ACCEPTED_SIDES, SBIT_U), "TwT", "TdT", "PMP", 'M', OP.casingMachine.dat(aMat), 'P', OP.plate.dat(aMat), 'T', OP.screw.dat(aMat));
		aMat = MT.DATA.Electric_T[8];   aRegistry.add("Magnetic Separator (" + aMat.getLocal() + ")"        , "Basic Machines"                      , 20589, 20001, aClass, aMat.mToolQuality, 16, aMachine     , UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS,   4.0F, NBT_RESISTANCE,   4.0F, NBT_COLOR, UT.Code.getRGBInt(aMat.fRGBaSolid), NBT_INPUT,   V[8], NBT_TEXTURE, "magneticseparator", NBT_ENERGY_ACCEPTED, TD.Energy.MU, NBT_RECIPEMAP, RM.MagneticSeparator, NBT_INV_SIDE_IN, SBIT_L, NBT_INV_SIDE_AUTO_IN, SIDE_LEFT, NBT_INV_SIDE_OUT, SBIT_R|SBIT_D, NBT_INV_SIDE_AUTO_OUT, SIDE_RIGHT, NBT_ENERGY_ACCEPTED_SIDES, SBIT_U), "TwT", "TdT", "PMP", 'M', OP.casingMachine.dat(aMat), 'P', OP.plate.dat(aMat), 'T', OP.screw.dat(aMat));
		aMat = MT.DATA.Electric_T[9];   aRegistry.add("Magnetic Separator (" + aMat.getLocal() + ")"        , "Basic Machines"                      , 20590, 20001, aClass, aMat.mToolQuality, 16, aMachine     , UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS,   4.0F, NBT_RESISTANCE,   4.0F, NBT_COLOR, UT.Code.getRGBInt(aMat.fRGBaSolid), NBT_INPUT,   V[9], NBT_TEXTURE, "magneticseparator", NBT_ENERGY_ACCEPTED, TD.Energy.MU, NBT_RECIPEMAP, RM.MagneticSeparator, NBT_INV_SIDE_IN, SBIT_L, NBT_INV_SIDE_AUTO_IN, SIDE_LEFT, NBT_INV_SIDE_OUT, SBIT_R|SBIT_D, NBT_INV_SIDE_AUTO_OUT, SIDE_RIGHT, NBT_ENERGY_ACCEPTED_SIDES, SBIT_U), "TwT", "TdT", "PMP", 'M', OP.casingMachine.dat(aMat), 'P', OP.plate.dat(aMat), 'T', OP.screw.dat(aMat));
		aMat = MT.DATA.Electric_T[10];   aRegistry.add("Magnetic Separator (" + aMat.getLocal() + ")"        , "Basic Machines"                      , 20591, 20001, aClass, aMat.mToolQuality, 16, aMachine     , UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS,   4.0F, NBT_RESISTANCE,   4.0F, NBT_COLOR, UT.Code.getRGBInt(aMat.fRGBaSolid), NBT_INPUT,   V[10], NBT_TEXTURE, "magneticseparator", NBT_ENERGY_ACCEPTED, TD.Energy.MU, NBT_RECIPEMAP, RM.MagneticSeparator, NBT_INV_SIDE_IN, SBIT_L, NBT_INV_SIDE_AUTO_IN, SIDE_LEFT, NBT_INV_SIDE_OUT, SBIT_R|SBIT_D, NBT_INV_SIDE_AUTO_OUT, SIDE_RIGHT, NBT_ENERGY_ACCEPTED_SIDES, SBIT_U), "TwT", "TdT", "PMP", 'M', OP.casingMachine.dat(aMat), 'P', OP.plate.dat(aMat), 'T', OP.screw.dat(aMat));
		aMat = MT.DATA.Electric_T[11];   aRegistry.add("Magnetic Separator (" + aMat.getLocal() + ")"        , "Basic Machines"                      , 20592, 20001, aClass, aMat.mToolQuality, 16, aMachine     , UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS,   4.0F, NBT_RESISTANCE,   4.0F, NBT_COLOR, UT.Code.getRGBInt(aMat.fRGBaSolid), NBT_INPUT,   V[11], NBT_TEXTURE, "magneticseparator", NBT_ENERGY_ACCEPTED, TD.Energy.MU, NBT_RECIPEMAP, RM.MagneticSeparator, NBT_INV_SIDE_IN, SBIT_L, NBT_INV_SIDE_AUTO_IN, SIDE_LEFT, NBT_INV_SIDE_OUT, SBIT_R|SBIT_D, NBT_INV_SIDE_AUTO_OUT, SIDE_RIGHT, NBT_ENERGY_ACCEPTED_SIDES, SBIT_U), "TwT", "TdT", "PMP", 'M', OP.casingMachine.dat(aMat), 'P', OP.plate.dat(aMat), 'T', OP.screw.dat(aMat));
		aMat = MT.DATA.Electric_T[12];   aRegistry.add("Magnetic Separator (" + aMat.getLocal() + ")"        , "Basic Machines"                      , 20593, 20001, aClass, aMat.mToolQuality, 16, aMachine     , UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS,   4.0F, NBT_RESISTANCE,   4.0F, NBT_COLOR, UT.Code.getRGBInt(aMat.fRGBaSolid), NBT_INPUT,   V[12], NBT_TEXTURE, "magneticseparator", NBT_ENERGY_ACCEPTED, TD.Energy.MU, NBT_RECIPEMAP, RM.MagneticSeparator, NBT_INV_SIDE_IN, SBIT_L, NBT_INV_SIDE_AUTO_IN, SIDE_LEFT, NBT_INV_SIDE_OUT, SBIT_R|SBIT_D, NBT_INV_SIDE_AUTO_OUT, SIDE_RIGHT, NBT_ENERGY_ACCEPTED_SIDES, SBIT_U), "TwT", "TdT", "PMP", 'M', OP.casingMachine.dat(aMat), 'P', OP.plate.dat(aMat), 'T', OP.screw.dat(aMat));
		aMat = MT.DATA.Electric_T[13];   aRegistry.add("Magnetic Separator (" + aMat.getLocal() + ")"        , "Basic Machines"                      , 20594, 20001, aClass, aMat.mToolQuality, 16, aMachine     , UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS,   4.0F, NBT_RESISTANCE,   4.0F, NBT_COLOR, UT.Code.getRGBInt(aMat.fRGBaSolid), NBT_INPUT,   V[13], NBT_TEXTURE, "magneticseparator", NBT_ENERGY_ACCEPTED, TD.Energy.MU, NBT_RECIPEMAP, RM.MagneticSeparator, NBT_INV_SIDE_IN, SBIT_L, NBT_INV_SIDE_AUTO_IN, SIDE_LEFT, NBT_INV_SIDE_OUT, SBIT_R|SBIT_D, NBT_INV_SIDE_AUTO_OUT, SIDE_RIGHT, NBT_ENERGY_ACCEPTED_SIDES, SBIT_U), "TwT", "TdT", "PMP", 'M', OP.casingMachine.dat(aMat), 'P', OP.plate.dat(aMat), 'T', OP.screw.dat(aMat));
		aMat = MT.DATA.Electric_T[14];   aRegistry.add("Magnetic Separator (" + aMat.getLocal() + ")"        , "Basic Machines"                      , 20595, 20001, aClass, aMat.mToolQuality, 16, aMachine     , UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS,   4.0F, NBT_RESISTANCE,   4.0F, NBT_COLOR, UT.Code.getRGBInt(aMat.fRGBaSolid), NBT_INPUT,   V[14], NBT_TEXTURE, "magneticseparator", NBT_ENERGY_ACCEPTED, TD.Energy.MU, NBT_RECIPEMAP, RM.MagneticSeparator, NBT_INV_SIDE_IN, SBIT_L, NBT_INV_SIDE_AUTO_IN, SIDE_LEFT, NBT_INV_SIDE_OUT, SBIT_R|SBIT_D, NBT_INV_SIDE_AUTO_OUT, SIDE_RIGHT, NBT_ENERGY_ACCEPTED_SIDES, SBIT_U), "TwT", "TdT", "PMP", 'M', OP.casingMachine.dat(aMat), 'P', OP.plate.dat(aMat), 'T', OP.screw.dat(aMat));
		aMat = MT.DATA.Electric_T[15];   aRegistry.add("Magnetic Separator (" + aMat.getLocal() + ")"        , "Basic Machines"                      , 20596, 20001, aClass, aMat.mToolQuality, 16, aMachine     , UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS,   4.0F, NBT_RESISTANCE,   4.0F, NBT_COLOR, UT.Code.getRGBInt(aMat.fRGBaSolid), NBT_INPUT,   V[15], NBT_TEXTURE, "magneticseparator", NBT_ENERGY_ACCEPTED, TD.Energy.MU, NBT_RECIPEMAP, RM.MagneticSeparator, NBT_INV_SIDE_IN, SBIT_L, NBT_INV_SIDE_AUTO_IN, SIDE_LEFT, NBT_INV_SIDE_OUT, SBIT_R|SBIT_D, NBT_INV_SIDE_AUTO_OUT, SIDE_RIGHT, NBT_ENERGY_ACCEPTED_SIDES, SBIT_U), "TwT", "TdT", "PMP", 'M', OP.casingMachine.dat(aMat), 'P', OP.plate.dat(aMat), 'T', OP.screw.dat(aMat));

		aClass = MultiTileEntityBasicMachine.class;
		aMat = MT.DATA.Heat_T[0];       aRegistry.add("Dryer (" + aMat.getLocal() + ")"                     , "Basic Machines"                      , 20601, 20001, aClass, aMat.mToolQuality, 16, aMachine     , UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS, HARDNESS[0], NBT_RESISTANCE, HARDNESS[0], NBT_COLOR, UT.Code.getRGBInt(aMat.fRGBaSolid), NBT_INPUT, V[0], NBT_TEXTURE, "dryer", NBT_ENERGY_ACCEPTED, TD.Energy.HU, NBT_RECIPEMAP, RM.Drying, NBT_INV_SIDE_IN, SBIT_B|SBIT_L, NBT_INV_SIDE_AUTO_IN, SIDE_LEFT, NBT_INV_SIDE_OUT, SBIT_R, NBT_INV_SIDE_AUTO_OUT, SIDE_RIGHT, NBT_TANK_SIDE_IN, SBIT_B|SBIT_L, NBT_TANK_SIDE_AUTO_IN, SIDE_BACK, NBT_TANK_SIDE_OUT, SBIT_U, NBT_TANK_SIDE_AUTO_OUT, SIDE_TOP, NBT_ENERGY_ACCEPTED_SIDES, SBIT_D, NBT_CHEAP_OVERCLOCKING, T, NBT_PARALLEL,  1, NBT_PARALLEL_DURATION, T), "wPh", "BMB", "BCB", 'M', OP.casingMachine.dat(aMat), 'C', OP.plateDouble.dat(ANY.Cu), 'B', Blocks.brick_block, 'P', OP.pipeMedium.dat(aMat));
		aMat = MT.DATA.Heat_T[1];       aRegistry.add("Dryer (" + aMat.getLocal() + ")"                     , "Basic Machines"                      , 20602, 20001, aClass, aMat.mToolQuality, 16, aMachine     , UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS, HARDNESS[1], NBT_RESISTANCE, HARDNESS[1], NBT_COLOR, UT.Code.getRGBInt(aMat.fRGBaSolid), NBT_INPUT, V[1], NBT_TEXTURE, "dryer", NBT_ENERGY_ACCEPTED, TD.Energy.HU, NBT_RECIPEMAP, RM.Drying, NBT_INV_SIDE_IN, SBIT_B|SBIT_L, NBT_INV_SIDE_AUTO_IN, SIDE_LEFT, NBT_INV_SIDE_OUT, SBIT_R, NBT_INV_SIDE_AUTO_OUT, SIDE_RIGHT, NBT_TANK_SIDE_IN, SBIT_B|SBIT_L, NBT_TANK_SIDE_AUTO_IN, SIDE_BACK, NBT_TANK_SIDE_OUT, SBIT_U, NBT_TANK_SIDE_AUTO_OUT, SIDE_TOP, NBT_ENERGY_ACCEPTED_SIDES, SBIT_D, NBT_CHEAP_OVERCLOCKING, T, NBT_PARALLEL,  1, NBT_PARALLEL_DURATION, T), "wPh", "BMB", "BCB", 'M', OP.casingMachine.dat(aMat), 'C', OP.plateDouble.dat(ANY.Cu), 'B', Blocks.brick_block, 'P', OP.pipeMedium.dat(aMat));
		aMat = MT.DATA.Heat_T[2];       aRegistry.add("Dryer (" + aMat.getLocal() + ")"                     , "Basic Machines"                      , 20603, 20001, aClass, aMat.mToolQuality, 16, aMachine     , UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS, HARDNESS[2], NBT_RESISTANCE, HARDNESS[2], NBT_COLOR, UT.Code.getRGBInt(aMat.fRGBaSolid), NBT_INPUT, V[2], NBT_TEXTURE, "dryer", NBT_ENERGY_ACCEPTED, TD.Energy.HU, NBT_RECIPEMAP, RM.Drying, NBT_INV_SIDE_IN, SBIT_B|SBIT_L, NBT_INV_SIDE_AUTO_IN, SIDE_LEFT, NBT_INV_SIDE_OUT, SBIT_R, NBT_INV_SIDE_AUTO_OUT, SIDE_RIGHT, NBT_TANK_SIDE_IN, SBIT_B|SBIT_L, NBT_TANK_SIDE_AUTO_IN, SIDE_BACK, NBT_TANK_SIDE_OUT, SBIT_U, NBT_TANK_SIDE_AUTO_OUT, SIDE_TOP, NBT_ENERGY_ACCEPTED_SIDES, SBIT_D, NBT_CHEAP_OVERCLOCKING, T, NBT_PARALLEL, 2, NBT_PARALLEL_DURATION, T), "wPh", "BMB", "BCB", 'M', OP.casingMachine.dat(aMat), 'C', OP.plateDouble.dat(ANY.Cu), 'B', Blocks.brick_block, 'P', OP.pipeMedium.dat(aMat));
		aMat = MT.DATA.Heat_T[3];       aRegistry.add("Dryer (" + aMat.getLocal() + ")"                     , "Basic Machines"                      , 20604, 20001, aClass, aMat.mToolQuality, 16, aMachine     , UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS, HARDNESS[3], NBT_RESISTANCE, HARDNESS[3], NBT_COLOR, UT.Code.getRGBInt(aMat.fRGBaSolid), NBT_INPUT, V[3], NBT_TEXTURE, "dryer", NBT_ENERGY_ACCEPTED, TD.Energy.HU, NBT_RECIPEMAP, RM.Drying, NBT_INV_SIDE_IN, SBIT_B|SBIT_L, NBT_INV_SIDE_AUTO_IN, SIDE_LEFT, NBT_INV_SIDE_OUT, SBIT_R, NBT_INV_SIDE_AUTO_OUT, SIDE_RIGHT, NBT_TANK_SIDE_IN, SBIT_B|SBIT_L, NBT_TANK_SIDE_AUTO_IN, SIDE_BACK, NBT_TANK_SIDE_OUT, SBIT_U, NBT_TANK_SIDE_AUTO_OUT, SIDE_TOP, NBT_ENERGY_ACCEPTED_SIDES, SBIT_D, NBT_CHEAP_OVERCLOCKING, T, NBT_PARALLEL, 4, NBT_PARALLEL_DURATION, T), "wPh", "BMB", "BCB", 'M', OP.casingMachine.dat(aMat), 'C', OP.plateDouble.dat(ANY.Cu), 'B', Blocks.brick_block, 'P', OP.pipeMedium.dat(aMat));
		aMat = MT.DATA.Heat_T[4];       aRegistry.add("Dryer (" + aMat.getLocal() + ")"                     , "Basic Machines"                      , 20605, 20001, aClass, aMat.mToolQuality, 16, aMachine     , UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS, HARDNESS[4], NBT_RESISTANCE, HARDNESS[4], NBT_COLOR, UT.Code.getRGBInt(aMat.fRGBaSolid), NBT_INPUT, V[4], NBT_TEXTURE, "dryer", NBT_ENERGY_ACCEPTED, TD.Energy.HU, NBT_RECIPEMAP, RM.Drying, NBT_INV_SIDE_IN, SBIT_B|SBIT_L, NBT_INV_SIDE_AUTO_IN, SIDE_LEFT, NBT_INV_SIDE_OUT, SBIT_R, NBT_INV_SIDE_AUTO_OUT, SIDE_RIGHT, NBT_TANK_SIDE_IN, SBIT_B|SBIT_L, NBT_TANK_SIDE_AUTO_IN, SIDE_BACK, NBT_TANK_SIDE_OUT, SBIT_U, NBT_TANK_SIDE_AUTO_OUT, SIDE_TOP, NBT_ENERGY_ACCEPTED_SIDES, SBIT_D, NBT_CHEAP_OVERCLOCKING, T, NBT_PARALLEL, 8, NBT_PARALLEL_DURATION, T), "wPh", "BMB", "BCB", 'M', OP.casingMachine.dat(aMat), 'C', OP.plateDouble.dat(ANY.Cu), 'B', Blocks.brick_block, 'P', OP.pipeMedium.dat(aMat));
		aMat = MT.DATA.Heat_T[5];       aRegistry.add("Dryer (" + aMat.getLocal() + ")"                     , "Basic Machines"                      , 20606, 20001, aClass, aMat.mToolQuality, 16, aMachine     , UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS, HARDNESS[5], NBT_RESISTANCE, HARDNESS[5], NBT_COLOR, UT.Code.getRGBInt(aMat.fRGBaSolid), NBT_INPUT, V[5], NBT_TEXTURE, "dryer", NBT_ENERGY_ACCEPTED, TD.Energy.HU, NBT_RECIPEMAP, RM.Drying, NBT_INV_SIDE_IN, SBIT_B|SBIT_L, NBT_INV_SIDE_AUTO_IN, SIDE_LEFT, NBT_INV_SIDE_OUT, SBIT_R, NBT_INV_SIDE_AUTO_OUT, SIDE_RIGHT, NBT_TANK_SIDE_IN, SBIT_B|SBIT_L, NBT_TANK_SIDE_AUTO_IN, SIDE_BACK, NBT_TANK_SIDE_OUT, SBIT_U, NBT_TANK_SIDE_AUTO_OUT, SIDE_TOP, NBT_ENERGY_ACCEPTED_SIDES, SBIT_D, NBT_CHEAP_OVERCLOCKING, T, NBT_PARALLEL,  16, NBT_PARALLEL_DURATION, T), "wPh", "BMB", "BCB", 'M', OP.casingMachine.dat(aMat), 'C', OP.plateDouble.dat(ANY.Cu), 'B', Blocks.brick_block, 'P', OP.pipeMedium.dat(aMat));
		aMat = MT.DATA.Heat_T[6];       aRegistry.add("Dryer (" + aMat.getLocal() + ")"                     , "Basic Machines"                      , 20607, 20001, aClass, aMat.mToolQuality, 16, aMachine     , UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS, HARDNESS[6], NBT_RESISTANCE, HARDNESS[6], NBT_COLOR, UT.Code.getRGBInt(aMat.fRGBaSolid), NBT_INPUT, V[6], NBT_TEXTURE, "dryer", NBT_ENERGY_ACCEPTED, TD.Energy.HU, NBT_RECIPEMAP, RM.Drying, NBT_INV_SIDE_IN, SBIT_B|SBIT_L, NBT_INV_SIDE_AUTO_IN, SIDE_LEFT, NBT_INV_SIDE_OUT, SBIT_R, NBT_INV_SIDE_AUTO_OUT, SIDE_RIGHT, NBT_TANK_SIDE_IN, SBIT_B|SBIT_L, NBT_TANK_SIDE_AUTO_IN, SIDE_BACK, NBT_TANK_SIDE_OUT, SBIT_U, NBT_TANK_SIDE_AUTO_OUT, SIDE_TOP, NBT_ENERGY_ACCEPTED_SIDES, SBIT_D, NBT_CHEAP_OVERCLOCKING, T, NBT_PARALLEL,  32, NBT_PARALLEL_DURATION, T), "wPh", "BMB", "BCB", 'M', OP.casingMachine.dat(aMat), 'C', OP.plateDouble.dat(ANY.Cu), 'B', Blocks.brick_block, 'P', OP.pipeMedium.dat(aMat));
		aMat = MT.DATA.Heat_T[7];       aRegistry.add("Dryer (" + aMat.getLocal() + ")"                     , "Basic Machines"                      , 20608, 20001, aClass, aMat.mToolQuality, 16, aMachine     , UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS, HARDNESS[7], NBT_RESISTANCE, HARDNESS[7], NBT_COLOR, UT.Code.getRGBInt(aMat.fRGBaSolid), NBT_INPUT, V[7], NBT_TEXTURE, "dryer", NBT_ENERGY_ACCEPTED, TD.Energy.HU, NBT_RECIPEMAP, RM.Drying, NBT_INV_SIDE_IN, SBIT_B|SBIT_L, NBT_INV_SIDE_AUTO_IN, SIDE_LEFT, NBT_INV_SIDE_OUT, SBIT_R, NBT_INV_SIDE_AUTO_OUT, SIDE_RIGHT, NBT_TANK_SIDE_IN, SBIT_B|SBIT_L, NBT_TANK_SIDE_AUTO_IN, SIDE_BACK, NBT_TANK_SIDE_OUT, SBIT_U, NBT_TANK_SIDE_AUTO_OUT, SIDE_TOP, NBT_ENERGY_ACCEPTED_SIDES, SBIT_D, NBT_CHEAP_OVERCLOCKING, T, NBT_PARALLEL, 64, NBT_PARALLEL_DURATION, T), "wPh", "BMB", "BCB", 'M', OP.casingMachine.dat(aMat), 'C', OP.plateDouble.dat(ANY.Cu), 'B', Blocks.brick_block, 'P', OP.pipeMedium.dat(aMat));
		aMat = MT.DATA.Heat_T[8];       aRegistry.add("Dryer (" + aMat.getLocal() + ")"                     , "Basic Machines"                      , 20609, 20001, aClass, aMat.mToolQuality, 16, aMachine     , UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS, HARDNESS[8], NBT_RESISTANCE, HARDNESS[8], NBT_COLOR, UT.Code.getRGBInt(aMat.fRGBaSolid), NBT_INPUT, V[8], NBT_TEXTURE, "dryer", NBT_ENERGY_ACCEPTED, TD.Energy.HU, NBT_RECIPEMAP, RM.Drying, NBT_INV_SIDE_IN, SBIT_B|SBIT_L, NBT_INV_SIDE_AUTO_IN, SIDE_LEFT, NBT_INV_SIDE_OUT, SBIT_R, NBT_INV_SIDE_AUTO_OUT, SIDE_RIGHT, NBT_TANK_SIDE_IN, SBIT_B|SBIT_L, NBT_TANK_SIDE_AUTO_IN, SIDE_BACK, NBT_TANK_SIDE_OUT, SBIT_U, NBT_TANK_SIDE_AUTO_OUT, SIDE_TOP, NBT_ENERGY_ACCEPTED_SIDES, SBIT_D, NBT_CHEAP_OVERCLOCKING, T, NBT_PARALLEL, 64, NBT_PARALLEL_DURATION, T), "wPh", "BMB", "BCB", 'M', OP.casingMachine.dat(aMat), 'C', OP.plateDouble.dat(ANY.Cu), 'B', Blocks.brick_block, 'P', OP.pipeMedium.dat(aMat));
		aMat = MT.DATA.Heat_T[9];       aRegistry.add("Dryer (" + aMat.getLocal() + ")"                     , "Basic Machines"                      , 20610, 20001, aClass, aMat.mToolQuality, 16, aMachine     , UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS, HARDNESS[9], NBT_RESISTANCE, HARDNESS[9], NBT_COLOR, UT.Code.getRGBInt(aMat.fRGBaSolid), NBT_INPUT, V[9], NBT_TEXTURE, "dryer", NBT_ENERGY_ACCEPTED, TD.Energy.HU, NBT_RECIPEMAP, RM.Drying, NBT_INV_SIDE_IN, SBIT_B|SBIT_L, NBT_INV_SIDE_AUTO_IN, SIDE_LEFT, NBT_INV_SIDE_OUT, SBIT_R, NBT_INV_SIDE_AUTO_OUT, SIDE_RIGHT, NBT_TANK_SIDE_IN, SBIT_B|SBIT_L, NBT_TANK_SIDE_AUTO_IN, SIDE_BACK, NBT_TANK_SIDE_OUT, SBIT_U, NBT_TANK_SIDE_AUTO_OUT, SIDE_TOP, NBT_ENERGY_ACCEPTED_SIDES, SBIT_D, NBT_CHEAP_OVERCLOCKING, T, NBT_PARALLEL, 64, NBT_PARALLEL_DURATION, T), "wPh", "BMB", "BCB", 'M', OP.casingMachine.dat(aMat), 'C', OP.plateDouble.dat(ANY.Cu), 'B', Blocks.brick_block, 'P', OP.pipeMedium.dat(aMat));
		aMat = MT.DATA.Heat_T[10];       aRegistry.add("Dryer (" + aMat.getLocal() + ")"                     , "Basic Machines"                      , 20611, 20001, aClass, aMat.mToolQuality, 16, aMachine     , UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS, HARDNESS[10], NBT_RESISTANCE, HARDNESS[10], NBT_COLOR, UT.Code.getRGBInt(aMat.fRGBaSolid), NBT_INPUT, V[10], NBT_TEXTURE, "dryer", NBT_ENERGY_ACCEPTED, TD.Energy.HU, NBT_RECIPEMAP, RM.Drying, NBT_INV_SIDE_IN, SBIT_B|SBIT_L, NBT_INV_SIDE_AUTO_IN, SIDE_LEFT, NBT_INV_SIDE_OUT, SBIT_R, NBT_INV_SIDE_AUTO_OUT, SIDE_RIGHT, NBT_TANK_SIDE_IN, SBIT_B|SBIT_L, NBT_TANK_SIDE_AUTO_IN, SIDE_BACK, NBT_TANK_SIDE_OUT, SBIT_U, NBT_TANK_SIDE_AUTO_OUT, SIDE_TOP, NBT_ENERGY_ACCEPTED_SIDES, SBIT_D, NBT_CHEAP_OVERCLOCKING, T, NBT_PARALLEL,  64, NBT_PARALLEL_DURATION, T), "wPh", "BMB", "BCB", 'M', OP.casingMachine.dat(aMat), 'C', OP.plateDouble.dat(ANY.Cu), 'B', Blocks.brick_block, 'P', OP.pipeMedium.dat(aMat));
		aMat = MT.DATA.Heat_T[11];       aRegistry.add("Dryer (" + aMat.getLocal() + ")"                     , "Basic Machines"                      , 20612, 20001, aClass, aMat.mToolQuality, 16, aMachine     , UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS, HARDNESS[11], NBT_RESISTANCE, HARDNESS[11], NBT_COLOR, UT.Code.getRGBInt(aMat.fRGBaSolid), NBT_INPUT, V[11], NBT_TEXTURE, "dryer", NBT_ENERGY_ACCEPTED, TD.Energy.HU, NBT_RECIPEMAP, RM.Drying, NBT_INV_SIDE_IN, SBIT_B|SBIT_L, NBT_INV_SIDE_AUTO_IN, SIDE_LEFT, NBT_INV_SIDE_OUT, SBIT_R, NBT_INV_SIDE_AUTO_OUT, SIDE_RIGHT, NBT_TANK_SIDE_IN, SBIT_B|SBIT_L, NBT_TANK_SIDE_AUTO_IN, SIDE_BACK, NBT_TANK_SIDE_OUT, SBIT_U, NBT_TANK_SIDE_AUTO_OUT, SIDE_TOP, NBT_ENERGY_ACCEPTED_SIDES, SBIT_D, NBT_CHEAP_OVERCLOCKING, T, NBT_PARALLEL,  64, NBT_PARALLEL_DURATION, T), "wPh", "BMB", "BCB", 'M', OP.casingMachine.dat(aMat), 'C', OP.plateDouble.dat(ANY.Cu), 'B', Blocks.brick_block, 'P', OP.pipeMedium.dat(aMat));
		aMat = MT.DATA.Heat_T[12];       aRegistry.add("Dryer (" + aMat.getLocal() + ")"                     , "Basic Machines"                      , 20613, 20001, aClass, aMat.mToolQuality, 16, aMachine     , UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS, HARDNESS[12], NBT_RESISTANCE, HARDNESS[12], NBT_COLOR, UT.Code.getRGBInt(aMat.fRGBaSolid), NBT_INPUT, V[12], NBT_TEXTURE, "dryer", NBT_ENERGY_ACCEPTED, TD.Energy.HU, NBT_RECIPEMAP, RM.Drying, NBT_INV_SIDE_IN, SBIT_B|SBIT_L, NBT_INV_SIDE_AUTO_IN, SIDE_LEFT, NBT_INV_SIDE_OUT, SBIT_R, NBT_INV_SIDE_AUTO_OUT, SIDE_RIGHT, NBT_TANK_SIDE_IN, SBIT_B|SBIT_L, NBT_TANK_SIDE_AUTO_IN, SIDE_BACK, NBT_TANK_SIDE_OUT, SBIT_U, NBT_TANK_SIDE_AUTO_OUT, SIDE_TOP, NBT_ENERGY_ACCEPTED_SIDES, SBIT_D, NBT_CHEAP_OVERCLOCKING, T, NBT_PARALLEL, 64, NBT_PARALLEL_DURATION, T), "wPh", "BMB", "BCB", 'M', OP.casingMachine.dat(aMat), 'C', OP.plateDouble.dat(ANY.Cu), 'B', Blocks.brick_block, 'P', OP.pipeMedium.dat(aMat));
		aMat = MT.DATA.Heat_T[13];       aRegistry.add("Dryer (" + aMat.getLocal() + ")"                     , "Basic Machines"                      , 20614, 20001, aClass, aMat.mToolQuality, 16, aMachine     , UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS, HARDNESS[13], NBT_RESISTANCE, HARDNESS[13], NBT_COLOR, UT.Code.getRGBInt(aMat.fRGBaSolid), NBT_INPUT, V[13], NBT_TEXTURE, "dryer", NBT_ENERGY_ACCEPTED, TD.Energy.HU, NBT_RECIPEMAP, RM.Drying, NBT_INV_SIDE_IN, SBIT_B|SBIT_L, NBT_INV_SIDE_AUTO_IN, SIDE_LEFT, NBT_INV_SIDE_OUT, SBIT_R, NBT_INV_SIDE_AUTO_OUT, SIDE_RIGHT, NBT_TANK_SIDE_IN, SBIT_B|SBIT_L, NBT_TANK_SIDE_AUTO_IN, SIDE_BACK, NBT_TANK_SIDE_OUT, SBIT_U, NBT_TANK_SIDE_AUTO_OUT, SIDE_TOP, NBT_ENERGY_ACCEPTED_SIDES, SBIT_D, NBT_CHEAP_OVERCLOCKING, T, NBT_PARALLEL, 64, NBT_PARALLEL_DURATION, T), "wPh", "BMB", "BCB", 'M', OP.casingMachine.dat(aMat), 'C', OP.plateDouble.dat(ANY.Cu), 'B', Blocks.brick_block, 'P', OP.pipeMedium.dat(aMat));
		aMat = MT.DATA.Heat_T[14];       aRegistry.add("Dryer (" + aMat.getLocal() + ")"                     , "Basic Machines"                      , 20615, 20001, aClass, aMat.mToolQuality, 16, aMachine     , UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS, HARDNESS[14], NBT_RESISTANCE, HARDNESS[14], NBT_COLOR, UT.Code.getRGBInt(aMat.fRGBaSolid), NBT_INPUT, V[14], NBT_TEXTURE, "dryer", NBT_ENERGY_ACCEPTED, TD.Energy.HU, NBT_RECIPEMAP, RM.Drying, NBT_INV_SIDE_IN, SBIT_B|SBIT_L, NBT_INV_SIDE_AUTO_IN, SIDE_LEFT, NBT_INV_SIDE_OUT, SBIT_R, NBT_INV_SIDE_AUTO_OUT, SIDE_RIGHT, NBT_TANK_SIDE_IN, SBIT_B|SBIT_L, NBT_TANK_SIDE_AUTO_IN, SIDE_BACK, NBT_TANK_SIDE_OUT, SBIT_U, NBT_TANK_SIDE_AUTO_OUT, SIDE_TOP, NBT_ENERGY_ACCEPTED_SIDES, SBIT_D, NBT_CHEAP_OVERCLOCKING, T, NBT_PARALLEL, 64, NBT_PARALLEL_DURATION, T), "wPh", "BMB", "BCB", 'M', OP.casingMachine.dat(aMat), 'C', OP.plateDouble.dat(ANY.Cu), 'B', Blocks.brick_block, 'P', OP.pipeMedium.dat(aMat));
		aMat = MT.DATA.Heat_T[15];       aRegistry.add("Dryer (" + aMat.getLocal() + ")"                     , "Basic Machines"                      , 20616, 20001, aClass, aMat.mToolQuality, 16, aMachine     , UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS, HARDNESS[15], NBT_RESISTANCE, HARDNESS[15], NBT_COLOR, UT.Code.getRGBInt(aMat.fRGBaSolid), NBT_INPUT, V[15], NBT_TEXTURE, "dryer", NBT_ENERGY_ACCEPTED, TD.Energy.HU, NBT_RECIPEMAP, RM.Drying, NBT_INV_SIDE_IN, SBIT_B|SBIT_L, NBT_INV_SIDE_AUTO_IN, SIDE_LEFT, NBT_INV_SIDE_OUT, SBIT_R, NBT_INV_SIDE_AUTO_OUT, SIDE_RIGHT, NBT_TANK_SIDE_IN, SBIT_B|SBIT_L, NBT_TANK_SIDE_AUTO_IN, SIDE_BACK, NBT_TANK_SIDE_OUT, SBIT_U, NBT_TANK_SIDE_AUTO_OUT, SIDE_TOP, NBT_ENERGY_ACCEPTED_SIDES, SBIT_D, NBT_CHEAP_OVERCLOCKING, T, NBT_PARALLEL,  64, NBT_PARALLEL_DURATION, T), "wPh", "BMB", "BCB", 'M', OP.casingMachine.dat(aMat), 'C', OP.plateDouble.dat(ANY.Cu), 'B', Blocks.brick_block, 'P', OP.pipeMedium.dat(aMat));

		aClass = MultiTileEntityBasicMachine.class;
		aMat = MT.DATA.Electric_T[0];   aRegistry.add("Laser Engraver (T0)"                                 , "Basic Machines"                      , 20621, 20001, aClass, aMat.mToolQuality, 16, aMachine     , UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS,   4.0F, NBT_RESISTANCE,   4.0F, NBT_COLOR, UT.Code.getRGBInt(aMat.fRGBaSolid), NBT_INPUT,  V[0], NBT_TEXTURE, "laserengraver", NBT_ENERGY_ACCEPTED, TD.Energy.LU, NBT_RECIPEMAP, RM.LaserEngraver, NBT_INV_SIDE_IN, SBIT_L, NBT_INV_SIDE_AUTO_IN, SIDE_LEFT, NBT_INV_SIDE_OUT, SBIT_R, NBT_INV_SIDE_AUTO_OUT, SIDE_RIGHT, NBT_ENERGY_ACCEPTED_SIDES, SBIT_U), "TdT", "GPG", "CMC", 'M', OP.casingMachine.dat(aMat), 'P', OD.craftingHardenedClay, 'C', OD_CIRCUITS[0], 'T', OP.screw.dat(aMat), 'G', OP.gearGtSmall.dat(aMat));
		aMat = MT.DATA.Electric_T[1];   aRegistry.add("Laser Engraver (T1)"                                 , "Basic Machines"                      , 20622, 20001, aClass, aMat.mToolQuality, 16, aMachine     , UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS,   4.0F, NBT_RESISTANCE,   4.0F, NBT_COLOR, UT.Code.getRGBInt(aMat.fRGBaSolid), NBT_INPUT,  V[1], NBT_TEXTURE, "laserengraver", NBT_ENERGY_ACCEPTED, TD.Energy.LU, NBT_RECIPEMAP, RM.LaserEngraver, NBT_INV_SIDE_IN, SBIT_L, NBT_INV_SIDE_AUTO_IN, SIDE_LEFT, NBT_INV_SIDE_OUT, SBIT_R, NBT_INV_SIDE_AUTO_OUT, SIDE_RIGHT, NBT_ENERGY_ACCEPTED_SIDES, SBIT_U), "TdT", "GPG", "CMC", 'M', OP.casingMachine.dat(aMat), 'P', OD.craftingHardenedClay, 'C', OD_CIRCUITS[1], 'T', OP.screw.dat(aMat), 'G', OP.gearGtSmall.dat(aMat));
		aMat = MT.DATA.Electric_T[2];   aRegistry.add("Laser Engraver (T2)"                                 , "Basic Machines"                      , 20623, 20001, aClass, aMat.mToolQuality, 16, aMachine     , UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS,   4.0F, NBT_RESISTANCE,   4.0F, NBT_COLOR, UT.Code.getRGBInt(aMat.fRGBaSolid), NBT_INPUT,  V[2], NBT_TEXTURE, "laserengraver", NBT_ENERGY_ACCEPTED, TD.Energy.LU, NBT_RECIPEMAP, RM.LaserEngraver, NBT_INV_SIDE_IN, SBIT_L, NBT_INV_SIDE_AUTO_IN, SIDE_LEFT, NBT_INV_SIDE_OUT, SBIT_R, NBT_INV_SIDE_AUTO_OUT, SIDE_RIGHT, NBT_ENERGY_ACCEPTED_SIDES, SBIT_U), "TdT", "GPG", "CMC", 'M', OP.casingMachine.dat(aMat), 'P', OD.craftingHardenedClay, 'C', OD_CIRCUITS[2], 'T', OP.screw.dat(aMat), 'G', OP.gearGtSmall.dat(aMat));
		aMat = MT.DATA.Electric_T[3];   aRegistry.add("Laser Engraver (T3)"                                 , "Basic Machines"                      , 20624, 20001, aClass, aMat.mToolQuality, 16, aMachine     , UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS,   4.0F, NBT_RESISTANCE,   4.0F, NBT_COLOR, UT.Code.getRGBInt(aMat.fRGBaSolid), NBT_INPUT,  V[3], NBT_TEXTURE, "laserengraver", NBT_ENERGY_ACCEPTED, TD.Energy.LU, NBT_RECIPEMAP, RM.LaserEngraver, NBT_INV_SIDE_IN, SBIT_L, NBT_INV_SIDE_AUTO_IN, SIDE_LEFT, NBT_INV_SIDE_OUT, SBIT_R, NBT_INV_SIDE_AUTO_OUT, SIDE_RIGHT, NBT_ENERGY_ACCEPTED_SIDES, SBIT_U), "TdT", "GPG", "CMC", 'M', OP.casingMachine.dat(aMat), 'P', OD.craftingHardenedClay, 'C', OD_CIRCUITS[3], 'T', OP.screw.dat(aMat), 'G', OP.gearGtSmall.dat(aMat));
		aMat = MT.DATA.Electric_T[4];   aRegistry.add("Laser Engraver (T4)"                                 , "Basic Machines"                      , 20625, 20001, aClass, aMat.mToolQuality, 16, aMachine     , UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS,   4.0F, NBT_RESISTANCE,   4.0F, NBT_COLOR, UT.Code.getRGBInt(aMat.fRGBaSolid), NBT_INPUT,  V[4], NBT_TEXTURE, "laserengraver", NBT_ENERGY_ACCEPTED, TD.Energy.LU, NBT_RECIPEMAP, RM.LaserEngraver, NBT_INV_SIDE_IN, SBIT_L, NBT_INV_SIDE_AUTO_IN, SIDE_LEFT, NBT_INV_SIDE_OUT, SBIT_R, NBT_INV_SIDE_AUTO_OUT, SIDE_RIGHT, NBT_ENERGY_ACCEPTED_SIDES, SBIT_U), "TdT", "GPG", "CMC", 'M', OP.casingMachine.dat(aMat), 'P', OD.craftingHardenedClay, 'C', OD_CIRCUITS[4], 'T', OP.screw.dat(aMat), 'G', OP.gearGtSmall.dat(aMat));
		aMat = MT.DATA.Electric_T[5];   aRegistry.add("Laser Engraver (T5)"                                 , "Basic Machines"                      , 20626, 20001, aClass, aMat.mToolQuality, 16, aMachine     , UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS,   4.0F, NBT_RESISTANCE,   4.0F, NBT_COLOR, UT.Code.getRGBInt(aMat.fRGBaSolid), NBT_INPUT,  V[5], NBT_TEXTURE, "laserengraver", NBT_ENERGY_ACCEPTED, TD.Energy.LU, NBT_RECIPEMAP, RM.LaserEngraver, NBT_INV_SIDE_IN, SBIT_L, NBT_INV_SIDE_AUTO_IN, SIDE_LEFT, NBT_INV_SIDE_OUT, SBIT_R, NBT_INV_SIDE_AUTO_OUT, SIDE_RIGHT, NBT_ENERGY_ACCEPTED_SIDES, SBIT_U), "TdT", "GPG", "CMC", 'M', OP.casingMachine.dat(aMat), 'P', OD.craftingHardenedClay, 'C', OD_CIRCUITS[5], 'T', OP.screw.dat(aMat), 'G', OP.gearGtSmall.dat(aMat));
		aMat = MT.DATA.Electric_T[6];   aRegistry.add("Laser Engraver (T6)"                                 , "Basic Machines"                      , 20627, 20001, aClass, aMat.mToolQuality, 16, aMachine     , UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS,   4.0F, NBT_RESISTANCE,   4.0F, NBT_COLOR, UT.Code.getRGBInt(aMat.fRGBaSolid), NBT_INPUT,  V[6], NBT_TEXTURE, "laserengraver", NBT_ENERGY_ACCEPTED, TD.Energy.LU, NBT_RECIPEMAP, RM.LaserEngraver, NBT_INV_SIDE_IN, SBIT_L, NBT_INV_SIDE_AUTO_IN, SIDE_LEFT, NBT_INV_SIDE_OUT, SBIT_R, NBT_INV_SIDE_AUTO_OUT, SIDE_RIGHT, NBT_ENERGY_ACCEPTED_SIDES, SBIT_U), "TdT", "GPG", "CMC", 'M', OP.casingMachine.dat(aMat), 'P', OD.craftingHardenedClay, 'C', OD_CIRCUITS[6], 'T', OP.screw.dat(aMat), 'G', OP.gearGtSmall.dat(aMat));
		aMat = MT.DATA.Electric_T[7];   aRegistry.add("Laser Engraver (T7)"                                 , "Basic Machines"                      , 20628, 20001, aClass, aMat.mToolQuality, 16, aMachine     , UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS,   4.0F, NBT_RESISTANCE,   4.0F, NBT_COLOR, UT.Code.getRGBInt(aMat.fRGBaSolid), NBT_INPUT,  V[7], NBT_TEXTURE, "laserengraver", NBT_ENERGY_ACCEPTED, TD.Energy.LU, NBT_RECIPEMAP, RM.LaserEngraver, NBT_INV_SIDE_IN, SBIT_L, NBT_INV_SIDE_AUTO_IN, SIDE_LEFT, NBT_INV_SIDE_OUT, SBIT_R, NBT_INV_SIDE_AUTO_OUT, SIDE_RIGHT, NBT_ENERGY_ACCEPTED_SIDES, SBIT_U), "TdT", "GPG", "CMC", 'M', OP.casingMachine.dat(aMat), 'P', OD.craftingHardenedClay, 'C', OD_CIRCUITS[7], 'T', OP.screw.dat(aMat), 'G', OP.gearGtSmall.dat(aMat));
		aMat = MT.DATA.Electric_T[8];   aRegistry.add("Laser Engraver (T8)"                                 , "Basic Machines"                      , 20629, 20001, aClass, aMat.mToolQuality, 16, aMachine     , UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS,   4.0F, NBT_RESISTANCE,   4.0F, NBT_COLOR, UT.Code.getRGBInt(aMat.fRGBaSolid), NBT_INPUT,  V[8], NBT_TEXTURE, "laserengraver", NBT_ENERGY_ACCEPTED, TD.Energy.LU, NBT_RECIPEMAP, RM.LaserEngraver, NBT_INV_SIDE_IN, SBIT_L, NBT_INV_SIDE_AUTO_IN, SIDE_LEFT, NBT_INV_SIDE_OUT, SBIT_R, NBT_INV_SIDE_AUTO_OUT, SIDE_RIGHT, NBT_ENERGY_ACCEPTED_SIDES, SBIT_U), "TdT", "GPG", "CMC", 'M', OP.casingMachine.dat(aMat), 'P', OD.craftingHardenedClay, 'C', OD_CIRCUITS[8], 'T', OP.screw.dat(aMat), 'G', OP.gearGtSmall.dat(aMat));
		aMat = MT.DATA.Electric_T[9];   aRegistry.add("Laser Engraver (T9)"                                 , "Basic Machines"                      , 20630, 20001, aClass, aMat.mToolQuality, 16, aMachine     , UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS,   4.0F, NBT_RESISTANCE,   4.0F, NBT_COLOR, UT.Code.getRGBInt(aMat.fRGBaSolid), NBT_INPUT,  V[9], NBT_TEXTURE, "laserengraver", NBT_ENERGY_ACCEPTED, TD.Energy.LU, NBT_RECIPEMAP, RM.LaserEngraver, NBT_INV_SIDE_IN, SBIT_L, NBT_INV_SIDE_AUTO_IN, SIDE_LEFT, NBT_INV_SIDE_OUT, SBIT_R, NBT_INV_SIDE_AUTO_OUT, SIDE_RIGHT, NBT_ENERGY_ACCEPTED_SIDES, SBIT_U), "TdT", "GPG", "CMC", 'M', OP.casingMachine.dat(aMat), 'P', OD.craftingHardenedClay, 'C', OD_CIRCUITS[9], 'T', OP.screw.dat(aMat), 'G', OP.gearGtSmall.dat(aMat));
		aMat = MT.DATA.Electric_T[10];   aRegistry.add("Laser Engraver (T10)"                                 , "Basic Machines"                      , 20631, 20001, aClass, aMat.mToolQuality, 16, aMachine     , UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS,   4.0F, NBT_RESISTANCE,   4.0F, NBT_COLOR, UT.Code.getRGBInt(aMat.fRGBaSolid), NBT_INPUT,  V[10], NBT_TEXTURE, "laserengraver", NBT_ENERGY_ACCEPTED, TD.Energy.LU, NBT_RECIPEMAP, RM.LaserEngraver, NBT_INV_SIDE_IN, SBIT_L, NBT_INV_SIDE_AUTO_IN, SIDE_LEFT, NBT_INV_SIDE_OUT, SBIT_R, NBT_INV_SIDE_AUTO_OUT, SIDE_RIGHT, NBT_ENERGY_ACCEPTED_SIDES, SBIT_U), "TdT", "GPG", "CMC", 'M', OP.casingMachine.dat(aMat), 'P', OD.craftingHardenedClay, 'C', OD_CIRCUITS[10], 'T', OP.screw.dat(aMat), 'G', OP.gearGtSmall.dat(aMat));
		aMat = MT.DATA.Electric_T[11];   aRegistry.add("Laser Engraver (T11)"                                 , "Basic Machines"                      , 20632, 20001, aClass, aMat.mToolQuality, 16, aMachine     , UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS,   4.0F, NBT_RESISTANCE,   4.0F, NBT_COLOR, UT.Code.getRGBInt(aMat.fRGBaSolid), NBT_INPUT,  V[11], NBT_TEXTURE, "laserengraver", NBT_ENERGY_ACCEPTED, TD.Energy.LU, NBT_RECIPEMAP, RM.LaserEngraver, NBT_INV_SIDE_IN, SBIT_L, NBT_INV_SIDE_AUTO_IN, SIDE_LEFT, NBT_INV_SIDE_OUT, SBIT_R, NBT_INV_SIDE_AUTO_OUT, SIDE_RIGHT, NBT_ENERGY_ACCEPTED_SIDES, SBIT_U), "TdT", "GPG", "CMC", 'M', OP.casingMachine.dat(aMat), 'P', OD.craftingHardenedClay, 'C', OD_CIRCUITS[11], 'T', OP.screw.dat(aMat), 'G', OP.gearGtSmall.dat(aMat));
		aMat = MT.DATA.Electric_T[12];   aRegistry.add("Laser Engraver (T12)"                                 , "Basic Machines"                      , 20633, 20001, aClass, aMat.mToolQuality, 16, aMachine     , UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS,   4.0F, NBT_RESISTANCE,   4.0F, NBT_COLOR, UT.Code.getRGBInt(aMat.fRGBaSolid), NBT_INPUT,  V[12], NBT_TEXTURE, "laserengraver", NBT_ENERGY_ACCEPTED, TD.Energy.LU, NBT_RECIPEMAP, RM.LaserEngraver, NBT_INV_SIDE_IN, SBIT_L, NBT_INV_SIDE_AUTO_IN, SIDE_LEFT, NBT_INV_SIDE_OUT, SBIT_R, NBT_INV_SIDE_AUTO_OUT, SIDE_RIGHT, NBT_ENERGY_ACCEPTED_SIDES, SBIT_U), "TdT", "GPG", "CMC", 'M', OP.casingMachine.dat(aMat), 'P', OD.craftingHardenedClay, 'C', OD_CIRCUITS[12], 'T', OP.screw.dat(aMat), 'G', OP.gearGtSmall.dat(aMat));
		aMat = MT.DATA.Electric_T[13];   aRegistry.add("Laser Engraver (T13)"                                 , "Basic Machines"                      , 20634, 20001, aClass, aMat.mToolQuality, 16, aMachine     , UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS,   4.0F, NBT_RESISTANCE,   4.0F, NBT_COLOR, UT.Code.getRGBInt(aMat.fRGBaSolid), NBT_INPUT,  V[13], NBT_TEXTURE, "laserengraver", NBT_ENERGY_ACCEPTED, TD.Energy.LU, NBT_RECIPEMAP, RM.LaserEngraver, NBT_INV_SIDE_IN, SBIT_L, NBT_INV_SIDE_AUTO_IN, SIDE_LEFT, NBT_INV_SIDE_OUT, SBIT_R, NBT_INV_SIDE_AUTO_OUT, SIDE_RIGHT, NBT_ENERGY_ACCEPTED_SIDES, SBIT_U), "TdT", "GPG", "CMC", 'M', OP.casingMachine.dat(aMat), 'P', OD.craftingHardenedClay, 'C', OD_CIRCUITS[13], 'T', OP.screw.dat(aMat), 'G', OP.gearGtSmall.dat(aMat));
		aMat = MT.DATA.Electric_T[14];   aRegistry.add("Laser Engraver (T14)"                                 , "Basic Machines"                      , 20635, 20001, aClass, aMat.mToolQuality, 16, aMachine     , UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS,   4.0F, NBT_RESISTANCE,   4.0F, NBT_COLOR, UT.Code.getRGBInt(aMat.fRGBaSolid), NBT_INPUT,  V[14], NBT_TEXTURE, "laserengraver", NBT_ENERGY_ACCEPTED, TD.Energy.LU, NBT_RECIPEMAP, RM.LaserEngraver, NBT_INV_SIDE_IN, SBIT_L, NBT_INV_SIDE_AUTO_IN, SIDE_LEFT, NBT_INV_SIDE_OUT, SBIT_R, NBT_INV_SIDE_AUTO_OUT, SIDE_RIGHT, NBT_ENERGY_ACCEPTED_SIDES, SBIT_U), "TdT", "GPG", "CMC", 'M', OP.casingMachine.dat(aMat), 'P', OD.craftingHardenedClay, 'C', OD_CIRCUITS[14], 'T', OP.screw.dat(aMat), 'G', OP.gearGtSmall.dat(aMat));
		aMat = MT.DATA.Electric_T[15];   aRegistry.add("Laser Engraver (T15)"                                 , "Basic Machines"                      , 20636, 20001, aClass, aMat.mToolQuality, 16, aMachine     , UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS,   4.0F, NBT_RESISTANCE,   4.0F, NBT_COLOR, UT.Code.getRGBInt(aMat.fRGBaSolid), NBT_INPUT,  V[15], NBT_TEXTURE, "laserengraver", NBT_ENERGY_ACCEPTED, TD.Energy.LU, NBT_RECIPEMAP, RM.LaserEngraver, NBT_INV_SIDE_IN, SBIT_L, NBT_INV_SIDE_AUTO_IN, SIDE_LEFT, NBT_INV_SIDE_OUT, SBIT_R, NBT_INV_SIDE_AUTO_OUT, SIDE_RIGHT, NBT_ENERGY_ACCEPTED_SIDES, SBIT_U), "TdT", "GPG", "CMC", 'M', OP.casingMachine.dat(aMat), 'P', OD.craftingHardenedClay, 'C', OD_CIRCUITS[15], 'T', OP.screw.dat(aMat), 'G', OP.gearGtSmall.dat(aMat));

		aClass = MultiTileEntityBasicMachine.class;
		aMat = MT.DATA.Electric_T[0];   aRegistry.add("Laser Welder (T0)"                                   , "Basic Machines"                      , 20641, 20001, aClass, aMat.mToolQuality, 16, aMachine     , UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS,   4.0F, NBT_RESISTANCE,   4.0F, NBT_COLOR, UT.Code.getRGBInt(aMat.fRGBaSolid), NBT_INPUT,  V[0], NBT_TEXTURE, "laserwelder", NBT_ENERGY_ACCEPTED, TD.Energy.LU, NBT_RECIPEMAP, RM.Welder, NBT_INV_SIDE_IN, SBIT_L, NBT_INV_SIDE_AUTO_IN, SIDE_LEFT, NBT_INV_SIDE_OUT, SBIT_R, NBT_INV_SIDE_AUTO_OUT, SIDE_RIGHT, NBT_TANK_SIDE_IN, SBIT_D|SBIT_L, NBT_TANK_SIDE_AUTO_IN, SIDE_BOTTOM, NBT_ENERGY_ACCEPTED_SIDES, SBIT_U), "TLT", "GPG", "CMC", 'M', OP.casingMachine.dat(aMat), 'P', OD.craftingHardenedClay, 'C', OD_CIRCUITS[0], 'L', DYE_OREDICTS_LENS[DYE_INDEX_Yellow], 'T', OP.screw.dat(aMat), 'G', OP.gearGtSmall.dat(aMat));
		aMat = MT.DATA.Electric_T[1];   aRegistry.add("Laser Welder (T1)"                                   , "Basic Machines"                      , 20642, 20001, aClass, aMat.mToolQuality, 16, aMachine     , UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS,   4.0F, NBT_RESISTANCE,   4.0F, NBT_COLOR, UT.Code.getRGBInt(aMat.fRGBaSolid), NBT_INPUT,  V[1], NBT_TEXTURE, "laserwelder", NBT_ENERGY_ACCEPTED, TD.Energy.LU, NBT_RECIPEMAP, RM.Welder, NBT_INV_SIDE_IN, SBIT_L, NBT_INV_SIDE_AUTO_IN, SIDE_LEFT, NBT_INV_SIDE_OUT, SBIT_R, NBT_INV_SIDE_AUTO_OUT, SIDE_RIGHT, NBT_TANK_SIDE_IN, SBIT_D|SBIT_L, NBT_TANK_SIDE_AUTO_IN, SIDE_BOTTOM, NBT_ENERGY_ACCEPTED_SIDES, SBIT_U), "TLT", "GPG", "CMC", 'M', OP.casingMachine.dat(aMat), 'P', OD.craftingHardenedClay, 'C', OD_CIRCUITS[1], 'L', DYE_OREDICTS_LENS[DYE_INDEX_Yellow], 'T', OP.screw.dat(aMat), 'G', OP.gearGtSmall.dat(aMat));
		aMat = MT.DATA.Electric_T[2];   aRegistry.add("Laser Welder (T2)"                                   , "Basic Machines"                      , 20643, 20001, aClass, aMat.mToolQuality, 16, aMachine     , UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS,   4.0F, NBT_RESISTANCE,   4.0F, NBT_COLOR, UT.Code.getRGBInt(aMat.fRGBaSolid), NBT_INPUT,  V[2], NBT_TEXTURE, "laserwelder", NBT_ENERGY_ACCEPTED, TD.Energy.LU, NBT_RECIPEMAP, RM.Welder, NBT_INV_SIDE_IN, SBIT_L, NBT_INV_SIDE_AUTO_IN, SIDE_LEFT, NBT_INV_SIDE_OUT, SBIT_R, NBT_INV_SIDE_AUTO_OUT, SIDE_RIGHT, NBT_TANK_SIDE_IN, SBIT_D|SBIT_L, NBT_TANK_SIDE_AUTO_IN, SIDE_BOTTOM, NBT_ENERGY_ACCEPTED_SIDES, SBIT_U), "TLT", "GPG", "CMC", 'M', OP.casingMachine.dat(aMat), 'P', OD.craftingHardenedClay, 'C', OD_CIRCUITS[2], 'L', DYE_OREDICTS_LENS[DYE_INDEX_Yellow], 'T', OP.screw.dat(aMat), 'G', OP.gearGtSmall.dat(aMat));
		aMat = MT.DATA.Electric_T[3];   aRegistry.add("Laser Welder (T3)"                                   , "Basic Machines"                      , 20644, 20001, aClass, aMat.mToolQuality, 16, aMachine     , UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS,   4.0F, NBT_RESISTANCE,   4.0F, NBT_COLOR, UT.Code.getRGBInt(aMat.fRGBaSolid), NBT_INPUT,  V[3], NBT_TEXTURE, "laserwelder", NBT_ENERGY_ACCEPTED, TD.Energy.LU, NBT_RECIPEMAP, RM.Welder, NBT_INV_SIDE_IN, SBIT_L, NBT_INV_SIDE_AUTO_IN, SIDE_LEFT, NBT_INV_SIDE_OUT, SBIT_R, NBT_INV_SIDE_AUTO_OUT, SIDE_RIGHT, NBT_TANK_SIDE_IN, SBIT_D|SBIT_L, NBT_TANK_SIDE_AUTO_IN, SIDE_BOTTOM, NBT_ENERGY_ACCEPTED_SIDES, SBIT_U), "TLT", "GPG", "CMC", 'M', OP.casingMachine.dat(aMat), 'P', OD.craftingHardenedClay, 'C', OD_CIRCUITS[3], 'L', DYE_OREDICTS_LENS[DYE_INDEX_Yellow], 'T', OP.screw.dat(aMat), 'G', OP.gearGtSmall.dat(aMat));
		aMat = MT.DATA.Electric_T[4];   aRegistry.add("Laser Welder (T4)"                                   , "Basic Machines"                      , 20645, 20001, aClass, aMat.mToolQuality, 16, aMachine     , UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS,   4.0F, NBT_RESISTANCE,   4.0F, NBT_COLOR, UT.Code.getRGBInt(aMat.fRGBaSolid), NBT_INPUT,  V[4], NBT_TEXTURE, "laserwelder", NBT_ENERGY_ACCEPTED, TD.Energy.LU, NBT_RECIPEMAP, RM.Welder, NBT_INV_SIDE_IN, SBIT_L, NBT_INV_SIDE_AUTO_IN, SIDE_LEFT, NBT_INV_SIDE_OUT, SBIT_R, NBT_INV_SIDE_AUTO_OUT, SIDE_RIGHT, NBT_TANK_SIDE_IN, SBIT_D|SBIT_L, NBT_TANK_SIDE_AUTO_IN, SIDE_BOTTOM, NBT_ENERGY_ACCEPTED_SIDES, SBIT_U), "TLT", "GPG", "CMC", 'M', OP.casingMachine.dat(aMat), 'P', OD.craftingHardenedClay, 'C', OD_CIRCUITS[4], 'L', DYE_OREDICTS_LENS[DYE_INDEX_Yellow], 'T', OP.screw.dat(aMat), 'G', OP.gearGtSmall.dat(aMat));
		aMat = MT.DATA.Electric_T[5];   aRegistry.add("Laser Welder (T5)"                                   , "Basic Machines"                      , 20646, 20001, aClass, aMat.mToolQuality, 16, aMachine     , UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS,   4.0F, NBT_RESISTANCE,   4.0F, NBT_COLOR, UT.Code.getRGBInt(aMat.fRGBaSolid), NBT_INPUT,  V[5], NBT_TEXTURE, "laserwelder", NBT_ENERGY_ACCEPTED, TD.Energy.LU, NBT_RECIPEMAP, RM.Welder, NBT_INV_SIDE_IN, SBIT_L, NBT_INV_SIDE_AUTO_IN, SIDE_LEFT, NBT_INV_SIDE_OUT, SBIT_R, NBT_INV_SIDE_AUTO_OUT, SIDE_RIGHT, NBT_TANK_SIDE_IN, SBIT_D|SBIT_L, NBT_TANK_SIDE_AUTO_IN, SIDE_BOTTOM, NBT_ENERGY_ACCEPTED_SIDES, SBIT_U), "TLT", "GPG", "CMC", 'M', OP.casingMachine.dat(aMat), 'P', OD.craftingHardenedClay, 'C', OD_CIRCUITS[5], 'L', DYE_OREDICTS_LENS[DYE_INDEX_Yellow], 'T', OP.screw.dat(aMat), 'G', OP.gearGtSmall.dat(aMat));
		aMat = MT.DATA.Electric_T[6];   aRegistry.add("Laser Welder (T6)"                                   , "Basic Machines"                      , 20647, 20001, aClass, aMat.mToolQuality, 16, aMachine     , UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS,   4.0F, NBT_RESISTANCE,   4.0F, NBT_COLOR, UT.Code.getRGBInt(aMat.fRGBaSolid), NBT_INPUT,  V[6], NBT_TEXTURE, "laserwelder", NBT_ENERGY_ACCEPTED, TD.Energy.LU, NBT_RECIPEMAP, RM.Welder, NBT_INV_SIDE_IN, SBIT_L, NBT_INV_SIDE_AUTO_IN, SIDE_LEFT, NBT_INV_SIDE_OUT, SBIT_R, NBT_INV_SIDE_AUTO_OUT, SIDE_RIGHT, NBT_TANK_SIDE_IN, SBIT_D|SBIT_L, NBT_TANK_SIDE_AUTO_IN, SIDE_BOTTOM, NBT_ENERGY_ACCEPTED_SIDES, SBIT_U), "TLT", "GPG", "CMC", 'M', OP.casingMachine.dat(aMat), 'P', OD.craftingHardenedClay, 'C', OD_CIRCUITS[6], 'L', DYE_OREDICTS_LENS[DYE_INDEX_Yellow], 'T', OP.screw.dat(aMat), 'G', OP.gearGtSmall.dat(aMat));
		aMat = MT.DATA.Electric_T[7];   aRegistry.add("Laser Welder (T7)"                                   , "Basic Machines"                      , 20648, 20001, aClass, aMat.mToolQuality, 16, aMachine     , UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS,   4.0F, NBT_RESISTANCE,   4.0F, NBT_COLOR, UT.Code.getRGBInt(aMat.fRGBaSolid), NBT_INPUT,  V[7], NBT_TEXTURE, "laserwelder", NBT_ENERGY_ACCEPTED, TD.Energy.LU, NBT_RECIPEMAP, RM.Welder, NBT_INV_SIDE_IN, SBIT_L, NBT_INV_SIDE_AUTO_IN, SIDE_LEFT, NBT_INV_SIDE_OUT, SBIT_R, NBT_INV_SIDE_AUTO_OUT, SIDE_RIGHT, NBT_TANK_SIDE_IN, SBIT_D|SBIT_L, NBT_TANK_SIDE_AUTO_IN, SIDE_BOTTOM, NBT_ENERGY_ACCEPTED_SIDES, SBIT_U), "TLT", "GPG", "CMC", 'M', OP.casingMachine.dat(aMat), 'P', OD.craftingHardenedClay, 'C', OD_CIRCUITS[7], 'L', DYE_OREDICTS_LENS[DYE_INDEX_Yellow], 'T', OP.screw.dat(aMat), 'G', OP.gearGtSmall.dat(aMat));
		aMat = MT.DATA.Electric_T[8];   aRegistry.add("Laser Welder (T8)"                                   , "Basic Machines"                      , 20649, 20001, aClass, aMat.mToolQuality, 16, aMachine     , UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS,   4.0F, NBT_RESISTANCE,   4.0F, NBT_COLOR, UT.Code.getRGBInt(aMat.fRGBaSolid), NBT_INPUT,  V[8], NBT_TEXTURE, "laserwelder", NBT_ENERGY_ACCEPTED, TD.Energy.LU, NBT_RECIPEMAP, RM.Welder, NBT_INV_SIDE_IN, SBIT_L, NBT_INV_SIDE_AUTO_IN, SIDE_LEFT, NBT_INV_SIDE_OUT, SBIT_R, NBT_INV_SIDE_AUTO_OUT, SIDE_RIGHT, NBT_TANK_SIDE_IN, SBIT_D|SBIT_L, NBT_TANK_SIDE_AUTO_IN, SIDE_BOTTOM, NBT_ENERGY_ACCEPTED_SIDES, SBIT_U), "TLT", "GPG", "CMC", 'M', OP.casingMachine.dat(aMat), 'P', OD.craftingHardenedClay, 'C', OD_CIRCUITS[8], 'L', DYE_OREDICTS_LENS[DYE_INDEX_Yellow], 'T', OP.screw.dat(aMat), 'G', OP.gearGtSmall.dat(aMat));
		aMat = MT.DATA.Electric_T[9];   aRegistry.add("Laser Welder (T9)"                                   , "Basic Machines"                      , 20650, 20001, aClass, aMat.mToolQuality, 16, aMachine     , UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS,   4.0F, NBT_RESISTANCE,   4.0F, NBT_COLOR, UT.Code.getRGBInt(aMat.fRGBaSolid), NBT_INPUT,  V[9], NBT_TEXTURE, "laserwelder", NBT_ENERGY_ACCEPTED, TD.Energy.LU, NBT_RECIPEMAP, RM.Welder, NBT_INV_SIDE_IN, SBIT_L, NBT_INV_SIDE_AUTO_IN, SIDE_LEFT, NBT_INV_SIDE_OUT, SBIT_R, NBT_INV_SIDE_AUTO_OUT, SIDE_RIGHT, NBT_TANK_SIDE_IN, SBIT_D|SBIT_L, NBT_TANK_SIDE_AUTO_IN, SIDE_BOTTOM, NBT_ENERGY_ACCEPTED_SIDES, SBIT_U), "TLT", "GPG", "CMC", 'M', OP.casingMachine.dat(aMat), 'P', OD.craftingHardenedClay, 'C', OD_CIRCUITS[9], 'L', DYE_OREDICTS_LENS[DYE_INDEX_Yellow], 'T', OP.screw.dat(aMat), 'G', OP.gearGtSmall.dat(aMat));
		aMat = MT.DATA.Electric_T[10];   aRegistry.add("Laser Welder (T10)"                                   , "Basic Machines"                      , 20651, 20001, aClass, aMat.mToolQuality, 16, aMachine     , UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS,   4.0F, NBT_RESISTANCE,   4.0F, NBT_COLOR, UT.Code.getRGBInt(aMat.fRGBaSolid), NBT_INPUT,  V[10], NBT_TEXTURE, "laserwelder", NBT_ENERGY_ACCEPTED, TD.Energy.LU, NBT_RECIPEMAP, RM.Welder, NBT_INV_SIDE_IN, SBIT_L, NBT_INV_SIDE_AUTO_IN, SIDE_LEFT, NBT_INV_SIDE_OUT, SBIT_R, NBT_INV_SIDE_AUTO_OUT, SIDE_RIGHT, NBT_TANK_SIDE_IN, SBIT_D|SBIT_L, NBT_TANK_SIDE_AUTO_IN, SIDE_BOTTOM, NBT_ENERGY_ACCEPTED_SIDES, SBIT_U), "TLT", "GPG", "CMC", 'M', OP.casingMachine.dat(aMat), 'P', OD.craftingHardenedClay, 'C', OD_CIRCUITS[10], 'L', DYE_OREDICTS_LENS[DYE_INDEX_Yellow], 'T', OP.screw.dat(aMat), 'G', OP.gearGtSmall.dat(aMat));
		aMat = MT.DATA.Electric_T[11];   aRegistry.add("Laser Welder (T11)"                                   , "Basic Machines"                      , 20652, 20001, aClass, aMat.mToolQuality, 16, aMachine     , UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS,   4.0F, NBT_RESISTANCE,   4.0F, NBT_COLOR, UT.Code.getRGBInt(aMat.fRGBaSolid), NBT_INPUT,  V[11], NBT_TEXTURE, "laserwelder", NBT_ENERGY_ACCEPTED, TD.Energy.LU, NBT_RECIPEMAP, RM.Welder, NBT_INV_SIDE_IN, SBIT_L, NBT_INV_SIDE_AUTO_IN, SIDE_LEFT, NBT_INV_SIDE_OUT, SBIT_R, NBT_INV_SIDE_AUTO_OUT, SIDE_RIGHT, NBT_TANK_SIDE_IN, SBIT_D|SBIT_L, NBT_TANK_SIDE_AUTO_IN, SIDE_BOTTOM, NBT_ENERGY_ACCEPTED_SIDES, SBIT_U), "TLT", "GPG", "CMC", 'M', OP.casingMachine.dat(aMat), 'P', OD.craftingHardenedClay, 'C', OD_CIRCUITS[11], 'L', DYE_OREDICTS_LENS[DYE_INDEX_Yellow], 'T', OP.screw.dat(aMat), 'G', OP.gearGtSmall.dat(aMat));
		aMat = MT.DATA.Electric_T[12];   aRegistry.add("Laser Welder (T12)"                                   , "Basic Machines"                      , 20653, 20001, aClass, aMat.mToolQuality, 16, aMachine     , UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS,   4.0F, NBT_RESISTANCE,   4.0F, NBT_COLOR, UT.Code.getRGBInt(aMat.fRGBaSolid), NBT_INPUT,  V[12], NBT_TEXTURE, "laserwelder", NBT_ENERGY_ACCEPTED, TD.Energy.LU, NBT_RECIPEMAP, RM.Welder, NBT_INV_SIDE_IN, SBIT_L, NBT_INV_SIDE_AUTO_IN, SIDE_LEFT, NBT_INV_SIDE_OUT, SBIT_R, NBT_INV_SIDE_AUTO_OUT, SIDE_RIGHT, NBT_TANK_SIDE_IN, SBIT_D|SBIT_L, NBT_TANK_SIDE_AUTO_IN, SIDE_BOTTOM, NBT_ENERGY_ACCEPTED_SIDES, SBIT_U), "TLT", "GPG", "CMC", 'M', OP.casingMachine.dat(aMat), 'P', OD.craftingHardenedClay, 'C', OD_CIRCUITS[12], 'L', DYE_OREDICTS_LENS[DYE_INDEX_Yellow], 'T', OP.screw.dat(aMat), 'G', OP.gearGtSmall.dat(aMat));
		aMat = MT.DATA.Electric_T[13];   aRegistry.add("Laser Welder (T13)"                                   , "Basic Machines"                      , 20654, 20001, aClass, aMat.mToolQuality, 16, aMachine     , UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS,   4.0F, NBT_RESISTANCE,   4.0F, NBT_COLOR, UT.Code.getRGBInt(aMat.fRGBaSolid), NBT_INPUT,  V[13], NBT_TEXTURE, "laserwelder", NBT_ENERGY_ACCEPTED, TD.Energy.LU, NBT_RECIPEMAP, RM.Welder, NBT_INV_SIDE_IN, SBIT_L, NBT_INV_SIDE_AUTO_IN, SIDE_LEFT, NBT_INV_SIDE_OUT, SBIT_R, NBT_INV_SIDE_AUTO_OUT, SIDE_RIGHT, NBT_TANK_SIDE_IN, SBIT_D|SBIT_L, NBT_TANK_SIDE_AUTO_IN, SIDE_BOTTOM, NBT_ENERGY_ACCEPTED_SIDES, SBIT_U), "TLT", "GPG", "CMC", 'M', OP.casingMachine.dat(aMat), 'P', OD.craftingHardenedClay, 'C', OD_CIRCUITS[13], 'L', DYE_OREDICTS_LENS[DYE_INDEX_Yellow], 'T', OP.screw.dat(aMat), 'G', OP.gearGtSmall.dat(aMat));
		aMat = MT.DATA.Electric_T[14];   aRegistry.add("Laser Welder (T14)"                                   , "Basic Machines"                      , 20655, 20001, aClass, aMat.mToolQuality, 16, aMachine     , UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS,   4.0F, NBT_RESISTANCE,   4.0F, NBT_COLOR, UT.Code.getRGBInt(aMat.fRGBaSolid), NBT_INPUT,  V[14], NBT_TEXTURE, "laserwelder", NBT_ENERGY_ACCEPTED, TD.Energy.LU, NBT_RECIPEMAP, RM.Welder, NBT_INV_SIDE_IN, SBIT_L, NBT_INV_SIDE_AUTO_IN, SIDE_LEFT, NBT_INV_SIDE_OUT, SBIT_R, NBT_INV_SIDE_AUTO_OUT, SIDE_RIGHT, NBT_TANK_SIDE_IN, SBIT_D|SBIT_L, NBT_TANK_SIDE_AUTO_IN, SIDE_BOTTOM, NBT_ENERGY_ACCEPTED_SIDES, SBIT_U), "TLT", "GPG", "CMC", 'M', OP.casingMachine.dat(aMat), 'P', OD.craftingHardenedClay, 'C', OD_CIRCUITS[14], 'L', DYE_OREDICTS_LENS[DYE_INDEX_Yellow], 'T', OP.screw.dat(aMat), 'G', OP.gearGtSmall.dat(aMat));
		aMat = MT.DATA.Electric_T[15];   aRegistry.add("Laser Welder (T15)"                                   , "Basic Machines"                      , 20656, 20001, aClass, aMat.mToolQuality, 16, aMachine     , UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS,   4.0F, NBT_RESISTANCE,   4.0F, NBT_COLOR, UT.Code.getRGBInt(aMat.fRGBaSolid), NBT_INPUT,  V[15], NBT_TEXTURE, "laserwelder", NBT_ENERGY_ACCEPTED, TD.Energy.LU, NBT_RECIPEMAP, RM.Welder, NBT_INV_SIDE_IN, SBIT_L, NBT_INV_SIDE_AUTO_IN, SIDE_LEFT, NBT_INV_SIDE_OUT, SBIT_R, NBT_INV_SIDE_AUTO_OUT, SIDE_RIGHT, NBT_TANK_SIDE_IN, SBIT_D|SBIT_L, NBT_TANK_SIDE_AUTO_IN, SIDE_BOTTOM, NBT_ENERGY_ACCEPTED_SIDES, SBIT_U), "TLT", "GPG", "CMC", 'M', OP.casingMachine.dat(aMat), 'P', OD.craftingHardenedClay, 'C', OD_CIRCUITS[15], 'L', DYE_OREDICTS_LENS[DYE_INDEX_Yellow], 'T', OP.screw.dat(aMat), 'G', OP.gearGtSmall.dat(aMat));

		aClass = MultiTileEntityBasicMachineElectric.class;
		aMat = MT.DATA.Electric_T[0];   aRegistry.add("Autocrafter ("+VN[0]+")"                             , "Basic Machines"                      , 20661, 20001, aClass, aMat.mToolQuality, 16, aMachine     , UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS,   4.0F, NBT_RESISTANCE,   4.0F, NBT_COLOR, UT.Code.getRGBInt(aMat.fRGBaSolid), NBT_INPUT,  V[0], NBT_TEXTURE, "autocrafter", NBT_ENERGY_ACCEPTED, TD.Energy.EU, NBT_RECIPEMAP, RM.Autocrafter, NBT_INV_SIDE_IN, SBIT_U|SBIT_L, NBT_INV_SIDE_AUTO_IN, SIDE_LEFT, NBT_INV_SIDE_OUT, SBIT_R|SBIT_D, NBT_INV_SIDE_AUTO_OUT, SIDE_RIGHT, NBT_ENERGY_ACCEPTED_SIDES, SBIT_U|SBIT_D), "WRW", "RwR", "CMC", 'M', OP.casingMachineDouble.dat(aMat), 'C', OD_CIRCUITS[0], 'W', MT.DATA.CABLES_01[0], 'R', IL.ROBOT_ARMS[0]);
		aMat = MT.DATA.Electric_T[1];   aRegistry.add("Autocrafter ("+VN[1]+")"                             , "Basic Machines"                      , 20662, 20001, aClass, aMat.mToolQuality, 16, aMachine     , UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS,   4.0F, NBT_RESISTANCE,   4.0F, NBT_COLOR, UT.Code.getRGBInt(aMat.fRGBaSolid), NBT_INPUT,  V[1], NBT_TEXTURE, "autocrafter", NBT_ENERGY_ACCEPTED, TD.Energy.EU, NBT_RECIPEMAP, RM.Autocrafter, NBT_INV_SIDE_IN, SBIT_U|SBIT_L, NBT_INV_SIDE_AUTO_IN, SIDE_LEFT, NBT_INV_SIDE_OUT, SBIT_R|SBIT_D, NBT_INV_SIDE_AUTO_OUT, SIDE_RIGHT, NBT_ENERGY_ACCEPTED_SIDES, SBIT_U|SBIT_D), "WRW", "RwR", "CMC", 'M', OP.casingMachineDouble.dat(aMat), 'C', OD_CIRCUITS[1], 'W', MT.DATA.CABLES_01[1], 'R', IL.ROBOT_ARMS[1]);
		aMat = MT.DATA.Electric_T[2];   aRegistry.add("Autocrafter ("+VN[2]+")"                             , "Basic Machines"                      , 20663, 20001, aClass, aMat.mToolQuality, 16, aMachine     , UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS,   4.0F, NBT_RESISTANCE,   4.0F, NBT_COLOR, UT.Code.getRGBInt(aMat.fRGBaSolid), NBT_INPUT,  V[2], NBT_TEXTURE, "autocrafter", NBT_ENERGY_ACCEPTED, TD.Energy.EU, NBT_RECIPEMAP, RM.Autocrafter, NBT_INV_SIDE_IN, SBIT_U|SBIT_L, NBT_INV_SIDE_AUTO_IN, SIDE_LEFT, NBT_INV_SIDE_OUT, SBIT_R|SBIT_D, NBT_INV_SIDE_AUTO_OUT, SIDE_RIGHT, NBT_ENERGY_ACCEPTED_SIDES, SBIT_U|SBIT_D), "WRW", "RwR", "CMC", 'M', OP.casingMachineDouble.dat(aMat), 'C', OD_CIRCUITS[2], 'W', MT.DATA.CABLES_01[2], 'R', IL.ROBOT_ARMS[2]);
		aMat = MT.DATA.Electric_T[3];   aRegistry.add("Autocrafter ("+VN[3]+")"                             , "Basic Machines"                      , 20664, 20001, aClass, aMat.mToolQuality, 16, aMachine     , UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS,   4.0F, NBT_RESISTANCE,   4.0F, NBT_COLOR, UT.Code.getRGBInt(aMat.fRGBaSolid), NBT_INPUT,  V[3], NBT_TEXTURE, "autocrafter", NBT_ENERGY_ACCEPTED, TD.Energy.EU, NBT_RECIPEMAP, RM.Autocrafter, NBT_INV_SIDE_IN, SBIT_U|SBIT_L, NBT_INV_SIDE_AUTO_IN, SIDE_LEFT, NBT_INV_SIDE_OUT, SBIT_R|SBIT_D, NBT_INV_SIDE_AUTO_OUT, SIDE_RIGHT, NBT_ENERGY_ACCEPTED_SIDES, SBIT_U|SBIT_D), "WRW", "RwR", "CMC", 'M', OP.casingMachineDouble.dat(aMat), 'C', OD_CIRCUITS[3], 'W', MT.DATA.CABLES_01[3], 'R', IL.ROBOT_ARMS[3]);
		aMat = MT.DATA.Electric_T[4];   aRegistry.add("Autocrafter ("+VN[4]+")"                             , "Basic Machines"                      , 20665, 20001, aClass, aMat.mToolQuality, 16, aMachine     , UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS,   4.0F, NBT_RESISTANCE,   4.0F, NBT_COLOR, UT.Code.getRGBInt(aMat.fRGBaSolid), NBT_INPUT,  V[4], NBT_TEXTURE, "autocrafter", NBT_ENERGY_ACCEPTED, TD.Energy.EU, NBT_RECIPEMAP, RM.Autocrafter, NBT_INV_SIDE_IN, SBIT_U|SBIT_L, NBT_INV_SIDE_AUTO_IN, SIDE_LEFT, NBT_INV_SIDE_OUT, SBIT_R|SBIT_D, NBT_INV_SIDE_AUTO_OUT, SIDE_RIGHT, NBT_ENERGY_ACCEPTED_SIDES, SBIT_U|SBIT_D), "WRW", "RwR", "CMC", 'M', OP.casingMachineDouble.dat(aMat), 'C', OD_CIRCUITS[4], 'W', MT.DATA.CABLES_01[4], 'R', IL.ROBOT_ARMS[4]);
		aMat = MT.DATA.Electric_T[5];   aRegistry.add("Autocrafter ("+VN[5]+")"                             , "Basic Machines"                      , 20666, 20001, aClass, aMat.mToolQuality, 16, aMachine     , UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS,   4.0F, NBT_RESISTANCE,   4.0F, NBT_COLOR, UT.Code.getRGBInt(aMat.fRGBaSolid), NBT_INPUT,  V[5], NBT_TEXTURE, "autocrafter", NBT_ENERGY_ACCEPTED, TD.Energy.EU, NBT_RECIPEMAP, RM.Autocrafter, NBT_INV_SIDE_IN, SBIT_U|SBIT_L, NBT_INV_SIDE_AUTO_IN, SIDE_LEFT, NBT_INV_SIDE_OUT, SBIT_R|SBIT_D, NBT_INV_SIDE_AUTO_OUT, SIDE_RIGHT, NBT_ENERGY_ACCEPTED_SIDES, SBIT_U|SBIT_D), "WRW", "RwR", "CMC", 'M', OP.casingMachineDouble.dat(aMat), 'C', OD_CIRCUITS[5], 'W', MT.DATA.CABLES_01[5], 'R', IL.ROBOT_ARMS[5]);
		aMat = MT.DATA.Electric_T[6];   aRegistry.add("Autocrafter ("+VN[6]+")"                             , "Basic Machines"                      , 20667, 20001, aClass, aMat.mToolQuality, 16, aMachine     , UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS,   4.0F, NBT_RESISTANCE,   4.0F, NBT_COLOR, UT.Code.getRGBInt(aMat.fRGBaSolid), NBT_INPUT,  V[6], NBT_TEXTURE, "autocrafter", NBT_ENERGY_ACCEPTED, TD.Energy.EU, NBT_RECIPEMAP, RM.Autocrafter, NBT_INV_SIDE_IN, SBIT_U|SBIT_L, NBT_INV_SIDE_AUTO_IN, SIDE_LEFT, NBT_INV_SIDE_OUT, SBIT_R|SBIT_D, NBT_INV_SIDE_AUTO_OUT, SIDE_RIGHT, NBT_ENERGY_ACCEPTED_SIDES, SBIT_U|SBIT_D), "WRW", "RwR", "CMC", 'M', OP.casingMachineDouble.dat(aMat), 'C', OD_CIRCUITS[6], 'W', MT.DATA.CABLES_01[0], 'R', IL.ROBOT_ARMS[6]);
		aMat = MT.DATA.Electric_T[7];   aRegistry.add("Autocrafter ("+VN[7]+")"                             , "Basic Machines"                      , 20668, 20001, aClass, aMat.mToolQuality, 16, aMachine     , UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS,   4.0F, NBT_RESISTANCE,   4.0F, NBT_COLOR, UT.Code.getRGBInt(aMat.fRGBaSolid), NBT_INPUT,  V[7], NBT_TEXTURE, "autocrafter", NBT_ENERGY_ACCEPTED, TD.Energy.EU, NBT_RECIPEMAP, RM.Autocrafter, NBT_INV_SIDE_IN, SBIT_U|SBIT_L, NBT_INV_SIDE_AUTO_IN, SIDE_LEFT, NBT_INV_SIDE_OUT, SBIT_R|SBIT_D, NBT_INV_SIDE_AUTO_OUT, SIDE_RIGHT, NBT_ENERGY_ACCEPTED_SIDES, SBIT_U|SBIT_D), "WRW", "RwR", "CMC", 'M', OP.casingMachineDouble.dat(aMat), 'C', OD_CIRCUITS[7], 'W', MT.DATA.CABLES_01[1], 'R', IL.ROBOT_ARMS[7]);
		aMat = MT.DATA.Electric_T[8];   aRegistry.add("Autocrafter ("+VN[8]+")"                             , "Basic Machines"                      , 20669, 20001, aClass, aMat.mToolQuality, 16, aMachine     , UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS,   4.0F, NBT_RESISTANCE,   4.0F, NBT_COLOR, UT.Code.getRGBInt(aMat.fRGBaSolid), NBT_INPUT,  V[8], NBT_TEXTURE, "autocrafter", NBT_ENERGY_ACCEPTED, TD.Energy.EU, NBT_RECIPEMAP, RM.Autocrafter, NBT_INV_SIDE_IN, SBIT_U|SBIT_L, NBT_INV_SIDE_AUTO_IN, SIDE_LEFT, NBT_INV_SIDE_OUT, SBIT_R|SBIT_D, NBT_INV_SIDE_AUTO_OUT, SIDE_RIGHT, NBT_ENERGY_ACCEPTED_SIDES, SBIT_U|SBIT_D), "WRW", "RwR", "CMC", 'M', OP.casingMachineDouble.dat(aMat), 'C', OD_CIRCUITS[8], 'W', MT.DATA.CABLES_01[2], 'R', IL.ROBOT_ARMS[8]);
		aMat = MT.DATA.Electric_T[9];   aRegistry.add("Autocrafter ("+VN[9]+")"                             , "Basic Machines"                      , 20670, 20001, aClass, aMat.mToolQuality, 16, aMachine     , UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS,   4.0F, NBT_RESISTANCE,   4.0F, NBT_COLOR, UT.Code.getRGBInt(aMat.fRGBaSolid), NBT_INPUT,  V[9], NBT_TEXTURE, "autocrafter", NBT_ENERGY_ACCEPTED, TD.Energy.EU, NBT_RECIPEMAP, RM.Autocrafter, NBT_INV_SIDE_IN, SBIT_U|SBIT_L, NBT_INV_SIDE_AUTO_IN, SIDE_LEFT, NBT_INV_SIDE_OUT, SBIT_R|SBIT_D, NBT_INV_SIDE_AUTO_OUT, SIDE_RIGHT, NBT_ENERGY_ACCEPTED_SIDES, SBIT_U|SBIT_D), "WRW", "RwR", "CMC", 'M', OP.casingMachineDouble.dat(aMat), 'C', OD_CIRCUITS[9], 'W', MT.DATA.CABLES_01[3], 'R', IL.ROBOT_ARMS[9]);
		aMat = MT.DATA.Electric_T[10];   aRegistry.add("Autocrafter ("+VN[10]+")"                             , "Basic Machines"                      , 20671, 20001, aClass, aMat.mToolQuality, 16, aMachine     , UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS,   4.0F, NBT_RESISTANCE,   4.0F, NBT_COLOR, UT.Code.getRGBInt(aMat.fRGBaSolid), NBT_INPUT,  V[10], NBT_TEXTURE, "autocrafter", NBT_ENERGY_ACCEPTED, TD.Energy.EU, NBT_RECIPEMAP, RM.Autocrafter, NBT_INV_SIDE_IN, SBIT_U|SBIT_L, NBT_INV_SIDE_AUTO_IN, SIDE_LEFT, NBT_INV_SIDE_OUT, SBIT_R|SBIT_D, NBT_INV_SIDE_AUTO_OUT, SIDE_RIGHT, NBT_ENERGY_ACCEPTED_SIDES, SBIT_U|SBIT_D), "WRW", "RwR", "CMC", 'M', OP.casingMachineDouble.dat(aMat), 'C', OD_CIRCUITS[10], 'W', MT.DATA.CABLES_01[4], 'R', IL.ROBOT_ARMS[10]);
		aMat = MT.DATA.Electric_T[11];   aRegistry.add("Autocrafter ("+VN[11]+")"                             , "Basic Machines"                      , 20672, 20001, aClass, aMat.mToolQuality, 16, aMachine     , UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS,   4.0F, NBT_RESISTANCE,   4.0F, NBT_COLOR, UT.Code.getRGBInt(aMat.fRGBaSolid), NBT_INPUT,  V[11], NBT_TEXTURE, "autocrafter", NBT_ENERGY_ACCEPTED, TD.Energy.EU, NBT_RECIPEMAP, RM.Autocrafter, NBT_INV_SIDE_IN, SBIT_U|SBIT_L, NBT_INV_SIDE_AUTO_IN, SIDE_LEFT, NBT_INV_SIDE_OUT, SBIT_R|SBIT_D, NBT_INV_SIDE_AUTO_OUT, SIDE_RIGHT, NBT_ENERGY_ACCEPTED_SIDES, SBIT_U|SBIT_D), "WRW", "RwR", "CMC", 'M', OP.casingMachineDouble.dat(aMat), 'C', OD_CIRCUITS[11], 'W', MT.DATA.CABLES_01[5], 'R', IL.ROBOT_ARMS[11]);
		aMat = MT.DATA.Electric_T[12];   aRegistry.add("Autocrafter ("+VN[12]+")"                             , "Basic Machines"                      , 20673, 20001, aClass, aMat.mToolQuality, 16, aMachine     , UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS,   4.0F, NBT_RESISTANCE,   4.0F, NBT_COLOR, UT.Code.getRGBInt(aMat.fRGBaSolid), NBT_INPUT,  V[12], NBT_TEXTURE, "autocrafter", NBT_ENERGY_ACCEPTED, TD.Energy.EU, NBT_RECIPEMAP, RM.Autocrafter, NBT_INV_SIDE_IN, SBIT_U|SBIT_L, NBT_INV_SIDE_AUTO_IN, SIDE_LEFT, NBT_INV_SIDE_OUT, SBIT_R|SBIT_D, NBT_INV_SIDE_AUTO_OUT, SIDE_RIGHT, NBT_ENERGY_ACCEPTED_SIDES, SBIT_U|SBIT_D), "WRW", "RwR", "CMC", 'M', OP.casingMachineDouble.dat(aMat), 'C', OD_CIRCUITS[12], 'W', MT.DATA.CABLES_01[0], 'R', IL.ROBOT_ARMS[12]);
		aMat = MT.DATA.Electric_T[13];   aRegistry.add("Autocrafter ("+VN[13]+")"                             , "Basic Machines"                      , 20674, 20001, aClass, aMat.mToolQuality, 16, aMachine     , UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS,   4.0F, NBT_RESISTANCE,   4.0F, NBT_COLOR, UT.Code.getRGBInt(aMat.fRGBaSolid), NBT_INPUT,  V[13], NBT_TEXTURE, "autocrafter", NBT_ENERGY_ACCEPTED, TD.Energy.EU, NBT_RECIPEMAP, RM.Autocrafter, NBT_INV_SIDE_IN, SBIT_U|SBIT_L, NBT_INV_SIDE_AUTO_IN, SIDE_LEFT, NBT_INV_SIDE_OUT, SBIT_R|SBIT_D, NBT_INV_SIDE_AUTO_OUT, SIDE_RIGHT, NBT_ENERGY_ACCEPTED_SIDES, SBIT_U|SBIT_D), "WRW", "RwR", "CMC", 'M', OP.casingMachineDouble.dat(aMat), 'C', OD_CIRCUITS[13], 'W', MT.DATA.CABLES_01[1], 'R', IL.ROBOT_ARMS[13]);
		aMat = MT.DATA.Electric_T[14];   aRegistry.add("Autocrafter ("+VN[14]+")"                             , "Basic Machines"                      , 20675, 20001, aClass, aMat.mToolQuality, 16, aMachine     , UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS,   4.0F, NBT_RESISTANCE,   4.0F, NBT_COLOR, UT.Code.getRGBInt(aMat.fRGBaSolid), NBT_INPUT,  V[14], NBT_TEXTURE, "autocrafter", NBT_ENERGY_ACCEPTED, TD.Energy.EU, NBT_RECIPEMAP, RM.Autocrafter, NBT_INV_SIDE_IN, SBIT_U|SBIT_L, NBT_INV_SIDE_AUTO_IN, SIDE_LEFT, NBT_INV_SIDE_OUT, SBIT_R|SBIT_D, NBT_INV_SIDE_AUTO_OUT, SIDE_RIGHT, NBT_ENERGY_ACCEPTED_SIDES, SBIT_U|SBIT_D), "WRW", "RwR", "CMC", 'M', OP.casingMachineDouble.dat(aMat), 'C', OD_CIRCUITS[14], 'W', MT.DATA.CABLES_01[2], 'R', IL.ROBOT_ARMS[14]);
		aMat = MT.DATA.Electric_T[15];   aRegistry.add("Autocrafter ("+VN[15]+")"                             , "Basic Machines"                      , 20676, 20001, aClass, aMat.mToolQuality, 16, aMachine     , UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS,   4.0F, NBT_RESISTANCE,   4.0F, NBT_COLOR, UT.Code.getRGBInt(aMat.fRGBaSolid), NBT_INPUT,  V[15], NBT_TEXTURE, "autocrafter", NBT_ENERGY_ACCEPTED, TD.Energy.EU, NBT_RECIPEMAP, RM.Autocrafter, NBT_INV_SIDE_IN, SBIT_U|SBIT_L, NBT_INV_SIDE_AUTO_IN, SIDE_LEFT, NBT_INV_SIDE_OUT, SBIT_R|SBIT_D, NBT_INV_SIDE_AUTO_OUT, SIDE_RIGHT, NBT_ENERGY_ACCEPTED_SIDES, SBIT_U|SBIT_D), "WRW", "RwR", "CMC", 'M', OP.casingMachineDouble.dat(aMat), 'C', OD_CIRCUITS[15], 'W', MT.DATA.CABLES_01[3], 'R', IL.ROBOT_ARMS[15]);

		aClass = MultiTileEntityBasicMachineElectric.class;
		aMat = MT.DATA.Electric_T[0];   aRegistry.add("Electric Mixer ("+VN[0]+")"                          , "Basic Machines"                      , 20681, 20001, aClass, aMat.mToolQuality, 16, aMachine     , UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS,   4.0F, NBT_RESISTANCE,   4.0F, NBT_COLOR, UT.Code.getRGBInt(aMat.fRGBaSolid), NBT_INPUT,  V[0], NBT_TEXTURE, "electricmixer", NBT_ENERGY_ACCEPTED, TD.Energy.EU, NBT_RECIPEMAP, RM.Mixer, NBT_EFFICIENCY, 5000, NBT_INV_SIDE_IN, SBIT_L|SBIT_U, NBT_INV_SIDE_AUTO_IN, SIDE_LEFT, NBT_INV_SIDE_OUT, SBIT_R|SBIT_B, NBT_INV_SIDE_AUTO_OUT, SIDE_RIGHT, NBT_TANK_SIDE_IN, SBIT_L|SBIT_U, NBT_TANK_SIDE_AUTO_IN, SIDE_TOP, NBT_TANK_SIDE_OUT, SBIT_R|SBIT_B, NBT_TANK_SIDE_AUTO_OUT, SIDE_BACK, NBT_ENERGY_ACCEPTED_SIDES, SBIT_D, NBT_PARALLEL, 2, NBT_PARALLEL_DURATION, T), "PMP", "PRP", "hSw", 'M', OP.casingMachine.dat(aMat), 'S', IL.MOTORS[0], 'R', OP.rotor.dat(MT.StainlessSteel), 'P', OP.plate.dat(MT.StainlessSteel));
		aMat = MT.DATA.Electric_T[1];   aRegistry.add("Electric Mixer ("+VN[1]+")"                          , "Basic Machines"                      , 20682, 20001, aClass, aMat.mToolQuality, 16, aMachine     , UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS,   4.0F, NBT_RESISTANCE,   4.0F, NBT_COLOR, UT.Code.getRGBInt(aMat.fRGBaSolid), NBT_INPUT,  V[1], NBT_TEXTURE, "electricmixer", NBT_ENERGY_ACCEPTED, TD.Energy.EU, NBT_RECIPEMAP, RM.Mixer, NBT_EFFICIENCY, 5000, NBT_INV_SIDE_IN, SBIT_L|SBIT_U, NBT_INV_SIDE_AUTO_IN, SIDE_LEFT, NBT_INV_SIDE_OUT, SBIT_R|SBIT_B, NBT_INV_SIDE_AUTO_OUT, SIDE_RIGHT, NBT_TANK_SIDE_IN, SBIT_L|SBIT_U, NBT_TANK_SIDE_AUTO_IN, SIDE_TOP, NBT_TANK_SIDE_OUT, SBIT_R|SBIT_B, NBT_TANK_SIDE_AUTO_OUT, SIDE_BACK, NBT_ENERGY_ACCEPTED_SIDES, SBIT_D, NBT_PARALLEL, 4, NBT_PARALLEL_DURATION, T), "PMP", "PRP", "hSw", 'M', OP.casingMachine.dat(aMat), 'S', IL.MOTORS[1], 'R', OP.rotor.dat(MT.StainlessSteel), 'P', OP.plate.dat(MT.StainlessSteel));
		aMat = MT.DATA.Electric_T[2];   aRegistry.add("Electric Mixer ("+VN[2]+")"                          , "Basic Machines"                      , 20683, 20001, aClass, aMat.mToolQuality, 16, aMachine     , UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS,   4.0F, NBT_RESISTANCE,   4.0F, NBT_COLOR, UT.Code.getRGBInt(aMat.fRGBaSolid), NBT_INPUT,  V[2], NBT_TEXTURE, "electricmixer", NBT_ENERGY_ACCEPTED, TD.Energy.EU, NBT_RECIPEMAP, RM.Mixer, NBT_EFFICIENCY, 5000, NBT_INV_SIDE_IN, SBIT_L|SBIT_U, NBT_INV_SIDE_AUTO_IN, SIDE_LEFT, NBT_INV_SIDE_OUT, SBIT_R|SBIT_B, NBT_INV_SIDE_AUTO_OUT, SIDE_RIGHT, NBT_TANK_SIDE_IN, SBIT_L|SBIT_U, NBT_TANK_SIDE_AUTO_IN, SIDE_TOP, NBT_TANK_SIDE_OUT, SBIT_R|SBIT_B, NBT_TANK_SIDE_AUTO_OUT, SIDE_BACK, NBT_ENERGY_ACCEPTED_SIDES, SBIT_D, NBT_PARALLEL, 8, NBT_PARALLEL_DURATION, T), "PMP", "PRP", "hSw", 'M', OP.casingMachine.dat(aMat), 'S', IL.MOTORS[2], 'R', OP.rotor.dat(MT.StainlessSteel), 'P', OP.plateDouble.dat(MT.StainlessSteel));
		aMat = MT.DATA.Electric_T[3];   aRegistry.add("Electric Mixer ("+VN[3]+")"                          , "Basic Machines"                      , 20684, 20001, aClass, aMat.mToolQuality, 16, aMachine     , UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS,   4.0F, NBT_RESISTANCE,   4.0F, NBT_COLOR, UT.Code.getRGBInt(aMat.fRGBaSolid), NBT_INPUT,  V[3], NBT_TEXTURE, "electricmixer", NBT_ENERGY_ACCEPTED, TD.Energy.EU, NBT_RECIPEMAP, RM.Mixer, NBT_EFFICIENCY, 5000, NBT_INV_SIDE_IN, SBIT_L|SBIT_U, NBT_INV_SIDE_AUTO_IN, SIDE_LEFT, NBT_INV_SIDE_OUT, SBIT_R|SBIT_B, NBT_INV_SIDE_AUTO_OUT, SIDE_RIGHT, NBT_TANK_SIDE_IN, SBIT_L|SBIT_U, NBT_TANK_SIDE_AUTO_IN, SIDE_TOP, NBT_TANK_SIDE_OUT, SBIT_R|SBIT_B, NBT_TANK_SIDE_AUTO_OUT, SIDE_BACK, NBT_ENERGY_ACCEPTED_SIDES, SBIT_D, NBT_PARALLEL,16, NBT_PARALLEL_DURATION, T), "PMP", "PRP", "hSw", 'M', OP.casingMachine.dat(aMat), 'S', IL.MOTORS[3], 'R', OP.rotor.dat(MT.StainlessSteel), 'P', OP.plateTriple.dat(MT.StainlessSteel));
		aMat = MT.DATA.Electric_T[4];   aRegistry.add("Electric Mixer ("+VN[4]+")"                          , "Basic Machines"                      , 20685, 20001, aClass, aMat.mToolQuality, 16, aMachine     , UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS,   4.0F, NBT_RESISTANCE,   4.0F, NBT_COLOR, UT.Code.getRGBInt(aMat.fRGBaSolid), NBT_INPUT,  V[4], NBT_TEXTURE, "electricmixer", NBT_ENERGY_ACCEPTED, TD.Energy.EU, NBT_RECIPEMAP, RM.Mixer, NBT_EFFICIENCY, 5000, NBT_INV_SIDE_IN, SBIT_L|SBIT_U, NBT_INV_SIDE_AUTO_IN, SIDE_LEFT, NBT_INV_SIDE_OUT, SBIT_R|SBIT_B, NBT_INV_SIDE_AUTO_OUT, SIDE_RIGHT, NBT_TANK_SIDE_IN, SBIT_L|SBIT_U, NBT_TANK_SIDE_AUTO_IN, SIDE_TOP, NBT_TANK_SIDE_OUT, SBIT_R|SBIT_B, NBT_TANK_SIDE_AUTO_OUT, SIDE_BACK, NBT_ENERGY_ACCEPTED_SIDES, SBIT_D, NBT_PARALLEL,32, NBT_PARALLEL_DURATION, T), "PMP", "PRP", "hSw", 'M', OP.casingMachine.dat(aMat), 'S', IL.MOTORS[4], 'R', OP.rotor.dat(MT.StainlessSteel), 'P', OP.plateQuadruple.dat(MT.StainlessSteel));
		aMat = MT.DATA.Electric_T[5];   aRegistry.add("Electric Mixer ("+VN[5]+")"                          , "Basic Machines"                      , 20686, 20001, aClass, aMat.mToolQuality, 16, aMachine     , UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS,   4.0F, NBT_RESISTANCE,   4.0F, NBT_COLOR, UT.Code.getRGBInt(aMat.fRGBaSolid), NBT_INPUT,  V[5], NBT_TEXTURE, "electricmixer", NBT_ENERGY_ACCEPTED, TD.Energy.EU, NBT_RECIPEMAP, RM.Mixer, NBT_EFFICIENCY, 5000, NBT_INV_SIDE_IN, SBIT_L|SBIT_U, NBT_INV_SIDE_AUTO_IN, SIDE_LEFT, NBT_INV_SIDE_OUT, SBIT_R|SBIT_B, NBT_INV_SIDE_AUTO_OUT, SIDE_RIGHT, NBT_TANK_SIDE_IN, SBIT_L|SBIT_U, NBT_TANK_SIDE_AUTO_IN, SIDE_TOP, NBT_TANK_SIDE_OUT, SBIT_R|SBIT_B, NBT_TANK_SIDE_AUTO_OUT, SIDE_BACK, NBT_ENERGY_ACCEPTED_SIDES, SBIT_D, NBT_PARALLEL,64, NBT_PARALLEL_DURATION, T), "PMP", "PRP", "hSw", 'M', OP.casingMachine.dat(aMat), 'S', IL.MOTORS[5], 'R', OP.rotor.dat(MT.StainlessSteel), 'P', OP.plateQuadruple.dat(MT.StainlessSteel));
		aMat = MT.DATA.Electric_T[6];   aRegistry.add("Electric Mixer ("+VN[6]+")"                          , "Basic Machines"                      , 20687, 20001, aClass, aMat.mToolQuality, 16, aMachine     , UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS,   4.0F, NBT_RESISTANCE,   4.0F, NBT_COLOR, UT.Code.getRGBInt(aMat.fRGBaSolid), NBT_INPUT,  V[6], NBT_TEXTURE, "electricmixer", NBT_ENERGY_ACCEPTED, TD.Energy.EU, NBT_RECIPEMAP, RM.Mixer, NBT_EFFICIENCY, 5000, NBT_INV_SIDE_IN, SBIT_L|SBIT_U, NBT_INV_SIDE_AUTO_IN, SIDE_LEFT, NBT_INV_SIDE_OUT, SBIT_R|SBIT_B, NBT_INV_SIDE_AUTO_OUT, SIDE_RIGHT, NBT_TANK_SIDE_IN, SBIT_L|SBIT_U, NBT_TANK_SIDE_AUTO_IN, SIDE_TOP, NBT_TANK_SIDE_OUT, SBIT_R|SBIT_B, NBT_TANK_SIDE_AUTO_OUT, SIDE_BACK, NBT_ENERGY_ACCEPTED_SIDES, SBIT_D, NBT_PARALLEL,128, NBT_PARALLEL_DURATION, T), "PMP", "PRP", "hSw", 'M', OP.casingMachine.dat(aMat), 'S', IL.MOTORS[6], 'R', OP.rotor.dat(MT.StainlessSteel), 'P', OP.plateQuadruple.dat(MT.StainlessSteel));
		aMat = MT.DATA.Electric_T[7];   aRegistry.add("Electric Mixer ("+VN[7]+")"                          , "Basic Machines"                      , 20688, 20001, aClass, aMat.mToolQuality, 16, aMachine     , UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS,   4.0F, NBT_RESISTANCE,   4.0F, NBT_COLOR, UT.Code.getRGBInt(aMat.fRGBaSolid), NBT_INPUT,  V[7], NBT_TEXTURE, "electricmixer", NBT_ENERGY_ACCEPTED, TD.Energy.EU, NBT_RECIPEMAP, RM.Mixer, NBT_EFFICIENCY, 5000, NBT_INV_SIDE_IN, SBIT_L|SBIT_U, NBT_INV_SIDE_AUTO_IN, SIDE_LEFT, NBT_INV_SIDE_OUT, SBIT_R|SBIT_B, NBT_INV_SIDE_AUTO_OUT, SIDE_RIGHT, NBT_TANK_SIDE_IN, SBIT_L|SBIT_U, NBT_TANK_SIDE_AUTO_IN, SIDE_TOP, NBT_TANK_SIDE_OUT, SBIT_R|SBIT_B, NBT_TANK_SIDE_AUTO_OUT, SIDE_BACK, NBT_ENERGY_ACCEPTED_SIDES, SBIT_D, NBT_PARALLEL, 256, NBT_PARALLEL_DURATION, T), "PMP", "PRP", "hSw", 'M', OP.casingMachine.dat(aMat), 'S', IL.MOTORS[7], 'R', OP.rotor.dat(MT.StainlessSteel), 'P', OP.plate.dat(MT.StainlessSteel));
		aMat = MT.DATA.Electric_T[8];   aRegistry.add("Electric Mixer ("+VN[8]+")"                          , "Basic Machines"                      , 20689, 20001, aClass, aMat.mToolQuality, 16, aMachine     , UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS,   4.0F, NBT_RESISTANCE,   4.0F, NBT_COLOR, UT.Code.getRGBInt(aMat.fRGBaSolid), NBT_INPUT,  V[8], NBT_TEXTURE, "electricmixer", NBT_ENERGY_ACCEPTED, TD.Energy.EU, NBT_RECIPEMAP, RM.Mixer, NBT_EFFICIENCY, 5000, NBT_INV_SIDE_IN, SBIT_L|SBIT_U, NBT_INV_SIDE_AUTO_IN, SIDE_LEFT, NBT_INV_SIDE_OUT, SBIT_R|SBIT_B, NBT_INV_SIDE_AUTO_OUT, SIDE_RIGHT, NBT_TANK_SIDE_IN, SBIT_L|SBIT_U, NBT_TANK_SIDE_AUTO_IN, SIDE_TOP, NBT_TANK_SIDE_OUT, SBIT_R|SBIT_B, NBT_TANK_SIDE_AUTO_OUT, SIDE_BACK, NBT_ENERGY_ACCEPTED_SIDES, SBIT_D, NBT_PARALLEL, 512, NBT_PARALLEL_DURATION, T), "PMP", "PRP", "hSw", 'M', OP.casingMachine.dat(aMat), 'S', IL.MOTORS[8], 'R', OP.rotor.dat(MT.StainlessSteel), 'P', OP.plate.dat(MT.StainlessSteel));
		aMat = MT.DATA.Electric_T[9];   aRegistry.add("Electric Mixer ("+VN[9]+")"                          , "Basic Machines"                      , 20690, 20001, aClass, aMat.mToolQuality, 16, aMachine     , UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS,   4.0F, NBT_RESISTANCE,   4.0F, NBT_COLOR, UT.Code.getRGBInt(aMat.fRGBaSolid), NBT_INPUT,  V[9], NBT_TEXTURE, "electricmixer", NBT_ENERGY_ACCEPTED, TD.Energy.EU, NBT_RECIPEMAP, RM.Mixer, NBT_EFFICIENCY, 5000, NBT_INV_SIDE_IN, SBIT_L|SBIT_U, NBT_INV_SIDE_AUTO_IN, SIDE_LEFT, NBT_INV_SIDE_OUT, SBIT_R|SBIT_B, NBT_INV_SIDE_AUTO_OUT, SIDE_RIGHT, NBT_TANK_SIDE_IN, SBIT_L|SBIT_U, NBT_TANK_SIDE_AUTO_IN, SIDE_TOP, NBT_TANK_SIDE_OUT, SBIT_R|SBIT_B, NBT_TANK_SIDE_AUTO_OUT, SIDE_BACK, NBT_ENERGY_ACCEPTED_SIDES, SBIT_D, NBT_PARALLEL, 1024, NBT_PARALLEL_DURATION, T), "PMP", "PRP", "hSw", 'M', OP.casingMachine.dat(aMat), 'S', IL.MOTORS[9], 'R', OP.rotor.dat(MT.StainlessSteel), 'P', OP.plateDouble.dat(MT.StainlessSteel));
		aMat = MT.DATA.Electric_T[10];   aRegistry.add("Electric Mixer ("+VN[10]+")"                          , "Basic Machines"                      , 20691, 20001, aClass, aMat.mToolQuality, 16, aMachine     , UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS,   4.0F, NBT_RESISTANCE,   4.0F, NBT_COLOR, UT.Code.getRGBInt(aMat.fRGBaSolid), NBT_INPUT,  V[10], NBT_TEXTURE, "electricmixer", NBT_ENERGY_ACCEPTED, TD.Energy.EU, NBT_RECIPEMAP, RM.Mixer, NBT_EFFICIENCY, 5000, NBT_INV_SIDE_IN, SBIT_L|SBIT_U, NBT_INV_SIDE_AUTO_IN, SIDE_LEFT, NBT_INV_SIDE_OUT, SBIT_R|SBIT_B, NBT_INV_SIDE_AUTO_OUT, SIDE_RIGHT, NBT_TANK_SIDE_IN, SBIT_L|SBIT_U, NBT_TANK_SIDE_AUTO_IN, SIDE_TOP, NBT_TANK_SIDE_OUT, SBIT_R|SBIT_B, NBT_TANK_SIDE_AUTO_OUT, SIDE_BACK, NBT_ENERGY_ACCEPTED_SIDES, SBIT_D, NBT_PARALLEL, 2048, NBT_PARALLEL_DURATION, T), "PMP", "PRP", "hSw", 'M', OP.casingMachine.dat(aMat), 'S', IL.MOTORS[10], 'R', OP.rotor.dat(MT.StainlessSteel), 'P', OP.plateTriple.dat(MT.StainlessSteel));
		aMat = MT.DATA.Electric_T[11];   aRegistry.add("Electric Mixer ("+VN[11]+")"                          , "Basic Machines"                      , 20692, 20001, aClass, aMat.mToolQuality, 16, aMachine     , UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS,   4.0F, NBT_RESISTANCE,   4.0F, NBT_COLOR, UT.Code.getRGBInt(aMat.fRGBaSolid), NBT_INPUT,  V[11], NBT_TEXTURE, "electricmixer", NBT_ENERGY_ACCEPTED, TD.Energy.EU, NBT_RECIPEMAP, RM.Mixer, NBT_EFFICIENCY, 5000, NBT_INV_SIDE_IN, SBIT_L|SBIT_U, NBT_INV_SIDE_AUTO_IN, SIDE_LEFT, NBT_INV_SIDE_OUT, SBIT_R|SBIT_B, NBT_INV_SIDE_AUTO_OUT, SIDE_RIGHT, NBT_TANK_SIDE_IN, SBIT_L|SBIT_U, NBT_TANK_SIDE_AUTO_IN, SIDE_TOP, NBT_TANK_SIDE_OUT, SBIT_R|SBIT_B, NBT_TANK_SIDE_AUTO_OUT, SIDE_BACK, NBT_ENERGY_ACCEPTED_SIDES, SBIT_D, NBT_PARALLEL, 4096, NBT_PARALLEL_DURATION, T), "PMP", "PRP", "hSw", 'M', OP.casingMachine.dat(aMat), 'S', IL.MOTORS[11], 'R', OP.rotor.dat(MT.StainlessSteel), 'P', OP.plateQuadruple.dat(MT.StainlessSteel));
		aMat = MT.DATA.Electric_T[12];   aRegistry.add("Electric Mixer ("+VN[12]+")"                          , "Basic Machines"                      , 20693, 20001, aClass, aMat.mToolQuality, 16, aMachine     , UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS,   4.0F, NBT_RESISTANCE,   4.0F, NBT_COLOR, UT.Code.getRGBInt(aMat.fRGBaSolid), NBT_INPUT,  V[12], NBT_TEXTURE, "electricmixer", NBT_ENERGY_ACCEPTED, TD.Energy.EU, NBT_RECIPEMAP, RM.Mixer, NBT_EFFICIENCY, 5000, NBT_INV_SIDE_IN, SBIT_L|SBIT_U, NBT_INV_SIDE_AUTO_IN, SIDE_LEFT, NBT_INV_SIDE_OUT, SBIT_R|SBIT_B, NBT_INV_SIDE_AUTO_OUT, SIDE_RIGHT, NBT_TANK_SIDE_IN, SBIT_L|SBIT_U, NBT_TANK_SIDE_AUTO_IN, SIDE_TOP, NBT_TANK_SIDE_OUT, SBIT_R|SBIT_B, NBT_TANK_SIDE_AUTO_OUT, SIDE_BACK, NBT_ENERGY_ACCEPTED_SIDES, SBIT_D, NBT_PARALLEL, 8192, NBT_PARALLEL_DURATION, T), "PMP", "PRP", "hSw", 'M', OP.casingMachine.dat(aMat), 'S', IL.MOTORS[12], 'R', OP.rotor.dat(MT.StainlessSteel), 'P', OP.plateQuadruple.dat(MT.StainlessSteel));
		aMat = MT.DATA.Electric_T[13];   aRegistry.add("Electric Mixer ("+VN[13]+")"                          , "Basic Machines"                      , 20694, 20001, aClass, aMat.mToolQuality, 16, aMachine     , UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS,   4.0F, NBT_RESISTANCE,   4.0F, NBT_COLOR, UT.Code.getRGBInt(aMat.fRGBaSolid), NBT_INPUT,  V[13], NBT_TEXTURE, "electricmixer", NBT_ENERGY_ACCEPTED, TD.Energy.EU, NBT_RECIPEMAP, RM.Mixer, NBT_EFFICIENCY, 5000, NBT_INV_SIDE_IN, SBIT_L|SBIT_U, NBT_INV_SIDE_AUTO_IN, SIDE_LEFT, NBT_INV_SIDE_OUT, SBIT_R|SBIT_B, NBT_INV_SIDE_AUTO_OUT, SIDE_RIGHT, NBT_TANK_SIDE_IN, SBIT_L|SBIT_U, NBT_TANK_SIDE_AUTO_IN, SIDE_TOP, NBT_TANK_SIDE_OUT, SBIT_R|SBIT_B, NBT_TANK_SIDE_AUTO_OUT, SIDE_BACK, NBT_ENERGY_ACCEPTED_SIDES, SBIT_D, NBT_PARALLEL, 16384, NBT_PARALLEL_DURATION, T), "PMP", "PRP", "hSw", 'M', OP.casingMachine.dat(aMat), 'S', IL.MOTORS[13], 'R', OP.rotor.dat(MT.StainlessSteel), 'P', OP.plateQuadruple.dat(MT.StainlessSteel));
		aMat = MT.DATA.Electric_T[14];   aRegistry.add("Electric Mixer ("+VN[14]+")"                          , "Basic Machines"                      , 20695, 20001, aClass, aMat.mToolQuality, 16, aMachine     , UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS,   4.0F, NBT_RESISTANCE,   4.0F, NBT_COLOR, UT.Code.getRGBInt(aMat.fRGBaSolid), NBT_INPUT,  V[14], NBT_TEXTURE, "electricmixer", NBT_ENERGY_ACCEPTED, TD.Energy.EU, NBT_RECIPEMAP, RM.Mixer, NBT_EFFICIENCY, 5000, NBT_INV_SIDE_IN, SBIT_L|SBIT_U, NBT_INV_SIDE_AUTO_IN, SIDE_LEFT, NBT_INV_SIDE_OUT, SBIT_R|SBIT_B, NBT_INV_SIDE_AUTO_OUT, SIDE_RIGHT, NBT_TANK_SIDE_IN, SBIT_L|SBIT_U, NBT_TANK_SIDE_AUTO_IN, SIDE_TOP, NBT_TANK_SIDE_OUT, SBIT_R|SBIT_B, NBT_TANK_SIDE_AUTO_OUT, SIDE_BACK, NBT_ENERGY_ACCEPTED_SIDES, SBIT_D, NBT_PARALLEL, 32768, NBT_PARALLEL_DURATION, T), "PMP", "PRP", "hSw", 'M', OP.casingMachine.dat(aMat), 'S', IL.MOTORS[14], 'R', OP.rotor.dat(MT.StainlessSteel), 'P', OP.plate.dat(MT.StainlessSteel));
		aMat = MT.DATA.Electric_T[15];   aRegistry.add("Electric Mixer ("+VN[15]+")"                          , "Basic Machines"                      , 20696, 20001, aClass, aMat.mToolQuality, 16, aMachine     , UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS,   4.0F, NBT_RESISTANCE,   4.0F, NBT_COLOR, UT.Code.getRGBInt(aMat.fRGBaSolid), NBT_INPUT,  V[15], NBT_TEXTURE, "electricmixer", NBT_ENERGY_ACCEPTED, TD.Energy.EU, NBT_RECIPEMAP, RM.Mixer, NBT_EFFICIENCY, 5000, NBT_INV_SIDE_IN, SBIT_L|SBIT_U, NBT_INV_SIDE_AUTO_IN, SIDE_LEFT, NBT_INV_SIDE_OUT, SBIT_R|SBIT_B, NBT_INV_SIDE_AUTO_OUT, SIDE_RIGHT, NBT_TANK_SIDE_IN, SBIT_L|SBIT_U, NBT_TANK_SIDE_AUTO_IN, SIDE_TOP, NBT_TANK_SIDE_OUT, SBIT_R|SBIT_B, NBT_TANK_SIDE_AUTO_OUT, SIDE_BACK, NBT_ENERGY_ACCEPTED_SIDES, SBIT_D, NBT_PARALLEL, 65536, NBT_PARALLEL_DURATION, T), "PMP", "PRP", "hSw", 'M', OP.casingMachine.dat(aMat), 'S', IL.MOTORS[15], 'R', OP.rotor.dat(MT.StainlessSteel), 'P', OP.plate.dat(MT.StainlessSteel));

		aClass = MultiTileEntityBasicMachineElectric.class;
		aMat = MT.DATA.Electric_T[0];   aRegistry.add("Electric Loom ("+VN[0]+")"                           , "Basic Machines"                      , 20701, 20001, aClass, aMat.mToolQuality, 16, aMachine     , UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS,   4.0F, NBT_RESISTANCE,   4.0F, NBT_COLOR, UT.Code.getRGBInt(aMat.fRGBaSolid), NBT_INPUT,  V[0], NBT_TEXTURE, "electricloom", NBT_ENERGY_ACCEPTED, TD.Energy.EU, NBT_RECIPEMAP, RM.Loom, NBT_EFFICIENCY, 5000, NBT_INV_SIDE_IN, SBIT_U, NBT_INV_SIDE_AUTO_IN, SIDE_TOP, NBT_INV_SIDE_OUT, SBIT_D, NBT_INV_SIDE_AUTO_OUT, SIDE_BOTTOM, NBT_ENERGY_ACCEPTED_SIDES, SBIT_L|SBIT_R), "ShS", "GMG", "SwS", 'M', OP.casingMachine.dat(aMat), 'G', IL.MOTORS[0], 'S', OP.stickLong.dat(aMat));
		aMat = MT.DATA.Electric_T[1];   aRegistry.add("Electric Loom ("+VN[1]+")"                           , "Basic Machines"                      , 20702, 20001, aClass, aMat.mToolQuality, 16, aMachine     , UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS,   4.0F, NBT_RESISTANCE,   4.0F, NBT_COLOR, UT.Code.getRGBInt(aMat.fRGBaSolid), NBT_INPUT,  V[1], NBT_TEXTURE, "electricloom", NBT_ENERGY_ACCEPTED, TD.Energy.EU, NBT_RECIPEMAP, RM.Loom, NBT_EFFICIENCY, 5000, NBT_INV_SIDE_IN, SBIT_U, NBT_INV_SIDE_AUTO_IN, SIDE_TOP, NBT_INV_SIDE_OUT, SBIT_D, NBT_INV_SIDE_AUTO_OUT, SIDE_BOTTOM, NBT_ENERGY_ACCEPTED_SIDES, SBIT_L|SBIT_R), "ShS", "GMG", "SwS", 'M', OP.casingMachine.dat(aMat), 'G', IL.MOTORS[1], 'S', OP.stickLong.dat(aMat));
		aMat = MT.DATA.Electric_T[2];   aRegistry.add("Electric Loom ("+VN[2]+")"                           , "Basic Machines"                      , 20703, 20001, aClass, aMat.mToolQuality, 16, aMachine     , UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS,   4.0F, NBT_RESISTANCE,   4.0F, NBT_COLOR, UT.Code.getRGBInt(aMat.fRGBaSolid), NBT_INPUT,  V[2], NBT_TEXTURE, "electricloom", NBT_ENERGY_ACCEPTED, TD.Energy.EU, NBT_RECIPEMAP, RM.Loom, NBT_EFFICIENCY, 5000, NBT_INV_SIDE_IN, SBIT_U, NBT_INV_SIDE_AUTO_IN, SIDE_TOP, NBT_INV_SIDE_OUT, SBIT_D, NBT_INV_SIDE_AUTO_OUT, SIDE_BOTTOM, NBT_ENERGY_ACCEPTED_SIDES, SBIT_L|SBIT_R), "ShS", "GMG", "SwS", 'M', OP.casingMachine.dat(aMat), 'G', IL.MOTORS[2], 'S', OP.stickLong.dat(aMat));
		aMat = MT.DATA.Electric_T[3];   aRegistry.add("Electric Loom ("+VN[3]+")"                           , "Basic Machines"                      , 20704, 20001, aClass, aMat.mToolQuality, 16, aMachine     , UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS,   4.0F, NBT_RESISTANCE,   4.0F, NBT_COLOR, UT.Code.getRGBInt(aMat.fRGBaSolid), NBT_INPUT,  V[3], NBT_TEXTURE, "electricloom", NBT_ENERGY_ACCEPTED, TD.Energy.EU, NBT_RECIPEMAP, RM.Loom, NBT_EFFICIENCY, 5000, NBT_INV_SIDE_IN, SBIT_U, NBT_INV_SIDE_AUTO_IN, SIDE_TOP, NBT_INV_SIDE_OUT, SBIT_D, NBT_INV_SIDE_AUTO_OUT, SIDE_BOTTOM, NBT_ENERGY_ACCEPTED_SIDES, SBIT_L|SBIT_R), "ShS", "GMG", "SwS", 'M', OP.casingMachine.dat(aMat), 'G', IL.MOTORS[3], 'S', OP.stickLong.dat(aMat));
		aMat = MT.DATA.Electric_T[4];   aRegistry.add("Electric Loom ("+VN[4]+")"                           , "Basic Machines"                      , 20705, 20001, aClass, aMat.mToolQuality, 16, aMachine     , UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS,   4.0F, NBT_RESISTANCE,   4.0F, NBT_COLOR, UT.Code.getRGBInt(aMat.fRGBaSolid), NBT_INPUT,  V[4], NBT_TEXTURE, "electricloom", NBT_ENERGY_ACCEPTED, TD.Energy.EU, NBT_RECIPEMAP, RM.Loom, NBT_EFFICIENCY, 5000, NBT_INV_SIDE_IN, SBIT_U, NBT_INV_SIDE_AUTO_IN, SIDE_TOP, NBT_INV_SIDE_OUT, SBIT_D, NBT_INV_SIDE_AUTO_OUT, SIDE_BOTTOM, NBT_ENERGY_ACCEPTED_SIDES, SBIT_L|SBIT_R), "ShS", "GMG", "SwS", 'M', OP.casingMachine.dat(aMat), 'G', IL.MOTORS[4], 'S', OP.stickLong.dat(aMat));
		aMat = MT.DATA.Electric_T[5];   aRegistry.add("Electric Loom ("+VN[5]+")"                           , "Basic Machines"                      , 20706, 20001, aClass, aMat.mToolQuality, 16, aMachine     , UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS,   4.0F, NBT_RESISTANCE,   4.0F, NBT_COLOR, UT.Code.getRGBInt(aMat.fRGBaSolid), NBT_INPUT,  V[5], NBT_TEXTURE, "electricloom", NBT_ENERGY_ACCEPTED, TD.Energy.EU, NBT_RECIPEMAP, RM.Loom, NBT_EFFICIENCY, 5000, NBT_INV_SIDE_IN, SBIT_U, NBT_INV_SIDE_AUTO_IN, SIDE_TOP, NBT_INV_SIDE_OUT, SBIT_D, NBT_INV_SIDE_AUTO_OUT, SIDE_BOTTOM, NBT_ENERGY_ACCEPTED_SIDES, SBIT_L|SBIT_R), "ShS", "GMG", "SwS", 'M', OP.casingMachine.dat(aMat), 'G', IL.MOTORS[5], 'S', OP.stickLong.dat(aMat));
		aMat = MT.DATA.Electric_T[6];   aRegistry.add("Electric Loom ("+VN[6]+")"                           , "Basic Machines"                      , 20707, 20001, aClass, aMat.mToolQuality, 16, aMachine     , UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS,   4.0F, NBT_RESISTANCE,   4.0F, NBT_COLOR, UT.Code.getRGBInt(aMat.fRGBaSolid), NBT_INPUT,  V[6], NBT_TEXTURE, "electricloom", NBT_ENERGY_ACCEPTED, TD.Energy.EU, NBT_RECIPEMAP, RM.Loom, NBT_EFFICIENCY, 5000, NBT_INV_SIDE_IN, SBIT_U, NBT_INV_SIDE_AUTO_IN, SIDE_TOP, NBT_INV_SIDE_OUT, SBIT_D, NBT_INV_SIDE_AUTO_OUT, SIDE_BOTTOM, NBT_ENERGY_ACCEPTED_SIDES, SBIT_L|SBIT_R), "ShS", "GMG", "SwS", 'M', OP.casingMachine.dat(aMat), 'G', IL.MOTORS[6], 'S', OP.stickLong.dat(aMat));
		aMat = MT.DATA.Electric_T[7];   aRegistry.add("Electric Loom ("+VN[7]+")"                           , "Basic Machines"                      , 20708, 20001, aClass, aMat.mToolQuality, 16, aMachine     , UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS,   4.0F, NBT_RESISTANCE,   4.0F, NBT_COLOR, UT.Code.getRGBInt(aMat.fRGBaSolid), NBT_INPUT,  V[7], NBT_TEXTURE, "electricloom", NBT_ENERGY_ACCEPTED, TD.Energy.EU, NBT_RECIPEMAP, RM.Loom, NBT_EFFICIENCY, 5000, NBT_INV_SIDE_IN, SBIT_U, NBT_INV_SIDE_AUTO_IN, SIDE_TOP, NBT_INV_SIDE_OUT, SBIT_D, NBT_INV_SIDE_AUTO_OUT, SIDE_BOTTOM, NBT_ENERGY_ACCEPTED_SIDES, SBIT_L|SBIT_R), "ShS", "GMG", "SwS", 'M', OP.casingMachine.dat(aMat), 'G', IL.MOTORS[7], 'S', OP.stickLong.dat(aMat));
		aMat = MT.DATA.Electric_T[8];   aRegistry.add("Electric Loom ("+VN[8]+")"                           , "Basic Machines"                      , 20709, 20001, aClass, aMat.mToolQuality, 16, aMachine     , UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS,   4.0F, NBT_RESISTANCE,   4.0F, NBT_COLOR, UT.Code.getRGBInt(aMat.fRGBaSolid), NBT_INPUT,  V[8], NBT_TEXTURE, "electricloom", NBT_ENERGY_ACCEPTED, TD.Energy.EU, NBT_RECIPEMAP, RM.Loom, NBT_EFFICIENCY, 5000, NBT_INV_SIDE_IN, SBIT_U, NBT_INV_SIDE_AUTO_IN, SIDE_TOP, NBT_INV_SIDE_OUT, SBIT_D, NBT_INV_SIDE_AUTO_OUT, SIDE_BOTTOM, NBT_ENERGY_ACCEPTED_SIDES, SBIT_L|SBIT_R), "ShS", "GMG", "SwS", 'M', OP.casingMachine.dat(aMat), 'G', IL.MOTORS[8], 'S', OP.stickLong.dat(aMat));
		aMat = MT.DATA.Electric_T[9];   aRegistry.add("Electric Loom ("+VN[9]+")"                           , "Basic Machines"                      , 20710, 20001, aClass, aMat.mToolQuality, 16, aMachine     , UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS,   4.0F, NBT_RESISTANCE,   4.0F, NBT_COLOR, UT.Code.getRGBInt(aMat.fRGBaSolid), NBT_INPUT,  V[9], NBT_TEXTURE, "electricloom", NBT_ENERGY_ACCEPTED, TD.Energy.EU, NBT_RECIPEMAP, RM.Loom, NBT_EFFICIENCY, 5000, NBT_INV_SIDE_IN, SBIT_U, NBT_INV_SIDE_AUTO_IN, SIDE_TOP, NBT_INV_SIDE_OUT, SBIT_D, NBT_INV_SIDE_AUTO_OUT, SIDE_BOTTOM, NBT_ENERGY_ACCEPTED_SIDES, SBIT_L|SBIT_R), "ShS", "GMG", "SwS", 'M', OP.casingMachine.dat(aMat), 'G', IL.MOTORS[9], 'S', OP.stickLong.dat(aMat));
		aMat = MT.DATA.Electric_T[10];   aRegistry.add("Electric Loom ("+VN[10]+")"                           , "Basic Machines"                      , 20711, 20001, aClass, aMat.mToolQuality, 16, aMachine     , UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS,   4.0F, NBT_RESISTANCE,   4.0F, NBT_COLOR, UT.Code.getRGBInt(aMat.fRGBaSolid), NBT_INPUT,  V[10], NBT_TEXTURE, "electricloom", NBT_ENERGY_ACCEPTED, TD.Energy.EU, NBT_RECIPEMAP, RM.Loom, NBT_EFFICIENCY, 5000, NBT_INV_SIDE_IN, SBIT_U, NBT_INV_SIDE_AUTO_IN, SIDE_TOP, NBT_INV_SIDE_OUT, SBIT_D, NBT_INV_SIDE_AUTO_OUT, SIDE_BOTTOM, NBT_ENERGY_ACCEPTED_SIDES, SBIT_L|SBIT_R), "ShS", "GMG", "SwS", 'M', OP.casingMachine.dat(aMat), 'G', IL.MOTORS[10], 'S', OP.stickLong.dat(aMat));
		aMat = MT.DATA.Electric_T[11];   aRegistry.add("Electric Loom ("+VN[11]+")"                           , "Basic Machines"                      , 20712, 20001, aClass, aMat.mToolQuality, 16, aMachine     , UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS,   4.0F, NBT_RESISTANCE,   4.0F, NBT_COLOR, UT.Code.getRGBInt(aMat.fRGBaSolid), NBT_INPUT,  V[11], NBT_TEXTURE, "electricloom", NBT_ENERGY_ACCEPTED, TD.Energy.EU, NBT_RECIPEMAP, RM.Loom, NBT_EFFICIENCY, 5000, NBT_INV_SIDE_IN, SBIT_U, NBT_INV_SIDE_AUTO_IN, SIDE_TOP, NBT_INV_SIDE_OUT, SBIT_D, NBT_INV_SIDE_AUTO_OUT, SIDE_BOTTOM, NBT_ENERGY_ACCEPTED_SIDES, SBIT_L|SBIT_R), "ShS", "GMG", "SwS", 'M', OP.casingMachine.dat(aMat), 'G', IL.MOTORS[11], 'S', OP.stickLong.dat(aMat));
		aMat = MT.DATA.Electric_T[12];   aRegistry.add("Electric Loom ("+VN[12]+")"                           , "Basic Machines"                      , 20713, 20001, aClass, aMat.mToolQuality, 16, aMachine     , UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS,   4.0F, NBT_RESISTANCE,   4.0F, NBT_COLOR, UT.Code.getRGBInt(aMat.fRGBaSolid), NBT_INPUT,  V[12], NBT_TEXTURE, "electricloom", NBT_ENERGY_ACCEPTED, TD.Energy.EU, NBT_RECIPEMAP, RM.Loom, NBT_EFFICIENCY, 5000, NBT_INV_SIDE_IN, SBIT_U, NBT_INV_SIDE_AUTO_IN, SIDE_TOP, NBT_INV_SIDE_OUT, SBIT_D, NBT_INV_SIDE_AUTO_OUT, SIDE_BOTTOM, NBT_ENERGY_ACCEPTED_SIDES, SBIT_L|SBIT_R), "ShS", "GMG", "SwS", 'M', OP.casingMachine.dat(aMat), 'G', IL.MOTORS[12], 'S', OP.stickLong.dat(aMat));
		aMat = MT.DATA.Electric_T[13];   aRegistry.add("Electric Loom ("+VN[13]+")"                           , "Basic Machines"                      , 20714, 20001, aClass, aMat.mToolQuality, 16, aMachine     , UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS,   4.0F, NBT_RESISTANCE,   4.0F, NBT_COLOR, UT.Code.getRGBInt(aMat.fRGBaSolid), NBT_INPUT,  V[13], NBT_TEXTURE, "electricloom", NBT_ENERGY_ACCEPTED, TD.Energy.EU, NBT_RECIPEMAP, RM.Loom, NBT_EFFICIENCY, 5000, NBT_INV_SIDE_IN, SBIT_U, NBT_INV_SIDE_AUTO_IN, SIDE_TOP, NBT_INV_SIDE_OUT, SBIT_D, NBT_INV_SIDE_AUTO_OUT, SIDE_BOTTOM, NBT_ENERGY_ACCEPTED_SIDES, SBIT_L|SBIT_R), "ShS", "GMG", "SwS", 'M', OP.casingMachine.dat(aMat), 'G', IL.MOTORS[13], 'S', OP.stickLong.dat(aMat));
		aMat = MT.DATA.Electric_T[14];   aRegistry.add("Electric Loom ("+VN[14]+")"                           , "Basic Machines"                      , 20715, 20001, aClass, aMat.mToolQuality, 16, aMachine     , UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS,   4.0F, NBT_RESISTANCE,   4.0F, NBT_COLOR, UT.Code.getRGBInt(aMat.fRGBaSolid), NBT_INPUT,  V[14], NBT_TEXTURE, "electricloom", NBT_ENERGY_ACCEPTED, TD.Energy.EU, NBT_RECIPEMAP, RM.Loom, NBT_EFFICIENCY, 5000, NBT_INV_SIDE_IN, SBIT_U, NBT_INV_SIDE_AUTO_IN, SIDE_TOP, NBT_INV_SIDE_OUT, SBIT_D, NBT_INV_SIDE_AUTO_OUT, SIDE_BOTTOM, NBT_ENERGY_ACCEPTED_SIDES, SBIT_L|SBIT_R), "ShS", "GMG", "SwS", 'M', OP.casingMachine.dat(aMat), 'G', IL.MOTORS[14], 'S', OP.stickLong.dat(aMat));
		aMat = MT.DATA.Electric_T[15];   aRegistry.add("Electric Loom ("+VN[15]+")"                           , "Basic Machines"                      , 20716, 20001, aClass, aMat.mToolQuality, 16, aMachine     , UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS,   4.0F, NBT_RESISTANCE,   4.0F, NBT_COLOR, UT.Code.getRGBInt(aMat.fRGBaSolid), NBT_INPUT,  V[15], NBT_TEXTURE, "electricloom", NBT_ENERGY_ACCEPTED, TD.Energy.EU, NBT_RECIPEMAP, RM.Loom, NBT_EFFICIENCY, 5000, NBT_INV_SIDE_IN, SBIT_U, NBT_INV_SIDE_AUTO_IN, SIDE_TOP, NBT_INV_SIDE_OUT, SBIT_D, NBT_INV_SIDE_AUTO_OUT, SIDE_BOTTOM, NBT_ENERGY_ACCEPTED_SIDES, SBIT_L|SBIT_R), "ShS", "GMG", "SwS", 'M', OP.casingMachine.dat(aMat), 'G', IL.MOTORS[15], 'S', OP.stickLong.dat(aMat));

		aClass = MultiTileEntityBasicMachineElectric.class;
		aMat = MT.DATA.Electric_T[0];   aRegistry.add("Electric Sifter ("+VN[0]+")"                         , "Basic Machines"                      , 20721, 20001, aClass, aMat.mToolQuality, 16, aMachine     , UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS,   4.0F, NBT_RESISTANCE,   4.0F, NBT_COLOR, UT.Code.getRGBInt(aMat.fRGBaSolid), NBT_INPUT,  V[0], NBT_TEXTURE, "electricsifter", NBT_ENERGY_ACCEPTED, TD.Energy.EU, NBT_RECIPEMAP, RM.Sifting, NBT_EFFICIENCY, 5000, NBT_INV_SIDE_IN, SBIT_U, NBT_INV_SIDE_AUTO_IN, SIDE_TOP, NBT_INV_SIDE_OUT, SBIT_D, NBT_INV_SIDE_AUTO_OUT, SIDE_BOTTOM, NBT_ENERGY_ACCEPTED_SIDES, SBIT_B), "WxW", "RMR", "SwS", 'M', OP.casingMachineDouble.dat(aMat), 'S', IL.PISTONS[0], 'W', OP.wireFine.dat(aMat), 'R', OP.stick.dat(aMat));
		aMat = MT.DATA.Electric_T[1];   aRegistry.add("Electric Sifter ("+VN[1]+")"                         , "Basic Machines"                      , 20722, 20001, aClass, aMat.mToolQuality, 16, aMachine     , UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS,   4.0F, NBT_RESISTANCE,   4.0F, NBT_COLOR, UT.Code.getRGBInt(aMat.fRGBaSolid), NBT_INPUT,  V[1], NBT_TEXTURE, "electricsifter", NBT_ENERGY_ACCEPTED, TD.Energy.EU, NBT_RECIPEMAP, RM.Sifting, NBT_EFFICIENCY, 5000, NBT_INV_SIDE_IN, SBIT_U, NBT_INV_SIDE_AUTO_IN, SIDE_TOP, NBT_INV_SIDE_OUT, SBIT_D, NBT_INV_SIDE_AUTO_OUT, SIDE_BOTTOM, NBT_ENERGY_ACCEPTED_SIDES, SBIT_B), "WxW", "RMR", "SwS", 'M', OP.casingMachineDouble.dat(aMat), 'S', IL.PISTONS[1], 'W', OP.wireFine.dat(aMat), 'R', OP.stick.dat(aMat));
		aMat = MT.DATA.Electric_T[2];   aRegistry.add("Electric Sifter ("+VN[2]+")"                         , "Basic Machines"                      , 20723, 20001, aClass, aMat.mToolQuality, 16, aMachine     , UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS,   4.0F, NBT_RESISTANCE,   4.0F, NBT_COLOR, UT.Code.getRGBInt(aMat.fRGBaSolid), NBT_INPUT,  V[2], NBT_TEXTURE, "electricsifter", NBT_ENERGY_ACCEPTED, TD.Energy.EU, NBT_RECIPEMAP, RM.Sifting, NBT_EFFICIENCY, 5000, NBT_INV_SIDE_IN, SBIT_U, NBT_INV_SIDE_AUTO_IN, SIDE_TOP, NBT_INV_SIDE_OUT, SBIT_D, NBT_INV_SIDE_AUTO_OUT, SIDE_BOTTOM, NBT_ENERGY_ACCEPTED_SIDES, SBIT_B), "WxW", "RMR", "SwS", 'M', OP.casingMachineDouble.dat(aMat), 'S', IL.PISTONS[2], 'W', OP.wireFine.dat(aMat), 'R', OP.stick.dat(aMat));
		aMat = MT.DATA.Electric_T[3];   aRegistry.add("Electric Sifter ("+VN[3]+")"                         , "Basic Machines"                      , 20724, 20001, aClass, aMat.mToolQuality, 16, aMachine     , UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS,   4.0F, NBT_RESISTANCE,   4.0F, NBT_COLOR, UT.Code.getRGBInt(aMat.fRGBaSolid), NBT_INPUT,  V[3], NBT_TEXTURE, "electricsifter", NBT_ENERGY_ACCEPTED, TD.Energy.EU, NBT_RECIPEMAP, RM.Sifting, NBT_EFFICIENCY, 5000, NBT_INV_SIDE_IN, SBIT_U, NBT_INV_SIDE_AUTO_IN, SIDE_TOP, NBT_INV_SIDE_OUT, SBIT_D, NBT_INV_SIDE_AUTO_OUT, SIDE_BOTTOM, NBT_ENERGY_ACCEPTED_SIDES, SBIT_B), "WxW", "RMR", "SwS", 'M', OP.casingMachineDouble.dat(aMat), 'S', IL.PISTONS[3], 'W', OP.wireFine.dat(aMat), 'R', OP.stick.dat(aMat));
		aMat = MT.DATA.Electric_T[4];   aRegistry.add("Electric Sifter ("+VN[4]+")"                         , "Basic Machines"                      , 20725, 20001, aClass, aMat.mToolQuality, 16, aMachine     , UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS,   4.0F, NBT_RESISTANCE,   4.0F, NBT_COLOR, UT.Code.getRGBInt(aMat.fRGBaSolid), NBT_INPUT,  V[4], NBT_TEXTURE, "electricsifter", NBT_ENERGY_ACCEPTED, TD.Energy.EU, NBT_RECIPEMAP, RM.Sifting, NBT_EFFICIENCY, 5000, NBT_INV_SIDE_IN, SBIT_U, NBT_INV_SIDE_AUTO_IN, SIDE_TOP, NBT_INV_SIDE_OUT, SBIT_D, NBT_INV_SIDE_AUTO_OUT, SIDE_BOTTOM, NBT_ENERGY_ACCEPTED_SIDES, SBIT_B), "WxW", "RMR", "SwS", 'M', OP.casingMachineDouble.dat(aMat), 'S', IL.PISTONS[4], 'W', OP.wireFine.dat(aMat), 'R', OP.stick.dat(aMat));
		aMat = MT.DATA.Electric_T[5];   aRegistry.add("Electric Sifter ("+VN[5]+")"                         , "Basic Machines"                      , 20726, 20001, aClass, aMat.mToolQuality, 16, aMachine     , UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS,   4.0F, NBT_RESISTANCE,   4.0F, NBT_COLOR, UT.Code.getRGBInt(aMat.fRGBaSolid), NBT_INPUT,  V[5], NBT_TEXTURE, "electricsifter", NBT_ENERGY_ACCEPTED, TD.Energy.EU, NBT_RECIPEMAP, RM.Sifting, NBT_EFFICIENCY, 5000, NBT_INV_SIDE_IN, SBIT_U, NBT_INV_SIDE_AUTO_IN, SIDE_TOP, NBT_INV_SIDE_OUT, SBIT_D, NBT_INV_SIDE_AUTO_OUT, SIDE_BOTTOM, NBT_ENERGY_ACCEPTED_SIDES, SBIT_B), "WxW", "RMR", "SwS", 'M', OP.casingMachineDouble.dat(aMat), 'S', IL.PISTONS[5], 'W', OP.wireFine.dat(aMat), 'R', OP.stick.dat(aMat));
		aMat = MT.DATA.Electric_T[6];   aRegistry.add("Electric Sifter ("+VN[6]+")"                         , "Basic Machines"                      , 20727, 20001, aClass, aMat.mToolQuality, 16, aMachine     , UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS,   4.0F, NBT_RESISTANCE,   4.0F, NBT_COLOR, UT.Code.getRGBInt(aMat.fRGBaSolid), NBT_INPUT,  V[6], NBT_TEXTURE, "electricsifter", NBT_ENERGY_ACCEPTED, TD.Energy.EU, NBT_RECIPEMAP, RM.Sifting, NBT_EFFICIENCY, 5000, NBT_INV_SIDE_IN, SBIT_U, NBT_INV_SIDE_AUTO_IN, SIDE_TOP, NBT_INV_SIDE_OUT, SBIT_D, NBT_INV_SIDE_AUTO_OUT, SIDE_BOTTOM, NBT_ENERGY_ACCEPTED_SIDES, SBIT_B), "WxW", "RMR", "SwS", 'M', OP.casingMachineDouble.dat(aMat), 'S', IL.PISTONS[6], 'W', OP.wireFine.dat(aMat), 'R', OP.stick.dat(aMat));
		aMat = MT.DATA.Electric_T[7];   aRegistry.add("Electric Sifter ("+VN[7]+")"                         , "Basic Machines"                      , 20728, 20001, aClass, aMat.mToolQuality, 16, aMachine     , UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS,   4.0F, NBT_RESISTANCE,   4.0F, NBT_COLOR, UT.Code.getRGBInt(aMat.fRGBaSolid), NBT_INPUT,  V[7], NBT_TEXTURE, "electricsifter", NBT_ENERGY_ACCEPTED, TD.Energy.EU, NBT_RECIPEMAP, RM.Sifting, NBT_EFFICIENCY, 5000, NBT_INV_SIDE_IN, SBIT_U, NBT_INV_SIDE_AUTO_IN, SIDE_TOP, NBT_INV_SIDE_OUT, SBIT_D, NBT_INV_SIDE_AUTO_OUT, SIDE_BOTTOM, NBT_ENERGY_ACCEPTED_SIDES, SBIT_B), "WxW", "RMR", "SwS", 'M', OP.casingMachineDouble.dat(aMat), 'S', IL.PISTONS[7], 'W', OP.wireFine.dat(aMat), 'R', OP.stick.dat(aMat));
		aMat = MT.DATA.Electric_T[8];   aRegistry.add("Electric Sifter ("+VN[8]+")"                         , "Basic Machines"                      , 20729, 20001, aClass, aMat.mToolQuality, 16, aMachine     , UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS,   4.0F, NBT_RESISTANCE,   4.0F, NBT_COLOR, UT.Code.getRGBInt(aMat.fRGBaSolid), NBT_INPUT,  V[8], NBT_TEXTURE, "electricsifter", NBT_ENERGY_ACCEPTED, TD.Energy.EU, NBT_RECIPEMAP, RM.Sifting, NBT_EFFICIENCY, 5000, NBT_INV_SIDE_IN, SBIT_U, NBT_INV_SIDE_AUTO_IN, SIDE_TOP, NBT_INV_SIDE_OUT, SBIT_D, NBT_INV_SIDE_AUTO_OUT, SIDE_BOTTOM, NBT_ENERGY_ACCEPTED_SIDES, SBIT_B), "WxW", "RMR", "SwS", 'M', OP.casingMachineDouble.dat(aMat), 'S', IL.PISTONS[8], 'W', OP.wireFine.dat(aMat), 'R', OP.stick.dat(aMat));
		aMat = MT.DATA.Electric_T[9];   aRegistry.add("Electric Sifter ("+VN[9]+")"                         , "Basic Machines"                      , 20730, 20001, aClass, aMat.mToolQuality, 16, aMachine     , UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS,   4.0F, NBT_RESISTANCE,   4.0F, NBT_COLOR, UT.Code.getRGBInt(aMat.fRGBaSolid), NBT_INPUT,  V[9], NBT_TEXTURE, "electricsifter", NBT_ENERGY_ACCEPTED, TD.Energy.EU, NBT_RECIPEMAP, RM.Sifting, NBT_EFFICIENCY, 5000, NBT_INV_SIDE_IN, SBIT_U, NBT_INV_SIDE_AUTO_IN, SIDE_TOP, NBT_INV_SIDE_OUT, SBIT_D, NBT_INV_SIDE_AUTO_OUT, SIDE_BOTTOM, NBT_ENERGY_ACCEPTED_SIDES, SBIT_B), "WxW", "RMR", "SwS", 'M', OP.casingMachineDouble.dat(aMat), 'S', IL.PISTONS[9], 'W', OP.wireFine.dat(aMat), 'R', OP.stick.dat(aMat));
		aMat = MT.DATA.Electric_T[10];   aRegistry.add("Electric Sifter ("+VN[10]+")"                         , "Basic Machines"                      , 20731, 20001, aClass, aMat.mToolQuality, 16, aMachine     , UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS,   4.0F, NBT_RESISTANCE,   4.0F, NBT_COLOR, UT.Code.getRGBInt(aMat.fRGBaSolid), NBT_INPUT,  V[10], NBT_TEXTURE, "electricsifter", NBT_ENERGY_ACCEPTED, TD.Energy.EU, NBT_RECIPEMAP, RM.Sifting, NBT_EFFICIENCY, 5000, NBT_INV_SIDE_IN, SBIT_U, NBT_INV_SIDE_AUTO_IN, SIDE_TOP, NBT_INV_SIDE_OUT, SBIT_D, NBT_INV_SIDE_AUTO_OUT, SIDE_BOTTOM, NBT_ENERGY_ACCEPTED_SIDES, SBIT_B), "WxW", "RMR", "SwS", 'M', OP.casingMachineDouble.dat(aMat), 'S', IL.PISTONS[10], 'W', OP.wireFine.dat(aMat), 'R', OP.stick.dat(aMat));
		aMat = MT.DATA.Electric_T[11];   aRegistry.add("Electric Sifter ("+VN[11]+")"                         , "Basic Machines"                      , 20732, 20001, aClass, aMat.mToolQuality, 16, aMachine     , UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS,   4.0F, NBT_RESISTANCE,   4.0F, NBT_COLOR, UT.Code.getRGBInt(aMat.fRGBaSolid), NBT_INPUT,  V[11], NBT_TEXTURE, "electricsifter", NBT_ENERGY_ACCEPTED, TD.Energy.EU, NBT_RECIPEMAP, RM.Sifting, NBT_EFFICIENCY, 5000, NBT_INV_SIDE_IN, SBIT_U, NBT_INV_SIDE_AUTO_IN, SIDE_TOP, NBT_INV_SIDE_OUT, SBIT_D, NBT_INV_SIDE_AUTO_OUT, SIDE_BOTTOM, NBT_ENERGY_ACCEPTED_SIDES, SBIT_B), "WxW", "RMR", "SwS", 'M', OP.casingMachineDouble.dat(aMat), 'S', IL.PISTONS[11], 'W', OP.wireFine.dat(aMat), 'R', OP.stick.dat(aMat));
		aMat = MT.DATA.Electric_T[12];   aRegistry.add("Electric Sifter ("+VN[12]+")"                         , "Basic Machines"                      , 20733, 20001, aClass, aMat.mToolQuality, 16, aMachine     , UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS,   4.0F, NBT_RESISTANCE,   4.0F, NBT_COLOR, UT.Code.getRGBInt(aMat.fRGBaSolid), NBT_INPUT,  V[12], NBT_TEXTURE, "electricsifter", NBT_ENERGY_ACCEPTED, TD.Energy.EU, NBT_RECIPEMAP, RM.Sifting, NBT_EFFICIENCY, 5000, NBT_INV_SIDE_IN, SBIT_U, NBT_INV_SIDE_AUTO_IN, SIDE_TOP, NBT_INV_SIDE_OUT, SBIT_D, NBT_INV_SIDE_AUTO_OUT, SIDE_BOTTOM, NBT_ENERGY_ACCEPTED_SIDES, SBIT_B), "WxW", "RMR", "SwS", 'M', OP.casingMachineDouble.dat(aMat), 'S', IL.PISTONS[12], 'W', OP.wireFine.dat(aMat), 'R', OP.stick.dat(aMat));
		aMat = MT.DATA.Electric_T[13];   aRegistry.add("Electric Sifter ("+VN[13]+")"                         , "Basic Machines"                      , 20734, 20001, aClass, aMat.mToolQuality, 16, aMachine     , UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS,   4.0F, NBT_RESISTANCE,   4.0F, NBT_COLOR, UT.Code.getRGBInt(aMat.fRGBaSolid), NBT_INPUT,  V[13], NBT_TEXTURE, "electricsifter", NBT_ENERGY_ACCEPTED, TD.Energy.EU, NBT_RECIPEMAP, RM.Sifting, NBT_EFFICIENCY, 5000, NBT_INV_SIDE_IN, SBIT_U, NBT_INV_SIDE_AUTO_IN, SIDE_TOP, NBT_INV_SIDE_OUT, SBIT_D, NBT_INV_SIDE_AUTO_OUT, SIDE_BOTTOM, NBT_ENERGY_ACCEPTED_SIDES, SBIT_B), "WxW", "RMR", "SwS", 'M', OP.casingMachineDouble.dat(aMat), 'S', IL.PISTONS[13], 'W', OP.wireFine.dat(aMat), 'R', OP.stick.dat(aMat));
		aMat = MT.DATA.Electric_T[14];   aRegistry.add("Electric Sifter ("+VN[14]+")"                         , "Basic Machines"                      , 20735, 20001, aClass, aMat.mToolQuality, 16, aMachine     , UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS,   4.0F, NBT_RESISTANCE,   4.0F, NBT_COLOR, UT.Code.getRGBInt(aMat.fRGBaSolid), NBT_INPUT,  V[14], NBT_TEXTURE, "electricsifter", NBT_ENERGY_ACCEPTED, TD.Energy.EU, NBT_RECIPEMAP, RM.Sifting, NBT_EFFICIENCY, 5000, NBT_INV_SIDE_IN, SBIT_U, NBT_INV_SIDE_AUTO_IN, SIDE_TOP, NBT_INV_SIDE_OUT, SBIT_D, NBT_INV_SIDE_AUTO_OUT, SIDE_BOTTOM, NBT_ENERGY_ACCEPTED_SIDES, SBIT_B), "WxW", "RMR", "SwS", 'M', OP.casingMachineDouble.dat(aMat), 'S', IL.PISTONS[14], 'W', OP.wireFine.dat(aMat), 'R', OP.stick.dat(aMat));
		aMat = MT.DATA.Electric_T[15];   aRegistry.add("Electric Sifter ("+VN[15]+")"                         , "Basic Machines"                      , 20736, 20001, aClass, aMat.mToolQuality, 16, aMachine     , UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS,   4.0F, NBT_RESISTANCE,   4.0F, NBT_COLOR, UT.Code.getRGBInt(aMat.fRGBaSolid), NBT_INPUT,  V[15], NBT_TEXTURE, "electricsifter", NBT_ENERGY_ACCEPTED, TD.Energy.EU, NBT_RECIPEMAP, RM.Sifting, NBT_EFFICIENCY, 5000, NBT_INV_SIDE_IN, SBIT_U, NBT_INV_SIDE_AUTO_IN, SIDE_TOP, NBT_INV_SIDE_OUT, SBIT_D, NBT_INV_SIDE_AUTO_OUT, SIDE_BOTTOM, NBT_ENERGY_ACCEPTED_SIDES, SBIT_B), "WxW", "RMR", "SwS", 'M', OP.casingMachineDouble.dat(aMat), 'S', IL.PISTONS[15], 'W', OP.wireFine.dat(aMat), 'R', OP.stick.dat(aMat));

		aClass = MultiTileEntityBasicMachineElectric.class;
		aMat = MT.DATA.Electric_T[0];   aRegistry.add("Slicer ("+VN[0]+")"                                  , "Basic Machines"                      , 20741, 20001, aClass, aMat.mToolQuality, 16, aMachine     , UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS,   4.0F, NBT_RESISTANCE,   4.0F, NBT_COLOR, UT.Code.getRGBInt(aMat.fRGBaSolid), NBT_INPUT, V[0], NBT_TEXTURE, "slicer", NBT_ENERGY_ACCEPTED, TD.Energy.EU, NBT_RECIPEMAP, RM.Slicer, NBT_INV_SIDE_IN, SBIT_L|SBIT_U, NBT_INV_SIDE_AUTO_IN, SIDE_LEFT, NBT_INV_SIDE_OUT, SBIT_R|SBIT_D, NBT_INV_SIDE_AUTO_OUT, SIDE_RIGHT, NBT_ENERGY_ACCEPTED_SIDES, SBIT_B), "PRw", "YMC", 'M', OP.casingMachine.dat(aMat), 'P', IL.PISTONS[1], 'Y', IL.CONVEYERS[0], 'C', OD_CIRCUITS[0], 'R', OP.stick.dat(aMat));
		aMat = MT.DATA.Electric_T[1];   aRegistry.add("Slicer ("+VN[1]+")"                                  , "Basic Machines"                      , 20742, 20001, aClass, aMat.mToolQuality, 16, aMachine     , UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS,   4.0F, NBT_RESISTANCE,   4.0F, NBT_COLOR, UT.Code.getRGBInt(aMat.fRGBaSolid), NBT_INPUT, V[1], NBT_TEXTURE, "slicer", NBT_ENERGY_ACCEPTED, TD.Energy.EU, NBT_RECIPEMAP, RM.Slicer, NBT_INV_SIDE_IN, SBIT_L|SBIT_U, NBT_INV_SIDE_AUTO_IN, SIDE_LEFT, NBT_INV_SIDE_OUT, SBIT_R|SBIT_D, NBT_INV_SIDE_AUTO_OUT, SIDE_RIGHT, NBT_ENERGY_ACCEPTED_SIDES, SBIT_B), "PRw", "YMC", 'M', OP.casingMachine.dat(aMat), 'P', IL.PISTONS[1], 'Y', IL.CONVEYERS[1], 'C', OD_CIRCUITS[1], 'R', OP.stick.dat(aMat));
		aMat = MT.DATA.Electric_T[2];   aRegistry.add("Slicer ("+VN[2]+")"                                  , "Basic Machines"                      , 20743, 20001, aClass, aMat.mToolQuality, 16, aMachine     , UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS,   4.0F, NBT_RESISTANCE,   4.0F, NBT_COLOR, UT.Code.getRGBInt(aMat.fRGBaSolid), NBT_INPUT, V[2], NBT_TEXTURE, "slicer", NBT_ENERGY_ACCEPTED, TD.Energy.EU, NBT_RECIPEMAP, RM.Slicer, NBT_INV_SIDE_IN, SBIT_L|SBIT_U, NBT_INV_SIDE_AUTO_IN, SIDE_LEFT, NBT_INV_SIDE_OUT, SBIT_R|SBIT_D, NBT_INV_SIDE_AUTO_OUT, SIDE_RIGHT, NBT_ENERGY_ACCEPTED_SIDES, SBIT_B), "PRw", "YMC", 'M', OP.casingMachine.dat(aMat), 'P', IL.PISTONS[2], 'Y', IL.CONVEYERS[2], 'C', OD_CIRCUITS[2], 'R', OP.stick.dat(aMat));
		aMat = MT.DATA.Electric_T[3];   aRegistry.add("Slicer ("+VN[3]+")"                                  , "Basic Machines"                      , 20744, 20001, aClass, aMat.mToolQuality, 16, aMachine     , UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS,   4.0F, NBT_RESISTANCE,   4.0F, NBT_COLOR, UT.Code.getRGBInt(aMat.fRGBaSolid), NBT_INPUT, V[3], NBT_TEXTURE, "slicer", NBT_ENERGY_ACCEPTED, TD.Energy.EU, NBT_RECIPEMAP, RM.Slicer, NBT_INV_SIDE_IN, SBIT_L|SBIT_U, NBT_INV_SIDE_AUTO_IN, SIDE_LEFT, NBT_INV_SIDE_OUT, SBIT_R|SBIT_D, NBT_INV_SIDE_AUTO_OUT, SIDE_RIGHT, NBT_ENERGY_ACCEPTED_SIDES, SBIT_B), "PRw", "YMC", 'M', OP.casingMachine.dat(aMat), 'P', IL.PISTONS[3], 'Y', IL.CONVEYERS[3], 'C', OD_CIRCUITS[3], 'R', OP.stick.dat(aMat));
		aMat = MT.DATA.Electric_T[4];   aRegistry.add("Slicer ("+VN[4]+")"                                  , "Basic Machines"                      , 20745, 20001, aClass, aMat.mToolQuality, 16, aMachine     , UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS,   4.0F, NBT_RESISTANCE,   4.0F, NBT_COLOR, UT.Code.getRGBInt(aMat.fRGBaSolid), NBT_INPUT, V[4], NBT_TEXTURE, "slicer", NBT_ENERGY_ACCEPTED, TD.Energy.EU, NBT_RECIPEMAP, RM.Slicer, NBT_INV_SIDE_IN, SBIT_L|SBIT_U, NBT_INV_SIDE_AUTO_IN, SIDE_LEFT, NBT_INV_SIDE_OUT, SBIT_R|SBIT_D, NBT_INV_SIDE_AUTO_OUT, SIDE_RIGHT, NBT_ENERGY_ACCEPTED_SIDES, SBIT_B), "PRw", "YMC", 'M', OP.casingMachine.dat(aMat), 'P', IL.PISTONS[4], 'Y', IL.CONVEYERS[4], 'C', OD_CIRCUITS[4], 'R', OP.stick.dat(aMat));
		aMat = MT.DATA.Electric_T[5];   aRegistry.add("Slicer ("+VN[5]+")"                                  , "Basic Machines"                      , 20746, 20001, aClass, aMat.mToolQuality, 16, aMachine     , UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS,   4.0F, NBT_RESISTANCE,   4.0F, NBT_COLOR, UT.Code.getRGBInt(aMat.fRGBaSolid), NBT_INPUT, V[5], NBT_TEXTURE, "slicer", NBT_ENERGY_ACCEPTED, TD.Energy.EU, NBT_RECIPEMAP, RM.Slicer, NBT_INV_SIDE_IN, SBIT_L|SBIT_U, NBT_INV_SIDE_AUTO_IN, SIDE_LEFT, NBT_INV_SIDE_OUT, SBIT_R|SBIT_D, NBT_INV_SIDE_AUTO_OUT, SIDE_RIGHT, NBT_ENERGY_ACCEPTED_SIDES, SBIT_B), "PRw", "YMC", 'M', OP.casingMachine.dat(aMat), 'P', IL.PISTONS[5], 'Y', IL.CONVEYERS[5], 'C', OD_CIRCUITS[5], 'R', OP.stick.dat(aMat));
		aMat = MT.DATA.Electric_T[6];   aRegistry.add("Slicer ("+VN[6]+")"                                  , "Basic Machines"                      , 20747, 20001, aClass, aMat.mToolQuality, 16, aMachine     , UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS,   4.0F, NBT_RESISTANCE,   4.0F, NBT_COLOR, UT.Code.getRGBInt(aMat.fRGBaSolid), NBT_INPUT, V[6], NBT_TEXTURE, "slicer", NBT_ENERGY_ACCEPTED, TD.Energy.EU, NBT_RECIPEMAP, RM.Slicer, NBT_INV_SIDE_IN, SBIT_L|SBIT_U, NBT_INV_SIDE_AUTO_IN, SIDE_LEFT, NBT_INV_SIDE_OUT, SBIT_R|SBIT_D, NBT_INV_SIDE_AUTO_OUT, SIDE_RIGHT, NBT_ENERGY_ACCEPTED_SIDES, SBIT_B), "PRw", "YMC", 'M', OP.casingMachine.dat(aMat), 'P', IL.PISTONS[6], 'Y', IL.CONVEYERS[6], 'C', OD_CIRCUITS[6], 'R', OP.stick.dat(aMat));
		aMat = MT.DATA.Electric_T[7];   aRegistry.add("Slicer ("+VN[7]+")"                                  , "Basic Machines"                      , 20748, 20001, aClass, aMat.mToolQuality, 16, aMachine     , UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS,   4.0F, NBT_RESISTANCE,   4.0F, NBT_COLOR, UT.Code.getRGBInt(aMat.fRGBaSolid), NBT_INPUT, V[7], NBT_TEXTURE, "slicer", NBT_ENERGY_ACCEPTED, TD.Energy.EU, NBT_RECIPEMAP, RM.Slicer, NBT_INV_SIDE_IN, SBIT_L|SBIT_U, NBT_INV_SIDE_AUTO_IN, SIDE_LEFT, NBT_INV_SIDE_OUT, SBIT_R|SBIT_D, NBT_INV_SIDE_AUTO_OUT, SIDE_RIGHT, NBT_ENERGY_ACCEPTED_SIDES, SBIT_B), "PRw", "YMC", 'M', OP.casingMachine.dat(aMat), 'P', IL.PISTONS[7], 'Y', IL.CONVEYERS[7], 'C', OD_CIRCUITS[7], 'R', OP.stick.dat(aMat));
		aMat = MT.DATA.Electric_T[8];   aRegistry.add("Slicer ("+VN[8]+")"                                  , "Basic Machines"                      , 20749, 20001, aClass, aMat.mToolQuality, 16, aMachine     , UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS,   4.0F, NBT_RESISTANCE,   4.0F, NBT_COLOR, UT.Code.getRGBInt(aMat.fRGBaSolid), NBT_INPUT, V[8], NBT_TEXTURE, "slicer", NBT_ENERGY_ACCEPTED, TD.Energy.EU, NBT_RECIPEMAP, RM.Slicer, NBT_INV_SIDE_IN, SBIT_L|SBIT_U, NBT_INV_SIDE_AUTO_IN, SIDE_LEFT, NBT_INV_SIDE_OUT, SBIT_R|SBIT_D, NBT_INV_SIDE_AUTO_OUT, SIDE_RIGHT, NBT_ENERGY_ACCEPTED_SIDES, SBIT_B), "PRw", "YMC", 'M', OP.casingMachine.dat(aMat), 'P', IL.PISTONS[8], 'Y', IL.CONVEYERS[8], 'C', OD_CIRCUITS[8], 'R', OP.stick.dat(aMat));
		aMat = MT.DATA.Electric_T[9];   aRegistry.add("Slicer ("+VN[9]+")"                                  , "Basic Machines"                      , 20750, 20001, aClass, aMat.mToolQuality, 16, aMachine     , UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS,   4.0F, NBT_RESISTANCE,   4.0F, NBT_COLOR, UT.Code.getRGBInt(aMat.fRGBaSolid), NBT_INPUT, V[9], NBT_TEXTURE, "slicer", NBT_ENERGY_ACCEPTED, TD.Energy.EU, NBT_RECIPEMAP, RM.Slicer, NBT_INV_SIDE_IN, SBIT_L|SBIT_U, NBT_INV_SIDE_AUTO_IN, SIDE_LEFT, NBT_INV_SIDE_OUT, SBIT_R|SBIT_D, NBT_INV_SIDE_AUTO_OUT, SIDE_RIGHT, NBT_ENERGY_ACCEPTED_SIDES, SBIT_B), "PRw", "YMC", 'M', OP.casingMachine.dat(aMat), 'P', IL.PISTONS[9], 'Y', IL.CONVEYERS[9], 'C', OD_CIRCUITS[9], 'R', OP.stick.dat(aMat));
		aMat = MT.DATA.Electric_T[10];   aRegistry.add("Slicer ("+VN[10]+")"                                  , "Basic Machines"                      , 20751, 20001, aClass, aMat.mToolQuality, 16, aMachine     , UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS,   4.0F, NBT_RESISTANCE,   4.0F, NBT_COLOR, UT.Code.getRGBInt(aMat.fRGBaSolid), NBT_INPUT, V[10], NBT_TEXTURE, "slicer", NBT_ENERGY_ACCEPTED, TD.Energy.EU, NBT_RECIPEMAP, RM.Slicer, NBT_INV_SIDE_IN, SBIT_L|SBIT_U, NBT_INV_SIDE_AUTO_IN, SIDE_LEFT, NBT_INV_SIDE_OUT, SBIT_R|SBIT_D, NBT_INV_SIDE_AUTO_OUT, SIDE_RIGHT, NBT_ENERGY_ACCEPTED_SIDES, SBIT_B), "PRw", "YMC", 'M', OP.casingMachine.dat(aMat), 'P', IL.PISTONS[10], 'Y', IL.CONVEYERS[10], 'C', OD_CIRCUITS[10], 'R', OP.stick.dat(aMat));
		aMat = MT.DATA.Electric_T[11];   aRegistry.add("Slicer ("+VN[11]+")"                                  , "Basic Machines"                      , 20752, 20001, aClass, aMat.mToolQuality, 16, aMachine     , UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS,   4.0F, NBT_RESISTANCE,   4.0F, NBT_COLOR, UT.Code.getRGBInt(aMat.fRGBaSolid), NBT_INPUT, V[11], NBT_TEXTURE, "slicer", NBT_ENERGY_ACCEPTED, TD.Energy.EU, NBT_RECIPEMAP, RM.Slicer, NBT_INV_SIDE_IN, SBIT_L|SBIT_U, NBT_INV_SIDE_AUTO_IN, SIDE_LEFT, NBT_INV_SIDE_OUT, SBIT_R|SBIT_D, NBT_INV_SIDE_AUTO_OUT, SIDE_RIGHT, NBT_ENERGY_ACCEPTED_SIDES, SBIT_B), "PRw", "YMC", 'M', OP.casingMachine.dat(aMat), 'P', IL.PISTONS[11], 'Y', IL.CONVEYERS[11], 'C', OD_CIRCUITS[11], 'R', OP.stick.dat(aMat));
		aMat = MT.DATA.Electric_T[12];   aRegistry.add("Slicer ("+VN[12]+")"                                  , "Basic Machines"                      , 20753, 20001, aClass, aMat.mToolQuality, 16, aMachine     , UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS,   4.0F, NBT_RESISTANCE,   4.0F, NBT_COLOR, UT.Code.getRGBInt(aMat.fRGBaSolid), NBT_INPUT, V[12], NBT_TEXTURE, "slicer", NBT_ENERGY_ACCEPTED, TD.Energy.EU, NBT_RECIPEMAP, RM.Slicer, NBT_INV_SIDE_IN, SBIT_L|SBIT_U, NBT_INV_SIDE_AUTO_IN, SIDE_LEFT, NBT_INV_SIDE_OUT, SBIT_R|SBIT_D, NBT_INV_SIDE_AUTO_OUT, SIDE_RIGHT, NBT_ENERGY_ACCEPTED_SIDES, SBIT_B), "PRw", "YMC", 'M', OP.casingMachine.dat(aMat), 'P', IL.PISTONS[12], 'Y', IL.CONVEYERS[12], 'C', OD_CIRCUITS[12], 'R', OP.stick.dat(aMat));
		aMat = MT.DATA.Electric_T[13];   aRegistry.add("Slicer ("+VN[13]+")"                                  , "Basic Machines"                      , 20754, 20001, aClass, aMat.mToolQuality, 16, aMachine     , UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS,   4.0F, NBT_RESISTANCE,   4.0F, NBT_COLOR, UT.Code.getRGBInt(aMat.fRGBaSolid), NBT_INPUT, V[13], NBT_TEXTURE, "slicer", NBT_ENERGY_ACCEPTED, TD.Energy.EU, NBT_RECIPEMAP, RM.Slicer, NBT_INV_SIDE_IN, SBIT_L|SBIT_U, NBT_INV_SIDE_AUTO_IN, SIDE_LEFT, NBT_INV_SIDE_OUT, SBIT_R|SBIT_D, NBT_INV_SIDE_AUTO_OUT, SIDE_RIGHT, NBT_ENERGY_ACCEPTED_SIDES, SBIT_B), "PRw", "YMC", 'M', OP.casingMachine.dat(aMat), 'P', IL.PISTONS[13], 'Y', IL.CONVEYERS[13], 'C', OD_CIRCUITS[13], 'R', OP.stick.dat(aMat));
		aMat = MT.DATA.Electric_T[14];   aRegistry.add("Slicer ("+VN[14]+")"                                  , "Basic Machines"                      , 20755, 20001, aClass, aMat.mToolQuality, 16, aMachine     , UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS,   4.0F, NBT_RESISTANCE,   4.0F, NBT_COLOR, UT.Code.getRGBInt(aMat.fRGBaSolid), NBT_INPUT, V[14], NBT_TEXTURE, "slicer", NBT_ENERGY_ACCEPTED, TD.Energy.EU, NBT_RECIPEMAP, RM.Slicer, NBT_INV_SIDE_IN, SBIT_L|SBIT_U, NBT_INV_SIDE_AUTO_IN, SIDE_LEFT, NBT_INV_SIDE_OUT, SBIT_R|SBIT_D, NBT_INV_SIDE_AUTO_OUT, SIDE_RIGHT, NBT_ENERGY_ACCEPTED_SIDES, SBIT_B), "PRw", "YMC", 'M', OP.casingMachine.dat(aMat), 'P', IL.PISTONS[14], 'Y', IL.CONVEYERS[14], 'C', OD_CIRCUITS[14], 'R', OP.stick.dat(aMat));
		aMat = MT.DATA.Electric_T[15];   aRegistry.add("Slicer ("+VN[15]+")"                                  , "Basic Machines"                      , 20756, 20001, aClass, aMat.mToolQuality, 16, aMachine     , UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS,   4.0F, NBT_RESISTANCE,   4.0F, NBT_COLOR, UT.Code.getRGBInt(aMat.fRGBaSolid), NBT_INPUT, V[15], NBT_TEXTURE, "slicer", NBT_ENERGY_ACCEPTED, TD.Energy.EU, NBT_RECIPEMAP, RM.Slicer, NBT_INV_SIDE_IN, SBIT_L|SBIT_U, NBT_INV_SIDE_AUTO_IN, SIDE_LEFT, NBT_INV_SIDE_OUT, SBIT_R|SBIT_D, NBT_INV_SIDE_AUTO_OUT, SIDE_RIGHT, NBT_ENERGY_ACCEPTED_SIDES, SBIT_B), "PRw", "YMC", 'M', OP.casingMachine.dat(aMat), 'P', IL.PISTONS[15], 'Y', IL.CONVEYERS[15], 'C', OD_CIRCUITS[15], 'R', OP.stick.dat(aMat));

		aClass = MultiTileEntityBasicMachine.class;
		aMat = MT.DATA.Heat_T[0];       aRegistry.add("Laminator (" + aMat.getLocal() + ")"                 , "Basic Machines"                      , 20761, 20001, aClass, aMat.mToolQuality, 16, aMachine     , UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS, HARDNESS[0], NBT_RESISTANCE, HARDNESS[0], NBT_COLOR, UT.Code.getRGBInt(aMat.fRGBaSolid), NBT_INPUT, V[0], NBT_TEXTURE, "laminator", NBT_ENERGY_ACCEPTED, TD.Energy.HU, NBT_RECIPEMAP, RM.Laminator, NBT_GUI, RES_PATH_GUI + "machines/Laminator.png", NBT_INV_SIDE_IN, SBIT_L, NBT_INV_SIDE_AUTO_IN, SIDE_LEFT, NBT_INV_SIDE_OUT, SBIT_R, NBT_INV_SIDE_AUTO_OUT, SIDE_RIGHT, NBT_ENERGY_ACCEPTED_SIDES, SBIT_D), "SwS", "GMG", "SCS", 'M', OP.casingMachine.dat(aMat), 'G', OP.gearGtSmall.dat(aMat), 'S', OP.stick.dat(aMat), 'C', OP.plateDouble.dat(ANY.Cu));
		aMat = MT.DATA.Heat_T[1];       aRegistry.add("Laminator (" + aMat.getLocal() + ")"                 , "Basic Machines"                      , 20762, 20001, aClass, aMat.mToolQuality, 16, aMachine     , UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS, HARDNESS[1], NBT_RESISTANCE, HARDNESS[1], NBT_COLOR, UT.Code.getRGBInt(aMat.fRGBaSolid), NBT_INPUT, V[1], NBT_TEXTURE, "laminator", NBT_ENERGY_ACCEPTED, TD.Energy.HU, NBT_RECIPEMAP, RM.Laminator, NBT_GUI, RES_PATH_GUI + "machines/Laminator.png", NBT_INV_SIDE_IN, SBIT_L, NBT_INV_SIDE_AUTO_IN, SIDE_LEFT, NBT_INV_SIDE_OUT, SBIT_R, NBT_INV_SIDE_AUTO_OUT, SIDE_RIGHT, NBT_ENERGY_ACCEPTED_SIDES, SBIT_D), "SwS", "GMG", "SCS", 'M', OP.casingMachine.dat(aMat), 'G', OP.gearGtSmall.dat(aMat), 'S', OP.stick.dat(aMat), 'C', OP.plateDouble.dat(ANY.Cu));
		aMat = MT.DATA.Heat_T[2];       aRegistry.add("Laminator (" + aMat.getLocal() + ")"                 , "Basic Machines"                      , 20763, 20001, aClass, aMat.mToolQuality, 16, aMachine     , UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS, HARDNESS[2], NBT_RESISTANCE, HARDNESS[2], NBT_COLOR, UT.Code.getRGBInt(aMat.fRGBaSolid), NBT_INPUT, V[2], NBT_TEXTURE, "laminator", NBT_ENERGY_ACCEPTED, TD.Energy.HU, NBT_RECIPEMAP, RM.Laminator, NBT_GUI, RES_PATH_GUI + "machines/Laminator.png", NBT_INV_SIDE_IN, SBIT_L, NBT_INV_SIDE_AUTO_IN, SIDE_LEFT, NBT_INV_SIDE_OUT, SBIT_R, NBT_INV_SIDE_AUTO_OUT, SIDE_RIGHT, NBT_ENERGY_ACCEPTED_SIDES, SBIT_D), "SwS", "GMG", "SCS", 'M', OP.casingMachine.dat(aMat), 'G', OP.gearGtSmall.dat(aMat), 'S', OP.stick.dat(aMat), 'C', OP.plateDouble.dat(ANY.Cu));
		aMat = MT.DATA.Heat_T[3];       aRegistry.add("Laminator (" + aMat.getLocal() + ")"                 , "Basic Machines"                      , 20764, 20001, aClass, aMat.mToolQuality, 16, aMachine     , UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS, HARDNESS[3], NBT_RESISTANCE, HARDNESS[3], NBT_COLOR, UT.Code.getRGBInt(aMat.fRGBaSolid), NBT_INPUT, V[3], NBT_TEXTURE, "laminator", NBT_ENERGY_ACCEPTED, TD.Energy.HU, NBT_RECIPEMAP, RM.Laminator, NBT_GUI, RES_PATH_GUI + "machines/Laminator.png", NBT_INV_SIDE_IN, SBIT_L, NBT_INV_SIDE_AUTO_IN, SIDE_LEFT, NBT_INV_SIDE_OUT, SBIT_R, NBT_INV_SIDE_AUTO_OUT, SIDE_RIGHT, NBT_ENERGY_ACCEPTED_SIDES, SBIT_D), "SwS", "GMG", "SCS", 'M', OP.casingMachine.dat(aMat), 'G', OP.gearGtSmall.dat(aMat), 'S', OP.stick.dat(aMat), 'C', OP.plateDouble.dat(ANY.Cu));
		aMat = MT.DATA.Heat_T[4];       aRegistry.add("Laminator (" + aMat.getLocal() + ")"                 , "Basic Machines"                      , 20765, 20001, aClass, aMat.mToolQuality, 16, aMachine     , UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS, HARDNESS[4], NBT_RESISTANCE, HARDNESS[4], NBT_COLOR, UT.Code.getRGBInt(aMat.fRGBaSolid), NBT_INPUT, V[4], NBT_TEXTURE, "laminator", NBT_ENERGY_ACCEPTED, TD.Energy.HU, NBT_RECIPEMAP, RM.Laminator, NBT_GUI, RES_PATH_GUI + "machines/Laminator.png", NBT_INV_SIDE_IN, SBIT_L, NBT_INV_SIDE_AUTO_IN, SIDE_LEFT, NBT_INV_SIDE_OUT, SBIT_R, NBT_INV_SIDE_AUTO_OUT, SIDE_RIGHT, NBT_ENERGY_ACCEPTED_SIDES, SBIT_D), "SwS", "GMG", "SCS", 'M', OP.casingMachine.dat(aMat), 'G', OP.gearGtSmall.dat(aMat), 'S', OP.stick.dat(aMat), 'C', OP.plateDouble.dat(ANY.Cu));
		aMat = MT.DATA.Heat_T[5];       aRegistry.add("Laminator (" + aMat.getLocal() + ")"                 , "Basic Machines"                      , 20766, 20001, aClass, aMat.mToolQuality, 16, aMachine     , UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS, HARDNESS[5], NBT_RESISTANCE, HARDNESS[5], NBT_COLOR, UT.Code.getRGBInt(aMat.fRGBaSolid), NBT_INPUT, V[5], NBT_TEXTURE, "laminator", NBT_ENERGY_ACCEPTED, TD.Energy.HU, NBT_RECIPEMAP, RM.Laminator, NBT_GUI, RES_PATH_GUI + "machines/Laminator.png", NBT_INV_SIDE_IN, SBIT_L, NBT_INV_SIDE_AUTO_IN, SIDE_LEFT, NBT_INV_SIDE_OUT, SBIT_R, NBT_INV_SIDE_AUTO_OUT, SIDE_RIGHT, NBT_ENERGY_ACCEPTED_SIDES, SBIT_D), "SwS", "GMG", "SCS", 'M', OP.casingMachine.dat(aMat), 'G', OP.gearGtSmall.dat(aMat), 'S', OP.stick.dat(aMat), 'C', OP.plateDouble.dat(ANY.Cu));
		aMat = MT.DATA.Heat_T[6];       aRegistry.add("Laminator (" + aMat.getLocal() + ")"                 , "Basic Machines"                      , 20767, 20001, aClass, aMat.mToolQuality, 16, aMachine     , UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS, HARDNESS[6], NBT_RESISTANCE, HARDNESS[6], NBT_COLOR, UT.Code.getRGBInt(aMat.fRGBaSolid), NBT_INPUT, V[6], NBT_TEXTURE, "laminator", NBT_ENERGY_ACCEPTED, TD.Energy.HU, NBT_RECIPEMAP, RM.Laminator, NBT_GUI, RES_PATH_GUI + "machines/Laminator.png", NBT_INV_SIDE_IN, SBIT_L, NBT_INV_SIDE_AUTO_IN, SIDE_LEFT, NBT_INV_SIDE_OUT, SBIT_R, NBT_INV_SIDE_AUTO_OUT, SIDE_RIGHT, NBT_ENERGY_ACCEPTED_SIDES, SBIT_D), "SwS", "GMG", "SCS", 'M', OP.casingMachine.dat(aMat), 'G', OP.gearGtSmall.dat(aMat), 'S', OP.stick.dat(aMat), 'C', OP.plateDouble.dat(ANY.Cu));
		aMat = MT.DATA.Heat_T[7];       aRegistry.add("Laminator (" + aMat.getLocal() + ")"                 , "Basic Machines"                      , 20768, 20001, aClass, aMat.mToolQuality, 16, aMachine     , UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS, HARDNESS[7], NBT_RESISTANCE, HARDNESS[7], NBT_COLOR, UT.Code.getRGBInt(aMat.fRGBaSolid), NBT_INPUT, V[7], NBT_TEXTURE, "laminator", NBT_ENERGY_ACCEPTED, TD.Energy.HU, NBT_RECIPEMAP, RM.Laminator, NBT_GUI, RES_PATH_GUI + "machines/Laminator.png", NBT_INV_SIDE_IN, SBIT_L, NBT_INV_SIDE_AUTO_IN, SIDE_LEFT, NBT_INV_SIDE_OUT, SBIT_R, NBT_INV_SIDE_AUTO_OUT, SIDE_RIGHT, NBT_ENERGY_ACCEPTED_SIDES, SBIT_D), "SwS", "GMG", "SCS", 'M', OP.casingMachine.dat(aMat), 'G', OP.gearGtSmall.dat(aMat), 'S', OP.stick.dat(aMat), 'C', OP.plateDouble.dat(ANY.Cu));
		aMat = MT.DATA.Heat_T[8];       aRegistry.add("Laminator (" + aMat.getLocal() + ")"                 , "Basic Machines"                      , 20769, 20001, aClass, aMat.mToolQuality, 16, aMachine     , UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS, HARDNESS[8], NBT_RESISTANCE, HARDNESS[8], NBT_COLOR, UT.Code.getRGBInt(aMat.fRGBaSolid), NBT_INPUT, V[8], NBT_TEXTURE, "laminator", NBT_ENERGY_ACCEPTED, TD.Energy.HU, NBT_RECIPEMAP, RM.Laminator, NBT_GUI, RES_PATH_GUI + "machines/Laminator.png", NBT_INV_SIDE_IN, SBIT_L, NBT_INV_SIDE_AUTO_IN, SIDE_LEFT, NBT_INV_SIDE_OUT, SBIT_R, NBT_INV_SIDE_AUTO_OUT, SIDE_RIGHT, NBT_ENERGY_ACCEPTED_SIDES, SBIT_D), "SwS", "GMG", "SCS", 'M', OP.casingMachine.dat(aMat), 'G', OP.gearGtSmall.dat(aMat), 'S', OP.stick.dat(aMat), 'C', OP.plateDouble.dat(ANY.Cu));
		aMat = MT.DATA.Heat_T[9];       aRegistry.add("Laminator (" + aMat.getLocal() + ")"                 , "Basic Machines"                      , 20770, 20001, aClass, aMat.mToolQuality, 16, aMachine     , UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS, HARDNESS[9], NBT_RESISTANCE, HARDNESS[9], NBT_COLOR, UT.Code.getRGBInt(aMat.fRGBaSolid), NBT_INPUT, V[9], NBT_TEXTURE, "laminator", NBT_ENERGY_ACCEPTED, TD.Energy.HU, NBT_RECIPEMAP, RM.Laminator, NBT_GUI, RES_PATH_GUI + "machines/Laminator.png", NBT_INV_SIDE_IN, SBIT_L, NBT_INV_SIDE_AUTO_IN, SIDE_LEFT, NBT_INV_SIDE_OUT, SBIT_R, NBT_INV_SIDE_AUTO_OUT, SIDE_RIGHT, NBT_ENERGY_ACCEPTED_SIDES, SBIT_D), "SwS", "GMG", "SCS", 'M', OP.casingMachine.dat(aMat), 'G', OP.gearGtSmall.dat(aMat), 'S', OP.stick.dat(aMat), 'C', OP.plateDouble.dat(ANY.Cu));
		aMat = MT.DATA.Heat_T[10];       aRegistry.add("Laminator (" + aMat.getLocal() + ")"                 , "Basic Machines"                      , 20771, 20001, aClass, aMat.mToolQuality, 16, aMachine     , UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS, HARDNESS[10], NBT_RESISTANCE, HARDNESS[10], NBT_COLOR, UT.Code.getRGBInt(aMat.fRGBaSolid), NBT_INPUT, V[10], NBT_TEXTURE, "laminator", NBT_ENERGY_ACCEPTED, TD.Energy.HU, NBT_RECIPEMAP, RM.Laminator, NBT_GUI, RES_PATH_GUI + "machines/Laminator.png", NBT_INV_SIDE_IN, SBIT_L, NBT_INV_SIDE_AUTO_IN, SIDE_LEFT, NBT_INV_SIDE_OUT, SBIT_R, NBT_INV_SIDE_AUTO_OUT, SIDE_RIGHT, NBT_ENERGY_ACCEPTED_SIDES, SBIT_D), "SwS", "GMG", "SCS", 'M', OP.casingMachine.dat(aMat), 'G', OP.gearGtSmall.dat(aMat), 'S', OP.stick.dat(aMat), 'C', OP.plateDouble.dat(ANY.Cu));
		aMat = MT.DATA.Heat_T[11];       aRegistry.add("Laminator (" + aMat.getLocal() + ")"                 , "Basic Machines"                      , 20772, 20001, aClass, aMat.mToolQuality, 16, aMachine     , UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS, HARDNESS[11], NBT_RESISTANCE, HARDNESS[11], NBT_COLOR, UT.Code.getRGBInt(aMat.fRGBaSolid), NBT_INPUT, V[11], NBT_TEXTURE, "laminator", NBT_ENERGY_ACCEPTED, TD.Energy.HU, NBT_RECIPEMAP, RM.Laminator, NBT_GUI, RES_PATH_GUI + "machines/Laminator.png", NBT_INV_SIDE_IN, SBIT_L, NBT_INV_SIDE_AUTO_IN, SIDE_LEFT, NBT_INV_SIDE_OUT, SBIT_R, NBT_INV_SIDE_AUTO_OUT, SIDE_RIGHT, NBT_ENERGY_ACCEPTED_SIDES, SBIT_D), "SwS", "GMG", "SCS", 'M', OP.casingMachine.dat(aMat), 'G', OP.gearGtSmall.dat(aMat), 'S', OP.stick.dat(aMat), 'C', OP.plateDouble.dat(ANY.Cu));
		aMat = MT.DATA.Heat_T[12];       aRegistry.add("Laminator (" + aMat.getLocal() + ")"                 , "Basic Machines"                      , 20773, 20001, aClass, aMat.mToolQuality, 16, aMachine     , UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS, HARDNESS[12], NBT_RESISTANCE, HARDNESS[12], NBT_COLOR, UT.Code.getRGBInt(aMat.fRGBaSolid), NBT_INPUT, V[12], NBT_TEXTURE, "laminator", NBT_ENERGY_ACCEPTED, TD.Energy.HU, NBT_RECIPEMAP, RM.Laminator, NBT_GUI, RES_PATH_GUI + "machines/Laminator.png", NBT_INV_SIDE_IN, SBIT_L, NBT_INV_SIDE_AUTO_IN, SIDE_LEFT, NBT_INV_SIDE_OUT, SBIT_R, NBT_INV_SIDE_AUTO_OUT, SIDE_RIGHT, NBT_ENERGY_ACCEPTED_SIDES, SBIT_D), "SwS", "GMG", "SCS", 'M', OP.casingMachine.dat(aMat), 'G', OP.gearGtSmall.dat(aMat), 'S', OP.stick.dat(aMat), 'C', OP.plateDouble.dat(ANY.Cu));
		aMat = MT.DATA.Heat_T[13];       aRegistry.add("Laminator (" + aMat.getLocal() + ")"                 , "Basic Machines"                      , 20774, 20001, aClass, aMat.mToolQuality, 16, aMachine     , UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS, HARDNESS[13], NBT_RESISTANCE, HARDNESS[13], NBT_COLOR, UT.Code.getRGBInt(aMat.fRGBaSolid), NBT_INPUT, V[13], NBT_TEXTURE, "laminator", NBT_ENERGY_ACCEPTED, TD.Energy.HU, NBT_RECIPEMAP, RM.Laminator, NBT_GUI, RES_PATH_GUI + "machines/Laminator.png", NBT_INV_SIDE_IN, SBIT_L, NBT_INV_SIDE_AUTO_IN, SIDE_LEFT, NBT_INV_SIDE_OUT, SBIT_R, NBT_INV_SIDE_AUTO_OUT, SIDE_RIGHT, NBT_ENERGY_ACCEPTED_SIDES, SBIT_D), "SwS", "GMG", "SCS", 'M', OP.casingMachine.dat(aMat), 'G', OP.gearGtSmall.dat(aMat), 'S', OP.stick.dat(aMat), 'C', OP.plateDouble.dat(ANY.Cu));
		aMat = MT.DATA.Heat_T[14];       aRegistry.add("Laminator (" + aMat.getLocal() + ")"                 , "Basic Machines"                      , 20775, 20001, aClass, aMat.mToolQuality, 16, aMachine     , UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS, HARDNESS[14], NBT_RESISTANCE, HARDNESS[14], NBT_COLOR, UT.Code.getRGBInt(aMat.fRGBaSolid), NBT_INPUT, V[14], NBT_TEXTURE, "laminator", NBT_ENERGY_ACCEPTED, TD.Energy.HU, NBT_RECIPEMAP, RM.Laminator, NBT_GUI, RES_PATH_GUI + "machines/Laminator.png", NBT_INV_SIDE_IN, SBIT_L, NBT_INV_SIDE_AUTO_IN, SIDE_LEFT, NBT_INV_SIDE_OUT, SBIT_R, NBT_INV_SIDE_AUTO_OUT, SIDE_RIGHT, NBT_ENERGY_ACCEPTED_SIDES, SBIT_D), "SwS", "GMG", "SCS", 'M', OP.casingMachine.dat(aMat), 'G', OP.gearGtSmall.dat(aMat), 'S', OP.stick.dat(aMat), 'C', OP.plateDouble.dat(ANY.Cu));
		aMat = MT.DATA.Heat_T[15];       aRegistry.add("Laminator (" + aMat.getLocal() + ")"                 , "Basic Machines"                      , 20776, 20001, aClass, aMat.mToolQuality, 16, aMachine     , UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS, HARDNESS[15], NBT_RESISTANCE, HARDNESS[15], NBT_COLOR, UT.Code.getRGBInt(aMat.fRGBaSolid), NBT_INPUT, V[15], NBT_TEXTURE, "laminator", NBT_ENERGY_ACCEPTED, TD.Energy.HU, NBT_RECIPEMAP, RM.Laminator, NBT_GUI, RES_PATH_GUI + "machines/Laminator.png", NBT_INV_SIDE_IN, SBIT_L, NBT_INV_SIDE_AUTO_IN, SIDE_LEFT, NBT_INV_SIDE_OUT, SBIT_R, NBT_INV_SIDE_AUTO_OUT, SIDE_RIGHT, NBT_ENERGY_ACCEPTED_SIDES, SBIT_D), "SwS", "GMG", "SCS", 'M', OP.casingMachine.dat(aMat), 'G', OP.gearGtSmall.dat(aMat), 'S', OP.stick.dat(aMat), 'C', OP.plateDouble.dat(ANY.Cu));
	}

	private static void machines3(MultiTileEntityRegistry aRegistry, MultiTileEntityBlock aMetal, MultiTileEntityBlock aMetalChips, MultiTileEntityBlock aMetalWires, MultiTileEntityBlock aMachine, MultiTileEntityBlock aWooden, MultiTileEntityBlock aBush, MultiTileEntityBlock aStone, MultiTileEntityBlock aWool, MultiTileEntityBlock aTNT, MultiTileEntityBlock aHive, MultiTileEntityBlock aUtilMetal, MultiTileEntityBlock aUtilStone, MultiTileEntityBlock aUtilWood, MultiTileEntityBlock aUtilWool, OreDictMaterial aMat, Class<? extends TileEntity> aClass) {
		// TODO: Amplifab

		aClass = MultiTileEntityBasicMachine.class;
		aMat = MT.Osmiridium;           aRegistry.add("Matter Fabricator (T0)"                              , "Basic Machines"                      , 20781, 20001, aClass, aMat.mToolQuality, 16, aMachine     , UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS,  16.0F, NBT_RESISTANCE,  16.0F, NBT_COLOR, UT.Code.getRGBInt(aMat.fRGBaSolid), NBT_INPUT, V[0], NBT_TEXTURE, "massfab", NBT_ENERGY_ACCEPTED, TD.Energy.QU, NBT_RECIPEMAP, RM.Massfab, NBT_CHEAP_OVERCLOCKING, T, NBT_NO_CONSTANT_POWER, T, NBT_EFFICIENCY,  3750, NBT_INV_SIDE_IN, SBIT_L|SBIT_U, NBT_INV_SIDE_AUTO_IN, SIDE_LEFT, NBT_INV_SIDE_OUT, SBIT_D|SBIT_R, NBT_INV_SIDE_AUTO_OUT, SIDE_RIGHT, NBT_TANK_SIDE_IN, SBIT_L|SBIT_U, NBT_TANK_SIDE_AUTO_IN, SIDE_TOP, NBT_TANK_SIDE_OUT, SBIT_D|SBIT_R, NBT_TANK_SIDE_AUTO_OUT, SIDE_BOTTOM, NBT_ENERGY_ACCEPTED_SIDES, SBIT_B), "RFS", "FMF", "RFS", 'M', OP.casingMachine.dat(aMat), 'R', IL.Processor_Crystal_Ruby, 'S', IL.Processor_Crystal_Sapphire, 'F', IL.FIELD_GENERATORS[0]);
		aMat = MT.Osmiridium;           aRegistry.add("Matter Fabricator (T1)"                              , "Basic Machines"                      , 20782, 20001, aClass, aMat.mToolQuality, 16, aMachine     , UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS,  16.0F, NBT_RESISTANCE,  16.0F, NBT_COLOR, UT.Code.getRGBInt(aMat.fRGBaSolid), NBT_INPUT, V[1], NBT_TEXTURE, "massfab", NBT_ENERGY_ACCEPTED, TD.Energy.QU, NBT_RECIPEMAP, RM.Massfab, NBT_CHEAP_OVERCLOCKING, T, NBT_NO_CONSTANT_POWER, T, NBT_EFFICIENCY,  5000, NBT_INV_SIDE_IN, SBIT_L|SBIT_U, NBT_INV_SIDE_AUTO_IN, SIDE_LEFT, NBT_INV_SIDE_OUT, SBIT_D|SBIT_R, NBT_INV_SIDE_AUTO_OUT, SIDE_RIGHT, NBT_TANK_SIDE_IN, SBIT_L|SBIT_U, NBT_TANK_SIDE_AUTO_IN, SIDE_TOP, NBT_TANK_SIDE_OUT, SBIT_D|SBIT_R, NBT_TANK_SIDE_AUTO_OUT, SIDE_BOTTOM, NBT_ENERGY_ACCEPTED_SIDES, SBIT_B), "RFS", "FMF", "RFS", 'M', OP.casingMachine.dat(aMat), 'R', IL.Processor_Crystal_Ruby, 'S', IL.Processor_Crystal_Sapphire, 'F', IL.FIELD_GENERATORS[1]);
		aMat = MT.Osmiridium;           aRegistry.add("Matter Fabricator (T2)"                              , "Basic Machines"                      , 20783, 20001, aClass, aMat.mToolQuality, 16, aMachine     , UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS,  16.0F, NBT_RESISTANCE,  16.0F, NBT_COLOR, UT.Code.getRGBInt(aMat.fRGBaSolid), NBT_INPUT, V[2], NBT_TEXTURE, "massfab", NBT_ENERGY_ACCEPTED, TD.Energy.QU, NBT_RECIPEMAP, RM.Massfab, NBT_CHEAP_OVERCLOCKING, T, NBT_NO_CONSTANT_POWER, T, NBT_EFFICIENCY,  6250, NBT_INV_SIDE_IN, SBIT_L|SBIT_U, NBT_INV_SIDE_AUTO_IN, SIDE_LEFT, NBT_INV_SIDE_OUT, SBIT_D|SBIT_R, NBT_INV_SIDE_AUTO_OUT, SIDE_RIGHT, NBT_TANK_SIDE_IN, SBIT_L|SBIT_U, NBT_TANK_SIDE_AUTO_IN, SIDE_TOP, NBT_TANK_SIDE_OUT, SBIT_D|SBIT_R, NBT_TANK_SIDE_AUTO_OUT, SIDE_BOTTOM, NBT_ENERGY_ACCEPTED_SIDES, SBIT_B), "RFS", "FMF", "RFS", 'M', OP.casingMachine.dat(aMat), 'R', IL.Processor_Crystal_Ruby, 'S', IL.Processor_Crystal_Sapphire, 'F', IL.FIELD_GENERATORS[2]);
		aMat = MT.Osmiridium;           aRegistry.add("Matter Fabricator (T3)"                              , "Basic Machines"                      , 20784, 20001, aClass, aMat.mToolQuality, 16, aMachine     , UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS,  16.0F, NBT_RESISTANCE,  16.0F, NBT_COLOR, UT.Code.getRGBInt(aMat.fRGBaSolid), NBT_INPUT, V[3], NBT_TEXTURE, "massfab", NBT_ENERGY_ACCEPTED, TD.Energy.QU, NBT_RECIPEMAP, RM.Massfab, NBT_CHEAP_OVERCLOCKING, T, NBT_NO_CONSTANT_POWER, T, NBT_EFFICIENCY,  7500, NBT_INV_SIDE_IN, SBIT_L|SBIT_U, NBT_INV_SIDE_AUTO_IN, SIDE_LEFT, NBT_INV_SIDE_OUT, SBIT_D|SBIT_R, NBT_INV_SIDE_AUTO_OUT, SIDE_RIGHT, NBT_TANK_SIDE_IN, SBIT_L|SBIT_U, NBT_TANK_SIDE_AUTO_IN, SIDE_TOP, NBT_TANK_SIDE_OUT, SBIT_D|SBIT_R, NBT_TANK_SIDE_AUTO_OUT, SIDE_BOTTOM, NBT_ENERGY_ACCEPTED_SIDES, SBIT_B), "RFS", "FMF", "RFS", 'M', OP.casingMachine.dat(aMat), 'R', IL.Processor_Crystal_Ruby, 'S', IL.Processor_Crystal_Sapphire, 'F', IL.FIELD_GENERATORS[3]);
		aMat = MT.Osmiridium;           aRegistry.add("Matter Fabricator (T4)"                              , "Basic Machines"                      , 20785, 20001, aClass, aMat.mToolQuality, 16, aMachine     , UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS,  16.0F, NBT_RESISTANCE,  16.0F, NBT_COLOR, UT.Code.getRGBInt(aMat.fRGBaSolid), NBT_INPUT, V[4], NBT_TEXTURE, "massfab", NBT_ENERGY_ACCEPTED, TD.Energy.QU, NBT_RECIPEMAP, RM.Massfab, NBT_CHEAP_OVERCLOCKING, T, NBT_NO_CONSTANT_POWER, T, NBT_EFFICIENCY,  8750, NBT_INV_SIDE_IN, SBIT_L|SBIT_U, NBT_INV_SIDE_AUTO_IN, SIDE_LEFT, NBT_INV_SIDE_OUT, SBIT_D|SBIT_R, NBT_INV_SIDE_AUTO_OUT, SIDE_RIGHT, NBT_TANK_SIDE_IN, SBIT_L|SBIT_U, NBT_TANK_SIDE_AUTO_IN, SIDE_TOP, NBT_TANK_SIDE_OUT, SBIT_D|SBIT_R, NBT_TANK_SIDE_AUTO_OUT, SIDE_BOTTOM, NBT_ENERGY_ACCEPTED_SIDES, SBIT_B), "RFS", "FMF", "RFS", 'M', OP.casingMachine.dat(aMat), 'R', IL.Processor_Crystal_Ruby, 'S', IL.Processor_Crystal_Sapphire, 'F', IL.FIELD_GENERATORS[4]);
		aMat = MT.Osmiridium;           aRegistry.add("Matter Fabricator (T5)"                              , "Basic Machines"                      , 20786, 20001, aClass, aMat.mToolQuality, 16, aMachine     , UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS,  16.0F, NBT_RESISTANCE,  16.0F, NBT_COLOR, UT.Code.getRGBInt(aMat.fRGBaSolid), NBT_INPUT, V[5], NBT_TEXTURE, "massfab", NBT_ENERGY_ACCEPTED, TD.Energy.QU, NBT_RECIPEMAP, RM.Massfab, NBT_CHEAP_OVERCLOCKING, T, NBT_NO_CONSTANT_POWER, T, NBT_EFFICIENCY, 10000, NBT_INV_SIDE_IN, SBIT_L|SBIT_U, NBT_INV_SIDE_AUTO_IN, SIDE_LEFT, NBT_INV_SIDE_OUT, SBIT_D|SBIT_R, NBT_INV_SIDE_AUTO_OUT, SIDE_RIGHT, NBT_TANK_SIDE_IN, SBIT_L|SBIT_U, NBT_TANK_SIDE_AUTO_IN, SIDE_TOP, NBT_TANK_SIDE_OUT, SBIT_D|SBIT_R, NBT_TANK_SIDE_AUTO_OUT, SIDE_BOTTOM, NBT_ENERGY_ACCEPTED_SIDES, SBIT_B), "RFS", "FMF", "RFS", 'M', OP.casingMachine.dat(aMat), 'R', IL.Processor_Crystal_Ruby, 'S', IL.Processor_Crystal_Sapphire, 'F', IL.FIELD_GENERATORS[5]);
		aMat = MT.Osmiridium;           aRegistry.add("Matter Fabricator (T6)"                              , "Basic Machines"                      , 20787, 20001, aClass, aMat.mToolQuality, 16, aMachine     , UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS,  16.0F, NBT_RESISTANCE,  16.0F, NBT_COLOR, UT.Code.getRGBInt(aMat.fRGBaSolid), NBT_INPUT, V[6], NBT_TEXTURE, "massfab", NBT_ENERGY_ACCEPTED, TD.Energy.QU, NBT_RECIPEMAP, RM.Massfab, NBT_CHEAP_OVERCLOCKING, T, NBT_NO_CONSTANT_POWER, T, NBT_EFFICIENCY, 11250, NBT_INV_SIDE_IN, SBIT_L|SBIT_U, NBT_INV_SIDE_AUTO_IN, SIDE_LEFT, NBT_INV_SIDE_OUT, SBIT_D|SBIT_R, NBT_INV_SIDE_AUTO_OUT, SIDE_RIGHT, NBT_TANK_SIDE_IN, SBIT_L|SBIT_U, NBT_TANK_SIDE_AUTO_IN, SIDE_TOP, NBT_TANK_SIDE_OUT, SBIT_D|SBIT_R, NBT_TANK_SIDE_AUTO_OUT, SIDE_BOTTOM, NBT_ENERGY_ACCEPTED_SIDES, SBIT_B), "RFS", "FMF", "RFS", 'M', OP.casingMachine.dat(aMat), 'R', IL.Processor_Crystal_Ruby, 'S', IL.Processor_Crystal_Sapphire, 'F', IL.FIELD_GENERATORS[6]);
		aMat = MT.Osmiridium;           aRegistry.add("Matter Fabricator (T7)"                              , "Basic Machines"                      , 20788, 20001, aClass, aMat.mToolQuality, 16, aMachine     , UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS,  16.0F, NBT_RESISTANCE,  16.0F, NBT_COLOR, UT.Code.getRGBInt(aMat.fRGBaSolid), NBT_INPUT, V[7], NBT_TEXTURE, "massfab", NBT_ENERGY_ACCEPTED, TD.Energy.QU, NBT_RECIPEMAP, RM.Massfab, NBT_CHEAP_OVERCLOCKING, T, NBT_NO_CONSTANT_POWER, T, NBT_EFFICIENCY, 12500, NBT_INV_SIDE_IN, SBIT_L|SBIT_U, NBT_INV_SIDE_AUTO_IN, SIDE_LEFT, NBT_INV_SIDE_OUT, SBIT_D|SBIT_R, NBT_INV_SIDE_AUTO_OUT, SIDE_RIGHT, NBT_TANK_SIDE_IN, SBIT_L|SBIT_U, NBT_TANK_SIDE_AUTO_IN, SIDE_TOP, NBT_TANK_SIDE_OUT, SBIT_D|SBIT_R, NBT_TANK_SIDE_AUTO_OUT, SIDE_BOTTOM, NBT_ENERGY_ACCEPTED_SIDES, SBIT_B), "RFS", "FMF", "RFS", 'M', OP.casingMachine.dat(aMat), 'R', IL.Processor_Crystal_Ruby, 'S', IL.Processor_Crystal_Sapphire, 'F', IL.FIELD_GENERATORS[7]);
		aMat = MT.Osmiridium;           aRegistry.add("Matter Fabricator (T8)"                              , "Basic Machines"                      , 20789, 20001, aClass, aMat.mToolQuality, 16, aMachine     , UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS,  16.0F, NBT_RESISTANCE,  16.0F, NBT_COLOR, UT.Code.getRGBInt(aMat.fRGBaSolid), NBT_INPUT, V[8], NBT_TEXTURE, "massfab", NBT_ENERGY_ACCEPTED, TD.Energy.QU, NBT_RECIPEMAP, RM.Massfab, NBT_CHEAP_OVERCLOCKING, T, NBT_NO_CONSTANT_POWER, T, NBT_EFFICIENCY, 13750, NBT_INV_SIDE_IN, SBIT_L|SBIT_U, NBT_INV_SIDE_AUTO_IN, SIDE_LEFT, NBT_INV_SIDE_OUT, SBIT_D|SBIT_R, NBT_INV_SIDE_AUTO_OUT, SIDE_RIGHT, NBT_TANK_SIDE_IN, SBIT_L|SBIT_U, NBT_TANK_SIDE_AUTO_IN, SIDE_TOP, NBT_TANK_SIDE_OUT, SBIT_D|SBIT_R, NBT_TANK_SIDE_AUTO_OUT, SIDE_BOTTOM, NBT_ENERGY_ACCEPTED_SIDES, SBIT_B), "RFS", "FMF", "RFS", 'M', OP.casingMachine.dat(aMat), 'R', IL.Processor_Crystal_Ruby, 'S', IL.Processor_Crystal_Sapphire, 'F', IL.FIELD_GENERATORS[8]);
		aMat = MT.Osmiridium;           aRegistry.add("Matter Fabricator (T9)"                              , "Basic Machines"                      , 20790, 20001, aClass, aMat.mToolQuality, 16, aMachine     , UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS,  16.0F, NBT_RESISTANCE,  16.0F, NBT_COLOR, UT.Code.getRGBInt(aMat.fRGBaSolid), NBT_INPUT, V[9], NBT_TEXTURE, "massfab", NBT_ENERGY_ACCEPTED, TD.Energy.QU, NBT_RECIPEMAP, RM.Massfab, NBT_CHEAP_OVERCLOCKING, T, NBT_NO_CONSTANT_POWER, T, NBT_EFFICIENCY, 15000, NBT_INV_SIDE_IN, SBIT_L|SBIT_U, NBT_INV_SIDE_AUTO_IN, SIDE_LEFT, NBT_INV_SIDE_OUT, SBIT_D|SBIT_R, NBT_INV_SIDE_AUTO_OUT, SIDE_RIGHT, NBT_TANK_SIDE_IN, SBIT_L|SBIT_U, NBT_TANK_SIDE_AUTO_IN, SIDE_TOP, NBT_TANK_SIDE_OUT, SBIT_D|SBIT_R, NBT_TANK_SIDE_AUTO_OUT, SIDE_BOTTOM, NBT_ENERGY_ACCEPTED_SIDES, SBIT_B), "RFS", "FMF", "RFS", 'M', OP.casingMachine.dat(aMat), 'R', IL.Processor_Crystal_Ruby, 'S', IL.Processor_Crystal_Sapphire, 'F', IL.FIELD_GENERATORS[9]);
		aMat = MT.Osmiridium;           aRegistry.add("Matter Fabricator (T10)"                              , "Basic Machines"                      , 20791, 20001, aClass, aMat.mToolQuality, 16, aMachine     , UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS,  16.0F, NBT_RESISTANCE,  16.0F, NBT_COLOR, UT.Code.getRGBInt(aMat.fRGBaSolid), NBT_INPUT, V[10], NBT_TEXTURE, "massfab", NBT_ENERGY_ACCEPTED, TD.Energy.QU, NBT_RECIPEMAP, RM.Massfab, NBT_CHEAP_OVERCLOCKING, T, NBT_NO_CONSTANT_POWER, T, NBT_EFFICIENCY, 16250, NBT_INV_SIDE_IN, SBIT_L|SBIT_U, NBT_INV_SIDE_AUTO_IN, SIDE_LEFT, NBT_INV_SIDE_OUT, SBIT_D|SBIT_R, NBT_INV_SIDE_AUTO_OUT, SIDE_RIGHT, NBT_TANK_SIDE_IN, SBIT_L|SBIT_U, NBT_TANK_SIDE_AUTO_IN, SIDE_TOP, NBT_TANK_SIDE_OUT, SBIT_D|SBIT_R, NBT_TANK_SIDE_AUTO_OUT, SIDE_BOTTOM, NBT_ENERGY_ACCEPTED_SIDES, SBIT_B), "RFS", "FMF", "RFS", 'M', OP.casingMachine.dat(aMat), 'R', IL.Processor_Crystal_Ruby, 'S', IL.Processor_Crystal_Sapphire, 'F', IL.FIELD_GENERATORS[10]);
		aMat = MT.Osmiridium;           aRegistry.add("Matter Fabricator (T11)"                              , "Basic Machines"                      , 20792, 20001, aClass, aMat.mToolQuality, 16, aMachine     , UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS,  16.0F, NBT_RESISTANCE,  16.0F, NBT_COLOR, UT.Code.getRGBInt(aMat.fRGBaSolid), NBT_INPUT, V[11], NBT_TEXTURE, "massfab", NBT_ENERGY_ACCEPTED, TD.Energy.QU, NBT_RECIPEMAP, RM.Massfab, NBT_CHEAP_OVERCLOCKING, T, NBT_NO_CONSTANT_POWER, T, NBT_EFFICIENCY, 17500, NBT_INV_SIDE_IN, SBIT_L|SBIT_U, NBT_INV_SIDE_AUTO_IN, SIDE_LEFT, NBT_INV_SIDE_OUT, SBIT_D|SBIT_R, NBT_INV_SIDE_AUTO_OUT, SIDE_RIGHT, NBT_TANK_SIDE_IN, SBIT_L|SBIT_U, NBT_TANK_SIDE_AUTO_IN, SIDE_TOP, NBT_TANK_SIDE_OUT, SBIT_D|SBIT_R, NBT_TANK_SIDE_AUTO_OUT, SIDE_BOTTOM, NBT_ENERGY_ACCEPTED_SIDES, SBIT_B), "RFS", "FMF", "RFS", 'M', OP.casingMachine.dat(aMat), 'R', IL.Processor_Crystal_Ruby, 'S', IL.Processor_Crystal_Sapphire, 'F', IL.FIELD_GENERATORS[11]);
		aMat = MT.Osmiridium;           aRegistry.add("Matter Fabricator (T12)"                              , "Basic Machines"                      , 20793, 20001, aClass, aMat.mToolQuality, 16, aMachine     , UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS,  16.0F, NBT_RESISTANCE,  16.0F, NBT_COLOR, UT.Code.getRGBInt(aMat.fRGBaSolid), NBT_INPUT, V[12], NBT_TEXTURE, "massfab", NBT_ENERGY_ACCEPTED, TD.Energy.QU, NBT_RECIPEMAP, RM.Massfab, NBT_CHEAP_OVERCLOCKING, T, NBT_NO_CONSTANT_POWER, T, NBT_EFFICIENCY, 18750, NBT_INV_SIDE_IN, SBIT_L|SBIT_U, NBT_INV_SIDE_AUTO_IN, SIDE_LEFT, NBT_INV_SIDE_OUT, SBIT_D|SBIT_R, NBT_INV_SIDE_AUTO_OUT, SIDE_RIGHT, NBT_TANK_SIDE_IN, SBIT_L|SBIT_U, NBT_TANK_SIDE_AUTO_IN, SIDE_TOP, NBT_TANK_SIDE_OUT, SBIT_D|SBIT_R, NBT_TANK_SIDE_AUTO_OUT, SIDE_BOTTOM, NBT_ENERGY_ACCEPTED_SIDES, SBIT_B), "RFS", "FMF", "RFS", 'M', OP.casingMachine.dat(aMat), 'R', IL.Processor_Crystal_Ruby, 'S', IL.Processor_Crystal_Sapphire, 'F', IL.FIELD_GENERATORS[12]);
		aMat = MT.Osmiridium;           aRegistry.add("Matter Fabricator (T13)"                              , "Basic Machines"                      , 20794, 20001, aClass, aMat.mToolQuality, 16, aMachine     , UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS,  16.0F, NBT_RESISTANCE,  16.0F, NBT_COLOR, UT.Code.getRGBInt(aMat.fRGBaSolid), NBT_INPUT, V[13], NBT_TEXTURE, "massfab", NBT_ENERGY_ACCEPTED, TD.Energy.QU, NBT_RECIPEMAP, RM.Massfab, NBT_CHEAP_OVERCLOCKING, T, NBT_NO_CONSTANT_POWER, T, NBT_EFFICIENCY, 20000, NBT_INV_SIDE_IN, SBIT_L|SBIT_U, NBT_INV_SIDE_AUTO_IN, SIDE_LEFT, NBT_INV_SIDE_OUT, SBIT_D|SBIT_R, NBT_INV_SIDE_AUTO_OUT, SIDE_RIGHT, NBT_TANK_SIDE_IN, SBIT_L|SBIT_U, NBT_TANK_SIDE_AUTO_IN, SIDE_TOP, NBT_TANK_SIDE_OUT, SBIT_D|SBIT_R, NBT_TANK_SIDE_AUTO_OUT, SIDE_BOTTOM, NBT_ENERGY_ACCEPTED_SIDES, SBIT_B), "RFS", "FMF", "RFS", 'M', OP.casingMachine.dat(aMat), 'R', IL.Processor_Crystal_Ruby, 'S', IL.Processor_Crystal_Sapphire, 'F', IL.FIELD_GENERATORS[13]);
		aMat = MT.Osmiridium;           aRegistry.add("Matter Fabricator (T14)"                              , "Basic Machines"                      , 20795, 20001, aClass, aMat.mToolQuality, 16, aMachine     , UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS,  16.0F, NBT_RESISTANCE,  16.0F, NBT_COLOR, UT.Code.getRGBInt(aMat.fRGBaSolid), NBT_INPUT, V[14], NBT_TEXTURE, "massfab", NBT_ENERGY_ACCEPTED, TD.Energy.QU, NBT_RECIPEMAP, RM.Massfab, NBT_CHEAP_OVERCLOCKING, T, NBT_NO_CONSTANT_POWER, T, NBT_EFFICIENCY, 21250, NBT_INV_SIDE_IN, SBIT_L|SBIT_U, NBT_INV_SIDE_AUTO_IN, SIDE_LEFT, NBT_INV_SIDE_OUT, SBIT_D|SBIT_R, NBT_INV_SIDE_AUTO_OUT, SIDE_RIGHT, NBT_TANK_SIDE_IN, SBIT_L|SBIT_U, NBT_TANK_SIDE_AUTO_IN, SIDE_TOP, NBT_TANK_SIDE_OUT, SBIT_D|SBIT_R, NBT_TANK_SIDE_AUTO_OUT, SIDE_BOTTOM, NBT_ENERGY_ACCEPTED_SIDES, SBIT_B), "RFS", "FMF", "RFS", 'M', OP.casingMachine.dat(aMat), 'R', IL.Processor_Crystal_Ruby, 'S', IL.Processor_Crystal_Sapphire, 'F', IL.FIELD_GENERATORS[14]);
		aMat = MT.Osmiridium;           aRegistry.add("Matter Fabricator (T15)"                              , "Basic Machines"                      , 20796, 20001, aClass, aMat.mToolQuality, 16, aMachine     , UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS,  16.0F, NBT_RESISTANCE,  16.0F, NBT_COLOR, UT.Code.getRGBInt(aMat.fRGBaSolid), NBT_INPUT, V[15], NBT_TEXTURE, "massfab", NBT_ENERGY_ACCEPTED, TD.Energy.QU, NBT_RECIPEMAP, RM.Massfab, NBT_CHEAP_OVERCLOCKING, T, NBT_NO_CONSTANT_POWER, T, NBT_EFFICIENCY, 22500, NBT_INV_SIDE_IN, SBIT_L|SBIT_U, NBT_INV_SIDE_AUTO_IN, SIDE_LEFT, NBT_INV_SIDE_OUT, SBIT_D|SBIT_R, NBT_INV_SIDE_AUTO_OUT, SIDE_RIGHT, NBT_TANK_SIDE_IN, SBIT_L|SBIT_U, NBT_TANK_SIDE_AUTO_IN, SIDE_TOP, NBT_TANK_SIDE_OUT, SBIT_D|SBIT_R, NBT_TANK_SIDE_AUTO_OUT, SIDE_BOTTOM, NBT_ENERGY_ACCEPTED_SIDES, SBIT_B), "RFS", "FMF", "RFS", 'M', OP.casingMachine.dat(aMat), 'R', IL.Processor_Crystal_Ruby, 'S', IL.Processor_Crystal_Sapphire, 'F', IL.FIELD_GENERATORS[15]);

		aClass = MultiTileEntityBasicMachine.class;
		aMat = MT.Osmiridium;           aRegistry.add("Molecular Scanner (T0)"                              , "Basic Machines"                      , 20801, 20001, aClass, aMat.mToolQuality, 16, aMachine     , UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS,  16.0F, NBT_RESISTANCE,  16.0F, NBT_COLOR, UT.Code.getRGBInt(aMat.fRGBaSolid), NBT_INPUT,  V[0], NBT_TEXTURE, "scannermolecular", NBT_ENERGY_ACCEPTED, TD.Energy.QU, NBT_RECIPEMAP, RM.ScannerMolecular, NBT_EFFICIENCY, 10000, NBT_INV_SIDE_IN, SBIT_L|SBIT_U, NBT_INV_SIDE_AUTO_IN, SIDE_LEFT, NBT_INV_SIDE_OUT, SBIT_D|SBIT_R, NBT_INV_SIDE_AUTO_OUT, SIDE_RIGHT/*, NBT_TANK_SIDE_INPUT, SIDE_BITS[SIDE_LEFT]|SIDE_BITS[SIDE_TOP], NBT_TANK_SIDE_AUTO_INPUT, SIDE_LEFT, NBT_TANK_SIDE_OUTPUT, SIDE_BITS[SIDE_BOTTOM]|SIDE_BITS[SIDE_RIGHT], NBT_TANK_SIDE_AUTO_OUTPUT, SIDE_RIGHT*/, NBT_ENERGY_ACCEPTED_SIDES, SBIT_B), "DXE", "FMF", "RYS", 'M', OP.casingMachine.dat(aMat), 'D', IL.Processor_Crystal_Diamond, 'E', IL.Processor_Crystal_Emerald, 'R', IL.Processor_Crystal_Ruby, 'S', IL.Processor_Crystal_Sapphire, 'F', IL.FIELD_GENERATORS[0], 'X', IL.EMITTERS[0], 'Y', IL.SENSORS[0]);
		aMat = MT.Osmiridium;           aRegistry.add("Molecular Scanner (T1)"                              , "Basic Machines"                      , 20802, 20001, aClass, aMat.mToolQuality, 16, aMachine     , UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS,  16.0F, NBT_RESISTANCE,  16.0F, NBT_COLOR, UT.Code.getRGBInt(aMat.fRGBaSolid), NBT_INPUT,  V[1], NBT_TEXTURE, "scannermolecular", NBT_ENERGY_ACCEPTED, TD.Energy.QU, NBT_RECIPEMAP, RM.ScannerMolecular, NBT_EFFICIENCY, 10000, NBT_INV_SIDE_IN, SBIT_L|SBIT_U, NBT_INV_SIDE_AUTO_IN, SIDE_LEFT, NBT_INV_SIDE_OUT, SBIT_D|SBIT_R, NBT_INV_SIDE_AUTO_OUT, SIDE_RIGHT/*, NBT_TANK_SIDE_INPUT, SIDE_BITS[SIDE_LEFT]|SIDE_BITS[SIDE_TOP], NBT_TANK_SIDE_AUTO_INPUT, SIDE_LEFT, NBT_TANK_SIDE_OUTPUT, SIDE_BITS[SIDE_BOTTOM]|SIDE_BITS[SIDE_RIGHT], NBT_TANK_SIDE_AUTO_OUTPUT, SIDE_RIGHT*/, NBT_ENERGY_ACCEPTED_SIDES, SBIT_B), "DXE", "FMF", "RYS", 'M', OP.casingMachine.dat(aMat), 'D', IL.Processor_Crystal_Diamond, 'E', IL.Processor_Crystal_Emerald, 'R', IL.Processor_Crystal_Ruby, 'S', IL.Processor_Crystal_Sapphire, 'F', IL.FIELD_GENERATORS[1], 'X', IL.EMITTERS[1], 'Y', IL.SENSORS[1]);
		aMat = MT.Osmiridium;           aRegistry.add("Molecular Scanner (T2)"                              , "Basic Machines"                      , 20803, 20001, aClass, aMat.mToolQuality, 16, aMachine     , UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS,  16.0F, NBT_RESISTANCE,  16.0F, NBT_COLOR, UT.Code.getRGBInt(aMat.fRGBaSolid), NBT_INPUT,  V[2], NBT_TEXTURE, "scannermolecular", NBT_ENERGY_ACCEPTED, TD.Energy.QU, NBT_RECIPEMAP, RM.ScannerMolecular, NBT_EFFICIENCY, 10000, NBT_INV_SIDE_IN, SBIT_L|SBIT_U, NBT_INV_SIDE_AUTO_IN, SIDE_LEFT, NBT_INV_SIDE_OUT, SBIT_D|SBIT_R, NBT_INV_SIDE_AUTO_OUT, SIDE_RIGHT/*, NBT_TANK_SIDE_INPUT, SIDE_BITS[SIDE_LEFT]|SIDE_BITS[SIDE_TOP], NBT_TANK_SIDE_AUTO_INPUT, SIDE_LEFT, NBT_TANK_SIDE_OUTPUT, SIDE_BITS[SIDE_BOTTOM]|SIDE_BITS[SIDE_RIGHT], NBT_TANK_SIDE_AUTO_OUTPUT, SIDE_RIGHT*/, NBT_ENERGY_ACCEPTED_SIDES, SBIT_B), "DXE", "FMF", "RYS", 'M', OP.casingMachine.dat(aMat), 'D', IL.Processor_Crystal_Diamond, 'E', IL.Processor_Crystal_Emerald, 'R', IL.Processor_Crystal_Ruby, 'S', IL.Processor_Crystal_Sapphire, 'F', IL.FIELD_GENERATORS[2], 'X', IL.EMITTERS[2], 'Y', IL.SENSORS[2]);
		aMat = MT.Osmiridium;           aRegistry.add("Molecular Scanner (T3)"                              , "Basic Machines"                      , 20804, 20001, aClass, aMat.mToolQuality, 16, aMachine     , UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS,  16.0F, NBT_RESISTANCE,  16.0F, NBT_COLOR, UT.Code.getRGBInt(aMat.fRGBaSolid), NBT_INPUT,  V[3], NBT_TEXTURE, "scannermolecular", NBT_ENERGY_ACCEPTED, TD.Energy.QU, NBT_RECIPEMAP, RM.ScannerMolecular, NBT_EFFICIENCY, 10000, NBT_INV_SIDE_IN, SBIT_L|SBIT_U, NBT_INV_SIDE_AUTO_IN, SIDE_LEFT, NBT_INV_SIDE_OUT, SBIT_D|SBIT_R, NBT_INV_SIDE_AUTO_OUT, SIDE_RIGHT/*, NBT_TANK_SIDE_INPUT, SIDE_BITS[SIDE_LEFT]|SIDE_BITS[SIDE_TOP], NBT_TANK_SIDE_AUTO_INPUT, SIDE_LEFT, NBT_TANK_SIDE_OUTPUT, SIDE_BITS[SIDE_BOTTOM]|SIDE_BITS[SIDE_RIGHT], NBT_TANK_SIDE_AUTO_OUTPUT, SIDE_RIGHT*/, NBT_ENERGY_ACCEPTED_SIDES, SBIT_B), "DXE", "FMF", "RYS", 'M', OP.casingMachine.dat(aMat), 'D', IL.Processor_Crystal_Diamond, 'E', IL.Processor_Crystal_Emerald, 'R', IL.Processor_Crystal_Ruby, 'S', IL.Processor_Crystal_Sapphire, 'F', IL.FIELD_GENERATORS[3], 'X', IL.EMITTERS[3], 'Y', IL.SENSORS[3]);
		aMat = MT.Osmiridium;           aRegistry.add("Molecular Scanner (T4)"                              , "Basic Machines"                      , 20805, 20001, aClass, aMat.mToolQuality, 16, aMachine     , UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS,  16.0F, NBT_RESISTANCE,  16.0F, NBT_COLOR, UT.Code.getRGBInt(aMat.fRGBaSolid), NBT_INPUT,  V[4], NBT_TEXTURE, "scannermolecular", NBT_ENERGY_ACCEPTED, TD.Energy.QU, NBT_RECIPEMAP, RM.ScannerMolecular, NBT_EFFICIENCY, 10000, NBT_INV_SIDE_IN, SBIT_L|SBIT_U, NBT_INV_SIDE_AUTO_IN, SIDE_LEFT, NBT_INV_SIDE_OUT, SBIT_D|SBIT_R, NBT_INV_SIDE_AUTO_OUT, SIDE_RIGHT/*, NBT_TANK_SIDE_INPUT, SIDE_BITS[SIDE_LEFT]|SIDE_BITS[SIDE_TOP], NBT_TANK_SIDE_AUTO_INPUT, SIDE_LEFT, NBT_TANK_SIDE_OUTPUT, SIDE_BITS[SIDE_BOTTOM]|SIDE_BITS[SIDE_RIGHT], NBT_TANK_SIDE_AUTO_OUTPUT, SIDE_RIGHT*/, NBT_ENERGY_ACCEPTED_SIDES, SBIT_B), "DXE", "FMF", "RYS", 'M', OP.casingMachine.dat(aMat), 'D', IL.Processor_Crystal_Diamond, 'E', IL.Processor_Crystal_Emerald, 'R', IL.Processor_Crystal_Ruby, 'S', IL.Processor_Crystal_Sapphire, 'F', IL.FIELD_GENERATORS[4], 'X', IL.EMITTERS[4], 'Y', IL.SENSORS[4]);
      	aMat = MT.Osmiridium;           aRegistry.add("Molecular Scanner (T5)"                              , "Basic Machines"                      , 20806, 20001, aClass, aMat.mToolQuality, 16, aMachine     , UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS,  16.0F, NBT_RESISTANCE,  16.0F, NBT_COLOR, UT.Code.getRGBInt(aMat.fRGBaSolid), NBT_INPUT,  V[5], NBT_TEXTURE, "scannermolecular", NBT_ENERGY_ACCEPTED, TD.Energy.QU, NBT_RECIPEMAP, RM.ScannerMolecular, NBT_EFFICIENCY, 10000, NBT_INV_SIDE_IN, SBIT_L|SBIT_U, NBT_INV_SIDE_AUTO_IN, SIDE_LEFT, NBT_INV_SIDE_OUT, SBIT_D|SBIT_R, NBT_INV_SIDE_AUTO_OUT, SIDE_RIGHT/*, NBT_TANK_SIDE_INPUT, SIDE_BITS[SIDE_LEFT]|SIDE_BITS[SIDE_TOP], NBT_TANK_SIDE_AUTO_INPUT, SIDE_LEFT, NBT_TANK_SIDE_OUTPUT, SIDE_BITS[SIDE_BOTTOM]|SIDE_BITS[SIDE_RIGHT], NBT_TANK_SIDE_AUTO_OUTPUT, SIDE_RIGHT*/, NBT_ENERGY_ACCEPTED_SIDES, SBIT_B), "DXE", "FMF", "RYS", 'M', OP.casingMachine.dat(aMat), 'D', IL.Processor_Crystal_Diamond, 'E', IL.Processor_Crystal_Emerald, 'R', IL.Processor_Crystal_Ruby, 'S', IL.Processor_Crystal_Sapphire, 'F', IL.FIELD_GENERATORS[5], 'X', IL.EMITTERS[5], 'Y', IL.SENSORS[5]);
		aMat = MT.Osmiridium;           aRegistry.add("Molecular Scanner (T6)"                              , "Basic Machines"                      , 20807, 20001, aClass, aMat.mToolQuality, 16, aMachine     , UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS,  16.0F, NBT_RESISTANCE,  16.0F, NBT_COLOR, UT.Code.getRGBInt(aMat.fRGBaSolid), NBT_INPUT,  V[6], NBT_TEXTURE, "scannermolecular", NBT_ENERGY_ACCEPTED, TD.Energy.QU, NBT_RECIPEMAP, RM.ScannerMolecular, NBT_EFFICIENCY, 10000, NBT_INV_SIDE_IN, SBIT_L|SBIT_U, NBT_INV_SIDE_AUTO_IN, SIDE_LEFT, NBT_INV_SIDE_OUT, SBIT_D|SBIT_R, NBT_INV_SIDE_AUTO_OUT, SIDE_RIGHT/*, NBT_TANK_SIDE_INPUT, SIDE_BITS[SIDE_LEFT]|SIDE_BITS[SIDE_TOP], NBT_TANK_SIDE_AUTO_INPUT, SIDE_LEFT, NBT_TANK_SIDE_OUTPUT, SIDE_BITS[SIDE_BOTTOM]|SIDE_BITS[SIDE_RIGHT], NBT_TANK_SIDE_AUTO_OUTPUT, SIDE_RIGHT*/, NBT_ENERGY_ACCEPTED_SIDES, SBIT_B), "DXE", "FMF", "RYS", 'M', OP.casingMachine.dat(aMat), 'D', IL.Processor_Crystal_Diamond, 'E', IL.Processor_Crystal_Emerald, 'R', IL.Processor_Crystal_Ruby, 'S', IL.Processor_Crystal_Sapphire, 'F', IL.FIELD_GENERATORS[6], 'X', IL.EMITTERS[6], 'Y', IL.SENSORS[6]);
		aMat = MT.Osmiridium;           aRegistry.add("Molecular Scanner (T7)"                              , "Basic Machines"                      , 20808, 20001, aClass, aMat.mToolQuality, 16, aMachine     , UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS,  16.0F, NBT_RESISTANCE,  16.0F, NBT_COLOR, UT.Code.getRGBInt(aMat.fRGBaSolid), NBT_INPUT,  V[7], NBT_TEXTURE, "scannermolecular", NBT_ENERGY_ACCEPTED, TD.Energy.QU, NBT_RECIPEMAP, RM.ScannerMolecular, NBT_EFFICIENCY, 10000, NBT_INV_SIDE_IN, SBIT_L|SBIT_U, NBT_INV_SIDE_AUTO_IN, SIDE_LEFT, NBT_INV_SIDE_OUT, SBIT_D|SBIT_R, NBT_INV_SIDE_AUTO_OUT, SIDE_RIGHT/*, NBT_TANK_SIDE_INPUT, SIDE_BITS[SIDE_LEFT]|SIDE_BITS[SIDE_TOP], NBT_TANK_SIDE_AUTO_INPUT, SIDE_LEFT, NBT_TANK_SIDE_OUTPUT, SIDE_BITS[SIDE_BOTTOM]|SIDE_BITS[SIDE_RIGHT], NBT_TANK_SIDE_AUTO_OUTPUT, SIDE_RIGHT*/, NBT_ENERGY_ACCEPTED_SIDES, SBIT_B), "DXE", "FMF", "RYS", 'M', OP.casingMachine.dat(aMat), 'D', IL.Processor_Crystal_Diamond, 'E', IL.Processor_Crystal_Emerald, 'R', IL.Processor_Crystal_Ruby, 'S', IL.Processor_Crystal_Sapphire, 'F', IL.FIELD_GENERATORS[7], 'X', IL.EMITTERS[7], 'Y', IL.SENSORS[7]);
		aMat = MT.Osmiridium;           aRegistry.add("Molecular Scanner (T8)"                              , "Basic Machines"                      , 20809, 20001, aClass, aMat.mToolQuality, 16, aMachine     , UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS,  16.0F, NBT_RESISTANCE,  16.0F, NBT_COLOR, UT.Code.getRGBInt(aMat.fRGBaSolid), NBT_INPUT,  V[8], NBT_TEXTURE, "scannermolecular", NBT_ENERGY_ACCEPTED, TD.Energy.QU, NBT_RECIPEMAP, RM.ScannerMolecular, NBT_EFFICIENCY, 10000, NBT_INV_SIDE_IN, SBIT_L|SBIT_U, NBT_INV_SIDE_AUTO_IN, SIDE_LEFT, NBT_INV_SIDE_OUT, SBIT_D|SBIT_R, NBT_INV_SIDE_AUTO_OUT, SIDE_RIGHT/*, NBT_TANK_SIDE_INPUT, SIDE_BITS[SIDE_LEFT]|SIDE_BITS[SIDE_TOP], NBT_TANK_SIDE_AUTO_INPUT, SIDE_LEFT, NBT_TANK_SIDE_OUTPUT, SIDE_BITS[SIDE_BOTTOM]|SIDE_BITS[SIDE_RIGHT], NBT_TANK_SIDE_AUTO_OUTPUT, SIDE_RIGHT*/, NBT_ENERGY_ACCEPTED_SIDES, SBIT_B), "DXE", "FMF", "RYS", 'M', OP.casingMachine.dat(aMat), 'D', IL.Processor_Crystal_Diamond, 'E', IL.Processor_Crystal_Emerald, 'R', IL.Processor_Crystal_Ruby, 'S', IL.Processor_Crystal_Sapphire, 'F', IL.FIELD_GENERATORS[8], 'X', IL.EMITTERS[8], 'Y', IL.SENSORS[8]);
		aMat = MT.Osmiridium;           aRegistry.add("Molecular Scanner (T9)"                              , "Basic Machines"                      , 20810, 20001, aClass, aMat.mToolQuality, 16, aMachine     , UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS,  16.0F, NBT_RESISTANCE,  16.0F, NBT_COLOR, UT.Code.getRGBInt(aMat.fRGBaSolid), NBT_INPUT,  V[9], NBT_TEXTURE, "scannermolecular", NBT_ENERGY_ACCEPTED, TD.Energy.QU, NBT_RECIPEMAP, RM.ScannerMolecular, NBT_EFFICIENCY, 10000, NBT_INV_SIDE_IN, SBIT_L|SBIT_U, NBT_INV_SIDE_AUTO_IN, SIDE_LEFT, NBT_INV_SIDE_OUT, SBIT_D|SBIT_R, NBT_INV_SIDE_AUTO_OUT, SIDE_RIGHT/*, NBT_TANK_SIDE_INPUT, SIDE_BITS[SIDE_LEFT]|SIDE_BITS[SIDE_TOP], NBT_TANK_SIDE_AUTO_INPUT, SIDE_LEFT, NBT_TANK_SIDE_OUTPUT, SIDE_BITS[SIDE_BOTTOM]|SIDE_BITS[SIDE_RIGHT], NBT_TANK_SIDE_AUTO_OUTPUT, SIDE_RIGHT*/, NBT_ENERGY_ACCEPTED_SIDES, SBIT_B), "DXE", "FMF", "RYS", 'M', OP.casingMachine.dat(aMat), 'D', IL.Processor_Crystal_Diamond, 'E', IL.Processor_Crystal_Emerald, 'R', IL.Processor_Crystal_Ruby, 'S', IL.Processor_Crystal_Sapphire, 'F', IL.FIELD_GENERATORS[9], 'X', IL.EMITTERS[9], 'Y', IL.SENSORS[9]);
		aMat = MT.Osmiridium;           aRegistry.add("Molecular Scanner (T10)"                              , "Basic Machines"                      , 20811, 20001, aClass, aMat.mToolQuality, 16, aMachine     , UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS,  16.0F, NBT_RESISTANCE,  16.0F, NBT_COLOR, UT.Code.getRGBInt(aMat.fRGBaSolid), NBT_INPUT,  V[10], NBT_TEXTURE, "scannermolecular", NBT_ENERGY_ACCEPTED, TD.Energy.QU, NBT_RECIPEMAP, RM.ScannerMolecular, NBT_EFFICIENCY, 10000, NBT_INV_SIDE_IN, SBIT_L|SBIT_U, NBT_INV_SIDE_AUTO_IN, SIDE_LEFT, NBT_INV_SIDE_OUT, SBIT_D|SBIT_R, NBT_INV_SIDE_AUTO_OUT, SIDE_RIGHT/*, NBT_TANK_SIDE_INPUT, SIDE_BITS[SIDE_LEFT]|SIDE_BITS[SIDE_TOP], NBT_TANK_SIDE_AUTO_INPUT, SIDE_LEFT, NBT_TANK_SIDE_OUTPUT, SIDE_BITS[SIDE_BOTTOM]|SIDE_BITS[SIDE_RIGHT], NBT_TANK_SIDE_AUTO_OUTPUT, SIDE_RIGHT*/, NBT_ENERGY_ACCEPTED_SIDES, SBIT_B), "DXE", "FMF", "RYS", 'M', OP.casingMachine.dat(aMat), 'D', IL.Processor_Crystal_Diamond, 'E', IL.Processor_Crystal_Emerald, 'R', IL.Processor_Crystal_Ruby, 'S', IL.Processor_Crystal_Sapphire, 'F', IL.FIELD_GENERATORS[10], 'X', IL.EMITTERS[10], 'Y', IL.SENSORS[10]);
      	aMat = MT.Osmiridium;           aRegistry.add("Molecular Scanner (T11)"                              , "Basic Machines"                      , 20812, 20001, aClass, aMat.mToolQuality, 16, aMachine     , UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS,  16.0F, NBT_RESISTANCE,  16.0F, NBT_COLOR, UT.Code.getRGBInt(aMat.fRGBaSolid), NBT_INPUT,  V[11], NBT_TEXTURE, "scannermolecular", NBT_ENERGY_ACCEPTED, TD.Energy.QU, NBT_RECIPEMAP, RM.ScannerMolecular, NBT_EFFICIENCY, 10000, NBT_INV_SIDE_IN, SBIT_L|SBIT_U, NBT_INV_SIDE_AUTO_IN, SIDE_LEFT, NBT_INV_SIDE_OUT, SBIT_D|SBIT_R, NBT_INV_SIDE_AUTO_OUT, SIDE_RIGHT/*, NBT_TANK_SIDE_INPUT, SIDE_BITS[SIDE_LEFT]|SIDE_BITS[SIDE_TOP], NBT_TANK_SIDE_AUTO_INPUT, SIDE_LEFT, NBT_TANK_SIDE_OUTPUT, SIDE_BITS[SIDE_BOTTOM]|SIDE_BITS[SIDE_RIGHT], NBT_TANK_SIDE_AUTO_OUTPUT, SIDE_RIGHT*/, NBT_ENERGY_ACCEPTED_SIDES, SBIT_B), "DXE", "FMF", "RYS", 'M', OP.casingMachine.dat(aMat), 'D', IL.Processor_Crystal_Diamond, 'E', IL.Processor_Crystal_Emerald, 'R', IL.Processor_Crystal_Ruby, 'S', IL.Processor_Crystal_Sapphire, 'F', IL.FIELD_GENERATORS[11], 'X', IL.EMITTERS[11], 'Y', IL.SENSORS[11]);
		aMat = MT.Osmiridium;           aRegistry.add("Molecular Scanner (T12)"                              , "Basic Machines"                      , 20813, 20001, aClass, aMat.mToolQuality, 16, aMachine     , UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS,  16.0F, NBT_RESISTANCE,  16.0F, NBT_COLOR, UT.Code.getRGBInt(aMat.fRGBaSolid), NBT_INPUT,  V[12], NBT_TEXTURE, "scannermolecular", NBT_ENERGY_ACCEPTED, TD.Energy.QU, NBT_RECIPEMAP, RM.ScannerMolecular, NBT_EFFICIENCY, 10000, NBT_INV_SIDE_IN, SBIT_L|SBIT_U, NBT_INV_SIDE_AUTO_IN, SIDE_LEFT, NBT_INV_SIDE_OUT, SBIT_D|SBIT_R, NBT_INV_SIDE_AUTO_OUT, SIDE_RIGHT/*, NBT_TANK_SIDE_INPUT, SIDE_BITS[SIDE_LEFT]|SIDE_BITS[SIDE_TOP], NBT_TANK_SIDE_AUTO_INPUT, SIDE_LEFT, NBT_TANK_SIDE_OUTPUT, SIDE_BITS[SIDE_BOTTOM]|SIDE_BITS[SIDE_RIGHT], NBT_TANK_SIDE_AUTO_OUTPUT, SIDE_RIGHT*/, NBT_ENERGY_ACCEPTED_SIDES, SBIT_B), "DXE", "FMF", "RYS", 'M', OP.casingMachine.dat(aMat), 'D', IL.Processor_Crystal_Diamond, 'E', IL.Processor_Crystal_Emerald, 'R', IL.Processor_Crystal_Ruby, 'S', IL.Processor_Crystal_Sapphire, 'F', IL.FIELD_GENERATORS[12], 'X', IL.EMITTERS[12], 'Y', IL.SENSORS[12]);
		aMat = MT.Osmiridium;           aRegistry.add("Molecular Scanner (T13)"                              , "Basic Machines"                      , 20814, 20001, aClass, aMat.mToolQuality, 16, aMachine     , UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS,  16.0F, NBT_RESISTANCE,  16.0F, NBT_COLOR, UT.Code.getRGBInt(aMat.fRGBaSolid), NBT_INPUT,  V[13], NBT_TEXTURE, "scannermolecular", NBT_ENERGY_ACCEPTED, TD.Energy.QU, NBT_RECIPEMAP, RM.ScannerMolecular, NBT_EFFICIENCY, 10000, NBT_INV_SIDE_IN, SBIT_L|SBIT_U, NBT_INV_SIDE_AUTO_IN, SIDE_LEFT, NBT_INV_SIDE_OUT, SBIT_D|SBIT_R, NBT_INV_SIDE_AUTO_OUT, SIDE_RIGHT/*, NBT_TANK_SIDE_INPUT, SIDE_BITS[SIDE_LEFT]|SIDE_BITS[SIDE_TOP], NBT_TANK_SIDE_AUTO_INPUT, SIDE_LEFT, NBT_TANK_SIDE_OUTPUT, SIDE_BITS[SIDE_BOTTOM]|SIDE_BITS[SIDE_RIGHT], NBT_TANK_SIDE_AUTO_OUTPUT, SIDE_RIGHT*/, NBT_ENERGY_ACCEPTED_SIDES, SBIT_B), "DXE", "FMF", "RYS", 'M', OP.casingMachine.dat(aMat), 'D', IL.Processor_Crystal_Diamond, 'E', IL.Processor_Crystal_Emerald, 'R', IL.Processor_Crystal_Ruby, 'S', IL.Processor_Crystal_Sapphire, 'F', IL.FIELD_GENERATORS[13], 'X', IL.EMITTERS[13], 'Y', IL.SENSORS[13]);
		aMat = MT.Osmiridium;           aRegistry.add("Molecular Scanner (T14)"                              , "Basic Machines"                      , 20815, 20001, aClass, aMat.mToolQuality, 16, aMachine     , UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS,  16.0F, NBT_RESISTANCE,  16.0F, NBT_COLOR, UT.Code.getRGBInt(aMat.fRGBaSolid), NBT_INPUT,  V[14], NBT_TEXTURE, "scannermolecular", NBT_ENERGY_ACCEPTED, TD.Energy.QU, NBT_RECIPEMAP, RM.ScannerMolecular, NBT_EFFICIENCY, 10000, NBT_INV_SIDE_IN, SBIT_L|SBIT_U, NBT_INV_SIDE_AUTO_IN, SIDE_LEFT, NBT_INV_SIDE_OUT, SBIT_D|SBIT_R, NBT_INV_SIDE_AUTO_OUT, SIDE_RIGHT/*, NBT_TANK_SIDE_INPUT, SIDE_BITS[SIDE_LEFT]|SIDE_BITS[SIDE_TOP], NBT_TANK_SIDE_AUTO_INPUT, SIDE_LEFT, NBT_TANK_SIDE_OUTPUT, SIDE_BITS[SIDE_BOTTOM]|SIDE_BITS[SIDE_RIGHT], NBT_TANK_SIDE_AUTO_OUTPUT, SIDE_RIGHT*/, NBT_ENERGY_ACCEPTED_SIDES, SBIT_B), "DXE", "FMF", "RYS", 'M', OP.casingMachine.dat(aMat), 'D', IL.Processor_Crystal_Diamond, 'E', IL.Processor_Crystal_Emerald, 'R', IL.Processor_Crystal_Ruby, 'S', IL.Processor_Crystal_Sapphire, 'F', IL.FIELD_GENERATORS[14], 'X', IL.EMITTERS[14], 'Y', IL.SENSORS[14]);
		aMat = MT.Osmiridium;           aRegistry.add("Molecular Scanner (T15)"                              , "Basic Machines"                      , 20816, 20001, aClass, aMat.mToolQuality, 16, aMachine     , UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS,  16.0F, NBT_RESISTANCE,  16.0F, NBT_COLOR, UT.Code.getRGBInt(aMat.fRGBaSolid), NBT_INPUT,  V[15], NBT_TEXTURE, "scannermolecular", NBT_ENERGY_ACCEPTED, TD.Energy.QU, NBT_RECIPEMAP, RM.ScannerMolecular, NBT_EFFICIENCY, 10000, NBT_INV_SIDE_IN, SBIT_L|SBIT_U, NBT_INV_SIDE_AUTO_IN, SIDE_LEFT, NBT_INV_SIDE_OUT, SBIT_D|SBIT_R, NBT_INV_SIDE_AUTO_OUT, SIDE_RIGHT/*, NBT_TANK_SIDE_INPUT, SIDE_BITS[SIDE_LEFT]|SIDE_BITS[SIDE_TOP], NBT_TANK_SIDE_AUTO_INPUT, SIDE_LEFT, NBT_TANK_SIDE_OUTPUT, SIDE_BITS[SIDE_BOTTOM]|SIDE_BITS[SIDE_RIGHT], NBT_TANK_SIDE_AUTO_OUTPUT, SIDE_RIGHT*/, NBT_ENERGY_ACCEPTED_SIDES, SBIT_B), "DXE", "FMF", "RYS", 'M', OP.casingMachine.dat(aMat), 'D', IL.Processor_Crystal_Diamond, 'E', IL.Processor_Crystal_Emerald, 'R', IL.Processor_Crystal_Ruby, 'S', IL.Processor_Crystal_Sapphire, 'F', IL.FIELD_GENERATORS[15], 'X', IL.EMITTERS[15], 'Y', IL.SENSORS[15]);

		aClass = MultiTileEntityBasicMachine.class;
		aMat = MT.Osmiridium;           aRegistry.add("Matter Replicator (T0)"                              , "Basic Machines"                      , 20821, 20001, aClass, aMat.mToolQuality, 16, aMachine     , UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS,  16.0F, NBT_RESISTANCE,  16.0F, NBT_COLOR, UT.Code.getRGBInt(aMat.fRGBaSolid), NBT_INPUT,  V[0], NBT_TEXTURE, "replicator", NBT_ENERGY_ACCEPTED, TD.Energy.QU, NBT_RECIPEMAP, RM.Replicator, NBT_CHEAP_OVERCLOCKING, T, NBT_NO_CONSTANT_POWER, T, NBT_EFFICIENCY,  3750, NBT_INV_SIDE_IN, SBIT_L|SBIT_U, NBT_INV_SIDE_AUTO_IN, SIDE_LEFT, NBT_INV_SIDE_OUT, SBIT_D|SBIT_R, NBT_INV_SIDE_AUTO_OUT, SIDE_RIGHT, NBT_TANK_SIDE_IN, SBIT_L|SBIT_U, NBT_TANK_SIDE_AUTO_IN, SIDE_TOP, NBT_TANK_SIDE_OUT, SBIT_D|SBIT_R, NBT_TANK_SIDE_AUTO_OUT, SIDE_BOTTOM, NBT_ENERGY_ACCEPTED_SIDES, SBIT_B), "EXE", "FMF", "SXS", 'M', OP.casingMachine.dat(aMat), 'E', IL.Processor_Crystal_Emerald, 'S', IL.Processor_Crystal_Sapphire, 'X', IL.EMITTERS[1], 'F', IL.FIELD_GENERATORS[1]);
		aMat = MT.Osmiridium;           aRegistry.add("Matter Replicator (T1)"                              , "Basic Machines"                      , 20822, 20001, aClass, aMat.mToolQuality, 16, aMachine     , UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS,  16.0F, NBT_RESISTANCE,  16.0F, NBT_COLOR, UT.Code.getRGBInt(aMat.fRGBaSolid), NBT_INPUT,  V[1], NBT_TEXTURE, "replicator", NBT_ENERGY_ACCEPTED, TD.Energy.QU, NBT_RECIPEMAP, RM.Replicator, NBT_CHEAP_OVERCLOCKING, T, NBT_NO_CONSTANT_POWER, T, NBT_EFFICIENCY,  5000, NBT_INV_SIDE_IN, SBIT_L|SBIT_U, NBT_INV_SIDE_AUTO_IN, SIDE_LEFT, NBT_INV_SIDE_OUT, SBIT_D|SBIT_R, NBT_INV_SIDE_AUTO_OUT, SIDE_RIGHT, NBT_TANK_SIDE_IN, SBIT_L|SBIT_U, NBT_TANK_SIDE_AUTO_IN, SIDE_TOP, NBT_TANK_SIDE_OUT, SBIT_D|SBIT_R, NBT_TANK_SIDE_AUTO_OUT, SIDE_BOTTOM, NBT_ENERGY_ACCEPTED_SIDES, SBIT_B), "EXE", "FMF", "SXS", 'M', OP.casingMachine.dat(aMat), 'E', IL.Processor_Crystal_Emerald, 'S', IL.Processor_Crystal_Sapphire, 'X', IL.EMITTERS[1], 'F', IL.FIELD_GENERATORS[1]);
		aMat = MT.Osmiridium;           aRegistry.add("Matter Replicator (T2)"                              , "Basic Machines"                      , 20823, 20001, aClass, aMat.mToolQuality, 16, aMachine     , UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS,  16.0F, NBT_RESISTANCE,  16.0F, NBT_COLOR, UT.Code.getRGBInt(aMat.fRGBaSolid), NBT_INPUT,  V[2], NBT_TEXTURE, "replicator", NBT_ENERGY_ACCEPTED, TD.Energy.QU, NBT_RECIPEMAP, RM.Replicator, NBT_CHEAP_OVERCLOCKING, T, NBT_NO_CONSTANT_POWER, T, NBT_EFFICIENCY,  6250, NBT_INV_SIDE_IN, SBIT_L|SBIT_U, NBT_INV_SIDE_AUTO_IN, SIDE_LEFT, NBT_INV_SIDE_OUT, SBIT_D|SBIT_R, NBT_INV_SIDE_AUTO_OUT, SIDE_RIGHT, NBT_TANK_SIDE_IN, SBIT_L|SBIT_U, NBT_TANK_SIDE_AUTO_IN, SIDE_TOP, NBT_TANK_SIDE_OUT, SBIT_D|SBIT_R, NBT_TANK_SIDE_AUTO_OUT, SIDE_BOTTOM, NBT_ENERGY_ACCEPTED_SIDES, SBIT_B), "EXE", "FMF", "SXS", 'M', OP.casingMachine.dat(aMat), 'E', IL.Processor_Crystal_Emerald, 'S', IL.Processor_Crystal_Sapphire, 'X', IL.EMITTERS[2], 'F', IL.FIELD_GENERATORS[2]);
		aMat = MT.Osmiridium;           aRegistry.add("Matter Replicator (T3)"                              , "Basic Machines"                      , 20824, 20001, aClass, aMat.mToolQuality, 16, aMachine     , UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS,  16.0F, NBT_RESISTANCE,  16.0F, NBT_COLOR, UT.Code.getRGBInt(aMat.fRGBaSolid), NBT_INPUT,  V[3], NBT_TEXTURE, "replicator", NBT_ENERGY_ACCEPTED, TD.Energy.QU, NBT_RECIPEMAP, RM.Replicator, NBT_CHEAP_OVERCLOCKING, T, NBT_NO_CONSTANT_POWER, T, NBT_EFFICIENCY,  7500, NBT_INV_SIDE_IN, SBIT_L|SBIT_U, NBT_INV_SIDE_AUTO_IN, SIDE_LEFT, NBT_INV_SIDE_OUT, SBIT_D|SBIT_R, NBT_INV_SIDE_AUTO_OUT, SIDE_RIGHT, NBT_TANK_SIDE_IN, SBIT_L|SBIT_U, NBT_TANK_SIDE_AUTO_IN, SIDE_TOP, NBT_TANK_SIDE_OUT, SBIT_D|SBIT_R, NBT_TANK_SIDE_AUTO_OUT, SIDE_BOTTOM, NBT_ENERGY_ACCEPTED_SIDES, SBIT_B), "EXE", "FMF", "SXS", 'M', OP.casingMachine.dat(aMat), 'E', IL.Processor_Crystal_Emerald, 'S', IL.Processor_Crystal_Sapphire, 'X', IL.EMITTERS[3], 'F', IL.FIELD_GENERATORS[3]);
		aMat = MT.Osmiridium;           aRegistry.add("Matter Replicator (T4)"                              , "Basic Machines"                      , 20825, 20001, aClass, aMat.mToolQuality, 16, aMachine     , UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS,  16.0F, NBT_RESISTANCE,  16.0F, NBT_COLOR, UT.Code.getRGBInt(aMat.fRGBaSolid), NBT_INPUT,  V[4], NBT_TEXTURE, "replicator", NBT_ENERGY_ACCEPTED, TD.Energy.QU, NBT_RECIPEMAP, RM.Replicator, NBT_CHEAP_OVERCLOCKING, T, NBT_NO_CONSTANT_POWER, T, NBT_EFFICIENCY,  8750, NBT_INV_SIDE_IN, SBIT_L|SBIT_U, NBT_INV_SIDE_AUTO_IN, SIDE_LEFT, NBT_INV_SIDE_OUT, SBIT_D|SBIT_R, NBT_INV_SIDE_AUTO_OUT, SIDE_RIGHT, NBT_TANK_SIDE_IN, SBIT_L|SBIT_U, NBT_TANK_SIDE_AUTO_IN, SIDE_TOP, NBT_TANK_SIDE_OUT, SBIT_D|SBIT_R, NBT_TANK_SIDE_AUTO_OUT, SIDE_BOTTOM, NBT_ENERGY_ACCEPTED_SIDES, SBIT_B), "EXE", "FMF", "SXS", 'M', OP.casingMachine.dat(aMat), 'E', IL.Processor_Crystal_Emerald, 'S', IL.Processor_Crystal_Sapphire, 'X', IL.EMITTERS[4], 'F', IL.FIELD_GENERATORS[4]);
		aMat = MT.Osmiridium;           aRegistry.add("Matter Replicator (T5)"                              , "Basic Machines"                      , 20826, 20001, aClass, aMat.mToolQuality, 16, aMachine     , UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS,  16.0F, NBT_RESISTANCE,  16.0F, NBT_COLOR, UT.Code.getRGBInt(aMat.fRGBaSolid), NBT_INPUT,  V[5], NBT_TEXTURE, "replicator", NBT_ENERGY_ACCEPTED, TD.Energy.QU, NBT_RECIPEMAP, RM.Replicator, NBT_CHEAP_OVERCLOCKING, T, NBT_NO_CONSTANT_POWER, T, NBT_EFFICIENCY, 10000, NBT_INV_SIDE_IN, SBIT_L|SBIT_U, NBT_INV_SIDE_AUTO_IN, SIDE_LEFT, NBT_INV_SIDE_OUT, SBIT_D|SBIT_R, NBT_INV_SIDE_AUTO_OUT, SIDE_RIGHT, NBT_TANK_SIDE_IN, SBIT_L|SBIT_U, NBT_TANK_SIDE_AUTO_IN, SIDE_TOP, NBT_TANK_SIDE_OUT, SBIT_D|SBIT_R, NBT_TANK_SIDE_AUTO_OUT, SIDE_BOTTOM, NBT_ENERGY_ACCEPTED_SIDES, SBIT_B), "EXE", "FMF", "SXS", 'M', OP.casingMachine.dat(aMat), 'E', IL.Processor_Crystal_Emerald, 'S', IL.Processor_Crystal_Sapphire, 'X', IL.EMITTERS[5], 'F', IL.FIELD_GENERATORS[5]);
		aMat = MT.Osmiridium;           aRegistry.add("Matter Replicator (T6)"                              , "Basic Machines"                      , 20827, 20001, aClass, aMat.mToolQuality, 16, aMachine     , UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS,  16.0F, NBT_RESISTANCE,  16.0F, NBT_COLOR, UT.Code.getRGBInt(aMat.fRGBaSolid), NBT_INPUT,  V[6], NBT_TEXTURE, "replicator", NBT_ENERGY_ACCEPTED, TD.Energy.QU, NBT_RECIPEMAP, RM.Replicator, NBT_CHEAP_OVERCLOCKING, T, NBT_NO_CONSTANT_POWER, T, NBT_EFFICIENCY, 11250, NBT_INV_SIDE_IN, SBIT_L|SBIT_U, NBT_INV_SIDE_AUTO_IN, SIDE_LEFT, NBT_INV_SIDE_OUT, SBIT_D|SBIT_R, NBT_INV_SIDE_AUTO_OUT, SIDE_RIGHT, NBT_TANK_SIDE_IN, SBIT_L|SBIT_U, NBT_TANK_SIDE_AUTO_IN, SIDE_TOP, NBT_TANK_SIDE_OUT, SBIT_D|SBIT_R, NBT_TANK_SIDE_AUTO_OUT, SIDE_BOTTOM, NBT_ENERGY_ACCEPTED_SIDES, SBIT_B), "EXE", "FMF", "SXS", 'M', OP.casingMachine.dat(aMat), 'E', IL.Processor_Crystal_Emerald, 'S', IL.Processor_Crystal_Sapphire, 'X', IL.EMITTERS[6], 'F', IL.FIELD_GENERATORS[6]);
		aMat = MT.Osmiridium;           aRegistry.add("Matter Replicator (T7)"                              , "Basic Machines"                      , 20828, 20001, aClass, aMat.mToolQuality, 16, aMachine     , UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS,  16.0F, NBT_RESISTANCE,  16.0F, NBT_COLOR, UT.Code.getRGBInt(aMat.fRGBaSolid), NBT_INPUT,  V[7], NBT_TEXTURE, "replicator", NBT_ENERGY_ACCEPTED, TD.Energy.QU, NBT_RECIPEMAP, RM.Replicator, NBT_CHEAP_OVERCLOCKING, T, NBT_NO_CONSTANT_POWER, T, NBT_EFFICIENCY, 12500, NBT_INV_SIDE_IN, SBIT_L|SBIT_U, NBT_INV_SIDE_AUTO_IN, SIDE_LEFT, NBT_INV_SIDE_OUT, SBIT_D|SBIT_R, NBT_INV_SIDE_AUTO_OUT, SIDE_RIGHT, NBT_TANK_SIDE_IN, SBIT_L|SBIT_U, NBT_TANK_SIDE_AUTO_IN, SIDE_TOP, NBT_TANK_SIDE_OUT, SBIT_D|SBIT_R, NBT_TANK_SIDE_AUTO_OUT, SIDE_BOTTOM, NBT_ENERGY_ACCEPTED_SIDES, SBIT_B), "EXE", "FMF", "SXS", 'M', OP.casingMachine.dat(aMat), 'E', IL.Processor_Crystal_Emerald, 'S', IL.Processor_Crystal_Sapphire, 'X', IL.EMITTERS[7], 'F', IL.FIELD_GENERATORS[7]);
		aMat = MT.Osmiridium;           aRegistry.add("Matter Replicator (T8)"                              , "Basic Machines"                      , 20829, 20001, aClass, aMat.mToolQuality, 16, aMachine     , UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS,  16.0F, NBT_RESISTANCE,  16.0F, NBT_COLOR, UT.Code.getRGBInt(aMat.fRGBaSolid), NBT_INPUT,  V[8], NBT_TEXTURE, "replicator", NBT_ENERGY_ACCEPTED, TD.Energy.QU, NBT_RECIPEMAP, RM.Replicator, NBT_CHEAP_OVERCLOCKING, T, NBT_NO_CONSTANT_POWER, T, NBT_EFFICIENCY, 13750, NBT_INV_SIDE_IN, SBIT_L|SBIT_U, NBT_INV_SIDE_AUTO_IN, SIDE_LEFT, NBT_INV_SIDE_OUT, SBIT_D|SBIT_R, NBT_INV_SIDE_AUTO_OUT, SIDE_RIGHT, NBT_TANK_SIDE_IN, SBIT_L|SBIT_U, NBT_TANK_SIDE_AUTO_IN, SIDE_TOP, NBT_TANK_SIDE_OUT, SBIT_D|SBIT_R, NBT_TANK_SIDE_AUTO_OUT, SIDE_BOTTOM, NBT_ENERGY_ACCEPTED_SIDES, SBIT_B), "EXE", "FMF", "SXS", 'M', OP.casingMachine.dat(aMat), 'E', IL.Processor_Crystal_Emerald, 'S', IL.Processor_Crystal_Sapphire, 'X', IL.EMITTERS[8], 'F', IL.FIELD_GENERATORS[8]);
		aMat = MT.Osmiridium;           aRegistry.add("Matter Replicator (T9)"                              , "Basic Machines"                      , 20830, 20001, aClass, aMat.mToolQuality, 16, aMachine     , UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS,  16.0F, NBT_RESISTANCE,  16.0F, NBT_COLOR, UT.Code.getRGBInt(aMat.fRGBaSolid), NBT_INPUT,  V[9], NBT_TEXTURE, "replicator", NBT_ENERGY_ACCEPTED, TD.Energy.QU, NBT_RECIPEMAP, RM.Replicator, NBT_CHEAP_OVERCLOCKING, T, NBT_NO_CONSTANT_POWER, T, NBT_EFFICIENCY, 15000, NBT_INV_SIDE_IN, SBIT_L|SBIT_U, NBT_INV_SIDE_AUTO_IN, SIDE_LEFT, NBT_INV_SIDE_OUT, SBIT_D|SBIT_R, NBT_INV_SIDE_AUTO_OUT, SIDE_RIGHT, NBT_TANK_SIDE_IN, SBIT_L|SBIT_U, NBT_TANK_SIDE_AUTO_IN, SIDE_TOP, NBT_TANK_SIDE_OUT, SBIT_D|SBIT_R, NBT_TANK_SIDE_AUTO_OUT, SIDE_BOTTOM, NBT_ENERGY_ACCEPTED_SIDES, SBIT_B), "EXE", "FMF", "SXS", 'M', OP.casingMachine.dat(aMat), 'E', IL.Processor_Crystal_Emerald, 'S', IL.Processor_Crystal_Sapphire, 'X', IL.EMITTERS[9], 'F', IL.FIELD_GENERATORS[9]);
		aMat = MT.Osmiridium;           aRegistry.add("Matter Replicator (T10)"                              , "Basic Machines"                      , 20831, 20001, aClass, aMat.mToolQuality, 16, aMachine     , UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS,  16.0F, NBT_RESISTANCE,  16.0F, NBT_COLOR, UT.Code.getRGBInt(aMat.fRGBaSolid), NBT_INPUT,  V[10], NBT_TEXTURE, "replicator", NBT_ENERGY_ACCEPTED, TD.Energy.QU, NBT_RECIPEMAP, RM.Replicator, NBT_CHEAP_OVERCLOCKING, T, NBT_NO_CONSTANT_POWER, T, NBT_EFFICIENCY, 16250, NBT_INV_SIDE_IN, SBIT_L|SBIT_U, NBT_INV_SIDE_AUTO_IN, SIDE_LEFT, NBT_INV_SIDE_OUT, SBIT_D|SBIT_R, NBT_INV_SIDE_AUTO_OUT, SIDE_RIGHT, NBT_TANK_SIDE_IN, SBIT_L|SBIT_U, NBT_TANK_SIDE_AUTO_IN, SIDE_TOP, NBT_TANK_SIDE_OUT, SBIT_D|SBIT_R, NBT_TANK_SIDE_AUTO_OUT, SIDE_BOTTOM, NBT_ENERGY_ACCEPTED_SIDES, SBIT_B), "EXE", "FMF", "SXS", 'M', OP.casingMachine.dat(aMat), 'E', IL.Processor_Crystal_Emerald, 'S', IL.Processor_Crystal_Sapphire, 'X', IL.EMITTERS[10], 'F', IL.FIELD_GENERATORS[10]);
		aMat = MT.Osmiridium;           aRegistry.add("Matter Replicator (T11)"                              , "Basic Machines"                      , 20832, 20001, aClass, aMat.mToolQuality, 16, aMachine     , UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS,  16.0F, NBT_RESISTANCE,  16.0F, NBT_COLOR, UT.Code.getRGBInt(aMat.fRGBaSolid), NBT_INPUT,  V[11], NBT_TEXTURE, "replicator", NBT_ENERGY_ACCEPTED, TD.Energy.QU, NBT_RECIPEMAP, RM.Replicator, NBT_CHEAP_OVERCLOCKING, T, NBT_NO_CONSTANT_POWER, T, NBT_EFFICIENCY, 17500, NBT_INV_SIDE_IN, SBIT_L|SBIT_U, NBT_INV_SIDE_AUTO_IN, SIDE_LEFT, NBT_INV_SIDE_OUT, SBIT_D|SBIT_R, NBT_INV_SIDE_AUTO_OUT, SIDE_RIGHT, NBT_TANK_SIDE_IN, SBIT_L|SBIT_U, NBT_TANK_SIDE_AUTO_IN, SIDE_TOP, NBT_TANK_SIDE_OUT, SBIT_D|SBIT_R, NBT_TANK_SIDE_AUTO_OUT, SIDE_BOTTOM, NBT_ENERGY_ACCEPTED_SIDES, SBIT_B), "EXE", "FMF", "SXS", 'M', OP.casingMachine.dat(aMat), 'E', IL.Processor_Crystal_Emerald, 'S', IL.Processor_Crystal_Sapphire, 'X', IL.EMITTERS[11], 'F', IL.FIELD_GENERATORS[11]);
		aMat = MT.Osmiridium;           aRegistry.add("Matter Replicator (T12)"                              , "Basic Machines"                      , 20833, 20001, aClass, aMat.mToolQuality, 16, aMachine     , UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS,  16.0F, NBT_RESISTANCE,  16.0F, NBT_COLOR, UT.Code.getRGBInt(aMat.fRGBaSolid), NBT_INPUT,  V[12], NBT_TEXTURE, "replicator", NBT_ENERGY_ACCEPTED, TD.Energy.QU, NBT_RECIPEMAP, RM.Replicator, NBT_CHEAP_OVERCLOCKING, T, NBT_NO_CONSTANT_POWER, T, NBT_EFFICIENCY, 18750, NBT_INV_SIDE_IN, SBIT_L|SBIT_U, NBT_INV_SIDE_AUTO_IN, SIDE_LEFT, NBT_INV_SIDE_OUT, SBIT_D|SBIT_R, NBT_INV_SIDE_AUTO_OUT, SIDE_RIGHT, NBT_TANK_SIDE_IN, SBIT_L|SBIT_U, NBT_TANK_SIDE_AUTO_IN, SIDE_TOP, NBT_TANK_SIDE_OUT, SBIT_D|SBIT_R, NBT_TANK_SIDE_AUTO_OUT, SIDE_BOTTOM, NBT_ENERGY_ACCEPTED_SIDES, SBIT_B), "EXE", "FMF", "SXS", 'M', OP.casingMachine.dat(aMat), 'E', IL.Processor_Crystal_Emerald, 'S', IL.Processor_Crystal_Sapphire, 'X', IL.EMITTERS[12], 'F', IL.FIELD_GENERATORS[12]);
		aMat = MT.Osmiridium;           aRegistry.add("Matter Replicator (T13)"                              , "Basic Machines"                      , 20834, 20001, aClass, aMat.mToolQuality, 16, aMachine     , UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS,  16.0F, NBT_RESISTANCE,  16.0F, NBT_COLOR, UT.Code.getRGBInt(aMat.fRGBaSolid), NBT_INPUT,  V[13], NBT_TEXTURE, "replicator", NBT_ENERGY_ACCEPTED, TD.Energy.QU, NBT_RECIPEMAP, RM.Replicator, NBT_CHEAP_OVERCLOCKING, T, NBT_NO_CONSTANT_POWER, T, NBT_EFFICIENCY, 20000, NBT_INV_SIDE_IN, SBIT_L|SBIT_U, NBT_INV_SIDE_AUTO_IN, SIDE_LEFT, NBT_INV_SIDE_OUT, SBIT_D|SBIT_R, NBT_INV_SIDE_AUTO_OUT, SIDE_RIGHT, NBT_TANK_SIDE_IN, SBIT_L|SBIT_U, NBT_TANK_SIDE_AUTO_IN, SIDE_TOP, NBT_TANK_SIDE_OUT, SBIT_D|SBIT_R, NBT_TANK_SIDE_AUTO_OUT, SIDE_BOTTOM, NBT_ENERGY_ACCEPTED_SIDES, SBIT_B), "EXE", "FMF", "SXS", 'M', OP.casingMachine.dat(aMat), 'E', IL.Processor_Crystal_Emerald, 'S', IL.Processor_Crystal_Sapphire, 'X', IL.EMITTERS[13], 'F', IL.FIELD_GENERATORS[13]);
		aMat = MT.Osmiridium;           aRegistry.add("Matter Replicator (T14)"                              , "Basic Machines"                      , 20835, 20001, aClass, aMat.mToolQuality, 16, aMachine     , UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS,  16.0F, NBT_RESISTANCE,  16.0F, NBT_COLOR, UT.Code.getRGBInt(aMat.fRGBaSolid), NBT_INPUT,  V[14], NBT_TEXTURE, "replicator", NBT_ENERGY_ACCEPTED, TD.Energy.QU, NBT_RECIPEMAP, RM.Replicator, NBT_CHEAP_OVERCLOCKING, T, NBT_NO_CONSTANT_POWER, T, NBT_EFFICIENCY, 21250, NBT_INV_SIDE_IN, SBIT_L|SBIT_U, NBT_INV_SIDE_AUTO_IN, SIDE_LEFT, NBT_INV_SIDE_OUT, SBIT_D|SBIT_R, NBT_INV_SIDE_AUTO_OUT, SIDE_RIGHT, NBT_TANK_SIDE_IN, SBIT_L|SBIT_U, NBT_TANK_SIDE_AUTO_IN, SIDE_TOP, NBT_TANK_SIDE_OUT, SBIT_D|SBIT_R, NBT_TANK_SIDE_AUTO_OUT, SIDE_BOTTOM, NBT_ENERGY_ACCEPTED_SIDES, SBIT_B), "EXE", "FMF", "SXS", 'M', OP.casingMachine.dat(aMat), 'E', IL.Processor_Crystal_Emerald, 'S', IL.Processor_Crystal_Sapphire, 'X', IL.EMITTERS[14], 'F', IL.FIELD_GENERATORS[14]);
		aMat = MT.Osmiridium;           aRegistry.add("Matter Replicator (T15)"                              , "Basic Machines"                      , 20836, 20001, aClass, aMat.mToolQuality, 16, aMachine     , UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS,  16.0F, NBT_RESISTANCE,  16.0F, NBT_COLOR, UT.Code.getRGBInt(aMat.fRGBaSolid), NBT_INPUT,  V[15], NBT_TEXTURE, "replicator", NBT_ENERGY_ACCEPTED, TD.Energy.QU, NBT_RECIPEMAP, RM.Replicator, NBT_CHEAP_OVERCLOCKING, T, NBT_NO_CONSTANT_POWER, T, NBT_EFFICIENCY, 22500, NBT_INV_SIDE_IN, SBIT_L|SBIT_U, NBT_INV_SIDE_AUTO_IN, SIDE_LEFT, NBT_INV_SIDE_OUT, SBIT_D|SBIT_R, NBT_INV_SIDE_AUTO_OUT, SIDE_RIGHT, NBT_TANK_SIDE_IN, SBIT_L|SBIT_U, NBT_TANK_SIDE_AUTO_IN, SIDE_TOP, NBT_TANK_SIDE_OUT, SBIT_D|SBIT_R, NBT_TANK_SIDE_AUTO_OUT, SIDE_BOTTOM, NBT_ENERGY_ACCEPTED_SIDES, SBIT_B), "EXE", "FMF", "SXS", 'M', OP.casingMachine.dat(aMat), 'E', IL.Processor_Crystal_Emerald, 'S', IL.Processor_Crystal_Sapphire, 'X', IL.EMITTERS[15], 'F', IL.FIELD_GENERATORS[15]);

		aClass = MultiTileEntityBasicMachine.class;
		aMat = MT.DATA.Electric_T[0];   aRegistry.add("Nanoscale Fabricator ("+VN[0]+")"                    , "Basic Machines"                      , 20841, 20001, aClass, aMat.mToolQuality, 16, aMachine     , UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS,   4.0F, NBT_RESISTANCE,   4.0F, NBT_COLOR, UT.Code.getRGBInt(aMat.fRGBaSolid), NBT_INPUT,  V[0], NBT_TEXTURE, "nanofab", NBT_ENERGY_ACCEPTED, TD.Energy.EU, NBT_RECIPEMAP, RM.Nanofab, NBT_INV_SIDE_IN, SBIT_L|SBIT_U, NBT_INV_SIDE_AUTO_IN, SIDE_LEFT, NBT_INV_SIDE_OUT, SBIT_D|SBIT_R, NBT_INV_SIDE_AUTO_OUT, SIDE_RIGHT, NBT_TANK_SIDE_IN, SBIT_L|SBIT_U, NBT_TANK_SIDE_AUTO_IN, SIDE_TOP, NBT_TANK_SIDE_OUT, SBIT_D|SBIT_R, NBT_TANK_SIDE_AUTO_OUT, SIDE_BOTTOM, NBT_ENERGY_ACCEPTED_SIDES, SBIT_B), "KAX", "ZMY", "CSC", 'M', OP.casingMachine.dat(aMat), 'C', OD_CIRCUITS[6], 'A', IL.Comp_Laser_Gas_Ar, 'K', IL.Comp_Laser_Gas_Kr, 'X', IL.Comp_Laser_Gas_Xe, 'S', IL.Processor_Crystal_Sapphire, 'Y', IL.EMITTERS[1], 'Z', IL.SENSORS[0]);
		aMat = MT.DATA.Electric_T[1];   aRegistry.add("Nanoscale Fabricator ("+VN[1]+")"                    , "Basic Machines"                      , 20842, 20001, aClass, aMat.mToolQuality, 16, aMachine     , UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS,   4.0F, NBT_RESISTANCE,   4.0F, NBT_COLOR, UT.Code.getRGBInt(aMat.fRGBaSolid), NBT_INPUT,  V[1], NBT_TEXTURE, "nanofab", NBT_ENERGY_ACCEPTED, TD.Energy.EU, NBT_RECIPEMAP, RM.Nanofab, NBT_INV_SIDE_IN, SBIT_L|SBIT_U, NBT_INV_SIDE_AUTO_IN, SIDE_LEFT, NBT_INV_SIDE_OUT, SBIT_D|SBIT_R, NBT_INV_SIDE_AUTO_OUT, SIDE_RIGHT, NBT_TANK_SIDE_IN, SBIT_L|SBIT_U, NBT_TANK_SIDE_AUTO_IN, SIDE_TOP, NBT_TANK_SIDE_OUT, SBIT_D|SBIT_R, NBT_TANK_SIDE_AUTO_OUT, SIDE_BOTTOM, NBT_ENERGY_ACCEPTED_SIDES, SBIT_B), "KAX", "ZMY", "CSC", 'M', OP.casingMachine.dat(aMat), 'C', OD_CIRCUITS[6], 'A', IL.Comp_Laser_Gas_Ar, 'K', IL.Comp_Laser_Gas_Kr, 'X', IL.Comp_Laser_Gas_Xe, 'S', IL.Processor_Crystal_Sapphire, 'Y', IL.EMITTERS[1], 'Z', IL.SENSORS[1]);
		aMat = MT.DATA.Electric_T[2];   aRegistry.add("Nanoscale Fabricator ("+VN[2]+")"                    , "Basic Machines"                      , 20843, 20001, aClass, aMat.mToolQuality, 16, aMachine     , UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS,   4.0F, NBT_RESISTANCE,   4.0F, NBT_COLOR, UT.Code.getRGBInt(aMat.fRGBaSolid), NBT_INPUT,  V[2], NBT_TEXTURE, "nanofab", NBT_ENERGY_ACCEPTED, TD.Energy.EU, NBT_RECIPEMAP, RM.Nanofab, NBT_INV_SIDE_IN, SBIT_L|SBIT_U, NBT_INV_SIDE_AUTO_IN, SIDE_LEFT, NBT_INV_SIDE_OUT, SBIT_D|SBIT_R, NBT_INV_SIDE_AUTO_OUT, SIDE_RIGHT, NBT_TANK_SIDE_IN, SBIT_L|SBIT_U, NBT_TANK_SIDE_AUTO_IN, SIDE_TOP, NBT_TANK_SIDE_OUT, SBIT_D|SBIT_R, NBT_TANK_SIDE_AUTO_OUT, SIDE_BOTTOM, NBT_ENERGY_ACCEPTED_SIDES, SBIT_B), "KAX", "ZMY", "CSC", 'M', OP.casingMachine.dat(aMat), 'C', OD_CIRCUITS[6], 'A', IL.Comp_Laser_Gas_Ar, 'K', IL.Comp_Laser_Gas_Kr, 'X', IL.Comp_Laser_Gas_Xe, 'S', IL.Processor_Crystal_Sapphire, 'Y', IL.EMITTERS[2], 'Z', IL.SENSORS[2]);
		aMat = MT.DATA.Electric_T[3];   aRegistry.add("Nanoscale Fabricator ("+VN[3]+")"                    , "Basic Machines"                      , 20844, 20001, aClass, aMat.mToolQuality, 16, aMachine     , UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS,   4.0F, NBT_RESISTANCE,   4.0F, NBT_COLOR, UT.Code.getRGBInt(aMat.fRGBaSolid), NBT_INPUT,  V[3], NBT_TEXTURE, "nanofab", NBT_ENERGY_ACCEPTED, TD.Energy.EU, NBT_RECIPEMAP, RM.Nanofab, NBT_INV_SIDE_IN, SBIT_L|SBIT_U, NBT_INV_SIDE_AUTO_IN, SIDE_LEFT, NBT_INV_SIDE_OUT, SBIT_D|SBIT_R, NBT_INV_SIDE_AUTO_OUT, SIDE_RIGHT, NBT_TANK_SIDE_IN, SBIT_L|SBIT_U, NBT_TANK_SIDE_AUTO_IN, SIDE_TOP, NBT_TANK_SIDE_OUT, SBIT_D|SBIT_R, NBT_TANK_SIDE_AUTO_OUT, SIDE_BOTTOM, NBT_ENERGY_ACCEPTED_SIDES, SBIT_B), "KAX", "ZMY", "CSC", 'M', OP.casingMachine.dat(aMat), 'C', OD_CIRCUITS[6], 'A', IL.Comp_Laser_Gas_Ar, 'K', IL.Comp_Laser_Gas_Kr, 'X', IL.Comp_Laser_Gas_Xe, 'S', IL.Processor_Crystal_Sapphire, 'Y', IL.EMITTERS[3], 'Z', IL.SENSORS[3]);
		aMat = MT.DATA.Electric_T[4];   aRegistry.add("Nanoscale Fabricator ("+VN[4]+")"                    , "Basic Machines"                      , 20845, 20001, aClass, aMat.mToolQuality, 16, aMachine     , UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS,   4.0F, NBT_RESISTANCE,   4.0F, NBT_COLOR, UT.Code.getRGBInt(aMat.fRGBaSolid), NBT_INPUT, V[4], NBT_TEXTURE, "nanofab", NBT_ENERGY_ACCEPTED, TD.Energy.EU, NBT_RECIPEMAP, RM.Nanofab, NBT_INV_SIDE_IN, SBIT_L|SBIT_U, NBT_INV_SIDE_AUTO_IN, SIDE_LEFT, NBT_INV_SIDE_OUT, SBIT_D|SBIT_R, NBT_INV_SIDE_AUTO_OUT, SIDE_RIGHT, NBT_TANK_SIDE_IN, SBIT_L|SBIT_U, NBT_TANK_SIDE_AUTO_IN, SIDE_TOP, NBT_TANK_SIDE_OUT, SBIT_D|SBIT_R, NBT_TANK_SIDE_AUTO_OUT, SIDE_BOTTOM, NBT_ENERGY_ACCEPTED_SIDES, SBIT_B), "KAX", "ZMY", "CSC", 'M', OP.casingMachine.dat(aMat), 'C', OD_CIRCUITS[6], 'A', IL.Comp_Laser_Gas_Ar, 'K', IL.Comp_Laser_Gas_Kr, 'X', IL.Comp_Laser_Gas_Xe, 'S', IL.Processor_Crystal_Sapphire, 'Y', IL.EMITTERS[4], 'Z', IL.SENSORS[4]);
		aMat = MT.DATA.Electric_T[5];   aRegistry.add("Nanoscale Fabricator ("+VN[5]+")"                    , "Basic Machines"                      , 20846, 20001, aClass, aMat.mToolQuality, 16, aMachine     , UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS,   4.0F, NBT_RESISTANCE,   4.0F, NBT_COLOR, UT.Code.getRGBInt(aMat.fRGBaSolid), NBT_INPUT, V[5], NBT_TEXTURE, "nanofab", NBT_ENERGY_ACCEPTED, TD.Energy.EU, NBT_RECIPEMAP, RM.Nanofab, NBT_INV_SIDE_IN, SBIT_L|SBIT_U, NBT_INV_SIDE_AUTO_IN, SIDE_LEFT, NBT_INV_SIDE_OUT, SBIT_D|SBIT_R, NBT_INV_SIDE_AUTO_OUT, SIDE_RIGHT, NBT_TANK_SIDE_IN, SBIT_L|SBIT_U, NBT_TANK_SIDE_AUTO_IN, SIDE_TOP, NBT_TANK_SIDE_OUT, SBIT_D|SBIT_R, NBT_TANK_SIDE_AUTO_OUT, SIDE_BOTTOM, NBT_ENERGY_ACCEPTED_SIDES, SBIT_B), "KAX", "ZMY", "CSC", 'M', OP.casingMachine.dat(aMat), 'C', OD_CIRCUITS[6], 'A', IL.Comp_Laser_Gas_Ar, 'K', IL.Comp_Laser_Gas_Kr, 'X', IL.Comp_Laser_Gas_Xe, 'S', IL.Processor_Crystal_Sapphire, 'Y', IL.EMITTERS[5], 'Z', IL.SENSORS[5]);
		aMat = MT.DATA.Electric_T[6];   aRegistry.add("Nanoscale Fabricator ("+VN[6]+")"                    , "Basic Machines"                      , 20847, 20001, aClass, aMat.mToolQuality, 16, aMachine     , UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS,   4.0F, NBT_RESISTANCE,   4.0F, NBT_COLOR, UT.Code.getRGBInt(aMat.fRGBaSolid), NBT_INPUT,  V[6], NBT_TEXTURE, "nanofab", NBT_ENERGY_ACCEPTED, TD.Energy.EU, NBT_RECIPEMAP, RM.Nanofab, NBT_INV_SIDE_IN, SBIT_L|SBIT_U, NBT_INV_SIDE_AUTO_IN, SIDE_LEFT, NBT_INV_SIDE_OUT, SBIT_D|SBIT_R, NBT_INV_SIDE_AUTO_OUT, SIDE_RIGHT, NBT_TANK_SIDE_IN, SBIT_L|SBIT_U, NBT_TANK_SIDE_AUTO_IN, SIDE_TOP, NBT_TANK_SIDE_OUT, SBIT_D|SBIT_R, NBT_TANK_SIDE_AUTO_OUT, SIDE_BOTTOM, NBT_ENERGY_ACCEPTED_SIDES, SBIT_B), "KAX", "ZMY", "CSC", 'M', OP.casingMachine.dat(aMat), 'C', OD_CIRCUITS[6], 'A', IL.Comp_Laser_Gas_Ar, 'K', IL.Comp_Laser_Gas_Kr, 'X', IL.Comp_Laser_Gas_Xe, 'S', IL.Processor_Crystal_Sapphire, 'Y', IL.EMITTERS[1], 'Z', IL.SENSORS[6]);
		aMat = MT.DATA.Electric_T[7];   aRegistry.add("Nanoscale Fabricator ("+VN[7]+")"                    , "Basic Machines"                      , 20848, 20001, aClass, aMat.mToolQuality, 16, aMachine     , UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS,   4.0F, NBT_RESISTANCE,   4.0F, NBT_COLOR, UT.Code.getRGBInt(aMat.fRGBaSolid), NBT_INPUT,  V[7], NBT_TEXTURE, "nanofab", NBT_ENERGY_ACCEPTED, TD.Energy.EU, NBT_RECIPEMAP, RM.Nanofab, NBT_INV_SIDE_IN, SBIT_L|SBIT_U, NBT_INV_SIDE_AUTO_IN, SIDE_LEFT, NBT_INV_SIDE_OUT, SBIT_D|SBIT_R, NBT_INV_SIDE_AUTO_OUT, SIDE_RIGHT, NBT_TANK_SIDE_IN, SBIT_L|SBIT_U, NBT_TANK_SIDE_AUTO_IN, SIDE_TOP, NBT_TANK_SIDE_OUT, SBIT_D|SBIT_R, NBT_TANK_SIDE_AUTO_OUT, SIDE_BOTTOM, NBT_ENERGY_ACCEPTED_SIDES, SBIT_B), "KAX", "ZMY", "CSC", 'M', OP.casingMachine.dat(aMat), 'C', OD_CIRCUITS[6], 'A', IL.Comp_Laser_Gas_Ar, 'K', IL.Comp_Laser_Gas_Kr, 'X', IL.Comp_Laser_Gas_Xe, 'S', IL.Processor_Crystal_Sapphire, 'Y', IL.EMITTERS[1], 'Z', IL.SENSORS[7]);
		aMat = MT.DATA.Electric_T[8];   aRegistry.add("Nanoscale Fabricator ("+VN[8]+")"                    , "Basic Machines"                      , 20849, 20001, aClass, aMat.mToolQuality, 16, aMachine     , UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS,   4.0F, NBT_RESISTANCE,   4.0F, NBT_COLOR, UT.Code.getRGBInt(aMat.fRGBaSolid), NBT_INPUT,  V[8], NBT_TEXTURE, "nanofab", NBT_ENERGY_ACCEPTED, TD.Energy.EU, NBT_RECIPEMAP, RM.Nanofab, NBT_INV_SIDE_IN, SBIT_L|SBIT_U, NBT_INV_SIDE_AUTO_IN, SIDE_LEFT, NBT_INV_SIDE_OUT, SBIT_D|SBIT_R, NBT_INV_SIDE_AUTO_OUT, SIDE_RIGHT, NBT_TANK_SIDE_IN, SBIT_L|SBIT_U, NBT_TANK_SIDE_AUTO_IN, SIDE_TOP, NBT_TANK_SIDE_OUT, SBIT_D|SBIT_R, NBT_TANK_SIDE_AUTO_OUT, SIDE_BOTTOM, NBT_ENERGY_ACCEPTED_SIDES, SBIT_B), "KAX", "ZMY", "CSC", 'M', OP.casingMachine.dat(aMat), 'C', OD_CIRCUITS[6], 'A', IL.Comp_Laser_Gas_Ar, 'K', IL.Comp_Laser_Gas_Kr, 'X', IL.Comp_Laser_Gas_Xe, 'S', IL.Processor_Crystal_Sapphire, 'Y', IL.EMITTERS[2], 'Z', IL.SENSORS[8]);
		aMat = MT.DATA.Electric_T[9];   aRegistry.add("Nanoscale Fabricator ("+VN[9]+")"                    , "Basic Machines"                      , 20850, 20001, aClass, aMat.mToolQuality, 16, aMachine     , UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS,   4.0F, NBT_RESISTANCE,   4.0F, NBT_COLOR, UT.Code.getRGBInt(aMat.fRGBaSolid), NBT_INPUT,  V[9], NBT_TEXTURE, "nanofab", NBT_ENERGY_ACCEPTED, TD.Energy.EU, NBT_RECIPEMAP, RM.Nanofab, NBT_INV_SIDE_IN, SBIT_L|SBIT_U, NBT_INV_SIDE_AUTO_IN, SIDE_LEFT, NBT_INV_SIDE_OUT, SBIT_D|SBIT_R, NBT_INV_SIDE_AUTO_OUT, SIDE_RIGHT, NBT_TANK_SIDE_IN, SBIT_L|SBIT_U, NBT_TANK_SIDE_AUTO_IN, SIDE_TOP, NBT_TANK_SIDE_OUT, SBIT_D|SBIT_R, NBT_TANK_SIDE_AUTO_OUT, SIDE_BOTTOM, NBT_ENERGY_ACCEPTED_SIDES, SBIT_B), "KAX", "ZMY", "CSC", 'M', OP.casingMachine.dat(aMat), 'C', OD_CIRCUITS[6], 'A', IL.Comp_Laser_Gas_Ar, 'K', IL.Comp_Laser_Gas_Kr, 'X', IL.Comp_Laser_Gas_Xe, 'S', IL.Processor_Crystal_Sapphire, 'Y', IL.EMITTERS[3], 'Z', IL.SENSORS[9]);
		aMat = MT.DATA.Electric_T[10];   aRegistry.add("Nanoscale Fabricator ("+VN[10]+")"                    , "Basic Machines"                      , 20851, 20001, aClass, aMat.mToolQuality, 16, aMachine     , UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS,   4.0F, NBT_RESISTANCE,   4.0F, NBT_COLOR, UT.Code.getRGBInt(aMat.fRGBaSolid), NBT_INPUT, V[10], NBT_TEXTURE, "nanofab", NBT_ENERGY_ACCEPTED, TD.Energy.EU, NBT_RECIPEMAP, RM.Nanofab, NBT_INV_SIDE_IN, SBIT_L|SBIT_U, NBT_INV_SIDE_AUTO_IN, SIDE_LEFT, NBT_INV_SIDE_OUT, SBIT_D|SBIT_R, NBT_INV_SIDE_AUTO_OUT, SIDE_RIGHT, NBT_TANK_SIDE_IN, SBIT_L|SBIT_U, NBT_TANK_SIDE_AUTO_IN, SIDE_TOP, NBT_TANK_SIDE_OUT, SBIT_D|SBIT_R, NBT_TANK_SIDE_AUTO_OUT, SIDE_BOTTOM, NBT_ENERGY_ACCEPTED_SIDES, SBIT_B), "KAX", "ZMY", "CSC", 'M', OP.casingMachine.dat(aMat), 'C', OD_CIRCUITS[6], 'A', IL.Comp_Laser_Gas_Ar, 'K', IL.Comp_Laser_Gas_Kr, 'X', IL.Comp_Laser_Gas_Xe, 'S', IL.Processor_Crystal_Sapphire, 'Y', IL.EMITTERS[4], 'Z', IL.SENSORS[10]);
		aMat = MT.DATA.Electric_T[11];   aRegistry.add("Nanoscale Fabricator ("+VN[11]+")"                    , "Basic Machines"                      , 20852, 20001, aClass, aMat.mToolQuality, 16, aMachine     , UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS,   4.0F, NBT_RESISTANCE,   4.0F, NBT_COLOR, UT.Code.getRGBInt(aMat.fRGBaSolid), NBT_INPUT, V[11], NBT_TEXTURE, "nanofab", NBT_ENERGY_ACCEPTED, TD.Energy.EU, NBT_RECIPEMAP, RM.Nanofab, NBT_INV_SIDE_IN, SBIT_L|SBIT_U, NBT_INV_SIDE_AUTO_IN, SIDE_LEFT, NBT_INV_SIDE_OUT, SBIT_D|SBIT_R, NBT_INV_SIDE_AUTO_OUT, SIDE_RIGHT, NBT_TANK_SIDE_IN, SBIT_L|SBIT_U, NBT_TANK_SIDE_AUTO_IN, SIDE_TOP, NBT_TANK_SIDE_OUT, SBIT_D|SBIT_R, NBT_TANK_SIDE_AUTO_OUT, SIDE_BOTTOM, NBT_ENERGY_ACCEPTED_SIDES, SBIT_B), "KAX", "ZMY", "CSC", 'M', OP.casingMachine.dat(aMat), 'C', OD_CIRCUITS[6], 'A', IL.Comp_Laser_Gas_Ar, 'K', IL.Comp_Laser_Gas_Kr, 'X', IL.Comp_Laser_Gas_Xe, 'S', IL.Processor_Crystal_Sapphire, 'Y', IL.EMITTERS[5], 'Z', IL.SENSORS[11]);
		aMat = MT.DATA.Electric_T[12];   aRegistry.add("Nanoscale Fabricator ("+VN[12]+")"                    , "Basic Machines"                      , 20853, 20001, aClass, aMat.mToolQuality, 16, aMachine     , UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS,   4.0F, NBT_RESISTANCE,   4.0F, NBT_COLOR, UT.Code.getRGBInt(aMat.fRGBaSolid), NBT_INPUT,  V[12], NBT_TEXTURE, "nanofab", NBT_ENERGY_ACCEPTED, TD.Energy.EU, NBT_RECIPEMAP, RM.Nanofab, NBT_INV_SIDE_IN, SBIT_L|SBIT_U, NBT_INV_SIDE_AUTO_IN, SIDE_LEFT, NBT_INV_SIDE_OUT, SBIT_D|SBIT_R, NBT_INV_SIDE_AUTO_OUT, SIDE_RIGHT, NBT_TANK_SIDE_IN, SBIT_L|SBIT_U, NBT_TANK_SIDE_AUTO_IN, SIDE_TOP, NBT_TANK_SIDE_OUT, SBIT_D|SBIT_R, NBT_TANK_SIDE_AUTO_OUT, SIDE_BOTTOM, NBT_ENERGY_ACCEPTED_SIDES, SBIT_B), "KAX", "ZMY", "CSC", 'M', OP.casingMachine.dat(aMat), 'C', OD_CIRCUITS[6], 'A', IL.Comp_Laser_Gas_Ar, 'K', IL.Comp_Laser_Gas_Kr, 'X', IL.Comp_Laser_Gas_Xe, 'S', IL.Processor_Crystal_Sapphire, 'Y', IL.EMITTERS[1], 'Z', IL.SENSORS[12]);
		aMat = MT.DATA.Electric_T[13];   aRegistry.add("Nanoscale Fabricator ("+VN[13]+")"                    , "Basic Machines"                      , 20854, 20001, aClass, aMat.mToolQuality, 16, aMachine     , UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS,   4.0F, NBT_RESISTANCE,   4.0F, NBT_COLOR, UT.Code.getRGBInt(aMat.fRGBaSolid), NBT_INPUT,  V[13], NBT_TEXTURE, "nanofab", NBT_ENERGY_ACCEPTED, TD.Energy.EU, NBT_RECIPEMAP, RM.Nanofab, NBT_INV_SIDE_IN, SBIT_L|SBIT_U, NBT_INV_SIDE_AUTO_IN, SIDE_LEFT, NBT_INV_SIDE_OUT, SBIT_D|SBIT_R, NBT_INV_SIDE_AUTO_OUT, SIDE_RIGHT, NBT_TANK_SIDE_IN, SBIT_L|SBIT_U, NBT_TANK_SIDE_AUTO_IN, SIDE_TOP, NBT_TANK_SIDE_OUT, SBIT_D|SBIT_R, NBT_TANK_SIDE_AUTO_OUT, SIDE_BOTTOM, NBT_ENERGY_ACCEPTED_SIDES, SBIT_B), "KAX", "ZMY", "CSC", 'M', OP.casingMachine.dat(aMat), 'C', OD_CIRCUITS[6], 'A', IL.Comp_Laser_Gas_Ar, 'K', IL.Comp_Laser_Gas_Kr, 'X', IL.Comp_Laser_Gas_Xe, 'S', IL.Processor_Crystal_Sapphire, 'Y', IL.EMITTERS[1], 'Z', IL.SENSORS[13]);
		aMat = MT.DATA.Electric_T[14];   aRegistry.add("Nanoscale Fabricator ("+VN[14]+")"                    , "Basic Machines"                      , 20855, 20001, aClass, aMat.mToolQuality, 16, aMachine     , UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS,   4.0F, NBT_RESISTANCE,   4.0F, NBT_COLOR, UT.Code.getRGBInt(aMat.fRGBaSolid), NBT_INPUT,  V[14], NBT_TEXTURE, "nanofab", NBT_ENERGY_ACCEPTED, TD.Energy.EU, NBT_RECIPEMAP, RM.Nanofab, NBT_INV_SIDE_IN, SBIT_L|SBIT_U, NBT_INV_SIDE_AUTO_IN, SIDE_LEFT, NBT_INV_SIDE_OUT, SBIT_D|SBIT_R, NBT_INV_SIDE_AUTO_OUT, SIDE_RIGHT, NBT_TANK_SIDE_IN, SBIT_L|SBIT_U, NBT_TANK_SIDE_AUTO_IN, SIDE_TOP, NBT_TANK_SIDE_OUT, SBIT_D|SBIT_R, NBT_TANK_SIDE_AUTO_OUT, SIDE_BOTTOM, NBT_ENERGY_ACCEPTED_SIDES, SBIT_B), "KAX", "ZMY", "CSC", 'M', OP.casingMachine.dat(aMat), 'C', OD_CIRCUITS[6], 'A', IL.Comp_Laser_Gas_Ar, 'K', IL.Comp_Laser_Gas_Kr, 'X', IL.Comp_Laser_Gas_Xe, 'S', IL.Processor_Crystal_Sapphire, 'Y', IL.EMITTERS[2], 'Z', IL.SENSORS[14]);
		aMat = MT.DATA.Electric_T[15];   aRegistry.add("Nanoscale Fabricator ("+VN[15]+")"                    , "Basic Machines"                      , 20856, 20001, aClass, aMat.mToolQuality, 16, aMachine     , UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS,   4.0F, NBT_RESISTANCE,   4.0F, NBT_COLOR, UT.Code.getRGBInt(aMat.fRGBaSolid), NBT_INPUT,  V[15], NBT_TEXTURE, "nanofab", NBT_ENERGY_ACCEPTED, TD.Energy.EU, NBT_RECIPEMAP, RM.Nanofab, NBT_INV_SIDE_IN, SBIT_L|SBIT_U, NBT_INV_SIDE_AUTO_IN, SIDE_LEFT, NBT_INV_SIDE_OUT, SBIT_D|SBIT_R, NBT_INV_SIDE_AUTO_OUT, SIDE_RIGHT, NBT_TANK_SIDE_IN, SBIT_L|SBIT_U, NBT_TANK_SIDE_AUTO_IN, SIDE_TOP, NBT_TANK_SIDE_OUT, SBIT_D|SBIT_R, NBT_TANK_SIDE_AUTO_OUT, SIDE_BOTTOM, NBT_ENERGY_ACCEPTED_SIDES, SBIT_B), "KAX", "ZMY", "CSC", 'M', OP.casingMachine.dat(aMat), 'C', OD_CIRCUITS[6], 'A', IL.Comp_Laser_Gas_Ar, 'K', IL.Comp_Laser_Gas_Kr, 'X', IL.Comp_Laser_Gas_Xe, 'S', IL.Processor_Crystal_Sapphire, 'Y', IL.EMITTERS[3], 'Z', IL.SENSORS[15]);

		aClass = MultiTileEntityBasicMachine.class;
		aMat = MT.DATA.Heat_T[0];       aRegistry.add("Catalytic Cracker (" + aMat.getLocal() + ")"         , "Basic Machines"                      , 20861, 20001, aClass, aMat.mToolQuality, 16, aMachine     , UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS, HARDNESS[0], NBT_RESISTANCE, HARDNESS[0], NBT_COLOR, UT.Code.getRGBInt(aMat.fRGBaSolid), NBT_INPUT, V[0], NBT_TEXTURE, "catalyticcracker", NBT_ENERGY_ACCEPTED, TD.Energy.HU, NBT_RECIPEMAP, RM.CatalyticCracking, NBT_INV_SIDE_IN, SBIT_U|SBIT_L, NBT_INV_SIDE_AUTO_IN, SIDE_TOP, NBT_INV_SIDE_OUT, SBIT_R|SBIT_B, NBT_INV_SIDE_AUTO_OUT, SIDE_BACK, NBT_TANK_SIDE_IN, SBIT_U|SBIT_L, NBT_TANK_SIDE_AUTO_IN, SIDE_LEFT, NBT_TANK_SIDE_OUT, SBIT_R|SBIT_B, NBT_TANK_SIDE_AUTO_OUT, SIDE_RIGHT, NBT_ENERGY_ACCEPTED_SIDES, SBIT_D), "IPI", "ZMZ", "ICI", 'M', OP.casingMachineDouble.dat(aMat), 'C', OP.plateDouble   .dat(ANY.Cu), 'I', OP.plateDouble   .dat(MT.Invar), 'P', OP.pipeQuadruple.dat(aMat), 'Z', OP.dust.dat(MT.OREMATS.Zeolite));
		aMat = MT.DATA.Heat_T[1];       aRegistry.add("Catalytic Cracker (" + aMat.getLocal() + ")"         , "Basic Machines"                      , 20862, 20001, aClass, aMat.mToolQuality, 16, aMachine     , UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS, HARDNESS[1], NBT_RESISTANCE, HARDNESS[1], NBT_COLOR, UT.Code.getRGBInt(aMat.fRGBaSolid), NBT_INPUT, V[1], NBT_TEXTURE, "catalyticcracker", NBT_ENERGY_ACCEPTED, TD.Energy.HU, NBT_RECIPEMAP, RM.CatalyticCracking, NBT_INV_SIDE_IN, SBIT_U|SBIT_L, NBT_INV_SIDE_AUTO_IN, SIDE_TOP, NBT_INV_SIDE_OUT, SBIT_R|SBIT_B, NBT_INV_SIDE_AUTO_OUT, SIDE_BACK, NBT_TANK_SIDE_IN, SBIT_U|SBIT_L, NBT_TANK_SIDE_AUTO_IN, SIDE_LEFT, NBT_TANK_SIDE_OUT, SBIT_R|SBIT_B, NBT_TANK_SIDE_AUTO_OUT, SIDE_RIGHT, NBT_ENERGY_ACCEPTED_SIDES, SBIT_D), "IPI", "ZMZ", "ICI", 'M', OP.casingMachineDouble.dat(aMat), 'C', OP.plateDouble   .dat(ANY.Cu), 'I', OP.plateDouble   .dat(MT.Invar), 'P', OP.pipeQuadruple.dat(aMat), 'Z', OP.dust.dat(MT.OREMATS.Zeolite));
		aMat = MT.DATA.Heat_T[2];       aRegistry.add("Catalytic Cracker (" + aMat.getLocal() + ")"         , "Basic Machines"                      , 20863, 20001, aClass, aMat.mToolQuality, 16, aMachine     , UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS, HARDNESS[2], NBT_RESISTANCE, HARDNESS[2], NBT_COLOR, UT.Code.getRGBInt(aMat.fRGBaSolid), NBT_INPUT, V[2], NBT_TEXTURE, "catalyticcracker", NBT_ENERGY_ACCEPTED, TD.Energy.HU, NBT_RECIPEMAP, RM.CatalyticCracking, NBT_INV_SIDE_IN, SBIT_U|SBIT_L, NBT_INV_SIDE_AUTO_IN, SIDE_TOP, NBT_INV_SIDE_OUT, SBIT_R|SBIT_B, NBT_INV_SIDE_AUTO_OUT, SIDE_BACK, NBT_TANK_SIDE_IN, SBIT_U|SBIT_L, NBT_TANK_SIDE_AUTO_IN, SIDE_LEFT, NBT_TANK_SIDE_OUT, SBIT_R|SBIT_B, NBT_TANK_SIDE_AUTO_OUT, SIDE_RIGHT, NBT_ENERGY_ACCEPTED_SIDES, SBIT_D), "IPI", "ZMZ", "ICI", 'M', OP.casingMachineDouble.dat(aMat), 'C', OP.plateTriple   .dat(ANY.Cu), 'I', OP.plateTriple   .dat(MT.Invar), 'P', OP.pipeQuadruple.dat(aMat), 'Z', OP.dust.dat(MT.OREMATS.Zeolite));
		aMat = MT.DATA.Heat_T[3];       aRegistry.add("Catalytic Cracker (" + aMat.getLocal() + ")"         , "Basic Machines"                      , 20864, 20001, aClass, aMat.mToolQuality, 16, aMachine     , UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS, HARDNESS[3], NBT_RESISTANCE, HARDNESS[3], NBT_COLOR, UT.Code.getRGBInt(aMat.fRGBaSolid), NBT_INPUT, V[3], NBT_TEXTURE, "catalyticcracker", NBT_ENERGY_ACCEPTED, TD.Energy.HU, NBT_RECIPEMAP, RM.CatalyticCracking, NBT_INV_SIDE_IN, SBIT_U|SBIT_L, NBT_INV_SIDE_AUTO_IN, SIDE_TOP, NBT_INV_SIDE_OUT, SBIT_R|SBIT_B, NBT_INV_SIDE_AUTO_OUT, SIDE_BACK, NBT_TANK_SIDE_IN, SBIT_U|SBIT_L, NBT_TANK_SIDE_AUTO_IN, SIDE_LEFT, NBT_TANK_SIDE_OUT, SBIT_R|SBIT_B, NBT_TANK_SIDE_AUTO_OUT, SIDE_RIGHT, NBT_ENERGY_ACCEPTED_SIDES, SBIT_D), "IPI", "ZMZ", "ICI", 'M', OP.casingMachineDouble.dat(aMat), 'C', OP.plateQuadruple.dat(ANY.Cu), 'I', OP.plateQuadruple.dat(MT.Invar), 'P', OP.pipeQuadruple.dat(aMat), 'Z', OP.dust.dat(MT.OREMATS.Zeolite));
		aMat = MT.DATA.Heat_T[4];       aRegistry.add("Catalytic Cracker (" + aMat.getLocal() + ")"         , "Basic Machines"                      , 20865, 20001, aClass, aMat.mToolQuality, 16, aMachine     , UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS, HARDNESS[4], NBT_RESISTANCE, HARDNESS[4], NBT_COLOR, UT.Code.getRGBInt(aMat.fRGBaSolid), NBT_INPUT, V[4], NBT_TEXTURE, "catalyticcracker", NBT_ENERGY_ACCEPTED, TD.Energy.HU, NBT_RECIPEMAP, RM.CatalyticCracking, NBT_INV_SIDE_IN, SBIT_U|SBIT_L, NBT_INV_SIDE_AUTO_IN, SIDE_TOP, NBT_INV_SIDE_OUT, SBIT_R|SBIT_B, NBT_INV_SIDE_AUTO_OUT, SIDE_BACK, NBT_TANK_SIDE_IN, SBIT_U|SBIT_L, NBT_TANK_SIDE_AUTO_IN, SIDE_LEFT, NBT_TANK_SIDE_OUT, SBIT_R|SBIT_B, NBT_TANK_SIDE_AUTO_OUT, SIDE_RIGHT, NBT_ENERGY_ACCEPTED_SIDES, SBIT_D), "IPI", "ZMZ", "ICI", 'M', OP.casingMachineDouble.dat(aMat), 'C', OP.plateQuintuple.dat(ANY.Cu), 'I', OP.plateQuintuple.dat(MT.Invar), 'P', OP.pipeQuadruple.dat(aMat), 'Z', OP.dust.dat(MT.OREMATS.Zeolite));
		aMat = MT.DATA.Heat_T[5];       aRegistry.add("Catalytic Cracker (" + aMat.getLocal() + ")"         , "Basic Machines"                      , 20866, 20001, aClass, aMat.mToolQuality, 16, aMachine     , UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS, HARDNESS[5], NBT_RESISTANCE, HARDNESS[5], NBT_COLOR, UT.Code.getRGBInt(aMat.fRGBaSolid), NBT_INPUT, V[5], NBT_TEXTURE, "catalyticcracker", NBT_ENERGY_ACCEPTED, TD.Energy.HU, NBT_RECIPEMAP, RM.CatalyticCracking, NBT_INV_SIDE_IN, SBIT_U|SBIT_L, NBT_INV_SIDE_AUTO_IN, SIDE_TOP, NBT_INV_SIDE_OUT, SBIT_R|SBIT_B, NBT_INV_SIDE_AUTO_OUT, SIDE_BACK, NBT_TANK_SIDE_IN, SBIT_U|SBIT_L, NBT_TANK_SIDE_AUTO_IN, SIDE_LEFT, NBT_TANK_SIDE_OUT, SBIT_R|SBIT_B, NBT_TANK_SIDE_AUTO_OUT, SIDE_RIGHT, NBT_ENERGY_ACCEPTED_SIDES, SBIT_D), "IPI", "ZMZ", "ICI", 'M', OP.casingMachineDouble.dat(aMat), 'C', OP.plateDouble   .dat(ANY.Cu), 'I', OP.plateDouble   .dat(MT.Invar), 'P', OP.pipeQuadruple.dat(aMat), 'Z', OP.dust.dat(MT.OREMATS.Zeolite));
		aMat = MT.DATA.Heat_T[6];       aRegistry.add("Catalytic Cracker (" + aMat.getLocal() + ")"         , "Basic Machines"                      , 20867, 20001, aClass, aMat.mToolQuality, 16, aMachine     , UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS, HARDNESS[6], NBT_RESISTANCE, HARDNESS[6], NBT_COLOR, UT.Code.getRGBInt(aMat.fRGBaSolid), NBT_INPUT, V[6], NBT_TEXTURE, "catalyticcracker", NBT_ENERGY_ACCEPTED, TD.Energy.HU, NBT_RECIPEMAP, RM.CatalyticCracking, NBT_INV_SIDE_IN, SBIT_U|SBIT_L, NBT_INV_SIDE_AUTO_IN, SIDE_TOP, NBT_INV_SIDE_OUT, SBIT_R|SBIT_B, NBT_INV_SIDE_AUTO_OUT, SIDE_BACK, NBT_TANK_SIDE_IN, SBIT_U|SBIT_L, NBT_TANK_SIDE_AUTO_IN, SIDE_LEFT, NBT_TANK_SIDE_OUT, SBIT_R|SBIT_B, NBT_TANK_SIDE_AUTO_OUT, SIDE_RIGHT, NBT_ENERGY_ACCEPTED_SIDES, SBIT_D), "IPI", "ZMZ", "ICI", 'M', OP.casingMachineDouble.dat(aMat), 'C', OP.plateDouble   .dat(ANY.Cu), 'I', OP.plateDouble   .dat(MT.Invar), 'P', OP.pipeQuadruple.dat(aMat), 'Z', OP.dust.dat(MT.OREMATS.Zeolite));
		aMat = MT.DATA.Heat_T[7];       aRegistry.add("Catalytic Cracker (" + aMat.getLocal() + ")"         , "Basic Machines"                      , 20868, 20001, aClass, aMat.mToolQuality, 16, aMachine     , UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS, HARDNESS[7], NBT_RESISTANCE, HARDNESS[7], NBT_COLOR, UT.Code.getRGBInt(aMat.fRGBaSolid), NBT_INPUT, V[7], NBT_TEXTURE, "catalyticcracker", NBT_ENERGY_ACCEPTED, TD.Energy.HU, NBT_RECIPEMAP, RM.CatalyticCracking, NBT_INV_SIDE_IN, SBIT_U|SBIT_L, NBT_INV_SIDE_AUTO_IN, SIDE_TOP, NBT_INV_SIDE_OUT, SBIT_R|SBIT_B, NBT_INV_SIDE_AUTO_OUT, SIDE_BACK, NBT_TANK_SIDE_IN, SBIT_U|SBIT_L, NBT_TANK_SIDE_AUTO_IN, SIDE_LEFT, NBT_TANK_SIDE_OUT, SBIT_R|SBIT_B, NBT_TANK_SIDE_AUTO_OUT, SIDE_RIGHT, NBT_ENERGY_ACCEPTED_SIDES, SBIT_D), "IPI", "ZMZ", "ICI", 'M', OP.casingMachineDouble.dat(aMat), 'C', OP.plateTriple   .dat(ANY.Cu), 'I', OP.plateTriple   .dat(MT.Invar), 'P', OP.pipeQuadruple.dat(aMat), 'Z', OP.dust.dat(MT.OREMATS.Zeolite));
		aMat = MT.DATA.Heat_T[8];       aRegistry.add("Catalytic Cracker (" + aMat.getLocal() + ")"         , "Basic Machines"                      , 20869, 20001, aClass, aMat.mToolQuality, 16, aMachine     , UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS, HARDNESS[8], NBT_RESISTANCE, HARDNESS[8], NBT_COLOR, UT.Code.getRGBInt(aMat.fRGBaSolid), NBT_INPUT, V[8], NBT_TEXTURE, "catalyticcracker", NBT_ENERGY_ACCEPTED, TD.Energy.HU, NBT_RECIPEMAP, RM.CatalyticCracking, NBT_INV_SIDE_IN, SBIT_U|SBIT_L, NBT_INV_SIDE_AUTO_IN, SIDE_TOP, NBT_INV_SIDE_OUT, SBIT_R|SBIT_B, NBT_INV_SIDE_AUTO_OUT, SIDE_BACK, NBT_TANK_SIDE_IN, SBIT_U|SBIT_L, NBT_TANK_SIDE_AUTO_IN, SIDE_LEFT, NBT_TANK_SIDE_OUT, SBIT_R|SBIT_B, NBT_TANK_SIDE_AUTO_OUT, SIDE_RIGHT, NBT_ENERGY_ACCEPTED_SIDES, SBIT_D), "IPI", "ZMZ", "ICI", 'M', OP.casingMachineDouble.dat(aMat), 'C', OP.plateQuadruple.dat(ANY.Cu), 'I', OP.plateQuadruple.dat(MT.Invar), 'P', OP.pipeQuadruple.dat(aMat), 'Z', OP.dust.dat(MT.OREMATS.Zeolite));
		aMat = MT.DATA.Heat_T[9];       aRegistry.add("Catalytic Cracker (" + aMat.getLocal() + ")"         , "Basic Machines"                      , 20870, 20001, aClass, aMat.mToolQuality, 16, aMachine     , UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS, HARDNESS[9], NBT_RESISTANCE, HARDNESS[9], NBT_COLOR, UT.Code.getRGBInt(aMat.fRGBaSolid), NBT_INPUT, V[9], NBT_TEXTURE, "catalyticcracker", NBT_ENERGY_ACCEPTED, TD.Energy.HU, NBT_RECIPEMAP, RM.CatalyticCracking, NBT_INV_SIDE_IN, SBIT_U|SBIT_L, NBT_INV_SIDE_AUTO_IN, SIDE_TOP, NBT_INV_SIDE_OUT, SBIT_R|SBIT_B, NBT_INV_SIDE_AUTO_OUT, SIDE_BACK, NBT_TANK_SIDE_IN, SBIT_U|SBIT_L, NBT_TANK_SIDE_AUTO_IN, SIDE_LEFT, NBT_TANK_SIDE_OUT, SBIT_R|SBIT_B, NBT_TANK_SIDE_AUTO_OUT, SIDE_RIGHT, NBT_ENERGY_ACCEPTED_SIDES, SBIT_D), "IPI", "ZMZ", "ICI", 'M', OP.casingMachineDouble.dat(aMat), 'C', OP.plateQuintuple.dat(ANY.Cu), 'I', OP.plateQuintuple.dat(MT.Invar), 'P', OP.pipeQuadruple.dat(aMat), 'Z', OP.dust.dat(MT.OREMATS.Zeolite));
		aMat = MT.DATA.Heat_T[10];       aRegistry.add("Catalytic Cracker (" + aMat.getLocal() + ")"         , "Basic Machines"                      , 20871, 20001, aClass, aMat.mToolQuality, 16, aMachine     , UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS, HARDNESS[10], NBT_RESISTANCE, HARDNESS[10], NBT_COLOR, UT.Code.getRGBInt(aMat.fRGBaSolid), NBT_INPUT, V[10], NBT_TEXTURE, "catalyticcracker", NBT_ENERGY_ACCEPTED, TD.Energy.HU, NBT_RECIPEMAP, RM.CatalyticCracking, NBT_INV_SIDE_IN, SBIT_U|SBIT_L, NBT_INV_SIDE_AUTO_IN, SIDE_TOP, NBT_INV_SIDE_OUT, SBIT_R|SBIT_B, NBT_INV_SIDE_AUTO_OUT, SIDE_BACK, NBT_TANK_SIDE_IN, SBIT_U|SBIT_L, NBT_TANK_SIDE_AUTO_IN, SIDE_LEFT, NBT_TANK_SIDE_OUT, SBIT_R|SBIT_B, NBT_TANK_SIDE_AUTO_OUT, SIDE_RIGHT, NBT_ENERGY_ACCEPTED_SIDES, SBIT_D), "IPI", "ZMZ", "ICI", 'M', OP.casingMachineDouble.dat(aMat), 'C', OP.plateDouble   .dat(ANY.Cu), 'I', OP.plateDouble   .dat(MT.Invar), 'P', OP.pipeQuadruple.dat(aMat), 'Z', OP.dust.dat(MT.OREMATS.Zeolite));
		aMat = MT.DATA.Heat_T[11];       aRegistry.add("Catalytic Cracker (" + aMat.getLocal() + ")"         , "Basic Machines"                      , 20872, 20001, aClass, aMat.mToolQuality, 16, aMachine     , UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS, HARDNESS[11], NBT_RESISTANCE, HARDNESS[11], NBT_COLOR, UT.Code.getRGBInt(aMat.fRGBaSolid), NBT_INPUT, V[11], NBT_TEXTURE, "catalyticcracker", NBT_ENERGY_ACCEPTED, TD.Energy.HU, NBT_RECIPEMAP, RM.CatalyticCracking, NBT_INV_SIDE_IN, SBIT_U|SBIT_L, NBT_INV_SIDE_AUTO_IN, SIDE_TOP, NBT_INV_SIDE_OUT, SBIT_R|SBIT_B, NBT_INV_SIDE_AUTO_OUT, SIDE_BACK, NBT_TANK_SIDE_IN, SBIT_U|SBIT_L, NBT_TANK_SIDE_AUTO_IN, SIDE_LEFT, NBT_TANK_SIDE_OUT, SBIT_R|SBIT_B, NBT_TANK_SIDE_AUTO_OUT, SIDE_RIGHT, NBT_ENERGY_ACCEPTED_SIDES, SBIT_D), "IPI", "ZMZ", "ICI", 'M', OP.casingMachineDouble.dat(aMat), 'C', OP.plateDouble   .dat(ANY.Cu), 'I', OP.plateDouble   .dat(MT.Invar), 'P', OP.pipeQuadruple.dat(aMat), 'Z', OP.dust.dat(MT.OREMATS.Zeolite));
		aMat = MT.DATA.Heat_T[12];       aRegistry.add("Catalytic Cracker (" + aMat.getLocal() + ")"         , "Basic Machines"                      , 20873, 20001, aClass, aMat.mToolQuality, 16, aMachine     , UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS, HARDNESS[12], NBT_RESISTANCE, HARDNESS[12], NBT_COLOR, UT.Code.getRGBInt(aMat.fRGBaSolid), NBT_INPUT, V[12], NBT_TEXTURE, "catalyticcracker", NBT_ENERGY_ACCEPTED, TD.Energy.HU, NBT_RECIPEMAP, RM.CatalyticCracking, NBT_INV_SIDE_IN, SBIT_U|SBIT_L, NBT_INV_SIDE_AUTO_IN, SIDE_TOP, NBT_INV_SIDE_OUT, SBIT_R|SBIT_B, NBT_INV_SIDE_AUTO_OUT, SIDE_BACK, NBT_TANK_SIDE_IN, SBIT_U|SBIT_L, NBT_TANK_SIDE_AUTO_IN, SIDE_LEFT, NBT_TANK_SIDE_OUT, SBIT_R|SBIT_B, NBT_TANK_SIDE_AUTO_OUT, SIDE_RIGHT, NBT_ENERGY_ACCEPTED_SIDES, SBIT_D), "IPI", "ZMZ", "ICI", 'M', OP.casingMachineDouble.dat(aMat), 'C', OP.plateTriple   .dat(ANY.Cu), 'I', OP.plateTriple   .dat(MT.Invar), 'P', OP.pipeQuadruple.dat(aMat), 'Z', OP.dust.dat(MT.OREMATS.Zeolite));
		aMat = MT.DATA.Heat_T[13];       aRegistry.add("Catalytic Cracker (" + aMat.getLocal() + ")"         , "Basic Machines"                      , 20874, 20001, aClass, aMat.mToolQuality, 16, aMachine     , UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS, HARDNESS[13], NBT_RESISTANCE, HARDNESS[13], NBT_COLOR, UT.Code.getRGBInt(aMat.fRGBaSolid), NBT_INPUT, V[13], NBT_TEXTURE, "catalyticcracker", NBT_ENERGY_ACCEPTED, TD.Energy.HU, NBT_RECIPEMAP, RM.CatalyticCracking, NBT_INV_SIDE_IN, SBIT_U|SBIT_L, NBT_INV_SIDE_AUTO_IN, SIDE_TOP, NBT_INV_SIDE_OUT, SBIT_R|SBIT_B, NBT_INV_SIDE_AUTO_OUT, SIDE_BACK, NBT_TANK_SIDE_IN, SBIT_U|SBIT_L, NBT_TANK_SIDE_AUTO_IN, SIDE_LEFT, NBT_TANK_SIDE_OUT, SBIT_R|SBIT_B, NBT_TANK_SIDE_AUTO_OUT, SIDE_RIGHT, NBT_ENERGY_ACCEPTED_SIDES, SBIT_D), "IPI", "ZMZ", "ICI", 'M', OP.casingMachineDouble.dat(aMat), 'C', OP.plateQuadruple.dat(ANY.Cu), 'I', OP.plateQuadruple.dat(MT.Invar), 'P', OP.pipeQuadruple.dat(aMat), 'Z', OP.dust.dat(MT.OREMATS.Zeolite));
		aMat = MT.DATA.Heat_T[14];       aRegistry.add("Catalytic Cracker (" + aMat.getLocal() + ")"         , "Basic Machines"                      , 20875, 20001, aClass, aMat.mToolQuality, 16, aMachine     , UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS, HARDNESS[14], NBT_RESISTANCE, HARDNESS[14], NBT_COLOR, UT.Code.getRGBInt(aMat.fRGBaSolid), NBT_INPUT, V[14], NBT_TEXTURE, "catalyticcracker", NBT_ENERGY_ACCEPTED, TD.Energy.HU, NBT_RECIPEMAP, RM.CatalyticCracking, NBT_INV_SIDE_IN, SBIT_U|SBIT_L, NBT_INV_SIDE_AUTO_IN, SIDE_TOP, NBT_INV_SIDE_OUT, SBIT_R|SBIT_B, NBT_INV_SIDE_AUTO_OUT, SIDE_BACK, NBT_TANK_SIDE_IN, SBIT_U|SBIT_L, NBT_TANK_SIDE_AUTO_IN, SIDE_LEFT, NBT_TANK_SIDE_OUT, SBIT_R|SBIT_B, NBT_TANK_SIDE_AUTO_OUT, SIDE_RIGHT, NBT_ENERGY_ACCEPTED_SIDES, SBIT_D), "IPI", "ZMZ", "ICI", 'M', OP.casingMachineDouble.dat(aMat), 'C', OP.plateQuintuple.dat(ANY.Cu), 'I', OP.plateQuintuple.dat(MT.Invar), 'P', OP.pipeQuadruple.dat(aMat), 'Z', OP.dust.dat(MT.OREMATS.Zeolite));
		aMat = MT.DATA.Heat_T[15];       aRegistry.add("Catalytic Cracker (" + aMat.getLocal() + ")"         , "Basic Machines"                      , 20876, 20001, aClass, aMat.mToolQuality, 16, aMachine     , UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS, HARDNESS[15], NBT_RESISTANCE, HARDNESS[15], NBT_COLOR, UT.Code.getRGBInt(aMat.fRGBaSolid), NBT_INPUT, V[15], NBT_TEXTURE, "catalyticcracker", NBT_ENERGY_ACCEPTED, TD.Energy.HU, NBT_RECIPEMAP, RM.CatalyticCracking, NBT_INV_SIDE_IN, SBIT_U|SBIT_L, NBT_INV_SIDE_AUTO_IN, SIDE_TOP, NBT_INV_SIDE_OUT, SBIT_R|SBIT_B, NBT_INV_SIDE_AUTO_OUT, SIDE_BACK, NBT_TANK_SIDE_IN, SBIT_U|SBIT_L, NBT_TANK_SIDE_AUTO_IN, SIDE_LEFT, NBT_TANK_SIDE_OUT, SBIT_R|SBIT_B, NBT_TANK_SIDE_AUTO_OUT, SIDE_RIGHT, NBT_ENERGY_ACCEPTED_SIDES, SBIT_D), "IPI", "ZMZ", "ICI", 'M', OP.casingMachineDouble.dat(aMat), 'C', OP.plateDouble   .dat(ANY.Cu), 'I', OP.plateDouble   .dat(MT.Invar), 'P', OP.pipeQuadruple.dat(aMat), 'Z', OP.dust.dat(MT.OREMATS.Zeolite));

		aClass = MultiTileEntityBasicMachine.class;
		aMat = MT.DATA.Heat_T[0];       aRegistry.add("Steam Cracker (" + aMat.getLocal() + ")"             , "Basic Machines"                      , 20881, 20001, aClass, aMat.mToolQuality, 16, aMachine     , UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS, HARDNESS[0], NBT_RESISTANCE, HARDNESS[0], NBT_COLOR, UT.Code.getRGBInt(aMat.fRGBaSolid), NBT_INPUT, V[0], NBT_TEXTURE, "steamcracker", NBT_ENERGY_ACCEPTED, TD.Energy.HU, NBT_RECIPEMAP, RM.SteamCracking, NBT_INV_SIDE_IN, SBIT_U|SBIT_L, NBT_INV_SIDE_AUTO_IN, SIDE_TOP, NBT_INV_SIDE_OUT, SBIT_R|SBIT_B, NBT_INV_SIDE_AUTO_OUT, SIDE_BACK, NBT_TANK_SIDE_IN, SBIT_U|SBIT_L, NBT_TANK_SIDE_AUTO_IN, SIDE_LEFT, NBT_TANK_SIDE_OUT, SBIT_R|SBIT_B, NBT_TANK_SIDE_AUTO_OUT, SIDE_RIGHT, NBT_ENERGY_ACCEPTED_SIDES, SBIT_D), "IwI", "PMP", "ICI", 'M', OP.casingMachineDouble.dat(aMat), 'C', OP.plateDouble   .dat(ANY.Cu), 'I', OP.plateDouble   .dat(MT.Invar), 'P', OP.pipeMedium.dat(aMat));
		aMat = MT.DATA.Heat_T[1];       aRegistry.add("Steam Cracker (" + aMat.getLocal() + ")"             , "Basic Machines"                      , 20882, 20001, aClass, aMat.mToolQuality, 16, aMachine     , UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS, HARDNESS[1], NBT_RESISTANCE, HARDNESS[1], NBT_COLOR, UT.Code.getRGBInt(aMat.fRGBaSolid), NBT_INPUT, V[1], NBT_TEXTURE, "steamcracker", NBT_ENERGY_ACCEPTED, TD.Energy.HU, NBT_RECIPEMAP, RM.SteamCracking, NBT_INV_SIDE_IN, SBIT_U|SBIT_L, NBT_INV_SIDE_AUTO_IN, SIDE_TOP, NBT_INV_SIDE_OUT, SBIT_R|SBIT_B, NBT_INV_SIDE_AUTO_OUT, SIDE_BACK, NBT_TANK_SIDE_IN, SBIT_U|SBIT_L, NBT_TANK_SIDE_AUTO_IN, SIDE_LEFT, NBT_TANK_SIDE_OUT, SBIT_R|SBIT_B, NBT_TANK_SIDE_AUTO_OUT, SIDE_RIGHT, NBT_ENERGY_ACCEPTED_SIDES, SBIT_D), "IwI", "PMP", "ICI", 'M', OP.casingMachineDouble.dat(aMat), 'C', OP.plateDouble   .dat(ANY.Cu), 'I', OP.plateDouble   .dat(MT.Invar), 'P', OP.pipeMedium.dat(aMat));
		aMat = MT.DATA.Heat_T[2];       aRegistry.add("Steam Cracker (" + aMat.getLocal() + ")"             , "Basic Machines"                      , 20883, 20001, aClass, aMat.mToolQuality, 16, aMachine     , UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS, HARDNESS[2], NBT_RESISTANCE, HARDNESS[2], NBT_COLOR, UT.Code.getRGBInt(aMat.fRGBaSolid), NBT_INPUT, V[2], NBT_TEXTURE, "steamcracker", NBT_ENERGY_ACCEPTED, TD.Energy.HU, NBT_RECIPEMAP, RM.SteamCracking, NBT_INV_SIDE_IN, SBIT_U|SBIT_L, NBT_INV_SIDE_AUTO_IN, SIDE_TOP, NBT_INV_SIDE_OUT, SBIT_R|SBIT_B, NBT_INV_SIDE_AUTO_OUT, SIDE_BACK, NBT_TANK_SIDE_IN, SBIT_U|SBIT_L, NBT_TANK_SIDE_AUTO_IN, SIDE_LEFT, NBT_TANK_SIDE_OUT, SBIT_R|SBIT_B, NBT_TANK_SIDE_AUTO_OUT, SIDE_RIGHT, NBT_ENERGY_ACCEPTED_SIDES, SBIT_D), "IwI", "PMP", "ICI", 'M', OP.casingMachineDouble.dat(aMat), 'C', OP.plateTriple   .dat(ANY.Cu), 'I', OP.plateTriple   .dat(MT.Invar), 'P', OP.pipeMedium.dat(aMat));
		aMat = MT.DATA.Heat_T[3];       aRegistry.add("Steam Cracker (" + aMat.getLocal() + ")"             , "Basic Machines"                      , 20884, 20001, aClass, aMat.mToolQuality, 16, aMachine     , UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS, HARDNESS[3], NBT_RESISTANCE, HARDNESS[3], NBT_COLOR, UT.Code.getRGBInt(aMat.fRGBaSolid), NBT_INPUT, V[3], NBT_TEXTURE, "steamcracker", NBT_ENERGY_ACCEPTED, TD.Energy.HU, NBT_RECIPEMAP, RM.SteamCracking, NBT_INV_SIDE_IN, SBIT_U|SBIT_L, NBT_INV_SIDE_AUTO_IN, SIDE_TOP, NBT_INV_SIDE_OUT, SBIT_R|SBIT_B, NBT_INV_SIDE_AUTO_OUT, SIDE_BACK, NBT_TANK_SIDE_IN, SBIT_U|SBIT_L, NBT_TANK_SIDE_AUTO_IN, SIDE_LEFT, NBT_TANK_SIDE_OUT, SBIT_R|SBIT_B, NBT_TANK_SIDE_AUTO_OUT, SIDE_RIGHT, NBT_ENERGY_ACCEPTED_SIDES, SBIT_D), "IwI", "PMP", "ICI", 'M', OP.casingMachineDouble.dat(aMat), 'C', OP.plateQuadruple.dat(ANY.Cu), 'I', OP.plateQuadruple.dat(MT.Invar), 'P', OP.pipeMedium.dat(aMat));
		aMat = MT.DATA.Heat_T[4];       aRegistry.add("Steam Cracker (" + aMat.getLocal() + ")"             , "Basic Machines"                      , 20885, 20001, aClass, aMat.mToolQuality, 16, aMachine     , UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS, HARDNESS[4], NBT_RESISTANCE, HARDNESS[4], NBT_COLOR, UT.Code.getRGBInt(aMat.fRGBaSolid), NBT_INPUT, V[4], NBT_TEXTURE, "steamcracker", NBT_ENERGY_ACCEPTED, TD.Energy.HU, NBT_RECIPEMAP, RM.SteamCracking, NBT_INV_SIDE_IN, SBIT_U|SBIT_L, NBT_INV_SIDE_AUTO_IN, SIDE_TOP, NBT_INV_SIDE_OUT, SBIT_R|SBIT_B, NBT_INV_SIDE_AUTO_OUT, SIDE_BACK, NBT_TANK_SIDE_IN, SBIT_U|SBIT_L, NBT_TANK_SIDE_AUTO_IN, SIDE_LEFT, NBT_TANK_SIDE_OUT, SBIT_R|SBIT_B, NBT_TANK_SIDE_AUTO_OUT, SIDE_RIGHT, NBT_ENERGY_ACCEPTED_SIDES, SBIT_D), "IwI", "PMP", "ICI", 'M', OP.casingMachineDouble.dat(aMat), 'C', OP.plateQuintuple.dat(ANY.Cu), 'I', OP.plateQuintuple.dat(MT.Invar), 'P', OP.pipeMedium.dat(aMat));
		aMat = MT.DATA.Heat_T[5];       aRegistry.add("Steam Cracker (" + aMat.getLocal() + ")"             , "Basic Machines"                      , 20886, 20001, aClass, aMat.mToolQuality, 16, aMachine     , UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS, HARDNESS[5], NBT_RESISTANCE, HARDNESS[5], NBT_COLOR, UT.Code.getRGBInt(aMat.fRGBaSolid), NBT_INPUT, V[5], NBT_TEXTURE, "steamcracker", NBT_ENERGY_ACCEPTED, TD.Energy.HU, NBT_RECIPEMAP, RM.SteamCracking, NBT_INV_SIDE_IN, SBIT_U|SBIT_L, NBT_INV_SIDE_AUTO_IN, SIDE_TOP, NBT_INV_SIDE_OUT, SBIT_R|SBIT_B, NBT_INV_SIDE_AUTO_OUT, SIDE_BACK, NBT_TANK_SIDE_IN, SBIT_U|SBIT_L, NBT_TANK_SIDE_AUTO_IN, SIDE_LEFT, NBT_TANK_SIDE_OUT, SBIT_R|SBIT_B, NBT_TANK_SIDE_AUTO_OUT, SIDE_RIGHT, NBT_ENERGY_ACCEPTED_SIDES, SBIT_D), "IwI", "PMP", "ICI", 'M', OP.casingMachineDouble.dat(aMat), 'C', OP.plateDouble   .dat(ANY.Cu), 'I', OP.plateDouble   .dat(MT.Invar), 'P', OP.pipeMedium.dat(aMat));
		aMat = MT.DATA.Heat_T[6];       aRegistry.add("Steam Cracker (" + aMat.getLocal() + ")"             , "Basic Machines"                      , 20887, 20001, aClass, aMat.mToolQuality, 16, aMachine     , UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS, HARDNESS[6], NBT_RESISTANCE, HARDNESS[6], NBT_COLOR, UT.Code.getRGBInt(aMat.fRGBaSolid), NBT_INPUT, V[6], NBT_TEXTURE, "steamcracker", NBT_ENERGY_ACCEPTED, TD.Energy.HU, NBT_RECIPEMAP, RM.SteamCracking, NBT_INV_SIDE_IN, SBIT_U|SBIT_L, NBT_INV_SIDE_AUTO_IN, SIDE_TOP, NBT_INV_SIDE_OUT, SBIT_R|SBIT_B, NBT_INV_SIDE_AUTO_OUT, SIDE_BACK, NBT_TANK_SIDE_IN, SBIT_U|SBIT_L, NBT_TANK_SIDE_AUTO_IN, SIDE_LEFT, NBT_TANK_SIDE_OUT, SBIT_R|SBIT_B, NBT_TANK_SIDE_AUTO_OUT, SIDE_RIGHT, NBT_ENERGY_ACCEPTED_SIDES, SBIT_D), "IwI", "PMP", "ICI", 'M', OP.casingMachineDouble.dat(aMat), 'C', OP.plateDouble   .dat(ANY.Cu), 'I', OP.plateDouble   .dat(MT.Invar), 'P', OP.pipeMedium.dat(aMat));
		aMat = MT.DATA.Heat_T[7];       aRegistry.add("Steam Cracker (" + aMat.getLocal() + ")"             , "Basic Machines"                      , 20888, 20001, aClass, aMat.mToolQuality, 16, aMachine     , UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS, HARDNESS[7], NBT_RESISTANCE, HARDNESS[7], NBT_COLOR, UT.Code.getRGBInt(aMat.fRGBaSolid), NBT_INPUT, V[7], NBT_TEXTURE, "steamcracker", NBT_ENERGY_ACCEPTED, TD.Energy.HU, NBT_RECIPEMAP, RM.SteamCracking, NBT_INV_SIDE_IN, SBIT_U|SBIT_L, NBT_INV_SIDE_AUTO_IN, SIDE_TOP, NBT_INV_SIDE_OUT, SBIT_R|SBIT_B, NBT_INV_SIDE_AUTO_OUT, SIDE_BACK, NBT_TANK_SIDE_IN, SBIT_U|SBIT_L, NBT_TANK_SIDE_AUTO_IN, SIDE_LEFT, NBT_TANK_SIDE_OUT, SBIT_R|SBIT_B, NBT_TANK_SIDE_AUTO_OUT, SIDE_RIGHT, NBT_ENERGY_ACCEPTED_SIDES, SBIT_D), "IwI", "PMP", "ICI", 'M', OP.casingMachineDouble.dat(aMat), 'C', OP.plateTriple   .dat(ANY.Cu), 'I', OP.plateTriple   .dat(MT.Invar), 'P', OP.pipeMedium.dat(aMat));
		aMat = MT.DATA.Heat_T[8];       aRegistry.add("Steam Cracker (" + aMat.getLocal() + ")"             , "Basic Machines"                      , 20889, 20001, aClass, aMat.mToolQuality, 16, aMachine     , UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS, HARDNESS[8], NBT_RESISTANCE, HARDNESS[8], NBT_COLOR, UT.Code.getRGBInt(aMat.fRGBaSolid), NBT_INPUT, V[8], NBT_TEXTURE, "steamcracker", NBT_ENERGY_ACCEPTED, TD.Energy.HU, NBT_RECIPEMAP, RM.SteamCracking, NBT_INV_SIDE_IN, SBIT_U|SBIT_L, NBT_INV_SIDE_AUTO_IN, SIDE_TOP, NBT_INV_SIDE_OUT, SBIT_R|SBIT_B, NBT_INV_SIDE_AUTO_OUT, SIDE_BACK, NBT_TANK_SIDE_IN, SBIT_U|SBIT_L, NBT_TANK_SIDE_AUTO_IN, SIDE_LEFT, NBT_TANK_SIDE_OUT, SBIT_R|SBIT_B, NBT_TANK_SIDE_AUTO_OUT, SIDE_RIGHT, NBT_ENERGY_ACCEPTED_SIDES, SBIT_D), "IwI", "PMP", "ICI", 'M', OP.casingMachineDouble.dat(aMat), 'C', OP.plateQuadruple.dat(ANY.Cu), 'I', OP.plateQuadruple.dat(MT.Invar), 'P', OP.pipeMedium.dat(aMat));
		aMat = MT.DATA.Heat_T[9];       aRegistry.add("Steam Cracker (" + aMat.getLocal() + ")"             , "Basic Machines"                      , 20890, 20001, aClass, aMat.mToolQuality, 16, aMachine     , UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS, HARDNESS[9], NBT_RESISTANCE, HARDNESS[9], NBT_COLOR, UT.Code.getRGBInt(aMat.fRGBaSolid), NBT_INPUT, V[9], NBT_TEXTURE, "steamcracker", NBT_ENERGY_ACCEPTED, TD.Energy.HU, NBT_RECIPEMAP, RM.SteamCracking, NBT_INV_SIDE_IN, SBIT_U|SBIT_L, NBT_INV_SIDE_AUTO_IN, SIDE_TOP, NBT_INV_SIDE_OUT, SBIT_R|SBIT_B, NBT_INV_SIDE_AUTO_OUT, SIDE_BACK, NBT_TANK_SIDE_IN, SBIT_U|SBIT_L, NBT_TANK_SIDE_AUTO_IN, SIDE_LEFT, NBT_TANK_SIDE_OUT, SBIT_R|SBIT_B, NBT_TANK_SIDE_AUTO_OUT, SIDE_RIGHT, NBT_ENERGY_ACCEPTED_SIDES, SBIT_D), "IwI", "PMP", "ICI", 'M', OP.casingMachineDouble.dat(aMat), 'C', OP.plateQuintuple.dat(ANY.Cu), 'I', OP.plateQuintuple.dat(MT.Invar), 'P', OP.pipeMedium.dat(aMat));
		aMat = MT.DATA.Heat_T[10];       aRegistry.add("Steam Cracker (" + aMat.getLocal() + ")"             , "Basic Machines"                      , 20891, 20001, aClass, aMat.mToolQuality, 16, aMachine     , UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS, HARDNESS[10], NBT_RESISTANCE, HARDNESS[10], NBT_COLOR, UT.Code.getRGBInt(aMat.fRGBaSolid), NBT_INPUT, V[10], NBT_TEXTURE, "steamcracker", NBT_ENERGY_ACCEPTED, TD.Energy.HU, NBT_RECIPEMAP, RM.SteamCracking, NBT_INV_SIDE_IN, SBIT_U|SBIT_L, NBT_INV_SIDE_AUTO_IN, SIDE_TOP, NBT_INV_SIDE_OUT, SBIT_R|SBIT_B, NBT_INV_SIDE_AUTO_OUT, SIDE_BACK, NBT_TANK_SIDE_IN, SBIT_U|SBIT_L, NBT_TANK_SIDE_AUTO_IN, SIDE_LEFT, NBT_TANK_SIDE_OUT, SBIT_R|SBIT_B, NBT_TANK_SIDE_AUTO_OUT, SIDE_RIGHT, NBT_ENERGY_ACCEPTED_SIDES, SBIT_D), "IwI", "PMP", "ICI", 'M', OP.casingMachineDouble.dat(aMat), 'C', OP.plateDouble   .dat(ANY.Cu), 'I', OP.plateDouble   .dat(MT.Invar), 'P', OP.pipeMedium.dat(aMat));
		aMat = MT.DATA.Heat_T[11];       aRegistry.add("Steam Cracker (" + aMat.getLocal() + ")"             , "Basic Machines"                      , 20892, 20001, aClass, aMat.mToolQuality, 16, aMachine     , UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS, HARDNESS[11], NBT_RESISTANCE, HARDNESS[11], NBT_COLOR, UT.Code.getRGBInt(aMat.fRGBaSolid), NBT_INPUT, V[11], NBT_TEXTURE, "steamcracker", NBT_ENERGY_ACCEPTED, TD.Energy.HU, NBT_RECIPEMAP, RM.SteamCracking, NBT_INV_SIDE_IN, SBIT_U|SBIT_L, NBT_INV_SIDE_AUTO_IN, SIDE_TOP, NBT_INV_SIDE_OUT, SBIT_R|SBIT_B, NBT_INV_SIDE_AUTO_OUT, SIDE_BACK, NBT_TANK_SIDE_IN, SBIT_U|SBIT_L, NBT_TANK_SIDE_AUTO_IN, SIDE_LEFT, NBT_TANK_SIDE_OUT, SBIT_R|SBIT_B, NBT_TANK_SIDE_AUTO_OUT, SIDE_RIGHT, NBT_ENERGY_ACCEPTED_SIDES, SBIT_D), "IwI", "PMP", "ICI", 'M', OP.casingMachineDouble.dat(aMat), 'C', OP.plateDouble   .dat(ANY.Cu), 'I', OP.plateDouble   .dat(MT.Invar), 'P', OP.pipeMedium.dat(aMat));
		aMat = MT.DATA.Heat_T[12];       aRegistry.add("Steam Cracker (" + aMat.getLocal() + ")"             , "Basic Machines"                      , 20893, 20001, aClass, aMat.mToolQuality, 16, aMachine     , UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS, HARDNESS[12], NBT_RESISTANCE, HARDNESS[12], NBT_COLOR, UT.Code.getRGBInt(aMat.fRGBaSolid), NBT_INPUT, V[12], NBT_TEXTURE, "steamcracker", NBT_ENERGY_ACCEPTED, TD.Energy.HU, NBT_RECIPEMAP, RM.SteamCracking, NBT_INV_SIDE_IN, SBIT_U|SBIT_L, NBT_INV_SIDE_AUTO_IN, SIDE_TOP, NBT_INV_SIDE_OUT, SBIT_R|SBIT_B, NBT_INV_SIDE_AUTO_OUT, SIDE_BACK, NBT_TANK_SIDE_IN, SBIT_U|SBIT_L, NBT_TANK_SIDE_AUTO_IN, SIDE_LEFT, NBT_TANK_SIDE_OUT, SBIT_R|SBIT_B, NBT_TANK_SIDE_AUTO_OUT, SIDE_RIGHT, NBT_ENERGY_ACCEPTED_SIDES, SBIT_D), "IwI", "PMP", "ICI", 'M', OP.casingMachineDouble.dat(aMat), 'C', OP.plateTriple   .dat(ANY.Cu), 'I', OP.plateTriple   .dat(MT.Invar), 'P', OP.pipeMedium.dat(aMat));
		aMat = MT.DATA.Heat_T[13];       aRegistry.add("Steam Cracker (" + aMat.getLocal() + ")"             , "Basic Machines"                      , 20894, 20001, aClass, aMat.mToolQuality, 16, aMachine     , UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS, HARDNESS[13], NBT_RESISTANCE, HARDNESS[13], NBT_COLOR, UT.Code.getRGBInt(aMat.fRGBaSolid), NBT_INPUT, V[13], NBT_TEXTURE, "steamcracker", NBT_ENERGY_ACCEPTED, TD.Energy.HU, NBT_RECIPEMAP, RM.SteamCracking, NBT_INV_SIDE_IN, SBIT_U|SBIT_L, NBT_INV_SIDE_AUTO_IN, SIDE_TOP, NBT_INV_SIDE_OUT, SBIT_R|SBIT_B, NBT_INV_SIDE_AUTO_OUT, SIDE_BACK, NBT_TANK_SIDE_IN, SBIT_U|SBIT_L, NBT_TANK_SIDE_AUTO_IN, SIDE_LEFT, NBT_TANK_SIDE_OUT, SBIT_R|SBIT_B, NBT_TANK_SIDE_AUTO_OUT, SIDE_RIGHT, NBT_ENERGY_ACCEPTED_SIDES, SBIT_D), "IwI", "PMP", "ICI", 'M', OP.casingMachineDouble.dat(aMat), 'C', OP.plateQuadruple.dat(ANY.Cu), 'I', OP.plateQuadruple.dat(MT.Invar), 'P', OP.pipeMedium.dat(aMat));
		aMat = MT.DATA.Heat_T[14];       aRegistry.add("Steam Cracker (" + aMat.getLocal() + ")"             , "Basic Machines"                      , 20895, 20001, aClass, aMat.mToolQuality, 16, aMachine     , UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS, HARDNESS[14], NBT_RESISTANCE, HARDNESS[14], NBT_COLOR, UT.Code.getRGBInt(aMat.fRGBaSolid), NBT_INPUT, V[14], NBT_TEXTURE, "steamcracker", NBT_ENERGY_ACCEPTED, TD.Energy.HU, NBT_RECIPEMAP, RM.SteamCracking, NBT_INV_SIDE_IN, SBIT_U|SBIT_L, NBT_INV_SIDE_AUTO_IN, SIDE_TOP, NBT_INV_SIDE_OUT, SBIT_R|SBIT_B, NBT_INV_SIDE_AUTO_OUT, SIDE_BACK, NBT_TANK_SIDE_IN, SBIT_U|SBIT_L, NBT_TANK_SIDE_AUTO_IN, SIDE_LEFT, NBT_TANK_SIDE_OUT, SBIT_R|SBIT_B, NBT_TANK_SIDE_AUTO_OUT, SIDE_RIGHT, NBT_ENERGY_ACCEPTED_SIDES, SBIT_D), "IwI", "PMP", "ICI", 'M', OP.casingMachineDouble.dat(aMat), 'C', OP.plateQuintuple.dat(ANY.Cu), 'I', OP.plateQuintuple.dat(MT.Invar), 'P', OP.pipeMedium.dat(aMat));
		aMat = MT.DATA.Heat_T[15];       aRegistry.add("Steam Cracker (" + aMat.getLocal() + ")"             , "Basic Machines"                      , 20896, 20001, aClass, aMat.mToolQuality, 16, aMachine     , UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS, HARDNESS[15], NBT_RESISTANCE, HARDNESS[15], NBT_COLOR, UT.Code.getRGBInt(aMat.fRGBaSolid), NBT_INPUT, V[15], NBT_TEXTURE, "steamcracker", NBT_ENERGY_ACCEPTED, TD.Energy.HU, NBT_RECIPEMAP, RM.SteamCracking, NBT_INV_SIDE_IN, SBIT_U|SBIT_L, NBT_INV_SIDE_AUTO_IN, SIDE_TOP, NBT_INV_SIDE_OUT, SBIT_R|SBIT_B, NBT_INV_SIDE_AUTO_OUT, SIDE_BACK, NBT_TANK_SIDE_IN, SBIT_U|SBIT_L, NBT_TANK_SIDE_AUTO_IN, SIDE_LEFT, NBT_TANK_SIDE_OUT, SBIT_R|SBIT_B, NBT_TANK_SIDE_AUTO_OUT, SIDE_RIGHT, NBT_ENERGY_ACCEPTED_SIDES, SBIT_D), "IwI", "PMP", "ICI", 'M', OP.casingMachineDouble.dat(aMat), 'C', OP.plateDouble   .dat(ANY.Cu), 'I', OP.plateDouble   .dat(MT.Invar), 'P', OP.pipeMedium.dat(aMat));

		aClass = MultiTileEntityBasicMachineElectric.class;
		aMat = MT.DATA.Electric_T[0];   aRegistry.add("Lightning Processor ("+VN[0]+")"                     , "Basic Machines"                      , 20901, 20001, aClass, aMat.mToolQuality, 16, aMachine     , UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS,   4.0F, NBT_RESISTANCE,   4.0F, NBT_COLOR, UT.Code.getRGBInt(aMat.fRGBaSolid), NBT_INPUT,  V[0], NBT_TEXTURE, "lightning", NBT_ENERGY_ACCEPTED, TD.Energy.EU, NBT_RECIPEMAP, RM.Lightning, NBT_INV_SIDE_IN, SBIT_U|SBIT_L, NBT_INV_SIDE_AUTO_IN, SIDE_LEFT, NBT_INV_SIDE_OUT, SBIT_R|SBIT_D, NBT_INV_SIDE_AUTO_OUT, SIDE_RIGHT, NBT_TANK_SIDE_IN, SBIT_U|SBIT_L, NBT_TANK_SIDE_AUTO_IN, SIDE_TOP, NBT_TANK_SIDE_OUT, SBIT_R|SBIT_D, NBT_TANK_SIDE_AUTO_OUT, SIDE_BOTTOM, NBT_ENERGY_ACCEPTED_SIDES, SBIT_B, NBT_USE_OUTPUT_TANK, T), "XxX", "WwW", "XMX", 'M', OP.casingMachine.dat(aMat), 'W', MT.DATA.WIRES_04[0], 'X', OP.wireGt01.dat(ANY.Iron));
		aMat = MT.DATA.Electric_T[1];   aRegistry.add("Lightning Processor ("+VN[1]+")"                     , "Basic Machines"                      , 20902, 20001, aClass, aMat.mToolQuality, 16, aMachine     , UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS,   4.0F, NBT_RESISTANCE,   4.0F, NBT_COLOR, UT.Code.getRGBInt(aMat.fRGBaSolid), NBT_INPUT,  V[1], NBT_TEXTURE, "lightning", NBT_ENERGY_ACCEPTED, TD.Energy.EU, NBT_RECIPEMAP, RM.Lightning, NBT_INV_SIDE_IN, SBIT_U|SBIT_L, NBT_INV_SIDE_AUTO_IN, SIDE_LEFT, NBT_INV_SIDE_OUT, SBIT_R|SBIT_D, NBT_INV_SIDE_AUTO_OUT, SIDE_RIGHT, NBT_TANK_SIDE_IN, SBIT_U|SBIT_L, NBT_TANK_SIDE_AUTO_IN, SIDE_TOP, NBT_TANK_SIDE_OUT, SBIT_R|SBIT_D, NBT_TANK_SIDE_AUTO_OUT, SIDE_BOTTOM, NBT_ENERGY_ACCEPTED_SIDES, SBIT_B, NBT_USE_OUTPUT_TANK, T), "XxX", "WwW", "XMX", 'M', OP.casingMachine.dat(aMat), 'W', MT.DATA.WIRES_04[1], 'X', OP.wireGt01.dat(ANY.Iron));
		aMat = MT.DATA.Electric_T[2];   aRegistry.add("Lightning Processor ("+VN[2]+")"                     , "Basic Machines"                      , 20903, 20001, aClass, aMat.mToolQuality, 16, aMachine     , UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS,   4.0F, NBT_RESISTANCE,   4.0F, NBT_COLOR, UT.Code.getRGBInt(aMat.fRGBaSolid), NBT_INPUT,  V[2], NBT_TEXTURE, "lightning", NBT_ENERGY_ACCEPTED, TD.Energy.EU, NBT_RECIPEMAP, RM.Lightning, NBT_INV_SIDE_IN, SBIT_U|SBIT_L, NBT_INV_SIDE_AUTO_IN, SIDE_LEFT, NBT_INV_SIDE_OUT, SBIT_R|SBIT_D, NBT_INV_SIDE_AUTO_OUT, SIDE_RIGHT, NBT_TANK_SIDE_IN, SBIT_U|SBIT_L, NBT_TANK_SIDE_AUTO_IN, SIDE_TOP, NBT_TANK_SIDE_OUT, SBIT_R|SBIT_D, NBT_TANK_SIDE_AUTO_OUT, SIDE_BOTTOM, NBT_ENERGY_ACCEPTED_SIDES, SBIT_B, NBT_USE_OUTPUT_TANK, T), "XxX", "WwW", "XMX", 'M', OP.casingMachine.dat(aMat), 'W', MT.DATA.WIRES_04[2], 'X', OP.wireGt02.dat(ANY.Iron));
		aMat = MT.DATA.Electric_T[3];   aRegistry.add("Lightning Processor ("+VN[3]+")"                     , "Basic Machines"                      , 20904, 20001, aClass, aMat.mToolQuality, 16, aMachine     , UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS,   4.0F, NBT_RESISTANCE,   4.0F, NBT_COLOR, UT.Code.getRGBInt(aMat.fRGBaSolid), NBT_INPUT,  V[3], NBT_TEXTURE, "lightning", NBT_ENERGY_ACCEPTED, TD.Energy.EU, NBT_RECIPEMAP, RM.Lightning, NBT_INV_SIDE_IN, SBIT_U|SBIT_L, NBT_INV_SIDE_AUTO_IN, SIDE_LEFT, NBT_INV_SIDE_OUT, SBIT_R|SBIT_D, NBT_INV_SIDE_AUTO_OUT, SIDE_RIGHT, NBT_TANK_SIDE_IN, SBIT_U|SBIT_L, NBT_TANK_SIDE_AUTO_IN, SIDE_TOP, NBT_TANK_SIDE_OUT, SBIT_R|SBIT_D, NBT_TANK_SIDE_AUTO_OUT, SIDE_BOTTOM, NBT_ENERGY_ACCEPTED_SIDES, SBIT_B, NBT_USE_OUTPUT_TANK, T), "XxX", "WwW", "XMX", 'M', OP.casingMachine.dat(aMat), 'W', MT.DATA.WIRES_04[3], 'X', OP.wireGt04.dat(ANY.Iron));
		aMat = MT.DATA.Electric_T[4];   aRegistry.add("Lightning Processor ("+VN[4]+")"                     , "Basic Machines"                      , 20905, 20001, aClass, aMat.mToolQuality, 16, aMachine     , UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS,   4.0F, NBT_RESISTANCE,   4.0F, NBT_COLOR, UT.Code.getRGBInt(aMat.fRGBaSolid), NBT_INPUT,  V[4], NBT_TEXTURE, "lightning", NBT_ENERGY_ACCEPTED, TD.Energy.EU, NBT_RECIPEMAP, RM.Lightning, NBT_INV_SIDE_IN, SBIT_U|SBIT_L, NBT_INV_SIDE_AUTO_IN, SIDE_LEFT, NBT_INV_SIDE_OUT, SBIT_R|SBIT_D, NBT_INV_SIDE_AUTO_OUT, SIDE_RIGHT, NBT_TANK_SIDE_IN, SBIT_U|SBIT_L, NBT_TANK_SIDE_AUTO_IN, SIDE_TOP, NBT_TANK_SIDE_OUT, SBIT_R|SBIT_D, NBT_TANK_SIDE_AUTO_OUT, SIDE_BOTTOM, NBT_ENERGY_ACCEPTED_SIDES, SBIT_B, NBT_USE_OUTPUT_TANK, T), "XxX", "WwW", "XMX", 'M', OP.casingMachine.dat(aMat), 'W', MT.DATA.WIRES_04[4], 'X', OP.wireGt08.dat(ANY.Iron));
		aMat = MT.DATA.Electric_T[5];   aRegistry.add("Lightning Processor ("+VN[5]+")"                     , "Basic Machines"                      , 20906, 20001, aClass, aMat.mToolQuality, 16, aMachine     , UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS,   4.0F, NBT_RESISTANCE,   4.0F, NBT_COLOR, UT.Code.getRGBInt(aMat.fRGBaSolid), NBT_INPUT,  V[5], NBT_TEXTURE, "lightning", NBT_ENERGY_ACCEPTED, TD.Energy.EU, NBT_RECIPEMAP, RM.Lightning, NBT_INV_SIDE_IN, SBIT_U|SBIT_L, NBT_INV_SIDE_AUTO_IN, SIDE_LEFT, NBT_INV_SIDE_OUT, SBIT_R|SBIT_D, NBT_INV_SIDE_AUTO_OUT, SIDE_RIGHT, NBT_TANK_SIDE_IN, SBIT_U|SBIT_L, NBT_TANK_SIDE_AUTO_IN, SIDE_TOP, NBT_TANK_SIDE_OUT, SBIT_R|SBIT_D, NBT_TANK_SIDE_AUTO_OUT, SIDE_BOTTOM, NBT_ENERGY_ACCEPTED_SIDES, SBIT_B, NBT_USE_OUTPUT_TANK, T), "XxX", "WwW", "XMX", 'M', OP.casingMachine.dat(aMat), 'W', MT.DATA.WIRES_04[5], 'X', OP.wireGt16.dat(ANY.Iron));
		aMat = MT.DATA.Electric_T[6];   aRegistry.add("Lightning Processor ("+VN[6]+")"                     , "Basic Machines"                      , 20907, 20001, aClass, aMat.mToolQuality, 16, aMachine     , UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS,   4.0F, NBT_RESISTANCE,   4.0F, NBT_COLOR, UT.Code.getRGBInt(aMat.fRGBaSolid), NBT_INPUT,  V[6], NBT_TEXTURE, "lightning", NBT_ENERGY_ACCEPTED, TD.Energy.EU, NBT_RECIPEMAP, RM.Lightning, NBT_INV_SIDE_IN, SBIT_U|SBIT_L, NBT_INV_SIDE_AUTO_IN, SIDE_LEFT, NBT_INV_SIDE_OUT, SBIT_R|SBIT_D, NBT_INV_SIDE_AUTO_OUT, SIDE_RIGHT, NBT_TANK_SIDE_IN, SBIT_U|SBIT_L, NBT_TANK_SIDE_AUTO_IN, SIDE_TOP, NBT_TANK_SIDE_OUT, SBIT_R|SBIT_D, NBT_TANK_SIDE_AUTO_OUT, SIDE_BOTTOM, NBT_ENERGY_ACCEPTED_SIDES, SBIT_B, NBT_USE_OUTPUT_TANK, T), "XxX", "WwW", "XMX", 'M', OP.casingMachine.dat(aMat), 'W', MT.DATA.WIRES_04[0], 'X', OP.wireGt01.dat(ANY.Iron));
		aMat = MT.DATA.Electric_T[7];   aRegistry.add("Lightning Processor ("+VN[7]+")"                     , "Basic Machines"                      , 20908, 20001, aClass, aMat.mToolQuality, 16, aMachine     , UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS,   4.0F, NBT_RESISTANCE,   4.0F, NBT_COLOR, UT.Code.getRGBInt(aMat.fRGBaSolid), NBT_INPUT,  V[7], NBT_TEXTURE, "lightning", NBT_ENERGY_ACCEPTED, TD.Energy.EU, NBT_RECIPEMAP, RM.Lightning, NBT_INV_SIDE_IN, SBIT_U|SBIT_L, NBT_INV_SIDE_AUTO_IN, SIDE_LEFT, NBT_INV_SIDE_OUT, SBIT_R|SBIT_D, NBT_INV_SIDE_AUTO_OUT, SIDE_RIGHT, NBT_TANK_SIDE_IN, SBIT_U|SBIT_L, NBT_TANK_SIDE_AUTO_IN, SIDE_TOP, NBT_TANK_SIDE_OUT, SBIT_R|SBIT_D, NBT_TANK_SIDE_AUTO_OUT, SIDE_BOTTOM, NBT_ENERGY_ACCEPTED_SIDES, SBIT_B, NBT_USE_OUTPUT_TANK, T), "XxX", "WwW", "XMX", 'M', OP.casingMachine.dat(aMat), 'W', MT.DATA.WIRES_04[1], 'X', OP.wireGt01.dat(ANY.Iron));
		aMat = MT.DATA.Electric_T[8];   aRegistry.add("Lightning Processor ("+VN[8]+")"                     , "Basic Machines"                      , 20909, 20001, aClass, aMat.mToolQuality, 16, aMachine     , UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS,   4.0F, NBT_RESISTANCE,   4.0F, NBT_COLOR, UT.Code.getRGBInt(aMat.fRGBaSolid), NBT_INPUT,  V[8], NBT_TEXTURE, "lightning", NBT_ENERGY_ACCEPTED, TD.Energy.EU, NBT_RECIPEMAP, RM.Lightning, NBT_INV_SIDE_IN, SBIT_U|SBIT_L, NBT_INV_SIDE_AUTO_IN, SIDE_LEFT, NBT_INV_SIDE_OUT, SBIT_R|SBIT_D, NBT_INV_SIDE_AUTO_OUT, SIDE_RIGHT, NBT_TANK_SIDE_IN, SBIT_U|SBIT_L, NBT_TANK_SIDE_AUTO_IN, SIDE_TOP, NBT_TANK_SIDE_OUT, SBIT_R|SBIT_D, NBT_TANK_SIDE_AUTO_OUT, SIDE_BOTTOM, NBT_ENERGY_ACCEPTED_SIDES, SBIT_B, NBT_USE_OUTPUT_TANK, T), "XxX", "WwW", "XMX", 'M', OP.casingMachine.dat(aMat), 'W', MT.DATA.WIRES_04[2], 'X', OP.wireGt02.dat(ANY.Iron));
		aMat = MT.DATA.Electric_T[9];   aRegistry.add("Lightning Processor ("+VN[9]+")"                     , "Basic Machines"                      , 20910, 20001, aClass, aMat.mToolQuality, 16, aMachine     , UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS,   4.0F, NBT_RESISTANCE,   4.0F, NBT_COLOR, UT.Code.getRGBInt(aMat.fRGBaSolid), NBT_INPUT,  V[9], NBT_TEXTURE, "lightning", NBT_ENERGY_ACCEPTED, TD.Energy.EU, NBT_RECIPEMAP, RM.Lightning, NBT_INV_SIDE_IN, SBIT_U|SBIT_L, NBT_INV_SIDE_AUTO_IN, SIDE_LEFT, NBT_INV_SIDE_OUT, SBIT_R|SBIT_D, NBT_INV_SIDE_AUTO_OUT, SIDE_RIGHT, NBT_TANK_SIDE_IN, SBIT_U|SBIT_L, NBT_TANK_SIDE_AUTO_IN, SIDE_TOP, NBT_TANK_SIDE_OUT, SBIT_R|SBIT_D, NBT_TANK_SIDE_AUTO_OUT, SIDE_BOTTOM, NBT_ENERGY_ACCEPTED_SIDES, SBIT_B, NBT_USE_OUTPUT_TANK, T), "XxX", "WwW", "XMX", 'M', OP.casingMachine.dat(aMat), 'W', MT.DATA.WIRES_04[3], 'X', OP.wireGt04.dat(ANY.Iron));
		aMat = MT.DATA.Electric_T[10];   aRegistry.add("Lightning Processor ("+VN[10]+")"                     , "Basic Machines"                      , 20911, 20001, aClass, aMat.mToolQuality, 16, aMachine     , UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS,   4.0F, NBT_RESISTANCE,   4.0F, NBT_COLOR, UT.Code.getRGBInt(aMat.fRGBaSolid), NBT_INPUT,  V[10], NBT_TEXTURE, "lightning", NBT_ENERGY_ACCEPTED, TD.Energy.EU, NBT_RECIPEMAP, RM.Lightning, NBT_INV_SIDE_IN, SBIT_U|SBIT_L, NBT_INV_SIDE_AUTO_IN, SIDE_LEFT, NBT_INV_SIDE_OUT, SBIT_R|SBIT_D, NBT_INV_SIDE_AUTO_OUT, SIDE_RIGHT, NBT_TANK_SIDE_IN, SBIT_U|SBIT_L, NBT_TANK_SIDE_AUTO_IN, SIDE_TOP, NBT_TANK_SIDE_OUT, SBIT_R|SBIT_D, NBT_TANK_SIDE_AUTO_OUT, SIDE_BOTTOM, NBT_ENERGY_ACCEPTED_SIDES, SBIT_B, NBT_USE_OUTPUT_TANK, T), "XxX", "WwW", "XMX", 'M', OP.casingMachine.dat(aMat), 'W', MT.DATA.WIRES_04[4], 'X', OP.wireGt08.dat(ANY.Iron));
		aMat = MT.DATA.Electric_T[11];   aRegistry.add("Lightning Processor ("+VN[11]+")"                     , "Basic Machines"                      , 20912, 20001, aClass, aMat.mToolQuality, 16, aMachine     , UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS,   4.0F, NBT_RESISTANCE,   4.0F, NBT_COLOR, UT.Code.getRGBInt(aMat.fRGBaSolid), NBT_INPUT,  V[11], NBT_TEXTURE, "lightning", NBT_ENERGY_ACCEPTED, TD.Energy.EU, NBT_RECIPEMAP, RM.Lightning, NBT_INV_SIDE_IN, SBIT_U|SBIT_L, NBT_INV_SIDE_AUTO_IN, SIDE_LEFT, NBT_INV_SIDE_OUT, SBIT_R|SBIT_D, NBT_INV_SIDE_AUTO_OUT, SIDE_RIGHT, NBT_TANK_SIDE_IN, SBIT_U|SBIT_L, NBT_TANK_SIDE_AUTO_IN, SIDE_TOP, NBT_TANK_SIDE_OUT, SBIT_R|SBIT_D, NBT_TANK_SIDE_AUTO_OUT, SIDE_BOTTOM, NBT_ENERGY_ACCEPTED_SIDES, SBIT_B, NBT_USE_OUTPUT_TANK, T), "XxX", "WwW", "XMX", 'M', OP.casingMachine.dat(aMat), 'W', MT.DATA.WIRES_04[5], 'X', OP.wireGt16.dat(ANY.Iron));
		aMat = MT.DATA.Electric_T[12];   aRegistry.add("Lightning Processor ("+VN[12]+")"                     , "Basic Machines"                      , 20913, 20001, aClass, aMat.mToolQuality, 16, aMachine     , UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS,   4.0F, NBT_RESISTANCE,   4.0F, NBT_COLOR, UT.Code.getRGBInt(aMat.fRGBaSolid), NBT_INPUT,  V[12], NBT_TEXTURE, "lightning", NBT_ENERGY_ACCEPTED, TD.Energy.EU, NBT_RECIPEMAP, RM.Lightning, NBT_INV_SIDE_IN, SBIT_U|SBIT_L, NBT_INV_SIDE_AUTO_IN, SIDE_LEFT, NBT_INV_SIDE_OUT, SBIT_R|SBIT_D, NBT_INV_SIDE_AUTO_OUT, SIDE_RIGHT, NBT_TANK_SIDE_IN, SBIT_U|SBIT_L, NBT_TANK_SIDE_AUTO_IN, SIDE_TOP, NBT_TANK_SIDE_OUT, SBIT_R|SBIT_D, NBT_TANK_SIDE_AUTO_OUT, SIDE_BOTTOM, NBT_ENERGY_ACCEPTED_SIDES, SBIT_B, NBT_USE_OUTPUT_TANK, T), "XxX", "WwW", "XMX", 'M', OP.casingMachine.dat(aMat), 'W', MT.DATA.WIRES_04[0], 'X', OP.wireGt01.dat(ANY.Iron));
		aMat = MT.DATA.Electric_T[13];   aRegistry.add("Lightning Processor ("+VN[13]+")"                     , "Basic Machines"                      , 20914, 20001, aClass, aMat.mToolQuality, 16, aMachine     , UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS,   4.0F, NBT_RESISTANCE,   4.0F, NBT_COLOR, UT.Code.getRGBInt(aMat.fRGBaSolid), NBT_INPUT,  V[13], NBT_TEXTURE, "lightning", NBT_ENERGY_ACCEPTED, TD.Energy.EU, NBT_RECIPEMAP, RM.Lightning, NBT_INV_SIDE_IN, SBIT_U|SBIT_L, NBT_INV_SIDE_AUTO_IN, SIDE_LEFT, NBT_INV_SIDE_OUT, SBIT_R|SBIT_D, NBT_INV_SIDE_AUTO_OUT, SIDE_RIGHT, NBT_TANK_SIDE_IN, SBIT_U|SBIT_L, NBT_TANK_SIDE_AUTO_IN, SIDE_TOP, NBT_TANK_SIDE_OUT, SBIT_R|SBIT_D, NBT_TANK_SIDE_AUTO_OUT, SIDE_BOTTOM, NBT_ENERGY_ACCEPTED_SIDES, SBIT_B, NBT_USE_OUTPUT_TANK, T), "XxX", "WwW", "XMX", 'M', OP.casingMachine.dat(aMat), 'W', MT.DATA.WIRES_04[1], 'X', OP.wireGt01.dat(ANY.Iron));
		aMat = MT.DATA.Electric_T[14];   aRegistry.add("Lightning Processor ("+VN[14]+")"                     , "Basic Machines"                      , 20915, 20001, aClass, aMat.mToolQuality, 16, aMachine     , UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS,   4.0F, NBT_RESISTANCE,   4.0F, NBT_COLOR, UT.Code.getRGBInt(aMat.fRGBaSolid), NBT_INPUT,  V[14], NBT_TEXTURE, "lightning", NBT_ENERGY_ACCEPTED, TD.Energy.EU, NBT_RECIPEMAP, RM.Lightning, NBT_INV_SIDE_IN, SBIT_U|SBIT_L, NBT_INV_SIDE_AUTO_IN, SIDE_LEFT, NBT_INV_SIDE_OUT, SBIT_R|SBIT_D, NBT_INV_SIDE_AUTO_OUT, SIDE_RIGHT, NBT_TANK_SIDE_IN, SBIT_U|SBIT_L, NBT_TANK_SIDE_AUTO_IN, SIDE_TOP, NBT_TANK_SIDE_OUT, SBIT_R|SBIT_D, NBT_TANK_SIDE_AUTO_OUT, SIDE_BOTTOM, NBT_ENERGY_ACCEPTED_SIDES, SBIT_B, NBT_USE_OUTPUT_TANK, T), "XxX", "WwW", "XMX", 'M', OP.casingMachine.dat(aMat), 'W', MT.DATA.WIRES_04[2], 'X', OP.wireGt02.dat(ANY.Iron));
		aMat = MT.DATA.Electric_T[15];   aRegistry.add("Lightning Processor ("+VN[15]+")"                     , "Basic Machines"                      , 20916, 20001, aClass, aMat.mToolQuality, 16, aMachine     , UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS,   4.0F, NBT_RESISTANCE,   4.0F, NBT_COLOR, UT.Code.getRGBInt(aMat.fRGBaSolid), NBT_INPUT,  V[15], NBT_TEXTURE, "lightning", NBT_ENERGY_ACCEPTED, TD.Energy.EU, NBT_RECIPEMAP, RM.Lightning, NBT_INV_SIDE_IN, SBIT_U|SBIT_L, NBT_INV_SIDE_AUTO_IN, SIDE_LEFT, NBT_INV_SIDE_OUT, SBIT_R|SBIT_D, NBT_INV_SIDE_AUTO_OUT, SIDE_RIGHT, NBT_TANK_SIDE_IN, SBIT_U|SBIT_L, NBT_TANK_SIDE_AUTO_IN, SIDE_TOP, NBT_TANK_SIDE_OUT, SBIT_R|SBIT_D, NBT_TANK_SIDE_AUTO_OUT, SIDE_BOTTOM, NBT_ENERGY_ACCEPTED_SIDES, SBIT_B, NBT_USE_OUTPUT_TANK, T), "XxX", "WwW", "XMX", 'M', OP.casingMachine.dat(aMat), 'W', MT.DATA.WIRES_04[3], 'X', OP.wireGt04.dat(ANY.Iron));

		aClass = MultiTileEntityBasicMachine.class;
		aMat = MT.DATA.Heat_T[0];    aRegistry.add("Sanding Machine (" + aMat.getLocal() + ")"           , "Basic Machines"                      , 20921, 20001, aClass, aMat.mToolQuality, 16, aMachine     , UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS, HARDNESS[0], NBT_RESISTANCE, HARDNESS[0], NBT_COLOR, UT.Code.getRGBInt(aMat.fRGBaSolid), NBT_INPUT, V[0], NBT_TEXTURE, "sander", NBT_ENERGY_ACCEPTED, TD.Energy.RU, NBT_RECIPEMAP, RM.Sharpening, NBT_INV_SIDE_IN, SBIT_L, NBT_INV_SIDE_AUTO_IN, SIDE_LEFT, NBT_INV_SIDE_OUT, SBIT_R, NBT_INV_SIDE_AUTO_OUT, SIDE_RIGHT, NBT_ENERGY_ACCEPTED_SIDES, SBIT_U), "SGS", "XXX", "wMh", 'M', OP.casingMachineDouble.dat(aMat), 'S', OP.gearGtSmall.dat(aMat), 'G', OP.gearGt.dat(aMat), 'X', Blocks.sandstone);
		aMat = MT.DATA.Heat_T[1];    aRegistry.add("Sanding Machine (" + aMat.getLocal() + ")"           , "Basic Machines"                      , 20922, 20001, aClass, aMat.mToolQuality, 16, aMachine     , UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS, HARDNESS[1], NBT_RESISTANCE, HARDNESS[1], NBT_COLOR, UT.Code.getRGBInt(aMat.fRGBaSolid), NBT_INPUT, V[1], NBT_TEXTURE, "sander", NBT_ENERGY_ACCEPTED, TD.Energy.RU, NBT_RECIPEMAP, RM.Sharpening, NBT_INV_SIDE_IN, SBIT_L, NBT_INV_SIDE_AUTO_IN, SIDE_LEFT, NBT_INV_SIDE_OUT, SBIT_R, NBT_INV_SIDE_AUTO_OUT, SIDE_RIGHT, NBT_ENERGY_ACCEPTED_SIDES, SBIT_U), "SGS", "XXX", "wMh", 'M', OP.casingMachineDouble.dat(aMat), 'S', OP.gearGtSmall.dat(aMat), 'G', OP.gearGt.dat(aMat), 'X', Blocks.sandstone);
		aMat = MT.DATA.Heat_T[2];    aRegistry.add("Sanding Machine (" + aMat.getLocal() + ")"           , "Basic Machines"                      , 20923, 20001, aClass, aMat.mToolQuality, 16, aMachine     , UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS, HARDNESS[2], NBT_RESISTANCE, HARDNESS[2], NBT_COLOR, UT.Code.getRGBInt(aMat.fRGBaSolid), NBT_INPUT, V[2], NBT_TEXTURE, "sander", NBT_ENERGY_ACCEPTED, TD.Energy.RU, NBT_RECIPEMAP, RM.Sharpening, NBT_INV_SIDE_IN, SBIT_L, NBT_INV_SIDE_AUTO_IN, SIDE_LEFT, NBT_INV_SIDE_OUT, SBIT_R, NBT_INV_SIDE_AUTO_OUT, SIDE_RIGHT, NBT_ENERGY_ACCEPTED_SIDES, SBIT_U), "SGS", "XXX", "wMh", 'M', OP.casingMachineDouble.dat(aMat), 'S', OP.gearGtSmall.dat(aMat), 'G', OP.gearGt.dat(aMat), 'X', Blocks.sandstone);
		aMat = MT.DATA.Heat_T[3];    aRegistry.add("Sanding Machine (" + aMat.getLocal() + ")"           , "Basic Machines"                      , 20924, 20001, aClass, aMat.mToolQuality, 16, aMachine     , UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS, HARDNESS[3], NBT_RESISTANCE, HARDNESS[3], NBT_COLOR, UT.Code.getRGBInt(aMat.fRGBaSolid), NBT_INPUT, V[3], NBT_TEXTURE, "sander", NBT_ENERGY_ACCEPTED, TD.Energy.RU, NBT_RECIPEMAP, RM.Sharpening, NBT_INV_SIDE_IN, SBIT_L, NBT_INV_SIDE_AUTO_IN, SIDE_LEFT, NBT_INV_SIDE_OUT, SBIT_R, NBT_INV_SIDE_AUTO_OUT, SIDE_RIGHT, NBT_ENERGY_ACCEPTED_SIDES, SBIT_U), "SGS", "XXX", "wMh", 'M', OP.casingMachineDouble.dat(aMat), 'S', OP.gearGtSmall.dat(aMat), 'G', OP.gearGt.dat(aMat), 'X', Blocks.sandstone);
		aMat = MT.DATA.Heat_T[4];    aRegistry.add("Sanding Machine (" + aMat.getLocal() + ")"           , "Basic Machines"                      , 20925, 20001, aClass, aMat.mToolQuality, 16, aMachine     , UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS, HARDNESS[4], NBT_RESISTANCE, HARDNESS[4], NBT_COLOR, UT.Code.getRGBInt(aMat.fRGBaSolid), NBT_INPUT, V[4], NBT_TEXTURE, "sander", NBT_ENERGY_ACCEPTED, TD.Energy.RU, NBT_RECIPEMAP, RM.Sharpening, NBT_INV_SIDE_IN, SBIT_L, NBT_INV_SIDE_AUTO_IN, SIDE_LEFT, NBT_INV_SIDE_OUT, SBIT_R, NBT_INV_SIDE_AUTO_OUT, SIDE_RIGHT, NBT_ENERGY_ACCEPTED_SIDES, SBIT_U), "SGS", "XXX", "wMh", 'M', OP.casingMachineDouble.dat(aMat), 'S', OP.gearGtSmall.dat(aMat), 'G', OP.gearGt.dat(aMat), 'X', Blocks.sandstone);
		aMat = MT.DATA.Heat_T[5];    aRegistry.add("Sanding Machine (" + aMat.getLocal() + ")"           , "Basic Machines"                      , 20926, 20001, aClass, aMat.mToolQuality, 16, aMachine     , UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS, HARDNESS[5], NBT_RESISTANCE, HARDNESS[5], NBT_COLOR, UT.Code.getRGBInt(aMat.fRGBaSolid), NBT_INPUT, V[5], NBT_TEXTURE, "sander", NBT_ENERGY_ACCEPTED, TD.Energy.RU, NBT_RECIPEMAP, RM.Sharpening, NBT_INV_SIDE_IN, SBIT_L, NBT_INV_SIDE_AUTO_IN, SIDE_LEFT, NBT_INV_SIDE_OUT, SBIT_R, NBT_INV_SIDE_AUTO_OUT, SIDE_RIGHT, NBT_ENERGY_ACCEPTED_SIDES, SBIT_U), "SGS", "XXX", "wMh", 'M', OP.casingMachineDouble.dat(aMat), 'S', OP.gearGtSmall.dat(aMat), 'G', OP.gearGt.dat(aMat), 'X', Blocks.sandstone);
		aMat = MT.DATA.Heat_T[6];    aRegistry.add("Sanding Machine (" + aMat.getLocal() + ")"           , "Basic Machines"                      , 20927, 20001, aClass, aMat.mToolQuality, 16, aMachine     , UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS, HARDNESS[6], NBT_RESISTANCE, HARDNESS[6], NBT_COLOR, UT.Code.getRGBInt(aMat.fRGBaSolid), NBT_INPUT, V[6], NBT_TEXTURE, "sander", NBT_ENERGY_ACCEPTED, TD.Energy.RU, NBT_RECIPEMAP, RM.Sharpening, NBT_INV_SIDE_IN, SBIT_L, NBT_INV_SIDE_AUTO_IN, SIDE_LEFT, NBT_INV_SIDE_OUT, SBIT_R, NBT_INV_SIDE_AUTO_OUT, SIDE_RIGHT, NBT_ENERGY_ACCEPTED_SIDES, SBIT_U), "SGS", "XXX", "wMh", 'M', OP.casingMachineDouble.dat(aMat), 'S', OP.gearGtSmall.dat(aMat), 'G', OP.gearGt.dat(aMat), 'X', Blocks.sandstone);
		aMat = MT.DATA.Heat_T[7];    aRegistry.add("Sanding Machine (" + aMat.getLocal() + ")"           , "Basic Machines"                      , 20928, 20001, aClass, aMat.mToolQuality, 16, aMachine     , UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS, HARDNESS[7], NBT_RESISTANCE, HARDNESS[7], NBT_COLOR, UT.Code.getRGBInt(aMat.fRGBaSolid), NBT_INPUT, V[7], NBT_TEXTURE, "sander", NBT_ENERGY_ACCEPTED, TD.Energy.RU, NBT_RECIPEMAP, RM.Sharpening, NBT_INV_SIDE_IN, SBIT_L, NBT_INV_SIDE_AUTO_IN, SIDE_LEFT, NBT_INV_SIDE_OUT, SBIT_R, NBT_INV_SIDE_AUTO_OUT, SIDE_RIGHT, NBT_ENERGY_ACCEPTED_SIDES, SBIT_U), "SGS", "XXX", "wMh", 'M', OP.casingMachineDouble.dat(aMat), 'S', OP.gearGtSmall.dat(aMat), 'G', OP.gearGt.dat(aMat), 'X', Blocks.sandstone);
		aMat = MT.DATA.Heat_T[8];    aRegistry.add("Sanding Machine (" + aMat.getLocal() + ")"           , "Basic Machines"                      , 20929, 20001, aClass, aMat.mToolQuality, 16, aMachine     , UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS, HARDNESS[8], NBT_RESISTANCE, HARDNESS[8], NBT_COLOR, UT.Code.getRGBInt(aMat.fRGBaSolid), NBT_INPUT, V[8], NBT_TEXTURE, "sander", NBT_ENERGY_ACCEPTED, TD.Energy.RU, NBT_RECIPEMAP, RM.Sharpening, NBT_INV_SIDE_IN, SBIT_L, NBT_INV_SIDE_AUTO_IN, SIDE_LEFT, NBT_INV_SIDE_OUT, SBIT_R, NBT_INV_SIDE_AUTO_OUT, SIDE_RIGHT, NBT_ENERGY_ACCEPTED_SIDES, SBIT_U), "SGS", "XXX", "wMh", 'M', OP.casingMachineDouble.dat(aMat), 'S', OP.gearGtSmall.dat(aMat), 'G', OP.gearGt.dat(aMat), 'X', Blocks.sandstone);
		aMat = MT.DATA.Heat_T[9];    aRegistry.add("Sanding Machine (" + aMat.getLocal() + ")"           , "Basic Machines"                      , 20930, 20001, aClass, aMat.mToolQuality, 16, aMachine     , UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS, HARDNESS[9], NBT_RESISTANCE, HARDNESS[9], NBT_COLOR, UT.Code.getRGBInt(aMat.fRGBaSolid), NBT_INPUT, V[9], NBT_TEXTURE, "sander", NBT_ENERGY_ACCEPTED, TD.Energy.RU, NBT_RECIPEMAP, RM.Sharpening, NBT_INV_SIDE_IN, SBIT_L, NBT_INV_SIDE_AUTO_IN, SIDE_LEFT, NBT_INV_SIDE_OUT, SBIT_R, NBT_INV_SIDE_AUTO_OUT, SIDE_RIGHT, NBT_ENERGY_ACCEPTED_SIDES, SBIT_U), "SGS", "XXX", "wMh", 'M', OP.casingMachineDouble.dat(aMat), 'S', OP.gearGtSmall.dat(aMat), 'G', OP.gearGt.dat(aMat), 'X', Blocks.sandstone);
		aMat = MT.DATA.Heat_T[10];    aRegistry.add("Sanding Machine (" + aMat.getLocal() + ")"           , "Basic Machines"                      , 20931, 20001, aClass, aMat.mToolQuality, 16, aMachine     , UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS, HARDNESS[10], NBT_RESISTANCE, HARDNESS[10], NBT_COLOR, UT.Code.getRGBInt(aMat.fRGBaSolid), NBT_INPUT, V[10], NBT_TEXTURE, "sander", NBT_ENERGY_ACCEPTED, TD.Energy.RU, NBT_RECIPEMAP, RM.Sharpening, NBT_INV_SIDE_IN, SBIT_L, NBT_INV_SIDE_AUTO_IN, SIDE_LEFT, NBT_INV_SIDE_OUT, SBIT_R, NBT_INV_SIDE_AUTO_OUT, SIDE_RIGHT, NBT_ENERGY_ACCEPTED_SIDES, SBIT_U), "SGS", "XXX", "wMh", 'M', OP.casingMachineDouble.dat(aMat), 'S', OP.gearGtSmall.dat(aMat), 'G', OP.gearGt.dat(aMat), 'X', Blocks.sandstone);
		aMat = MT.DATA.Heat_T[11];    aRegistry.add("Sanding Machine (" + aMat.getLocal() + ")"           , "Basic Machines"                      , 20932, 20001, aClass, aMat.mToolQuality, 16, aMachine     , UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS, HARDNESS[11], NBT_RESISTANCE, HARDNESS[11], NBT_COLOR, UT.Code.getRGBInt(aMat.fRGBaSolid), NBT_INPUT, V[11], NBT_TEXTURE, "sander", NBT_ENERGY_ACCEPTED, TD.Energy.RU, NBT_RECIPEMAP, RM.Sharpening, NBT_INV_SIDE_IN, SBIT_L, NBT_INV_SIDE_AUTO_IN, SIDE_LEFT, NBT_INV_SIDE_OUT, SBIT_R, NBT_INV_SIDE_AUTO_OUT, SIDE_RIGHT, NBT_ENERGY_ACCEPTED_SIDES, SBIT_U), "SGS", "XXX", "wMh", 'M', OP.casingMachineDouble.dat(aMat), 'S', OP.gearGtSmall.dat(aMat), 'G', OP.gearGt.dat(aMat), 'X', Blocks.sandstone);
		aMat = MT.DATA.Heat_T[12];    aRegistry.add("Sanding Machine (" + aMat.getLocal() + ")"           , "Basic Machines"                      , 20933, 20001, aClass, aMat.mToolQuality, 16, aMachine     , UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS, HARDNESS[12], NBT_RESISTANCE, HARDNESS[12], NBT_COLOR, UT.Code.getRGBInt(aMat.fRGBaSolid), NBT_INPUT, V[12], NBT_TEXTURE, "sander", NBT_ENERGY_ACCEPTED, TD.Energy.RU, NBT_RECIPEMAP, RM.Sharpening, NBT_INV_SIDE_IN, SBIT_L, NBT_INV_SIDE_AUTO_IN, SIDE_LEFT, NBT_INV_SIDE_OUT, SBIT_R, NBT_INV_SIDE_AUTO_OUT, SIDE_RIGHT, NBT_ENERGY_ACCEPTED_SIDES, SBIT_U), "SGS", "XXX", "wMh", 'M', OP.casingMachineDouble.dat(aMat), 'S', OP.gearGtSmall.dat(aMat), 'G', OP.gearGt.dat(aMat), 'X', Blocks.sandstone);
		aMat = MT.DATA.Heat_T[13];    aRegistry.add("Sanding Machine (" + aMat.getLocal() + ")"           , "Basic Machines"                      , 20934, 20001, aClass, aMat.mToolQuality, 16, aMachine     , UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS, HARDNESS[13], NBT_RESISTANCE, HARDNESS[13], NBT_COLOR, UT.Code.getRGBInt(aMat.fRGBaSolid), NBT_INPUT, V[13], NBT_TEXTURE, "sander", NBT_ENERGY_ACCEPTED, TD.Energy.RU, NBT_RECIPEMAP, RM.Sharpening, NBT_INV_SIDE_IN, SBIT_L, NBT_INV_SIDE_AUTO_IN, SIDE_LEFT, NBT_INV_SIDE_OUT, SBIT_R, NBT_INV_SIDE_AUTO_OUT, SIDE_RIGHT, NBT_ENERGY_ACCEPTED_SIDES, SBIT_U), "SGS", "XXX", "wMh", 'M', OP.casingMachineDouble.dat(aMat), 'S', OP.gearGtSmall.dat(aMat), 'G', OP.gearGt.dat(aMat), 'X', Blocks.sandstone);
		aMat = MT.DATA.Heat_T[14];    aRegistry.add("Sanding Machine (" + aMat.getLocal() + ")"           , "Basic Machines"                      , 20935, 20001, aClass, aMat.mToolQuality, 16, aMachine     , UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS, HARDNESS[14], NBT_RESISTANCE, HARDNESS[14], NBT_COLOR, UT.Code.getRGBInt(aMat.fRGBaSolid), NBT_INPUT, V[14], NBT_TEXTURE, "sander", NBT_ENERGY_ACCEPTED, TD.Energy.RU, NBT_RECIPEMAP, RM.Sharpening, NBT_INV_SIDE_IN, SBIT_L, NBT_INV_SIDE_AUTO_IN, SIDE_LEFT, NBT_INV_SIDE_OUT, SBIT_R, NBT_INV_SIDE_AUTO_OUT, SIDE_RIGHT, NBT_ENERGY_ACCEPTED_SIDES, SBIT_U), "SGS", "XXX", "wMh", 'M', OP.casingMachineDouble.dat(aMat), 'S', OP.gearGtSmall.dat(aMat), 'G', OP.gearGt.dat(aMat), 'X', Blocks.sandstone);
		aMat = MT.DATA.Heat_T[15];    aRegistry.add("Sanding Machine (" + aMat.getLocal() + ")"           , "Basic Machines"                      , 20936, 20001, aClass, aMat.mToolQuality, 16, aMachine     , UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS, HARDNESS[15], NBT_RESISTANCE, HARDNESS[15], NBT_COLOR, UT.Code.getRGBInt(aMat.fRGBaSolid), NBT_INPUT, V[15], NBT_TEXTURE, "sander", NBT_ENERGY_ACCEPTED, TD.Energy.RU, NBT_RECIPEMAP, RM.Sharpening, NBT_INV_SIDE_IN, SBIT_L, NBT_INV_SIDE_AUTO_IN, SIDE_LEFT, NBT_INV_SIDE_OUT, SBIT_R, NBT_INV_SIDE_AUTO_OUT, SIDE_RIGHT, NBT_ENERGY_ACCEPTED_SIDES, SBIT_U), "SGS", "XXX", "wMh", 'M', OP.casingMachineDouble.dat(aMat), 'S', OP.gearGtSmall.dat(aMat), 'G', OP.gearGt.dat(aMat), 'X', Blocks.sandstone);

		aClass = MultiTileEntityBasicMachine.class;
		aMat = MT.DATA.Heat_T[0];    aRegistry.add("Burner Mixer (" + aMat.getLocal() + ")"              , "Basic Machines"                      , 20941, 20001, aClass, aMat.mToolQuality, 16, aMachine     , UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS, HARDNESS[0], NBT_RESISTANCE, HARDNESS[0], NBT_COLOR, UT.Code.getRGBInt(aMat.fRGBaSolid), NBT_INPUT, V[0], NBT_TEXTURE, "burnmixer", NBT_ENERGY_ACCEPTED, TD.Energy.RU, NBT_RECIPEMAP, RM.BurnMixer, NBT_INV_SIDE_IN, SBIT_L|SBIT_U, NBT_INV_SIDE_AUTO_IN, SIDE_LEFT, NBT_INV_SIDE_OUT, SBIT_R|SBIT_B, NBT_INV_SIDE_AUTO_OUT, SIDE_RIGHT, NBT_TANK_SIDE_IN, SBIT_L|SBIT_U, NBT_TANK_SIDE_AUTO_IN, SIDE_TOP, NBT_TANK_SIDE_OUT, SBIT_R|SBIT_B, NBT_TANK_SIDE_AUTO_OUT, SIDE_BACK, NBT_ENERGY_ACCEPTED_SIDES, SBIT_D, NBT_NEEDS_IGNITION, T), "PMP", "PRP", "hSw", 'M', OP.casingMachine.dat(aMat), 'S', OP.stick.dat(aMat), 'R', OP.rotor.dat(MT.Invar), 'P', OP.plate.dat(MT.Invar));
		aMat = MT.DATA.Heat_T[1];    aRegistry.add("Burner Mixer (" + aMat.getLocal() + ")"              , "Basic Machines"                      , 20942, 20001, aClass, aMat.mToolQuality, 16, aMachine     , UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS, HARDNESS[1], NBT_RESISTANCE, HARDNESS[1], NBT_COLOR, UT.Code.getRGBInt(aMat.fRGBaSolid), NBT_INPUT, V[1], NBT_TEXTURE, "burnmixer", NBT_ENERGY_ACCEPTED, TD.Energy.RU, NBT_RECIPEMAP, RM.BurnMixer, NBT_INV_SIDE_IN, SBIT_L|SBIT_U, NBT_INV_SIDE_AUTO_IN, SIDE_LEFT, NBT_INV_SIDE_OUT, SBIT_R|SBIT_B, NBT_INV_SIDE_AUTO_OUT, SIDE_RIGHT, NBT_TANK_SIDE_IN, SBIT_L|SBIT_U, NBT_TANK_SIDE_AUTO_IN, SIDE_TOP, NBT_TANK_SIDE_OUT, SBIT_R|SBIT_B, NBT_TANK_SIDE_AUTO_OUT, SIDE_BACK, NBT_ENERGY_ACCEPTED_SIDES, SBIT_D, NBT_NEEDS_IGNITION, T), "PMP", "PRP", "hSw", 'M', OP.casingMachine.dat(aMat), 'S', OP.stick.dat(aMat), 'R', OP.rotor.dat(MT.Invar), 'P', OP.plate.dat(MT.Invar));
		aMat = MT.DATA.Heat_T[2];    aRegistry.add("Burner Mixer (" + aMat.getLocal() + ")"              , "Basic Machines"                      , 20943, 20001, aClass, aMat.mToolQuality, 16, aMachine     , UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS, HARDNESS[2], NBT_RESISTANCE, HARDNESS[2], NBT_COLOR, UT.Code.getRGBInt(aMat.fRGBaSolid), NBT_INPUT, V[2], NBT_TEXTURE, "burnmixer", NBT_ENERGY_ACCEPTED, TD.Energy.RU, NBT_RECIPEMAP, RM.BurnMixer, NBT_INV_SIDE_IN, SBIT_L|SBIT_U, NBT_INV_SIDE_AUTO_IN, SIDE_LEFT, NBT_INV_SIDE_OUT, SBIT_R|SBIT_B, NBT_INV_SIDE_AUTO_OUT, SIDE_RIGHT, NBT_TANK_SIDE_IN, SBIT_L|SBIT_U, NBT_TANK_SIDE_AUTO_IN, SIDE_TOP, NBT_TANK_SIDE_OUT, SBIT_R|SBIT_B, NBT_TANK_SIDE_AUTO_OUT, SIDE_BACK, NBT_ENERGY_ACCEPTED_SIDES, SBIT_D, NBT_NEEDS_IGNITION, T), "PMP", "PRP", "hSw", 'M', OP.casingMachine.dat(aMat), 'S', OP.stick.dat(aMat), 'R', OP.rotor.dat(MT.Invar), 'P', OP.plateDouble.dat(MT.Invar));
		aMat = MT.DATA.Heat_T[3];    aRegistry.add("Burner Mixer (" + aMat.getLocal() + ")"              , "Basic Machines"                      , 20944, 20001, aClass, aMat.mToolQuality, 16, aMachine     , UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS, HARDNESS[3], NBT_RESISTANCE, HARDNESS[3], NBT_COLOR, UT.Code.getRGBInt(aMat.fRGBaSolid), NBT_INPUT, V[3], NBT_TEXTURE, "burnmixer", NBT_ENERGY_ACCEPTED, TD.Energy.RU, NBT_RECIPEMAP, RM.BurnMixer, NBT_INV_SIDE_IN, SBIT_L|SBIT_U, NBT_INV_SIDE_AUTO_IN, SIDE_LEFT, NBT_INV_SIDE_OUT, SBIT_R|SBIT_B, NBT_INV_SIDE_AUTO_OUT, SIDE_RIGHT, NBT_TANK_SIDE_IN, SBIT_L|SBIT_U, NBT_TANK_SIDE_AUTO_IN, SIDE_TOP, NBT_TANK_SIDE_OUT, SBIT_R|SBIT_B, NBT_TANK_SIDE_AUTO_OUT, SIDE_BACK, NBT_ENERGY_ACCEPTED_SIDES, SBIT_D, NBT_NEEDS_IGNITION, T), "PMP", "PRP", "hSw", 'M', OP.casingMachine.dat(aMat), 'S', OP.stick.dat(aMat), 'R', OP.rotor.dat(MT.Invar), 'P', OP.plateTriple.dat(MT.Invar));
		aMat = MT.DATA.Heat_T[4];    aRegistry.add("Burner Mixer (" + aMat.getLocal() + ")"              , "Basic Machines"                      , 20945, 20001, aClass, aMat.mToolQuality, 16, aMachine     , UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS, HARDNESS[4], NBT_RESISTANCE, HARDNESS[4], NBT_COLOR, UT.Code.getRGBInt(aMat.fRGBaSolid), NBT_INPUT, V[4], NBT_TEXTURE, "burnmixer", NBT_ENERGY_ACCEPTED, TD.Energy.RU, NBT_RECIPEMAP, RM.BurnMixer, NBT_INV_SIDE_IN, SBIT_L|SBIT_U, NBT_INV_SIDE_AUTO_IN, SIDE_LEFT, NBT_INV_SIDE_OUT, SBIT_R|SBIT_B, NBT_INV_SIDE_AUTO_OUT, SIDE_RIGHT, NBT_TANK_SIDE_IN, SBIT_L|SBIT_U, NBT_TANK_SIDE_AUTO_IN, SIDE_TOP, NBT_TANK_SIDE_OUT, SBIT_R|SBIT_B, NBT_TANK_SIDE_AUTO_OUT, SIDE_BACK, NBT_ENERGY_ACCEPTED_SIDES, SBIT_D, NBT_NEEDS_IGNITION, T), "PMP", "PRP", "hSw", 'M', OP.casingMachine.dat(aMat), 'S', OP.stick.dat(aMat), 'R', OP.rotor.dat(MT.Invar), 'P', OP.plateQuadruple.dat(MT.Invar));
		aMat = MT.DATA.Heat_T[5];    aRegistry.add("Burner Mixer (" + aMat.getLocal() + ")"              , "Basic Machines"                      , 20946, 20001, aClass, aMat.mToolQuality, 16, aMachine     , UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS, HARDNESS[5], NBT_RESISTANCE, HARDNESS[5], NBT_COLOR, UT.Code.getRGBInt(aMat.fRGBaSolid), NBT_INPUT, V[5], NBT_TEXTURE, "burnmixer", NBT_ENERGY_ACCEPTED, TD.Energy.RU, NBT_RECIPEMAP, RM.BurnMixer, NBT_INV_SIDE_IN, SBIT_L|SBIT_U, NBT_INV_SIDE_AUTO_IN, SIDE_LEFT, NBT_INV_SIDE_OUT, SBIT_R|SBIT_B, NBT_INV_SIDE_AUTO_OUT, SIDE_RIGHT, NBT_TANK_SIDE_IN, SBIT_L|SBIT_U, NBT_TANK_SIDE_AUTO_IN, SIDE_TOP, NBT_TANK_SIDE_OUT, SBIT_R|SBIT_B, NBT_TANK_SIDE_AUTO_OUT, SIDE_BACK, NBT_ENERGY_ACCEPTED_SIDES, SBIT_D, NBT_NEEDS_IGNITION, T), "PMP", "PRP", "hSw", 'M', OP.casingMachine.dat(aMat), 'S', OP.stick.dat(aMat), 'R', OP.rotor.dat(MT.Invar), 'P', OP.plate.dat(MT.Invar));
		aMat = MT.DATA.Heat_T[6];    aRegistry.add("Burner Mixer (" + aMat.getLocal() + ")"              , "Basic Machines"                      , 20947, 20001, aClass, aMat.mToolQuality, 16, aMachine     , UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS, HARDNESS[6], NBT_RESISTANCE, HARDNESS[6], NBT_COLOR, UT.Code.getRGBInt(aMat.fRGBaSolid), NBT_INPUT, V[6], NBT_TEXTURE, "burnmixer", NBT_ENERGY_ACCEPTED, TD.Energy.RU, NBT_RECIPEMAP, RM.BurnMixer, NBT_INV_SIDE_IN, SBIT_L|SBIT_U, NBT_INV_SIDE_AUTO_IN, SIDE_LEFT, NBT_INV_SIDE_OUT, SBIT_R|SBIT_B, NBT_INV_SIDE_AUTO_OUT, SIDE_RIGHT, NBT_TANK_SIDE_IN, SBIT_L|SBIT_U, NBT_TANK_SIDE_AUTO_IN, SIDE_TOP, NBT_TANK_SIDE_OUT, SBIT_R|SBIT_B, NBT_TANK_SIDE_AUTO_OUT, SIDE_BACK, NBT_ENERGY_ACCEPTED_SIDES, SBIT_D, NBT_NEEDS_IGNITION, T), "PMP", "PRP", "hSw", 'M', OP.casingMachine.dat(aMat), 'S', OP.stick.dat(aMat), 'R', OP.rotor.dat(MT.Invar), 'P', OP.plate.dat(MT.Invar));
		aMat = MT.DATA.Heat_T[7];    aRegistry.add("Burner Mixer (" + aMat.getLocal() + ")"              , "Basic Machines"                      , 20948, 20001, aClass, aMat.mToolQuality, 16, aMachine     , UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS, HARDNESS[7], NBT_RESISTANCE, HARDNESS[7], NBT_COLOR, UT.Code.getRGBInt(aMat.fRGBaSolid), NBT_INPUT, V[7], NBT_TEXTURE, "burnmixer", NBT_ENERGY_ACCEPTED, TD.Energy.RU, NBT_RECIPEMAP, RM.BurnMixer, NBT_INV_SIDE_IN, SBIT_L|SBIT_U, NBT_INV_SIDE_AUTO_IN, SIDE_LEFT, NBT_INV_SIDE_OUT, SBIT_R|SBIT_B, NBT_INV_SIDE_AUTO_OUT, SIDE_RIGHT, NBT_TANK_SIDE_IN, SBIT_L|SBIT_U, NBT_TANK_SIDE_AUTO_IN, SIDE_TOP, NBT_TANK_SIDE_OUT, SBIT_R|SBIT_B, NBT_TANK_SIDE_AUTO_OUT, SIDE_BACK, NBT_ENERGY_ACCEPTED_SIDES, SBIT_D, NBT_NEEDS_IGNITION, T), "PMP", "PRP", "hSw", 'M', OP.casingMachine.dat(aMat), 'S', OP.stick.dat(aMat), 'R', OP.rotor.dat(MT.Invar), 'P', OP.plateDouble.dat(MT.Invar));
		aMat = MT.DATA.Heat_T[8];    aRegistry.add("Burner Mixer (" + aMat.getLocal() + ")"              , "Basic Machines"                      , 20949, 20001, aClass, aMat.mToolQuality, 16, aMachine     , UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS, HARDNESS[8], NBT_RESISTANCE, HARDNESS[8], NBT_COLOR, UT.Code.getRGBInt(aMat.fRGBaSolid), NBT_INPUT, V[8], NBT_TEXTURE, "burnmixer", NBT_ENERGY_ACCEPTED, TD.Energy.RU, NBT_RECIPEMAP, RM.BurnMixer, NBT_INV_SIDE_IN, SBIT_L|SBIT_U, NBT_INV_SIDE_AUTO_IN, SIDE_LEFT, NBT_INV_SIDE_OUT, SBIT_R|SBIT_B, NBT_INV_SIDE_AUTO_OUT, SIDE_RIGHT, NBT_TANK_SIDE_IN, SBIT_L|SBIT_U, NBT_TANK_SIDE_AUTO_IN, SIDE_TOP, NBT_TANK_SIDE_OUT, SBIT_R|SBIT_B, NBT_TANK_SIDE_AUTO_OUT, SIDE_BACK, NBT_ENERGY_ACCEPTED_SIDES, SBIT_D, NBT_NEEDS_IGNITION, T), "PMP", "PRP", "hSw", 'M', OP.casingMachine.dat(aMat), 'S', OP.stick.dat(aMat), 'R', OP.rotor.dat(MT.Invar), 'P', OP.plateTriple.dat(MT.Invar));
		aMat = MT.DATA.Heat_T[9];    aRegistry.add("Burner Mixer (" + aMat.getLocal() + ")"              , "Basic Machines"                      , 20950, 20001, aClass, aMat.mToolQuality, 16, aMachine     , UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS, HARDNESS[9], NBT_RESISTANCE, HARDNESS[9], NBT_COLOR, UT.Code.getRGBInt(aMat.fRGBaSolid), NBT_INPUT, V[9], NBT_TEXTURE, "burnmixer", NBT_ENERGY_ACCEPTED, TD.Energy.RU, NBT_RECIPEMAP, RM.BurnMixer, NBT_INV_SIDE_IN, SBIT_L|SBIT_U, NBT_INV_SIDE_AUTO_IN, SIDE_LEFT, NBT_INV_SIDE_OUT, SBIT_R|SBIT_B, NBT_INV_SIDE_AUTO_OUT, SIDE_RIGHT, NBT_TANK_SIDE_IN, SBIT_L|SBIT_U, NBT_TANK_SIDE_AUTO_IN, SIDE_TOP, NBT_TANK_SIDE_OUT, SBIT_R|SBIT_B, NBT_TANK_SIDE_AUTO_OUT, SIDE_BACK, NBT_ENERGY_ACCEPTED_SIDES, SBIT_D, NBT_NEEDS_IGNITION, T), "PMP", "PRP", "hSw", 'M', OP.casingMachine.dat(aMat), 'S', OP.stick.dat(aMat), 'R', OP.rotor.dat(MT.Invar), 'P', OP.plateQuadruple.dat(MT.Invar));
		aMat = MT.DATA.Heat_T[10];    aRegistry.add("Burner Mixer (" + aMat.getLocal() + ")"              , "Basic Machines"                      , 20951, 20001, aClass, aMat.mToolQuality, 16, aMachine     , UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS, HARDNESS[10], NBT_RESISTANCE, HARDNESS[10], NBT_COLOR, UT.Code.getRGBInt(aMat.fRGBaSolid), NBT_INPUT, V[10], NBT_TEXTURE, "burnmixer", NBT_ENERGY_ACCEPTED, TD.Energy.RU, NBT_RECIPEMAP, RM.BurnMixer, NBT_INV_SIDE_IN, SBIT_L|SBIT_U, NBT_INV_SIDE_AUTO_IN, SIDE_LEFT, NBT_INV_SIDE_OUT, SBIT_R|SBIT_B, NBT_INV_SIDE_AUTO_OUT, SIDE_RIGHT, NBT_TANK_SIDE_IN, SBIT_L|SBIT_U, NBT_TANK_SIDE_AUTO_IN, SIDE_TOP, NBT_TANK_SIDE_OUT, SBIT_R|SBIT_B, NBT_TANK_SIDE_AUTO_OUT, SIDE_BACK, NBT_ENERGY_ACCEPTED_SIDES, SBIT_D, NBT_NEEDS_IGNITION, T), "PMP", "PRP", "hSw", 'M', OP.casingMachine.dat(aMat), 'S', OP.stick.dat(aMat), 'R', OP.rotor.dat(MT.Invar), 'P', OP.plate.dat(MT.Invar));
		aMat = MT.DATA.Heat_T[11];    aRegistry.add("Burner Mixer (" + aMat.getLocal() + ")"              , "Basic Machines"                      , 20952, 20001, aClass, aMat.mToolQuality, 16, aMachine     , UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS, HARDNESS[11], NBT_RESISTANCE, HARDNESS[11], NBT_COLOR, UT.Code.getRGBInt(aMat.fRGBaSolid), NBT_INPUT, V[11], NBT_TEXTURE, "burnmixer", NBT_ENERGY_ACCEPTED, TD.Energy.RU, NBT_RECIPEMAP, RM.BurnMixer, NBT_INV_SIDE_IN, SBIT_L|SBIT_U, NBT_INV_SIDE_AUTO_IN, SIDE_LEFT, NBT_INV_SIDE_OUT, SBIT_R|SBIT_B, NBT_INV_SIDE_AUTO_OUT, SIDE_RIGHT, NBT_TANK_SIDE_IN, SBIT_L|SBIT_U, NBT_TANK_SIDE_AUTO_IN, SIDE_TOP, NBT_TANK_SIDE_OUT, SBIT_R|SBIT_B, NBT_TANK_SIDE_AUTO_OUT, SIDE_BACK, NBT_ENERGY_ACCEPTED_SIDES, SBIT_D, NBT_NEEDS_IGNITION, T), "PMP", "PRP", "hSw", 'M', OP.casingMachine.dat(aMat), 'S', OP.stick.dat(aMat), 'R', OP.rotor.dat(MT.Invar), 'P', OP.plate.dat(MT.Invar));
		aMat = MT.DATA.Heat_T[12];    aRegistry.add("Burner Mixer (" + aMat.getLocal() + ")"              , "Basic Machines"                      , 20953, 20001, aClass, aMat.mToolQuality, 16, aMachine     , UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS, HARDNESS[12], NBT_RESISTANCE, HARDNESS[12], NBT_COLOR, UT.Code.getRGBInt(aMat.fRGBaSolid), NBT_INPUT, V[12], NBT_TEXTURE, "burnmixer", NBT_ENERGY_ACCEPTED, TD.Energy.RU, NBT_RECIPEMAP, RM.BurnMixer, NBT_INV_SIDE_IN, SBIT_L|SBIT_U, NBT_INV_SIDE_AUTO_IN, SIDE_LEFT, NBT_INV_SIDE_OUT, SBIT_R|SBIT_B, NBT_INV_SIDE_AUTO_OUT, SIDE_RIGHT, NBT_TANK_SIDE_IN, SBIT_L|SBIT_U, NBT_TANK_SIDE_AUTO_IN, SIDE_TOP, NBT_TANK_SIDE_OUT, SBIT_R|SBIT_B, NBT_TANK_SIDE_AUTO_OUT, SIDE_BACK, NBT_ENERGY_ACCEPTED_SIDES, SBIT_D, NBT_NEEDS_IGNITION, T), "PMP", "PRP", "hSw", 'M', OP.casingMachine.dat(aMat), 'S', OP.stick.dat(aMat), 'R', OP.rotor.dat(MT.Invar), 'P', OP.plateDouble.dat(MT.Invar));
		aMat = MT.DATA.Heat_T[13];    aRegistry.add("Burner Mixer (" + aMat.getLocal() + ")"              , "Basic Machines"                      , 20954, 20001, aClass, aMat.mToolQuality, 16, aMachine     , UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS, HARDNESS[13], NBT_RESISTANCE, HARDNESS[13], NBT_COLOR, UT.Code.getRGBInt(aMat.fRGBaSolid), NBT_INPUT, V[13], NBT_TEXTURE, "burnmixer", NBT_ENERGY_ACCEPTED, TD.Energy.RU, NBT_RECIPEMAP, RM.BurnMixer, NBT_INV_SIDE_IN, SBIT_L|SBIT_U, NBT_INV_SIDE_AUTO_IN, SIDE_LEFT, NBT_INV_SIDE_OUT, SBIT_R|SBIT_B, NBT_INV_SIDE_AUTO_OUT, SIDE_RIGHT, NBT_TANK_SIDE_IN, SBIT_L|SBIT_U, NBT_TANK_SIDE_AUTO_IN, SIDE_TOP, NBT_TANK_SIDE_OUT, SBIT_R|SBIT_B, NBT_TANK_SIDE_AUTO_OUT, SIDE_BACK, NBT_ENERGY_ACCEPTED_SIDES, SBIT_D, NBT_NEEDS_IGNITION, T), "PMP", "PRP", "hSw", 'M', OP.casingMachine.dat(aMat), 'S', OP.stick.dat(aMat), 'R', OP.rotor.dat(MT.Invar), 'P', OP.plateTriple.dat(MT.Invar));
		aMat = MT.DATA.Heat_T[14];    aRegistry.add("Burner Mixer (" + aMat.getLocal() + ")"              , "Basic Machines"                      , 20955, 20001, aClass, aMat.mToolQuality, 16, aMachine     , UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS, HARDNESS[14], NBT_RESISTANCE, HARDNESS[14], NBT_COLOR, UT.Code.getRGBInt(aMat.fRGBaSolid), NBT_INPUT, V[14], NBT_TEXTURE, "burnmixer", NBT_ENERGY_ACCEPTED, TD.Energy.RU, NBT_RECIPEMAP, RM.BurnMixer, NBT_INV_SIDE_IN, SBIT_L|SBIT_U, NBT_INV_SIDE_AUTO_IN, SIDE_LEFT, NBT_INV_SIDE_OUT, SBIT_R|SBIT_B, NBT_INV_SIDE_AUTO_OUT, SIDE_RIGHT, NBT_TANK_SIDE_IN, SBIT_L|SBIT_U, NBT_TANK_SIDE_AUTO_IN, SIDE_TOP, NBT_TANK_SIDE_OUT, SBIT_R|SBIT_B, NBT_TANK_SIDE_AUTO_OUT, SIDE_BACK, NBT_ENERGY_ACCEPTED_SIDES, SBIT_D, NBT_NEEDS_IGNITION, T), "PMP", "PRP", "hSw", 'M', OP.casingMachine.dat(aMat), 'S', OP.stick.dat(aMat), 'R', OP.rotor.dat(MT.Invar), 'P', OP.plateQuadruple.dat(MT.Invar));
		aMat = MT.DATA.Heat_T[15];    aRegistry.add("Burner Mixer (" + aMat.getLocal() + ")"              , "Basic Machines"                      , 20956, 20001, aClass, aMat.mToolQuality, 16, aMachine     , UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS, HARDNESS[15], NBT_RESISTANCE, HARDNESS[15], NBT_COLOR, UT.Code.getRGBInt(aMat.fRGBaSolid), NBT_INPUT, V[15], NBT_TEXTURE, "burnmixer", NBT_ENERGY_ACCEPTED, TD.Energy.RU, NBT_RECIPEMAP, RM.BurnMixer, NBT_INV_SIDE_IN, SBIT_L|SBIT_U, NBT_INV_SIDE_AUTO_IN, SIDE_LEFT, NBT_INV_SIDE_OUT, SBIT_R|SBIT_B, NBT_INV_SIDE_AUTO_OUT, SIDE_RIGHT, NBT_TANK_SIDE_IN, SBIT_L|SBIT_U, NBT_TANK_SIDE_AUTO_IN, SIDE_TOP, NBT_TANK_SIDE_OUT, SBIT_R|SBIT_B, NBT_TANK_SIDE_AUTO_OUT, SIDE_BACK, NBT_ENERGY_ACCEPTED_SIDES, SBIT_D, NBT_NEEDS_IGNITION, T), "PMP", "PRP", "hSw", 'M', OP.casingMachine.dat(aMat), 'S', OP.stick.dat(aMat), 'R', OP.rotor.dat(MT.Invar), 'P', OP.plate.dat(MT.Invar));
	}

	private static void machines3_2(MultiTileEntityRegistry aRegistry, MultiTileEntityBlock aMetal, MultiTileEntityBlock aMetalChips, MultiTileEntityBlock aMetalWires, MultiTileEntityBlock aMachine, MultiTileEntityBlock aWooden, MultiTileEntityBlock aBush, MultiTileEntityBlock aStone, MultiTileEntityBlock aWool, MultiTileEntityBlock aTNT, MultiTileEntityBlock aHive, MultiTileEntityBlock aUtilMetal, MultiTileEntityBlock aUtilStone, MultiTileEntityBlock aUtilWood, MultiTileEntityBlock aUtilWool, OreDictMaterial aMat, Class<? extends TileEntity> aClass) {
		aClass = MultiTileEntityBasicMachineElectric.class;
		aMat = MT.DATA.Electric_T[0];   aRegistry.add("Plantalyzer ("+VN[0]+")"                             , "Basic Machines"                      , 20961, 20001, aClass, aMat.mToolQuality, 16, aMachine     , UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS,   4.0F, NBT_RESISTANCE,   4.0F, NBT_COLOR, UT.Code.getRGBInt(aMat.fRGBaSolid), NBT_INPUT,  V[0], NBT_TEXTURE, "plantalyzer", NBT_ENERGY_ACCEPTED, TD.Energy.EU, NBT_RECIPEMAP, RM.Plantalyzer, NBT_INV_SIDE_IN, SBIT_U|SBIT_L, NBT_INV_SIDE_AUTO_IN, SIDE_LEFT, NBT_INV_SIDE_OUT, SBIT_R|SBIT_D, NBT_INV_SIDE_AUTO_OUT, SIDE_RIGHT, NBT_TANK_SIDE_IN, SBIT_U|SBIT_D, NBT_TANK_SIDE_AUTO_IN, SIDE_TOP, NBT_ENERGY_ACCEPTED_SIDES, SBIT_B), "WXW", "ZMP", "CYC", 'M', OP.casingMachine.dat(aMat), 'C', OD_CIRCUITS[1], 'W', MT.DATA.CABLES_01[0], 'P', IL.Processor_Crystal_Diamond, 'X', IL.EMITTERS[0], 'Y', IL.SENSORS[0], 'Z', OP.treeSapling);
		aMat = MT.DATA.Electric_T[1];   aRegistry.add("Plantalyzer ("+VN[1]+")"                             , "Basic Machines"                      , 20962, 20001, aClass, aMat.mToolQuality, 16, aMachine     , UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS,   4.0F, NBT_RESISTANCE,   4.0F, NBT_COLOR, UT.Code.getRGBInt(aMat.fRGBaSolid), NBT_INPUT,  V[1], NBT_TEXTURE, "plantalyzer", NBT_ENERGY_ACCEPTED, TD.Energy.EU, NBT_RECIPEMAP, RM.Plantalyzer, NBT_INV_SIDE_IN, SBIT_U|SBIT_L, NBT_INV_SIDE_AUTO_IN, SIDE_LEFT, NBT_INV_SIDE_OUT, SBIT_R|SBIT_D, NBT_INV_SIDE_AUTO_OUT, SIDE_RIGHT, NBT_TANK_SIDE_IN, SBIT_U|SBIT_D, NBT_TANK_SIDE_AUTO_IN, SIDE_TOP, NBT_ENERGY_ACCEPTED_SIDES, SBIT_B), "WXW", "ZMP", "CYC", 'M', OP.casingMachine.dat(aMat), 'C', OD_CIRCUITS[1], 'W', MT.DATA.CABLES_01[1], 'P', IL.Processor_Crystal_Diamond, 'X', IL.EMITTERS[1], 'Y', IL.SENSORS[1], 'Z', OP.treeSapling);
		aMat = MT.DATA.Electric_T[2];   aRegistry.add("Plantalyzer ("+VN[2]+")"                             , "Basic Machines"                      , 20963, 20001, aClass, aMat.mToolQuality, 16, aMachine     , UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS,   4.0F, NBT_RESISTANCE,   4.0F, NBT_COLOR, UT.Code.getRGBInt(aMat.fRGBaSolid), NBT_INPUT,  V[2], NBT_TEXTURE, "plantalyzer", NBT_ENERGY_ACCEPTED, TD.Energy.EU, NBT_RECIPEMAP, RM.Plantalyzer, NBT_INV_SIDE_IN, SBIT_U|SBIT_L, NBT_INV_SIDE_AUTO_IN, SIDE_LEFT, NBT_INV_SIDE_OUT, SBIT_R|SBIT_D, NBT_INV_SIDE_AUTO_OUT, SIDE_RIGHT, NBT_TANK_SIDE_IN, SBIT_U|SBIT_D, NBT_TANK_SIDE_AUTO_IN, SIDE_TOP, NBT_ENERGY_ACCEPTED_SIDES, SBIT_B), "WXW", "ZMP", "CYC", 'M', OP.casingMachine.dat(aMat), 'C', OD_CIRCUITS[2], 'W', MT.DATA.CABLES_01[2], 'P', IL.Processor_Crystal_Diamond, 'X', IL.EMITTERS[2], 'Y', IL.SENSORS[2], 'Z', OP.treeSapling);
		aMat = MT.DATA.Electric_T[3];   aRegistry.add("Plantalyzer ("+VN[3]+")"                             , "Basic Machines"                      , 20964, 20001, aClass, aMat.mToolQuality, 16, aMachine     , UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS,   4.0F, NBT_RESISTANCE,   4.0F, NBT_COLOR, UT.Code.getRGBInt(aMat.fRGBaSolid), NBT_INPUT,  V[3], NBT_TEXTURE, "plantalyzer", NBT_ENERGY_ACCEPTED, TD.Energy.EU, NBT_RECIPEMAP, RM.Plantalyzer, NBT_INV_SIDE_IN, SBIT_U|SBIT_L, NBT_INV_SIDE_AUTO_IN, SIDE_LEFT, NBT_INV_SIDE_OUT, SBIT_R|SBIT_D, NBT_INV_SIDE_AUTO_OUT, SIDE_RIGHT, NBT_TANK_SIDE_IN, SBIT_U|SBIT_D, NBT_TANK_SIDE_AUTO_IN, SIDE_TOP, NBT_ENERGY_ACCEPTED_SIDES, SBIT_B), "WXW", "ZMP", "CYC", 'M', OP.casingMachine.dat(aMat), 'C', OD_CIRCUITS[3], 'W', MT.DATA.CABLES_01[3], 'P', IL.Processor_Crystal_Diamond, 'X', IL.EMITTERS[3], 'Y', IL.SENSORS[3], 'Z', OP.treeSapling);
		aMat = MT.DATA.Electric_T[4];   aRegistry.add("Plantalyzer ("+VN[4]+")"                             , "Basic Machines"                      , 20965, 20001, aClass, aMat.mToolQuality, 16, aMachine     , UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS,   4.0F, NBT_RESISTANCE,   4.0F, NBT_COLOR, UT.Code.getRGBInt(aMat.fRGBaSolid), NBT_INPUT,  V[4], NBT_TEXTURE, "plantalyzer", NBT_ENERGY_ACCEPTED, TD.Energy.EU, NBT_RECIPEMAP, RM.Plantalyzer, NBT_INV_SIDE_IN, SBIT_U|SBIT_L, NBT_INV_SIDE_AUTO_IN, SIDE_LEFT, NBT_INV_SIDE_OUT, SBIT_R|SBIT_D, NBT_INV_SIDE_AUTO_OUT, SIDE_RIGHT, NBT_TANK_SIDE_IN, SBIT_U|SBIT_D, NBT_TANK_SIDE_AUTO_IN, SIDE_TOP, NBT_ENERGY_ACCEPTED_SIDES, SBIT_B), "WXW", "ZMP", "CYC", 'M', OP.casingMachine.dat(aMat), 'C', OD_CIRCUITS[4], 'W', MT.DATA.CABLES_01[4], 'P', IL.Processor_Crystal_Diamond, 'X', IL.EMITTERS[4], 'Y', IL.SENSORS[4], 'Z', OP.treeSapling);
		aMat = MT.DATA.Electric_T[5];   aRegistry.add("Plantalyzer ("+VN[5]+")"                             , "Basic Machines"                      , 20966, 20001, aClass, aMat.mToolQuality, 16, aMachine     , UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS,   4.0F, NBT_RESISTANCE,   4.0F, NBT_COLOR, UT.Code.getRGBInt(aMat.fRGBaSolid), NBT_INPUT,  V[5], NBT_TEXTURE, "plantalyzer", NBT_ENERGY_ACCEPTED, TD.Energy.EU, NBT_RECIPEMAP, RM.Plantalyzer, NBT_INV_SIDE_IN, SBIT_U|SBIT_L, NBT_INV_SIDE_AUTO_IN, SIDE_LEFT, NBT_INV_SIDE_OUT, SBIT_R|SBIT_D, NBT_INV_SIDE_AUTO_OUT, SIDE_RIGHT, NBT_TANK_SIDE_IN, SBIT_U|SBIT_D, NBT_TANK_SIDE_AUTO_IN, SIDE_TOP, NBT_ENERGY_ACCEPTED_SIDES, SBIT_B), "WXW", "ZMP", "CYC", 'M', OP.casingMachine.dat(aMat), 'C', OD_CIRCUITS[5], 'W', MT.DATA.CABLES_01[5], 'P', IL.Processor_Crystal_Diamond, 'X', IL.EMITTERS[5], 'Y', IL.SENSORS[5], 'Z', OP.treeSapling);
		aMat = MT.DATA.Electric_T[6];   aRegistry.add("Plantalyzer ("+VN[6]+")"                             , "Basic Machines"                      , 20967, 20001, aClass, aMat.mToolQuality, 16, aMachine     , UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS,   4.0F, NBT_RESISTANCE,   4.0F, NBT_COLOR, UT.Code.getRGBInt(aMat.fRGBaSolid), NBT_INPUT,  V[6], NBT_TEXTURE, "plantalyzer", NBT_ENERGY_ACCEPTED, TD.Energy.EU, NBT_RECIPEMAP, RM.Plantalyzer, NBT_INV_SIDE_IN, SBIT_U|SBIT_L, NBT_INV_SIDE_AUTO_IN, SIDE_LEFT, NBT_INV_SIDE_OUT, SBIT_R|SBIT_D, NBT_INV_SIDE_AUTO_OUT, SIDE_RIGHT, NBT_TANK_SIDE_IN, SBIT_U|SBIT_D, NBT_TANK_SIDE_AUTO_IN, SIDE_TOP, NBT_ENERGY_ACCEPTED_SIDES, SBIT_B), "WXW", "ZMP", "CYC", 'M', OP.casingMachine.dat(aMat), 'C', OD_CIRCUITS[6], 'W', MT.DATA.CABLES_01[6], 'P', IL.Processor_Crystal_Diamond, 'X', IL.EMITTERS[6], 'Y', IL.SENSORS[6], 'Z', OP.treeSapling);
		aMat = MT.DATA.Electric_T[7];   aRegistry.add("Plantalyzer ("+VN[7]+")"                             , "Basic Machines"                      , 20968, 20001, aClass, aMat.mToolQuality, 16, aMachine     , UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS,   4.0F, NBT_RESISTANCE,   4.0F, NBT_COLOR, UT.Code.getRGBInt(aMat.fRGBaSolid), NBT_INPUT,  V[7], NBT_TEXTURE, "plantalyzer", NBT_ENERGY_ACCEPTED, TD.Energy.EU, NBT_RECIPEMAP, RM.Plantalyzer, NBT_INV_SIDE_IN, SBIT_U|SBIT_L, NBT_INV_SIDE_AUTO_IN, SIDE_LEFT, NBT_INV_SIDE_OUT, SBIT_R|SBIT_D, NBT_INV_SIDE_AUTO_OUT, SIDE_RIGHT, NBT_TANK_SIDE_IN, SBIT_U|SBIT_D, NBT_TANK_SIDE_AUTO_IN, SIDE_TOP, NBT_ENERGY_ACCEPTED_SIDES, SBIT_B), "WXW", "ZMP", "CYC", 'M', OP.casingMachine.dat(aMat), 'C', OD_CIRCUITS[7], 'W', MT.DATA.CABLES_01[7], 'P', IL.Processor_Crystal_Diamond, 'X', IL.EMITTERS[7], 'Y', IL.SENSORS[7], 'Z', OP.treeSapling);
		aMat = MT.DATA.Electric_T[8];   aRegistry.add("Plantalyzer ("+VN[8]+")"                             , "Basic Machines"                      , 20969, 20001, aClass, aMat.mToolQuality, 16, aMachine     , UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS,   4.0F, NBT_RESISTANCE,   4.0F, NBT_COLOR, UT.Code.getRGBInt(aMat.fRGBaSolid), NBT_INPUT,  V[8], NBT_TEXTURE, "plantalyzer", NBT_ENERGY_ACCEPTED, TD.Energy.EU, NBT_RECIPEMAP, RM.Plantalyzer, NBT_INV_SIDE_IN, SBIT_U|SBIT_L, NBT_INV_SIDE_AUTO_IN, SIDE_LEFT, NBT_INV_SIDE_OUT, SBIT_R|SBIT_D, NBT_INV_SIDE_AUTO_OUT, SIDE_RIGHT, NBT_TANK_SIDE_IN, SBIT_U|SBIT_D, NBT_TANK_SIDE_AUTO_IN, SIDE_TOP, NBT_ENERGY_ACCEPTED_SIDES, SBIT_B), "WXW", "ZMP", "CYC", 'M', OP.casingMachine.dat(aMat), 'C', OD_CIRCUITS[8], 'W', MT.DATA.CABLES_01[8], 'P', IL.Processor_Crystal_Diamond, 'X', IL.EMITTERS[8], 'Y', IL.SENSORS[8], 'Z', OP.treeSapling);
		aMat = MT.DATA.Electric_T[9];   aRegistry.add("Plantalyzer ("+VN[9]+")"                             , "Basic Machines"                      , 20970, 20001, aClass, aMat.mToolQuality, 16, aMachine     , UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS,   4.0F, NBT_RESISTANCE,   4.0F, NBT_COLOR, UT.Code.getRGBInt(aMat.fRGBaSolid), NBT_INPUT,  V[9], NBT_TEXTURE, "plantalyzer", NBT_ENERGY_ACCEPTED, TD.Energy.EU, NBT_RECIPEMAP, RM.Plantalyzer, NBT_INV_SIDE_IN, SBIT_U|SBIT_L, NBT_INV_SIDE_AUTO_IN, SIDE_LEFT, NBT_INV_SIDE_OUT, SBIT_R|SBIT_D, NBT_INV_SIDE_AUTO_OUT, SIDE_RIGHT, NBT_TANK_SIDE_IN, SBIT_U|SBIT_D, NBT_TANK_SIDE_AUTO_IN, SIDE_TOP, NBT_ENERGY_ACCEPTED_SIDES, SBIT_B), "WXW", "ZMP", "CYC", 'M', OP.casingMachine.dat(aMat), 'C', OD_CIRCUITS[9], 'W', MT.DATA.CABLES_01[9], 'P', IL.Processor_Crystal_Diamond, 'X', IL.EMITTERS[9], 'Y', IL.SENSORS[9], 'Z', OP.treeSapling);
		aMat = MT.DATA.Electric_T[10];   aRegistry.add("Plantalyzer ("+VN[10]+")"                             , "Basic Machines"                      , 20971, 20001, aClass, aMat.mToolQuality, 16, aMachine     , UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS,   4.0F, NBT_RESISTANCE,   4.0F, NBT_COLOR, UT.Code.getRGBInt(aMat.fRGBaSolid), NBT_INPUT,  V[10], NBT_TEXTURE, "plantalyzer", NBT_ENERGY_ACCEPTED, TD.Energy.EU, NBT_RECIPEMAP, RM.Plantalyzer, NBT_INV_SIDE_IN, SBIT_U|SBIT_L, NBT_INV_SIDE_AUTO_IN, SIDE_LEFT, NBT_INV_SIDE_OUT, SBIT_R|SBIT_D, NBT_INV_SIDE_AUTO_OUT, SIDE_RIGHT, NBT_TANK_SIDE_IN, SBIT_U|SBIT_D, NBT_TANK_SIDE_AUTO_IN, SIDE_TOP, NBT_ENERGY_ACCEPTED_SIDES, SBIT_B), "WXW", "ZMP", "CYC", 'M', OP.casingMachine.dat(aMat), 'C', OD_CIRCUITS[10], 'W', MT.DATA.CABLES_01[10], 'P', IL.Processor_Crystal_Diamond, 'X', IL.EMITTERS[10], 'Y', IL.SENSORS[10], 'Z', OP.treeSapling);
		aMat = MT.DATA.Electric_T[11];   aRegistry.add("Plantalyzer ("+VN[11]+")"                             , "Basic Machines"                      , 20972, 20001, aClass, aMat.mToolQuality, 16, aMachine     , UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS,   4.0F, NBT_RESISTANCE,   4.0F, NBT_COLOR, UT.Code.getRGBInt(aMat.fRGBaSolid), NBT_INPUT,  V[11], NBT_TEXTURE, "plantalyzer", NBT_ENERGY_ACCEPTED, TD.Energy.EU, NBT_RECIPEMAP, RM.Plantalyzer, NBT_INV_SIDE_IN, SBIT_U|SBIT_L, NBT_INV_SIDE_AUTO_IN, SIDE_LEFT, NBT_INV_SIDE_OUT, SBIT_R|SBIT_D, NBT_INV_SIDE_AUTO_OUT, SIDE_RIGHT, NBT_TANK_SIDE_IN, SBIT_U|SBIT_D, NBT_TANK_SIDE_AUTO_IN, SIDE_TOP, NBT_ENERGY_ACCEPTED_SIDES, SBIT_B), "WXW", "ZMP", "CYC", 'M', OP.casingMachine.dat(aMat), 'C', OD_CIRCUITS[11], 'W', MT.DATA.CABLES_01[11], 'P', IL.Processor_Crystal_Diamond, 'X', IL.EMITTERS[11], 'Y', IL.SENSORS[11], 'Z', OP.treeSapling);
		aMat = MT.DATA.Electric_T[12];   aRegistry.add("Plantalyzer ("+VN[12]+")"                             , "Basic Machines"                      , 20973, 20001, aClass, aMat.mToolQuality, 16, aMachine     , UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS,   4.0F, NBT_RESISTANCE,   4.0F, NBT_COLOR, UT.Code.getRGBInt(aMat.fRGBaSolid), NBT_INPUT,  V[12], NBT_TEXTURE, "plantalyzer", NBT_ENERGY_ACCEPTED, TD.Energy.EU, NBT_RECIPEMAP, RM.Plantalyzer, NBT_INV_SIDE_IN, SBIT_U|SBIT_L, NBT_INV_SIDE_AUTO_IN, SIDE_LEFT, NBT_INV_SIDE_OUT, SBIT_R|SBIT_D, NBT_INV_SIDE_AUTO_OUT, SIDE_RIGHT, NBT_TANK_SIDE_IN, SBIT_U|SBIT_D, NBT_TANK_SIDE_AUTO_IN, SIDE_TOP, NBT_ENERGY_ACCEPTED_SIDES, SBIT_B), "WXW", "ZMP", "CYC", 'M', OP.casingMachine.dat(aMat), 'C', OD_CIRCUITS[12], 'W', MT.DATA.CABLES_01[12], 'P', IL.Processor_Crystal_Diamond, 'X', IL.EMITTERS[12], 'Y', IL.SENSORS[12], 'Z', OP.treeSapling);
		aMat = MT.DATA.Electric_T[13];   aRegistry.add("Plantalyzer ("+VN[13]+")"                             , "Basic Machines"                      , 20974, 20001, aClass, aMat.mToolQuality, 16, aMachine     , UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS,   4.0F, NBT_RESISTANCE,   4.0F, NBT_COLOR, UT.Code.getRGBInt(aMat.fRGBaSolid), NBT_INPUT,  V[13], NBT_TEXTURE, "plantalyzer", NBT_ENERGY_ACCEPTED, TD.Energy.EU, NBT_RECIPEMAP, RM.Plantalyzer, NBT_INV_SIDE_IN, SBIT_U|SBIT_L, NBT_INV_SIDE_AUTO_IN, SIDE_LEFT, NBT_INV_SIDE_OUT, SBIT_R|SBIT_D, NBT_INV_SIDE_AUTO_OUT, SIDE_RIGHT, NBT_TANK_SIDE_IN, SBIT_U|SBIT_D, NBT_TANK_SIDE_AUTO_IN, SIDE_TOP, NBT_ENERGY_ACCEPTED_SIDES, SBIT_B), "WXW", "ZMP", "CYC", 'M', OP.casingMachine.dat(aMat), 'C', OD_CIRCUITS[13], 'W', MT.DATA.CABLES_01[13], 'P', IL.Processor_Crystal_Diamond, 'X', IL.EMITTERS[13], 'Y', IL.SENSORS[13], 'Z', OP.treeSapling);
		aMat = MT.DATA.Electric_T[14];   aRegistry.add("Plantalyzer ("+VN[14]+")"                             , "Basic Machines"                      , 20975, 20001, aClass, aMat.mToolQuality, 16, aMachine     , UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS,   4.0F, NBT_RESISTANCE,   4.0F, NBT_COLOR, UT.Code.getRGBInt(aMat.fRGBaSolid), NBT_INPUT,  V[14], NBT_TEXTURE, "plantalyzer", NBT_ENERGY_ACCEPTED, TD.Energy.EU, NBT_RECIPEMAP, RM.Plantalyzer, NBT_INV_SIDE_IN, SBIT_U|SBIT_L, NBT_INV_SIDE_AUTO_IN, SIDE_LEFT, NBT_INV_SIDE_OUT, SBIT_R|SBIT_D, NBT_INV_SIDE_AUTO_OUT, SIDE_RIGHT, NBT_TANK_SIDE_IN, SBIT_U|SBIT_D, NBT_TANK_SIDE_AUTO_IN, SIDE_TOP, NBT_ENERGY_ACCEPTED_SIDES, SBIT_B), "WXW", "ZMP", "CYC", 'M', OP.casingMachine.dat(aMat), 'C', OD_CIRCUITS[14], 'W', MT.DATA.CABLES_01[14], 'P', IL.Processor_Crystal_Diamond, 'X', IL.EMITTERS[14], 'Y', IL.SENSORS[14], 'Z', OP.treeSapling);
		aMat = MT.DATA.Electric_T[15];   aRegistry.add("Plantalyzer ("+VN[15]+")"                             , "Basic Machines"                      , 20976, 20001, aClass, aMat.mToolQuality, 16, aMachine     , UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS,   4.0F, NBT_RESISTANCE,   4.0F, NBT_COLOR, UT.Code.getRGBInt(aMat.fRGBaSolid), NBT_INPUT,  V[15], NBT_TEXTURE, "plantalyzer", NBT_ENERGY_ACCEPTED, TD.Energy.EU, NBT_RECIPEMAP, RM.Plantalyzer, NBT_INV_SIDE_IN, SBIT_U|SBIT_L, NBT_INV_SIDE_AUTO_IN, SIDE_LEFT, NBT_INV_SIDE_OUT, SBIT_R|SBIT_D, NBT_INV_SIDE_AUTO_OUT, SIDE_RIGHT, NBT_TANK_SIDE_IN, SBIT_U|SBIT_D, NBT_TANK_SIDE_AUTO_IN, SIDE_TOP, NBT_ENERGY_ACCEPTED_SIDES, SBIT_B), "WXW", "ZMP", "CYC", 'M', OP.casingMachine.dat(aMat), 'C', OD_CIRCUITS[15], 'W', MT.DATA.CABLES_01[15], 'P', IL.Processor_Crystal_Diamond, 'X', IL.EMITTERS[15], 'Y', IL.SENSORS[15], 'Z', OP.treeSapling);

		aClass = MultiTileEntityBasicMachineElectric.class;
		aMat = MT.DATA.Electric_T[0];   aRegistry.add("Bumblelyzer ("+VN[0]+")"                             , "Basic Machines"                      , 20981, 20001, aClass, aMat.mToolQuality, 16, aMachine     , UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS,   4.0F, NBT_RESISTANCE,   4.0F, NBT_COLOR, UT.Code.getRGBInt(aMat.fRGBaSolid), NBT_INPUT,  V[0], NBT_TEXTURE, "bumblelyzer", NBT_ENERGY_ACCEPTED, TD.Energy.EU, NBT_RECIPEMAP, RM.Bumblelyzer, NBT_INV_SIDE_IN, SBIT_U|SBIT_L, NBT_INV_SIDE_AUTO_IN, SIDE_LEFT, NBT_INV_SIDE_OUT, SBIT_R|SBIT_D, NBT_INV_SIDE_AUTO_OUT, SIDE_RIGHT, NBT_TANK_SIDE_IN, SBIT_U|SBIT_D, NBT_TANK_SIDE_AUTO_IN, SIDE_TOP, NBT_ENERGY_ACCEPTED_SIDES, SBIT_B), "WXW", "ZMP", "CYC", 'M', OP.casingMachine.dat(aMat), 'C', OD_CIRCUITS[0], 'W', MT.DATA.CABLES_01[0], 'P', IL.Processor_Crystal_Diamond, 'X', IL.EMITTERS[1], 'Y', IL.SENSORS[0], 'Z', OD.container1000honey);
		aMat = MT.DATA.Electric_T[1];   aRegistry.add("Bumblelyzer ("+VN[1]+")"                             , "Basic Machines"                      , 20982, 20001, aClass, aMat.mToolQuality, 16, aMachine     , UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS,   4.0F, NBT_RESISTANCE,   4.0F, NBT_COLOR, UT.Code.getRGBInt(aMat.fRGBaSolid), NBT_INPUT,  V[1], NBT_TEXTURE, "bumblelyzer", NBT_ENERGY_ACCEPTED, TD.Energy.EU, NBT_RECIPEMAP, RM.Bumblelyzer, NBT_INV_SIDE_IN, SBIT_U|SBIT_L, NBT_INV_SIDE_AUTO_IN, SIDE_LEFT, NBT_INV_SIDE_OUT, SBIT_R|SBIT_D, NBT_INV_SIDE_AUTO_OUT, SIDE_RIGHT, NBT_TANK_SIDE_IN, SBIT_U|SBIT_D, NBT_TANK_SIDE_AUTO_IN, SIDE_TOP, NBT_ENERGY_ACCEPTED_SIDES, SBIT_B), "WXW", "ZMP", "CYC", 'M', OP.casingMachine.dat(aMat), 'C', OD_CIRCUITS[1], 'W', MT.DATA.CABLES_01[1], 'P', IL.Processor_Crystal_Diamond, 'X', IL.EMITTERS[1], 'Y', IL.SENSORS[1], 'Z', OD.container1000honey);
		aMat = MT.DATA.Electric_T[2];   aRegistry.add("Bumblelyzer ("+VN[2]+")"                             , "Basic Machines"                      , 20983, 20001, aClass, aMat.mToolQuality, 16, aMachine     , UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS,   4.0F, NBT_RESISTANCE,   4.0F, NBT_COLOR, UT.Code.getRGBInt(aMat.fRGBaSolid), NBT_INPUT,  V[2], NBT_TEXTURE, "bumblelyzer", NBT_ENERGY_ACCEPTED, TD.Energy.EU, NBT_RECIPEMAP, RM.Bumblelyzer, NBT_INV_SIDE_IN, SBIT_U|SBIT_L, NBT_INV_SIDE_AUTO_IN, SIDE_LEFT, NBT_INV_SIDE_OUT, SBIT_R|SBIT_D, NBT_INV_SIDE_AUTO_OUT, SIDE_RIGHT, NBT_TANK_SIDE_IN, SBIT_U|SBIT_D, NBT_TANK_SIDE_AUTO_IN, SIDE_TOP, NBT_ENERGY_ACCEPTED_SIDES, SBIT_B), "WXW", "ZMP", "CYC", 'M', OP.casingMachine.dat(aMat), 'C', OD_CIRCUITS[2], 'W', MT.DATA.CABLES_01[2], 'P', IL.Processor_Crystal_Diamond, 'X', IL.EMITTERS[2], 'Y', IL.SENSORS[2], 'Z', OD.container1000honey);
		aMat = MT.DATA.Electric_T[3];   aRegistry.add("Bumblelyzer ("+VN[3]+")"                             , "Basic Machines"                      , 20984, 20001, aClass, aMat.mToolQuality, 16, aMachine     , UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS,   4.0F, NBT_RESISTANCE,   4.0F, NBT_COLOR, UT.Code.getRGBInt(aMat.fRGBaSolid), NBT_INPUT,  V[3], NBT_TEXTURE, "bumblelyzer", NBT_ENERGY_ACCEPTED, TD.Energy.EU, NBT_RECIPEMAP, RM.Bumblelyzer, NBT_INV_SIDE_IN, SBIT_U|SBIT_L, NBT_INV_SIDE_AUTO_IN, SIDE_LEFT, NBT_INV_SIDE_OUT, SBIT_R|SBIT_D, NBT_INV_SIDE_AUTO_OUT, SIDE_RIGHT, NBT_TANK_SIDE_IN, SBIT_U|SBIT_D, NBT_TANK_SIDE_AUTO_IN, SIDE_TOP, NBT_ENERGY_ACCEPTED_SIDES, SBIT_B), "WXW", "ZMP", "CYC", 'M', OP.casingMachine.dat(aMat), 'C', OD_CIRCUITS[3], 'W', MT.DATA.CABLES_01[3], 'P', IL.Processor_Crystal_Diamond, 'X', IL.EMITTERS[3], 'Y', IL.SENSORS[3], 'Z', OD.container1000honey);
		aMat = MT.DATA.Electric_T[4];   aRegistry.add("Bumblelyzer ("+VN[4]+")"                             , "Basic Machines"                      , 20985, 20001, aClass, aMat.mToolQuality, 16, aMachine     , UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS,   4.0F, NBT_RESISTANCE,   4.0F, NBT_COLOR, UT.Code.getRGBInt(aMat.fRGBaSolid), NBT_INPUT,  V[4], NBT_TEXTURE, "bumblelyzer", NBT_ENERGY_ACCEPTED, TD.Energy.EU, NBT_RECIPEMAP, RM.Bumblelyzer, NBT_INV_SIDE_IN, SBIT_U|SBIT_L, NBT_INV_SIDE_AUTO_IN, SIDE_LEFT, NBT_INV_SIDE_OUT, SBIT_R|SBIT_D, NBT_INV_SIDE_AUTO_OUT, SIDE_RIGHT, NBT_TANK_SIDE_IN, SBIT_U|SBIT_D, NBT_TANK_SIDE_AUTO_IN, SIDE_TOP, NBT_ENERGY_ACCEPTED_SIDES, SBIT_B), "WXW", "ZMP", "CYC", 'M', OP.casingMachine.dat(aMat), 'C', OD_CIRCUITS[4], 'W', MT.DATA.CABLES_01[4], 'P', IL.Processor_Crystal_Diamond, 'X', IL.EMITTERS[4], 'Y', IL.SENSORS[4], 'Z', OD.container1000honey);
		aMat = MT.DATA.Electric_T[5];   aRegistry.add("Bumblelyzer ("+VN[5]+")"                             , "Basic Machines"                      , 20986, 20001, aClass, aMat.mToolQuality, 16, aMachine     , UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS,   4.0F, NBT_RESISTANCE,   4.0F, NBT_COLOR, UT.Code.getRGBInt(aMat.fRGBaSolid), NBT_INPUT,  V[5], NBT_TEXTURE, "bumblelyzer", NBT_ENERGY_ACCEPTED, TD.Energy.EU, NBT_RECIPEMAP, RM.Bumblelyzer, NBT_INV_SIDE_IN, SBIT_U|SBIT_L, NBT_INV_SIDE_AUTO_IN, SIDE_LEFT, NBT_INV_SIDE_OUT, SBIT_R|SBIT_D, NBT_INV_SIDE_AUTO_OUT, SIDE_RIGHT, NBT_TANK_SIDE_IN, SBIT_U|SBIT_D, NBT_TANK_SIDE_AUTO_IN, SIDE_TOP, NBT_ENERGY_ACCEPTED_SIDES, SBIT_B), "WXW", "ZMP", "CYC", 'M', OP.casingMachine.dat(aMat), 'C', OD_CIRCUITS[5], 'W', MT.DATA.CABLES_01[5], 'P', IL.Processor_Crystal_Diamond, 'X', IL.EMITTERS[5], 'Y', IL.SENSORS[5], 'Z', OD.container1000honey);
		aMat = MT.DATA.Electric_T[6];   aRegistry.add("Bumblelyzer ("+VN[6]+")"                             , "Basic Machines"                      , 20987, 20001, aClass, aMat.mToolQuality, 16, aMachine     , UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS,   4.0F, NBT_RESISTANCE,   4.0F, NBT_COLOR, UT.Code.getRGBInt(aMat.fRGBaSolid), NBT_INPUT,  V[6], NBT_TEXTURE, "bumblelyzer", NBT_ENERGY_ACCEPTED, TD.Energy.EU, NBT_RECIPEMAP, RM.Bumblelyzer, NBT_INV_SIDE_IN, SBIT_U|SBIT_L, NBT_INV_SIDE_AUTO_IN, SIDE_LEFT, NBT_INV_SIDE_OUT, SBIT_R|SBIT_D, NBT_INV_SIDE_AUTO_OUT, SIDE_RIGHT, NBT_TANK_SIDE_IN, SBIT_U|SBIT_D, NBT_TANK_SIDE_AUTO_IN, SIDE_TOP, NBT_ENERGY_ACCEPTED_SIDES, SBIT_B), "WXW", "ZMP", "CYC", 'M', OP.casingMachine.dat(aMat), 'C', OD_CIRCUITS[6], 'W', MT.DATA.CABLES_01[6], 'P', IL.Processor_Crystal_Diamond, 'X', IL.EMITTERS[6], 'Y', IL.SENSORS[6], 'Z', OD.container1000honey);
		aMat = MT.DATA.Electric_T[7];   aRegistry.add("Bumblelyzer ("+VN[7]+")"                             , "Basic Machines"                      , 20988, 20001, aClass, aMat.mToolQuality, 16, aMachine     , UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS,   4.0F, NBT_RESISTANCE,   4.0F, NBT_COLOR, UT.Code.getRGBInt(aMat.fRGBaSolid), NBT_INPUT,  V[7], NBT_TEXTURE, "bumblelyzer", NBT_ENERGY_ACCEPTED, TD.Energy.EU, NBT_RECIPEMAP, RM.Bumblelyzer, NBT_INV_SIDE_IN, SBIT_U|SBIT_L, NBT_INV_SIDE_AUTO_IN, SIDE_LEFT, NBT_INV_SIDE_OUT, SBIT_R|SBIT_D, NBT_INV_SIDE_AUTO_OUT, SIDE_RIGHT, NBT_TANK_SIDE_IN, SBIT_U|SBIT_D, NBT_TANK_SIDE_AUTO_IN, SIDE_TOP, NBT_ENERGY_ACCEPTED_SIDES, SBIT_B), "WXW", "ZMP", "CYC", 'M', OP.casingMachine.dat(aMat), 'C', OD_CIRCUITS[7], 'W', MT.DATA.CABLES_01[7], 'P', IL.Processor_Crystal_Diamond, 'X', IL.EMITTERS[7], 'Y', IL.SENSORS[7], 'Z', OD.container1000honey);
		aMat = MT.DATA.Electric_T[8];   aRegistry.add("Bumblelyzer ("+VN[8]+")"                             , "Basic Machines"                      , 20989, 20001, aClass, aMat.mToolQuality, 16, aMachine     , UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS,   4.0F, NBT_RESISTANCE,   4.0F, NBT_COLOR, UT.Code.getRGBInt(aMat.fRGBaSolid), NBT_INPUT,  V[8], NBT_TEXTURE, "bumblelyzer", NBT_ENERGY_ACCEPTED, TD.Energy.EU, NBT_RECIPEMAP, RM.Bumblelyzer, NBT_INV_SIDE_IN, SBIT_U|SBIT_L, NBT_INV_SIDE_AUTO_IN, SIDE_LEFT, NBT_INV_SIDE_OUT, SBIT_R|SBIT_D, NBT_INV_SIDE_AUTO_OUT, SIDE_RIGHT, NBT_TANK_SIDE_IN, SBIT_U|SBIT_D, NBT_TANK_SIDE_AUTO_IN, SIDE_TOP, NBT_ENERGY_ACCEPTED_SIDES, SBIT_B), "WXW", "ZMP", "CYC", 'M', OP.casingMachine.dat(aMat), 'C', OD_CIRCUITS[8], 'W', MT.DATA.CABLES_01[8], 'P', IL.Processor_Crystal_Diamond, 'X', IL.EMITTERS[8], 'Y', IL.SENSORS[8], 'Z', OD.container1000honey);
		aMat = MT.DATA.Electric_T[9];   aRegistry.add("Bumblelyzer ("+VN[9]+")"                             , "Basic Machines"                      , 20990, 20001, aClass, aMat.mToolQuality, 16, aMachine     , UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS,   4.0F, NBT_RESISTANCE,   4.0F, NBT_COLOR, UT.Code.getRGBInt(aMat.fRGBaSolid), NBT_INPUT,  V[9], NBT_TEXTURE, "bumblelyzer", NBT_ENERGY_ACCEPTED, TD.Energy.EU, NBT_RECIPEMAP, RM.Bumblelyzer, NBT_INV_SIDE_IN, SBIT_U|SBIT_L, NBT_INV_SIDE_AUTO_IN, SIDE_LEFT, NBT_INV_SIDE_OUT, SBIT_R|SBIT_D, NBT_INV_SIDE_AUTO_OUT, SIDE_RIGHT, NBT_TANK_SIDE_IN, SBIT_U|SBIT_D, NBT_TANK_SIDE_AUTO_IN, SIDE_TOP, NBT_ENERGY_ACCEPTED_SIDES, SBIT_B), "WXW", "ZMP", "CYC", 'M', OP.casingMachine.dat(aMat), 'C', OD_CIRCUITS[9], 'W', MT.DATA.CABLES_01[9], 'P', IL.Processor_Crystal_Diamond, 'X', IL.EMITTERS[9], 'Y', IL.SENSORS[9], 'Z', OD.container1000honey);
		aMat = MT.DATA.Electric_T[10];   aRegistry.add("Bumblelyzer ("+VN[10]+")"                             , "Basic Machines"                      , 20991, 20001, aClass, aMat.mToolQuality, 16, aMachine     , UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS,   4.0F, NBT_RESISTANCE,   4.0F, NBT_COLOR, UT.Code.getRGBInt(aMat.fRGBaSolid), NBT_INPUT,  V[10], NBT_TEXTURE, "bumblelyzer", NBT_ENERGY_ACCEPTED, TD.Energy.EU, NBT_RECIPEMAP, RM.Bumblelyzer, NBT_INV_SIDE_IN, SBIT_U|SBIT_L, NBT_INV_SIDE_AUTO_IN, SIDE_LEFT, NBT_INV_SIDE_OUT, SBIT_R|SBIT_D, NBT_INV_SIDE_AUTO_OUT, SIDE_RIGHT, NBT_TANK_SIDE_IN, SBIT_U|SBIT_D, NBT_TANK_SIDE_AUTO_IN, SIDE_TOP, NBT_ENERGY_ACCEPTED_SIDES, SBIT_B), "WXW", "ZMP", "CYC", 'M', OP.casingMachine.dat(aMat), 'C', OD_CIRCUITS[10], 'W', MT.DATA.CABLES_01[10], 'P', IL.Processor_Crystal_Diamond, 'X', IL.EMITTERS[10], 'Y', IL.SENSORS[10], 'Z', OD.container1000honey);
		aMat = MT.DATA.Electric_T[11];   aRegistry.add("Bumblelyzer ("+VN[11]+")"                             , "Basic Machines"                      , 20992, 20001, aClass, aMat.mToolQuality, 16, aMachine     , UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS,   4.0F, NBT_RESISTANCE,   4.0F, NBT_COLOR, UT.Code.getRGBInt(aMat.fRGBaSolid), NBT_INPUT,  V[11], NBT_TEXTURE, "bumblelyzer", NBT_ENERGY_ACCEPTED, TD.Energy.EU, NBT_RECIPEMAP, RM.Bumblelyzer, NBT_INV_SIDE_IN, SBIT_U|SBIT_L, NBT_INV_SIDE_AUTO_IN, SIDE_LEFT, NBT_INV_SIDE_OUT, SBIT_R|SBIT_D, NBT_INV_SIDE_AUTO_OUT, SIDE_RIGHT, NBT_TANK_SIDE_IN, SBIT_U|SBIT_D, NBT_TANK_SIDE_AUTO_IN, SIDE_TOP, NBT_ENERGY_ACCEPTED_SIDES, SBIT_B), "WXW", "ZMP", "CYC", 'M', OP.casingMachine.dat(aMat), 'C', OD_CIRCUITS[11], 'W', MT.DATA.CABLES_01[11], 'P', IL.Processor_Crystal_Diamond, 'X', IL.EMITTERS[11], 'Y', IL.SENSORS[11], 'Z', OD.container1000honey);
		aMat = MT.DATA.Electric_T[12];   aRegistry.add("Bumblelyzer ("+VN[12]+")"                             , "Basic Machines"                      , 20993, 20001, aClass, aMat.mToolQuality, 16, aMachine     , UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS,   4.0F, NBT_RESISTANCE,   4.0F, NBT_COLOR, UT.Code.getRGBInt(aMat.fRGBaSolid), NBT_INPUT,  V[12], NBT_TEXTURE, "bumblelyzer", NBT_ENERGY_ACCEPTED, TD.Energy.EU, NBT_RECIPEMAP, RM.Bumblelyzer, NBT_INV_SIDE_IN, SBIT_U|SBIT_L, NBT_INV_SIDE_AUTO_IN, SIDE_LEFT, NBT_INV_SIDE_OUT, SBIT_R|SBIT_D, NBT_INV_SIDE_AUTO_OUT, SIDE_RIGHT, NBT_TANK_SIDE_IN, SBIT_U|SBIT_D, NBT_TANK_SIDE_AUTO_IN, SIDE_TOP, NBT_ENERGY_ACCEPTED_SIDES, SBIT_B), "WXW", "ZMP", "CYC", 'M', OP.casingMachine.dat(aMat), 'C', OD_CIRCUITS[12], 'W', MT.DATA.CABLES_01[12], 'P', IL.Processor_Crystal_Diamond, 'X', IL.EMITTERS[12], 'Y', IL.SENSORS[12], 'Z', OD.container1000honey);
		aMat = MT.DATA.Electric_T[13];   aRegistry.add("Bumblelyzer ("+VN[13]+")"                             , "Basic Machines"                      , 20994, 20001, aClass, aMat.mToolQuality, 16, aMachine     , UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS,   4.0F, NBT_RESISTANCE,   4.0F, NBT_COLOR, UT.Code.getRGBInt(aMat.fRGBaSolid), NBT_INPUT,  V[13], NBT_TEXTURE, "bumblelyzer", NBT_ENERGY_ACCEPTED, TD.Energy.EU, NBT_RECIPEMAP, RM.Bumblelyzer, NBT_INV_SIDE_IN, SBIT_U|SBIT_L, NBT_INV_SIDE_AUTO_IN, SIDE_LEFT, NBT_INV_SIDE_OUT, SBIT_R|SBIT_D, NBT_INV_SIDE_AUTO_OUT, SIDE_RIGHT, NBT_TANK_SIDE_IN, SBIT_U|SBIT_D, NBT_TANK_SIDE_AUTO_IN, SIDE_TOP, NBT_ENERGY_ACCEPTED_SIDES, SBIT_B), "WXW", "ZMP", "CYC", 'M', OP.casingMachine.dat(aMat), 'C', OD_CIRCUITS[13], 'W', MT.DATA.CABLES_01[13], 'P', IL.Processor_Crystal_Diamond, 'X', IL.EMITTERS[13], 'Y', IL.SENSORS[13], 'Z', OD.container1000honey);
		aMat = MT.DATA.Electric_T[14];   aRegistry.add("Bumblelyzer ("+VN[14]+")"                             , "Basic Machines"                      , 20995, 20001, aClass, aMat.mToolQuality, 16, aMachine     , UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS,   4.0F, NBT_RESISTANCE,   4.0F, NBT_COLOR, UT.Code.getRGBInt(aMat.fRGBaSolid), NBT_INPUT,  V[14], NBT_TEXTURE, "bumblelyzer", NBT_ENERGY_ACCEPTED, TD.Energy.EU, NBT_RECIPEMAP, RM.Bumblelyzer, NBT_INV_SIDE_IN, SBIT_U|SBIT_L, NBT_INV_SIDE_AUTO_IN, SIDE_LEFT, NBT_INV_SIDE_OUT, SBIT_R|SBIT_D, NBT_INV_SIDE_AUTO_OUT, SIDE_RIGHT, NBT_TANK_SIDE_IN, SBIT_U|SBIT_D, NBT_TANK_SIDE_AUTO_IN, SIDE_TOP, NBT_ENERGY_ACCEPTED_SIDES, SBIT_B), "WXW", "ZMP", "CYC", 'M', OP.casingMachine.dat(aMat), 'C', OD_CIRCUITS[14], 'W', MT.DATA.CABLES_01[14], 'P', IL.Processor_Crystal_Diamond, 'X', IL.EMITTERS[14], 'Y', IL.SENSORS[14], 'Z', OD.container1000honey);
		aMat = MT.DATA.Electric_T[15];   aRegistry.add("Bumblelyzer ("+VN[15]+")"                             , "Basic Machines"                      , 20996, 20001, aClass, aMat.mToolQuality, 16, aMachine     , UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS,   4.0F, NBT_RESISTANCE,   4.0F, NBT_COLOR, UT.Code.getRGBInt(aMat.fRGBaSolid), NBT_INPUT,  V[15], NBT_TEXTURE, "bumblelyzer", NBT_ENERGY_ACCEPTED, TD.Energy.EU, NBT_RECIPEMAP, RM.Bumblelyzer, NBT_INV_SIDE_IN, SBIT_U|SBIT_L, NBT_INV_SIDE_AUTO_IN, SIDE_LEFT, NBT_INV_SIDE_OUT, SBIT_R|SBIT_D, NBT_INV_SIDE_AUTO_OUT, SIDE_RIGHT, NBT_TANK_SIDE_IN, SBIT_U|SBIT_D, NBT_TANK_SIDE_AUTO_IN, SIDE_TOP, NBT_ENERGY_ACCEPTED_SIDES, SBIT_B), "WXW", "ZMP", "CYC", 'M', OP.casingMachine.dat(aMat), 'C', OD_CIRCUITS[15], 'W', MT.DATA.CABLES_01[15], 'P', IL.Processor_Crystal_Diamond, 'X', IL.EMITTERS[15], 'Y', IL.SENSORS[15], 'Z', OD.container1000honey);

		aClass = MultiTileEntityBasicMachine.class;
		aMat = MT.DATA.Heat_T[0];    aRegistry.add("Debarker (" + aMat.getLocal() + ")"                  , "Basic Machines"                      , 21001, 20001, aClass, aMat.mToolQuality, 16, aMachine     , UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS, HARDNESS[0], NBT_RESISTANCE, HARDNESS[0], NBT_COLOR, UT.Code.getRGBInt(aMat.fRGBaSolid), NBT_INPUT, V[0], NBT_TEXTURE, "debarker", NBT_ENERGY_ACCEPTED, TD.Energy.RU, NBT_RECIPEMAP, RM.Debarker, NBT_INV_SIDE_IN, SBIT_L, NBT_INV_SIDE_AUTO_IN, SIDE_LEFT, NBT_INV_SIDE_OUT, SBIT_R, NBT_INV_SIDE_AUTO_OUT, SIDE_RIGHT, NBT_TANK_SIDE_IN, SBIT_U|SBIT_D, NBT_TANK_SIDE_AUTO_IN, SIDE_TOP, NBT_ENERGY_ACCEPTED_SIDES, SBIT_B), "RPG", "wMG", 'M', OP.casingMachine.dat(aMat), 'G', OP.gearGtSmall.dat(aMat), 'R', OP.rotor.dat(MT.StainlessSteel), 'P', OP.pipeSmall    .dat(MT.StainlessSteel));
		aMat = MT.DATA.Heat_T[1];    aRegistry.add("Debarker (" + aMat.getLocal() + ")"                  , "Basic Machines"                      , 21002, 20001, aClass, aMat.mToolQuality, 16, aMachine     , UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS, HARDNESS[1], NBT_RESISTANCE, HARDNESS[1], NBT_COLOR, UT.Code.getRGBInt(aMat.fRGBaSolid), NBT_INPUT, V[1], NBT_TEXTURE, "debarker", NBT_ENERGY_ACCEPTED, TD.Energy.RU, NBT_RECIPEMAP, RM.Debarker, NBT_INV_SIDE_IN, SBIT_L, NBT_INV_SIDE_AUTO_IN, SIDE_LEFT, NBT_INV_SIDE_OUT, SBIT_R, NBT_INV_SIDE_AUTO_OUT, SIDE_RIGHT, NBT_TANK_SIDE_IN, SBIT_U|SBIT_D, NBT_TANK_SIDE_AUTO_IN, SIDE_TOP, NBT_ENERGY_ACCEPTED_SIDES, SBIT_B), "RPG", "wMG", 'M', OP.casingMachine.dat(aMat), 'G', OP.gearGtSmall.dat(aMat), 'R', OP.rotor.dat(MT.StainlessSteel), 'P', OP.pipeSmall    .dat(MT.StainlessSteel));
		aMat = MT.DATA.Heat_T[2];    aRegistry.add("Debarker (" + aMat.getLocal() + ")"                  , "Basic Machines"                      , 21003, 20001, aClass, aMat.mToolQuality, 16, aMachine     , UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS, HARDNESS[2], NBT_RESISTANCE, HARDNESS[2], NBT_COLOR, UT.Code.getRGBInt(aMat.fRGBaSolid), NBT_INPUT, V[2], NBT_TEXTURE, "debarker", NBT_ENERGY_ACCEPTED, TD.Energy.RU, NBT_RECIPEMAP, RM.Debarker, NBT_INV_SIDE_IN, SBIT_L, NBT_INV_SIDE_AUTO_IN, SIDE_LEFT, NBT_INV_SIDE_OUT, SBIT_R, NBT_INV_SIDE_AUTO_OUT, SIDE_RIGHT, NBT_TANK_SIDE_IN, SBIT_U|SBIT_D, NBT_TANK_SIDE_AUTO_IN, SIDE_TOP, NBT_ENERGY_ACCEPTED_SIDES, SBIT_B), "RPG", "wMG", 'M', OP.casingMachine.dat(aMat), 'G', OP.gearGtSmall.dat(aMat), 'R', OP.rotor.dat(MT.StainlessSteel), 'P', OP.pipeMedium   .dat(MT.StainlessSteel));
		aMat = MT.DATA.Heat_T[3];    aRegistry.add("Debarker (" + aMat.getLocal() + ")"                  , "Basic Machines"                      , 21004, 20001, aClass, aMat.mToolQuality, 16, aMachine     , UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS, HARDNESS[3], NBT_RESISTANCE, HARDNESS[3], NBT_COLOR, UT.Code.getRGBInt(aMat.fRGBaSolid), NBT_INPUT, V[3], NBT_TEXTURE, "debarker", NBT_ENERGY_ACCEPTED, TD.Energy.RU, NBT_RECIPEMAP, RM.Debarker, NBT_INV_SIDE_IN, SBIT_L, NBT_INV_SIDE_AUTO_IN, SIDE_LEFT, NBT_INV_SIDE_OUT, SBIT_R, NBT_INV_SIDE_AUTO_OUT, SIDE_RIGHT, NBT_TANK_SIDE_IN, SBIT_U|SBIT_D, NBT_TANK_SIDE_AUTO_IN, SIDE_TOP, NBT_ENERGY_ACCEPTED_SIDES, SBIT_B), "RPG", "wMG", 'M', OP.casingMachine.dat(aMat), 'G', OP.gearGtSmall.dat(aMat), 'R', OP.rotor.dat(MT.StainlessSteel), 'P', OP.pipeLarge    .dat(MT.StainlessSteel));
		aMat = MT.DATA.Heat_T[4];    aRegistry.add("Debarker (" + aMat.getLocal() + ")"                  , "Basic Machines"                      , 21005, 20001, aClass, aMat.mToolQuality, 16, aMachine     , UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS, HARDNESS[4], NBT_RESISTANCE, HARDNESS[4], NBT_COLOR, UT.Code.getRGBInt(aMat.fRGBaSolid), NBT_INPUT, V[4], NBT_TEXTURE, "debarker", NBT_ENERGY_ACCEPTED, TD.Energy.RU, NBT_RECIPEMAP, RM.Debarker, NBT_INV_SIDE_IN, SBIT_L, NBT_INV_SIDE_AUTO_IN, SIDE_LEFT, NBT_INV_SIDE_OUT, SBIT_R, NBT_INV_SIDE_AUTO_OUT, SIDE_RIGHT, NBT_TANK_SIDE_IN, SBIT_U|SBIT_D, NBT_TANK_SIDE_AUTO_IN, SIDE_TOP, NBT_ENERGY_ACCEPTED_SIDES, SBIT_B), "RPG", "wMG", 'M', OP.casingMachine.dat(aMat), 'G', OP.gearGtSmall.dat(aMat), 'R', OP.rotor.dat(MT.StainlessSteel), 'P', OP.pipeHuge     .dat(MT.StainlessSteel));
		aMat = MT.DATA.Heat_T[5];    aRegistry.add("Debarker (" + aMat.getLocal() + ")"                  , "Basic Machines"                      , 21006, 20001, aClass, aMat.mToolQuality, 16, aMachine     , UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS, HARDNESS[5], NBT_RESISTANCE, HARDNESS[5], NBT_COLOR, UT.Code.getRGBInt(aMat.fRGBaSolid), NBT_INPUT, V[5], NBT_TEXTURE, "debarker", NBT_ENERGY_ACCEPTED, TD.Energy.RU, NBT_RECIPEMAP, RM.Debarker, NBT_INV_SIDE_IN, SBIT_L, NBT_INV_SIDE_AUTO_IN, SIDE_LEFT, NBT_INV_SIDE_OUT, SBIT_R, NBT_INV_SIDE_AUTO_OUT, SIDE_RIGHT, NBT_TANK_SIDE_IN, SBIT_U|SBIT_D, NBT_TANK_SIDE_AUTO_IN, SIDE_TOP, NBT_ENERGY_ACCEPTED_SIDES, SBIT_B), "RPG", "wMG", 'M', OP.casingMachine.dat(aMat), 'G', OP.gearGtSmall.dat(aMat), 'R', OP.rotor.dat(MT.StainlessSteel), 'P', OP.pipeSmall    .dat(MT.StainlessSteel));
		aMat = MT.DATA.Heat_T[6];    aRegistry.add("Debarker (" + aMat.getLocal() + ")"                  , "Basic Machines"                      , 21007, 20001, aClass, aMat.mToolQuality, 16, aMachine     , UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS, HARDNESS[6], NBT_RESISTANCE, HARDNESS[6], NBT_COLOR, UT.Code.getRGBInt(aMat.fRGBaSolid), NBT_INPUT, V[6], NBT_TEXTURE, "debarker", NBT_ENERGY_ACCEPTED, TD.Energy.RU, NBT_RECIPEMAP, RM.Debarker, NBT_INV_SIDE_IN, SBIT_L, NBT_INV_SIDE_AUTO_IN, SIDE_LEFT, NBT_INV_SIDE_OUT, SBIT_R, NBT_INV_SIDE_AUTO_OUT, SIDE_RIGHT, NBT_TANK_SIDE_IN, SBIT_U|SBIT_D, NBT_TANK_SIDE_AUTO_IN, SIDE_TOP, NBT_ENERGY_ACCEPTED_SIDES, SBIT_B), "RPG", "wMG", 'M', OP.casingMachine.dat(aMat), 'G', OP.gearGtSmall.dat(aMat), 'R', OP.rotor.dat(MT.StainlessSteel), 'P', OP.pipeSmall    .dat(MT.StainlessSteel));
		aMat = MT.DATA.Heat_T[7];    aRegistry.add("Debarker (" + aMat.getLocal() + ")"                  , "Basic Machines"                      , 21008, 20001, aClass, aMat.mToolQuality, 16, aMachine     , UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS, HARDNESS[7], NBT_RESISTANCE, HARDNESS[7], NBT_COLOR, UT.Code.getRGBInt(aMat.fRGBaSolid), NBT_INPUT, V[7], NBT_TEXTURE, "debarker", NBT_ENERGY_ACCEPTED, TD.Energy.RU, NBT_RECIPEMAP, RM.Debarker, NBT_INV_SIDE_IN, SBIT_L, NBT_INV_SIDE_AUTO_IN, SIDE_LEFT, NBT_INV_SIDE_OUT, SBIT_R, NBT_INV_SIDE_AUTO_OUT, SIDE_RIGHT, NBT_TANK_SIDE_IN, SBIT_U|SBIT_D, NBT_TANK_SIDE_AUTO_IN, SIDE_TOP, NBT_ENERGY_ACCEPTED_SIDES, SBIT_B), "RPG", "wMG", 'M', OP.casingMachine.dat(aMat), 'G', OP.gearGtSmall.dat(aMat), 'R', OP.rotor.dat(MT.StainlessSteel), 'P', OP.pipeMedium   .dat(MT.StainlessSteel));
		aMat = MT.DATA.Heat_T[8];    aRegistry.add("Debarker (" + aMat.getLocal() + ")"                  , "Basic Machines"                      , 21009, 20001, aClass, aMat.mToolQuality, 16, aMachine     , UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS, HARDNESS[8], NBT_RESISTANCE, HARDNESS[8], NBT_COLOR, UT.Code.getRGBInt(aMat.fRGBaSolid), NBT_INPUT, V[8], NBT_TEXTURE, "debarker", NBT_ENERGY_ACCEPTED, TD.Energy.RU, NBT_RECIPEMAP, RM.Debarker, NBT_INV_SIDE_IN, SBIT_L, NBT_INV_SIDE_AUTO_IN, SIDE_LEFT, NBT_INV_SIDE_OUT, SBIT_R, NBT_INV_SIDE_AUTO_OUT, SIDE_RIGHT, NBT_TANK_SIDE_IN, SBIT_U|SBIT_D, NBT_TANK_SIDE_AUTO_IN, SIDE_TOP, NBT_ENERGY_ACCEPTED_SIDES, SBIT_B), "RPG", "wMG", 'M', OP.casingMachine.dat(aMat), 'G', OP.gearGtSmall.dat(aMat), 'R', OP.rotor.dat(MT.StainlessSteel), 'P', OP.pipeLarge    .dat(MT.StainlessSteel));
		aMat = MT.DATA.Heat_T[9];    aRegistry.add("Debarker (" + aMat.getLocal() + ")"                  , "Basic Machines"                      , 21010, 20001, aClass, aMat.mToolQuality, 16, aMachine     , UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS, HARDNESS[9], NBT_RESISTANCE, HARDNESS[9], NBT_COLOR, UT.Code.getRGBInt(aMat.fRGBaSolid), NBT_INPUT, V[9], NBT_TEXTURE, "debarker", NBT_ENERGY_ACCEPTED, TD.Energy.RU, NBT_RECIPEMAP, RM.Debarker, NBT_INV_SIDE_IN, SBIT_L, NBT_INV_SIDE_AUTO_IN, SIDE_LEFT, NBT_INV_SIDE_OUT, SBIT_R, NBT_INV_SIDE_AUTO_OUT, SIDE_RIGHT, NBT_TANK_SIDE_IN, SBIT_U|SBIT_D, NBT_TANK_SIDE_AUTO_IN, SIDE_TOP, NBT_ENERGY_ACCEPTED_SIDES, SBIT_B), "RPG", "wMG", 'M', OP.casingMachine.dat(aMat), 'G', OP.gearGtSmall.dat(aMat), 'R', OP.rotor.dat(MT.StainlessSteel), 'P', OP.pipeHuge     .dat(MT.StainlessSteel));
		aMat = MT.DATA.Heat_T[10];    aRegistry.add("Debarker (" + aMat.getLocal() + ")"                  , "Basic Machines"                      , 21011, 20001, aClass, aMat.mToolQuality, 16, aMachine     , UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS, HARDNESS[10], NBT_RESISTANCE, HARDNESS[10], NBT_COLOR, UT.Code.getRGBInt(aMat.fRGBaSolid), NBT_INPUT, V[10], NBT_TEXTURE, "debarker", NBT_ENERGY_ACCEPTED, TD.Energy.RU, NBT_RECIPEMAP, RM.Debarker, NBT_INV_SIDE_IN, SBIT_L, NBT_INV_SIDE_AUTO_IN, SIDE_LEFT, NBT_INV_SIDE_OUT, SBIT_R, NBT_INV_SIDE_AUTO_OUT, SIDE_RIGHT, NBT_TANK_SIDE_IN, SBIT_U|SBIT_D, NBT_TANK_SIDE_AUTO_IN, SIDE_TOP, NBT_ENERGY_ACCEPTED_SIDES, SBIT_B), "RPG", "wMG", 'M', OP.casingMachine.dat(aMat), 'G', OP.gearGtSmall.dat(aMat), 'R', OP.rotor.dat(MT.StainlessSteel), 'P', OP.pipeSmall    .dat(MT.StainlessSteel));
		aMat = MT.DATA.Heat_T[11];    aRegistry.add("Debarker (" + aMat.getLocal() + ")"                  , "Basic Machines"                      , 21012, 20001, aClass, aMat.mToolQuality, 16, aMachine     , UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS, HARDNESS[11], NBT_RESISTANCE, HARDNESS[11], NBT_COLOR, UT.Code.getRGBInt(aMat.fRGBaSolid), NBT_INPUT, V[11], NBT_TEXTURE, "debarker", NBT_ENERGY_ACCEPTED, TD.Energy.RU, NBT_RECIPEMAP, RM.Debarker, NBT_INV_SIDE_IN, SBIT_L, NBT_INV_SIDE_AUTO_IN, SIDE_LEFT, NBT_INV_SIDE_OUT, SBIT_R, NBT_INV_SIDE_AUTO_OUT, SIDE_RIGHT, NBT_TANK_SIDE_IN, SBIT_U|SBIT_D, NBT_TANK_SIDE_AUTO_IN, SIDE_TOP, NBT_ENERGY_ACCEPTED_SIDES, SBIT_B), "RPG", "wMG", 'M', OP.casingMachine.dat(aMat), 'G', OP.gearGtSmall.dat(aMat), 'R', OP.rotor.dat(MT.StainlessSteel), 'P', OP.pipeSmall    .dat(MT.StainlessSteel));
		aMat = MT.DATA.Heat_T[12];    aRegistry.add("Debarker (" + aMat.getLocal() + ")"                  , "Basic Machines"                      , 21013, 20001, aClass, aMat.mToolQuality, 16, aMachine     , UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS, HARDNESS[12], NBT_RESISTANCE, HARDNESS[12], NBT_COLOR, UT.Code.getRGBInt(aMat.fRGBaSolid), NBT_INPUT, V[12], NBT_TEXTURE, "debarker", NBT_ENERGY_ACCEPTED, TD.Energy.RU, NBT_RECIPEMAP, RM.Debarker, NBT_INV_SIDE_IN, SBIT_L, NBT_INV_SIDE_AUTO_IN, SIDE_LEFT, NBT_INV_SIDE_OUT, SBIT_R, NBT_INV_SIDE_AUTO_OUT, SIDE_RIGHT, NBT_TANK_SIDE_IN, SBIT_U|SBIT_D, NBT_TANK_SIDE_AUTO_IN, SIDE_TOP, NBT_ENERGY_ACCEPTED_SIDES, SBIT_B), "RPG", "wMG", 'M', OP.casingMachine.dat(aMat), 'G', OP.gearGtSmall.dat(aMat), 'R', OP.rotor.dat(MT.StainlessSteel), 'P', OP.pipeMedium   .dat(MT.StainlessSteel));
		aMat = MT.DATA.Heat_T[13];    aRegistry.add("Debarker (" + aMat.getLocal() + ")"                  , "Basic Machines"                      , 21014, 20001, aClass, aMat.mToolQuality, 16, aMachine     , UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS, HARDNESS[13], NBT_RESISTANCE, HARDNESS[13], NBT_COLOR, UT.Code.getRGBInt(aMat.fRGBaSolid), NBT_INPUT, V[13], NBT_TEXTURE, "debarker", NBT_ENERGY_ACCEPTED, TD.Energy.RU, NBT_RECIPEMAP, RM.Debarker, NBT_INV_SIDE_IN, SBIT_L, NBT_INV_SIDE_AUTO_IN, SIDE_LEFT, NBT_INV_SIDE_OUT, SBIT_R, NBT_INV_SIDE_AUTO_OUT, SIDE_RIGHT, NBT_TANK_SIDE_IN, SBIT_U|SBIT_D, NBT_TANK_SIDE_AUTO_IN, SIDE_TOP, NBT_ENERGY_ACCEPTED_SIDES, SBIT_B), "RPG", "wMG", 'M', OP.casingMachine.dat(aMat), 'G', OP.gearGtSmall.dat(aMat), 'R', OP.rotor.dat(MT.StainlessSteel), 'P', OP.pipeLarge    .dat(MT.StainlessSteel));
		aMat = MT.DATA.Heat_T[14];    aRegistry.add("Debarker (" + aMat.getLocal() + ")"                  , "Basic Machines"                      , 21015, 20001, aClass, aMat.mToolQuality, 16, aMachine     , UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS, HARDNESS[14], NBT_RESISTANCE, HARDNESS[14], NBT_COLOR, UT.Code.getRGBInt(aMat.fRGBaSolid), NBT_INPUT, V[14], NBT_TEXTURE, "debarker", NBT_ENERGY_ACCEPTED, TD.Energy.RU, NBT_RECIPEMAP, RM.Debarker, NBT_INV_SIDE_IN, SBIT_L, NBT_INV_SIDE_AUTO_IN, SIDE_LEFT, NBT_INV_SIDE_OUT, SBIT_R, NBT_INV_SIDE_AUTO_OUT, SIDE_RIGHT, NBT_TANK_SIDE_IN, SBIT_U|SBIT_D, NBT_TANK_SIDE_AUTO_IN, SIDE_TOP, NBT_ENERGY_ACCEPTED_SIDES, SBIT_B), "RPG", "wMG", 'M', OP.casingMachine.dat(aMat), 'G', OP.gearGtSmall.dat(aMat), 'R', OP.rotor.dat(MT.StainlessSteel), 'P', OP.pipeHuge     .dat(MT.StainlessSteel));
		aMat = MT.DATA.Heat_T[15];    aRegistry.add("Debarker (" + aMat.getLocal() + ")"                  , "Basic Machines"                      , 21016, 20001, aClass, aMat.mToolQuality, 16, aMachine     , UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS, HARDNESS[15], NBT_RESISTANCE, HARDNESS[15], NBT_COLOR, UT.Code.getRGBInt(aMat.fRGBaSolid), NBT_INPUT, V[15], NBT_TEXTURE, "debarker", NBT_ENERGY_ACCEPTED, TD.Energy.RU, NBT_RECIPEMAP, RM.Debarker, NBT_INV_SIDE_IN, SBIT_L, NBT_INV_SIDE_AUTO_IN, SIDE_LEFT, NBT_INV_SIDE_OUT, SBIT_R, NBT_INV_SIDE_AUTO_OUT, SIDE_RIGHT, NBT_TANK_SIDE_IN, SBIT_U|SBIT_D, NBT_TANK_SIDE_AUTO_IN, SIDE_TOP, NBT_ENERGY_ACCEPTED_SIDES, SBIT_B), "RPG", "wMG", 'M', OP.casingMachine.dat(aMat), 'G', OP.gearGtSmall.dat(aMat), 'R', OP.rotor.dat(MT.StainlessSteel), 'P', OP.pipeSmall    .dat(MT.StainlessSteel));

		aClass = MultiTileEntityBasicMachine.class;
		aMat = MT.DATA.Electric_T[0];   aRegistry.add("Freezer (T0)"                                        , "Basic Machines"                      , 21021, 20001, aClass, aMat.mToolQuality, 16, aMachine     , UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS,   4.0F, NBT_RESISTANCE,   4.0F, NBT_COLOR, UT.Code.getRGBInt(aMat.fRGBaSolid), NBT_INPUT,  V[0], NBT_TEXTURE, "freezer", NBT_ENERGY_ACCEPTED, TD.Energy.CU, NBT_RECIPEMAP, RM.Freezer, NBT_INV_SIDE_IN, SBIT_U|SBIT_L, NBT_INV_SIDE_AUTO_IN, SIDE_LEFT, NBT_INV_SIDE_OUT, SBIT_R|SBIT_D, NBT_INV_SIDE_AUTO_OUT, SIDE_RIGHT, NBT_TANK_SIDE_IN, SBIT_U|SBIT_L, NBT_TANK_SIDE_AUTO_IN, SIDE_TOP, NBT_TANK_SIDE_OUT, SBIT_R|SBIT_D, NBT_TANK_SIDE_AUTO_OUT, SIDE_BOTTOM, NBT_ENERGY_ACCEPTED_SIDES, SBIT_B), "hPw", "PMP", "PSP", 'M', OP.casingMachine.dat(aMat), 'S', OP.plate           .dat(MT.Si), 'P', OP.plate          .dat(MT.StainlessSteel));
		aMat = MT.DATA.Electric_T[1];   aRegistry.add("Freezer (T1)"                                        , "Basic Machines"                      , 21022, 20001, aClass, aMat.mToolQuality, 16, aMachine     , UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS,   4.0F, NBT_RESISTANCE,   4.0F, NBT_COLOR, UT.Code.getRGBInt(aMat.fRGBaSolid), NBT_INPUT,  V[1], NBT_TEXTURE, "freezer", NBT_ENERGY_ACCEPTED, TD.Energy.CU, NBT_RECIPEMAP, RM.Freezer, NBT_INV_SIDE_IN, SBIT_U|SBIT_L, NBT_INV_SIDE_AUTO_IN, SIDE_LEFT, NBT_INV_SIDE_OUT, SBIT_R|SBIT_D, NBT_INV_SIDE_AUTO_OUT, SIDE_RIGHT, NBT_TANK_SIDE_IN, SBIT_U|SBIT_L, NBT_TANK_SIDE_AUTO_IN, SIDE_TOP, NBT_TANK_SIDE_OUT, SBIT_R|SBIT_D, NBT_TANK_SIDE_AUTO_OUT, SIDE_BOTTOM, NBT_ENERGY_ACCEPTED_SIDES, SBIT_B), "hPw", "PMP", "PSP", 'M', OP.casingMachine.dat(aMat), 'S', OP.plate           .dat(MT.Si), 'P', OP.plate          .dat(MT.StainlessSteel));
		aMat = MT.DATA.Electric_T[2];   aRegistry.add("Freezer (T2)"                                        , "Basic Machines"                      , 21023, 20001, aClass, aMat.mToolQuality, 16, aMachine     , UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS,   4.0F, NBT_RESISTANCE,   4.0F, NBT_COLOR, UT.Code.getRGBInt(aMat.fRGBaSolid), NBT_INPUT,  V[2], NBT_TEXTURE, "freezer", NBT_ENERGY_ACCEPTED, TD.Energy.CU, NBT_RECIPEMAP, RM.Freezer, NBT_INV_SIDE_IN, SBIT_U|SBIT_L, NBT_INV_SIDE_AUTO_IN, SIDE_LEFT, NBT_INV_SIDE_OUT, SBIT_R|SBIT_D, NBT_INV_SIDE_AUTO_OUT, SIDE_RIGHT, NBT_TANK_SIDE_IN, SBIT_U|SBIT_L, NBT_TANK_SIDE_AUTO_IN, SIDE_TOP, NBT_TANK_SIDE_OUT, SBIT_R|SBIT_D, NBT_TANK_SIDE_AUTO_OUT, SIDE_BOTTOM, NBT_ENERGY_ACCEPTED_SIDES, SBIT_B), "hPw", "PMP", "PSP", 'M', OP.casingMachine.dat(aMat), 'S', OP.plateDouble     .dat(MT.Si), 'P', OP.plateDouble    .dat(MT.StainlessSteel));
		aMat = MT.DATA.Electric_T[3];   aRegistry.add("Freezer (T3)"                                        , "Basic Machines"                      , 21024, 20001, aClass, aMat.mToolQuality, 16, aMachine     , UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS,   4.0F, NBT_RESISTANCE,   4.0F, NBT_COLOR, UT.Code.getRGBInt(aMat.fRGBaSolid), NBT_INPUT,  V[3], NBT_TEXTURE, "freezer", NBT_ENERGY_ACCEPTED, TD.Energy.CU, NBT_RECIPEMAP, RM.Freezer, NBT_INV_SIDE_IN, SBIT_U|SBIT_L, NBT_INV_SIDE_AUTO_IN, SIDE_LEFT, NBT_INV_SIDE_OUT, SBIT_R|SBIT_D, NBT_INV_SIDE_AUTO_OUT, SIDE_RIGHT, NBT_TANK_SIDE_IN, SBIT_U|SBIT_L, NBT_TANK_SIDE_AUTO_IN, SIDE_TOP, NBT_TANK_SIDE_OUT, SBIT_R|SBIT_D, NBT_TANK_SIDE_AUTO_OUT, SIDE_BOTTOM, NBT_ENERGY_ACCEPTED_SIDES, SBIT_B), "hPw", "PMP", "PSP", 'M', OP.casingMachine.dat(aMat), 'S', OP.plateTriple     .dat(MT.Si), 'P', OP.plateTriple    .dat(MT.StainlessSteel));
		aMat = MT.DATA.Electric_T[4];   aRegistry.add("Freezer (T4)"                                        , "Basic Machines"                      , 21025, 20001, aClass, aMat.mToolQuality, 16, aMachine     , UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS,   4.0F, NBT_RESISTANCE,   4.0F, NBT_COLOR, UT.Code.getRGBInt(aMat.fRGBaSolid), NBT_INPUT,  V[4], NBT_TEXTURE, "freezer", NBT_ENERGY_ACCEPTED, TD.Energy.CU, NBT_RECIPEMAP, RM.Freezer, NBT_INV_SIDE_IN, SBIT_U|SBIT_L, NBT_INV_SIDE_AUTO_IN, SIDE_LEFT, NBT_INV_SIDE_OUT, SBIT_R|SBIT_D, NBT_INV_SIDE_AUTO_OUT, SIDE_RIGHT, NBT_TANK_SIDE_IN, SBIT_U|SBIT_L, NBT_TANK_SIDE_AUTO_IN, SIDE_TOP, NBT_TANK_SIDE_OUT, SBIT_R|SBIT_D, NBT_TANK_SIDE_AUTO_OUT, SIDE_BOTTOM, NBT_ENERGY_ACCEPTED_SIDES, SBIT_B), "hPw", "PMP", "PSP", 'M', OP.casingMachine.dat(aMat), 'S', OP.plateQuadruple  .dat(MT.Si), 'P', OP.plateQuadruple .dat(MT.StainlessSteel));
		aMat = MT.DATA.Electric_T[5];   aRegistry.add("Freezer (T5)"                                        , "Basic Machines"                      , 21026, 20001, aClass, aMat.mToolQuality, 16, aMachine     , UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS,   4.0F, NBT_RESISTANCE,   4.0F, NBT_COLOR, UT.Code.getRGBInt(aMat.fRGBaSolid), NBT_INPUT,  V[5], NBT_TEXTURE, "freezer", NBT_ENERGY_ACCEPTED, TD.Energy.CU, NBT_RECIPEMAP, RM.Freezer, NBT_INV_SIDE_IN, SBIT_U|SBIT_L, NBT_INV_SIDE_AUTO_IN, SIDE_LEFT, NBT_INV_SIDE_OUT, SBIT_R|SBIT_D, NBT_INV_SIDE_AUTO_OUT, SIDE_RIGHT, NBT_TANK_SIDE_IN, SBIT_U|SBIT_L, NBT_TANK_SIDE_AUTO_IN, SIDE_TOP, NBT_TANK_SIDE_OUT, SBIT_R|SBIT_D, NBT_TANK_SIDE_AUTO_OUT, SIDE_BOTTOM, NBT_ENERGY_ACCEPTED_SIDES, SBIT_B), "hPw", "PMP", "PSP", 'M', OP.casingMachine.dat(aMat), 'S', OP.plateQuintuple  .dat(MT.Si), 'P', OP.plateQuadruple .dat(MT.StainlessSteel));
		aMat = MT.DATA.Electric_T[6];   aRegistry.add("Freezer (T6)"                                        , "Basic Machines"                      , 21027, 20001, aClass, aMat.mToolQuality, 16, aMachine     , UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS,   4.0F, NBT_RESISTANCE,   4.0F, NBT_COLOR, UT.Code.getRGBInt(aMat.fRGBaSolid), NBT_INPUT,  V[6], NBT_TEXTURE, "freezer", NBT_ENERGY_ACCEPTED, TD.Energy.CU, NBT_RECIPEMAP, RM.Freezer, NBT_INV_SIDE_IN, SBIT_U|SBIT_L, NBT_INV_SIDE_AUTO_IN, SIDE_LEFT, NBT_INV_SIDE_OUT, SBIT_R|SBIT_D, NBT_INV_SIDE_AUTO_OUT, SIDE_RIGHT, NBT_TANK_SIDE_IN, SBIT_U|SBIT_L, NBT_TANK_SIDE_AUTO_IN, SIDE_TOP, NBT_TANK_SIDE_OUT, SBIT_R|SBIT_D, NBT_TANK_SIDE_AUTO_OUT, SIDE_BOTTOM, NBT_ENERGY_ACCEPTED_SIDES, SBIT_B), "hPw", "PMP", "PSP", 'M', OP.casingMachine.dat(aMat), 'S', OP.plate           .dat(MT.Si), 'P', OP.plate          .dat(MT.StainlessSteel));
		aMat = MT.DATA.Electric_T[7];   aRegistry.add("Freezer (T7)"                                        , "Basic Machines"                      , 21028, 20001, aClass, aMat.mToolQuality, 16, aMachine     , UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS,   4.0F, NBT_RESISTANCE,   4.0F, NBT_COLOR, UT.Code.getRGBInt(aMat.fRGBaSolid), NBT_INPUT,  V[7], NBT_TEXTURE, "freezer", NBT_ENERGY_ACCEPTED, TD.Energy.CU, NBT_RECIPEMAP, RM.Freezer, NBT_INV_SIDE_IN, SBIT_U|SBIT_L, NBT_INV_SIDE_AUTO_IN, SIDE_LEFT, NBT_INV_SIDE_OUT, SBIT_R|SBIT_D, NBT_INV_SIDE_AUTO_OUT, SIDE_RIGHT, NBT_TANK_SIDE_IN, SBIT_U|SBIT_L, NBT_TANK_SIDE_AUTO_IN, SIDE_TOP, NBT_TANK_SIDE_OUT, SBIT_R|SBIT_D, NBT_TANK_SIDE_AUTO_OUT, SIDE_BOTTOM, NBT_ENERGY_ACCEPTED_SIDES, SBIT_B), "hPw", "PMP", "PSP", 'M', OP.casingMachine.dat(aMat), 'S', OP.plate           .dat(MT.Si), 'P', OP.plate          .dat(MT.StainlessSteel));
		aMat = MT.DATA.Electric_T[8];   aRegistry.add("Freezer (T8)"                                        , "Basic Machines"                      , 21029, 20001, aClass, aMat.mToolQuality, 16, aMachine     , UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS,   4.0F, NBT_RESISTANCE,   4.0F, NBT_COLOR, UT.Code.getRGBInt(aMat.fRGBaSolid), NBT_INPUT,  V[8], NBT_TEXTURE, "freezer", NBT_ENERGY_ACCEPTED, TD.Energy.CU, NBT_RECIPEMAP, RM.Freezer, NBT_INV_SIDE_IN, SBIT_U|SBIT_L, NBT_INV_SIDE_AUTO_IN, SIDE_LEFT, NBT_INV_SIDE_OUT, SBIT_R|SBIT_D, NBT_INV_SIDE_AUTO_OUT, SIDE_RIGHT, NBT_TANK_SIDE_IN, SBIT_U|SBIT_L, NBT_TANK_SIDE_AUTO_IN, SIDE_TOP, NBT_TANK_SIDE_OUT, SBIT_R|SBIT_D, NBT_TANK_SIDE_AUTO_OUT, SIDE_BOTTOM, NBT_ENERGY_ACCEPTED_SIDES, SBIT_B), "hPw", "PMP", "PSP", 'M', OP.casingMachine.dat(aMat), 'S', OP.plateDouble     .dat(MT.Si), 'P', OP.plateDouble    .dat(MT.StainlessSteel));
		aMat = MT.DATA.Electric_T[9];   aRegistry.add("Freezer (T9)"                                        , "Basic Machines"                      , 21030, 20001, aClass, aMat.mToolQuality, 16, aMachine     , UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS,   4.0F, NBT_RESISTANCE,   4.0F, NBT_COLOR, UT.Code.getRGBInt(aMat.fRGBaSolid), NBT_INPUT,  V[9], NBT_TEXTURE, "freezer", NBT_ENERGY_ACCEPTED, TD.Energy.CU, NBT_RECIPEMAP, RM.Freezer, NBT_INV_SIDE_IN, SBIT_U|SBIT_L, NBT_INV_SIDE_AUTO_IN, SIDE_LEFT, NBT_INV_SIDE_OUT, SBIT_R|SBIT_D, NBT_INV_SIDE_AUTO_OUT, SIDE_RIGHT, NBT_TANK_SIDE_IN, SBIT_U|SBIT_L, NBT_TANK_SIDE_AUTO_IN, SIDE_TOP, NBT_TANK_SIDE_OUT, SBIT_R|SBIT_D, NBT_TANK_SIDE_AUTO_OUT, SIDE_BOTTOM, NBT_ENERGY_ACCEPTED_SIDES, SBIT_B), "hPw", "PMP", "PSP", 'M', OP.casingMachine.dat(aMat), 'S', OP.plateTriple     .dat(MT.Si), 'P', OP.plateTriple    .dat(MT.StainlessSteel));
		aMat = MT.DATA.Electric_T[10];   aRegistry.add("Freezer (T10)"                                        , "Basic Machines"                      , 21031, 20001, aClass, aMat.mToolQuality, 16, aMachine     , UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS,   4.0F, NBT_RESISTANCE,   4.0F, NBT_COLOR, UT.Code.getRGBInt(aMat.fRGBaSolid), NBT_INPUT,  V[10], NBT_TEXTURE, "freezer", NBT_ENERGY_ACCEPTED, TD.Energy.CU, NBT_RECIPEMAP, RM.Freezer, NBT_INV_SIDE_IN, SBIT_U|SBIT_L, NBT_INV_SIDE_AUTO_IN, SIDE_LEFT, NBT_INV_SIDE_OUT, SBIT_R|SBIT_D, NBT_INV_SIDE_AUTO_OUT, SIDE_RIGHT, NBT_TANK_SIDE_IN, SBIT_U|SBIT_L, NBT_TANK_SIDE_AUTO_IN, SIDE_TOP, NBT_TANK_SIDE_OUT, SBIT_R|SBIT_D, NBT_TANK_SIDE_AUTO_OUT, SIDE_BOTTOM, NBT_ENERGY_ACCEPTED_SIDES, SBIT_B), "hPw", "PMP", "PSP", 'M', OP.casingMachine.dat(aMat), 'S', OP.plateQuadruple  .dat(MT.Si), 'P', OP.plateQuadruple .dat(MT.StainlessSteel));
		aMat = MT.DATA.Electric_T[11];   aRegistry.add("Freezer (T11)"                                        , "Basic Machines"                      , 21032, 20001, aClass, aMat.mToolQuality, 16, aMachine     , UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS,   4.0F, NBT_RESISTANCE,   4.0F, NBT_COLOR, UT.Code.getRGBInt(aMat.fRGBaSolid), NBT_INPUT,  V[11], NBT_TEXTURE, "freezer", NBT_ENERGY_ACCEPTED, TD.Energy.CU, NBT_RECIPEMAP, RM.Freezer, NBT_INV_SIDE_IN, SBIT_U|SBIT_L, NBT_INV_SIDE_AUTO_IN, SIDE_LEFT, NBT_INV_SIDE_OUT, SBIT_R|SBIT_D, NBT_INV_SIDE_AUTO_OUT, SIDE_RIGHT, NBT_TANK_SIDE_IN, SBIT_U|SBIT_L, NBT_TANK_SIDE_AUTO_IN, SIDE_TOP, NBT_TANK_SIDE_OUT, SBIT_R|SBIT_D, NBT_TANK_SIDE_AUTO_OUT, SIDE_BOTTOM, NBT_ENERGY_ACCEPTED_SIDES, SBIT_B), "hPw", "PMP", "PSP", 'M', OP.casingMachine.dat(aMat), 'S', OP.plateQuintuple  .dat(MT.Si), 'P', OP.plateQuadruple .dat(MT.StainlessSteel));
		aMat = MT.DATA.Electric_T[12];   aRegistry.add("Freezer (T12)"                                        , "Basic Machines"                      , 21033, 20001, aClass, aMat.mToolQuality, 16, aMachine     , UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS,   4.0F, NBT_RESISTANCE,   4.0F, NBT_COLOR, UT.Code.getRGBInt(aMat.fRGBaSolid), NBT_INPUT,  V[12], NBT_TEXTURE, "freezer", NBT_ENERGY_ACCEPTED, TD.Energy.CU, NBT_RECIPEMAP, RM.Freezer, NBT_INV_SIDE_IN, SBIT_U|SBIT_L, NBT_INV_SIDE_AUTO_IN, SIDE_LEFT, NBT_INV_SIDE_OUT, SBIT_R|SBIT_D, NBT_INV_SIDE_AUTO_OUT, SIDE_RIGHT, NBT_TANK_SIDE_IN, SBIT_U|SBIT_L, NBT_TANK_SIDE_AUTO_IN, SIDE_TOP, NBT_TANK_SIDE_OUT, SBIT_R|SBIT_D, NBT_TANK_SIDE_AUTO_OUT, SIDE_BOTTOM, NBT_ENERGY_ACCEPTED_SIDES, SBIT_B), "hPw", "PMP", "PSP", 'M', OP.casingMachine.dat(aMat), 'S', OP.plate           .dat(MT.Si), 'P', OP.plate          .dat(MT.StainlessSteel));
		aMat = MT.DATA.Electric_T[13];   aRegistry.add("Freezer (T13)"                                        , "Basic Machines"                      , 21034, 20001, aClass, aMat.mToolQuality, 16, aMachine     , UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS,   4.0F, NBT_RESISTANCE,   4.0F, NBT_COLOR, UT.Code.getRGBInt(aMat.fRGBaSolid), NBT_INPUT,  V[13], NBT_TEXTURE, "freezer", NBT_ENERGY_ACCEPTED, TD.Energy.CU, NBT_RECIPEMAP, RM.Freezer, NBT_INV_SIDE_IN, SBIT_U|SBIT_L, NBT_INV_SIDE_AUTO_IN, SIDE_LEFT, NBT_INV_SIDE_OUT, SBIT_R|SBIT_D, NBT_INV_SIDE_AUTO_OUT, SIDE_RIGHT, NBT_TANK_SIDE_IN, SBIT_U|SBIT_L, NBT_TANK_SIDE_AUTO_IN, SIDE_TOP, NBT_TANK_SIDE_OUT, SBIT_R|SBIT_D, NBT_TANK_SIDE_AUTO_OUT, SIDE_BOTTOM, NBT_ENERGY_ACCEPTED_SIDES, SBIT_B), "hPw", "PMP", "PSP", 'M', OP.casingMachine.dat(aMat), 'S', OP.plate           .dat(MT.Si), 'P', OP.plate          .dat(MT.StainlessSteel));
		aMat = MT.DATA.Electric_T[14];   aRegistry.add("Freezer (T14)"                                        , "Basic Machines"                      , 21035, 20001, aClass, aMat.mToolQuality, 16, aMachine     , UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS,   4.0F, NBT_RESISTANCE,   4.0F, NBT_COLOR, UT.Code.getRGBInt(aMat.fRGBaSolid), NBT_INPUT,  V[14], NBT_TEXTURE, "freezer", NBT_ENERGY_ACCEPTED, TD.Energy.CU, NBT_RECIPEMAP, RM.Freezer, NBT_INV_SIDE_IN, SBIT_U|SBIT_L, NBT_INV_SIDE_AUTO_IN, SIDE_LEFT, NBT_INV_SIDE_OUT, SBIT_R|SBIT_D, NBT_INV_SIDE_AUTO_OUT, SIDE_RIGHT, NBT_TANK_SIDE_IN, SBIT_U|SBIT_L, NBT_TANK_SIDE_AUTO_IN, SIDE_TOP, NBT_TANK_SIDE_OUT, SBIT_R|SBIT_D, NBT_TANK_SIDE_AUTO_OUT, SIDE_BOTTOM, NBT_ENERGY_ACCEPTED_SIDES, SBIT_B), "hPw", "PMP", "PSP", 'M', OP.casingMachine.dat(aMat), 'S', OP.plateDouble     .dat(MT.Si), 'P', OP.plateDouble    .dat(MT.StainlessSteel));
		aMat = MT.DATA.Electric_T[15];   aRegistry.add("Freezer (T15)"                                        , "Basic Machines"                      , 21036, 20001, aClass, aMat.mToolQuality, 16, aMachine     , UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS,   4.0F, NBT_RESISTANCE,   4.0F, NBT_COLOR, UT.Code.getRGBInt(aMat.fRGBaSolid), NBT_INPUT,  V[15], NBT_TEXTURE, "freezer", NBT_ENERGY_ACCEPTED, TD.Energy.CU, NBT_RECIPEMAP, RM.Freezer, NBT_INV_SIDE_IN, SBIT_U|SBIT_L, NBT_INV_SIDE_AUTO_IN, SIDE_LEFT, NBT_INV_SIDE_OUT, SBIT_R|SBIT_D, NBT_INV_SIDE_AUTO_OUT, SIDE_RIGHT, NBT_TANK_SIDE_IN, SBIT_U|SBIT_L, NBT_TANK_SIDE_AUTO_IN, SIDE_TOP, NBT_TANK_SIDE_OUT, SBIT_R|SBIT_D, NBT_TANK_SIDE_AUTO_OUT, SIDE_BOTTOM, NBT_ENERGY_ACCEPTED_SIDES, SBIT_B), "hPw", "PMP", "PSP", 'M', OP.casingMachine.dat(aMat), 'S', OP.plateTriple     .dat(MT.Si), 'P', OP.plateTriple    .dat(MT.StainlessSteel));

		aClass = MultiTileEntityBasicMachine.class;
		aMat = MT.DATA.Electric_T[0];   aRegistry.add("Cryo Mixer (T0)"                                     , "Basic Machines"                      , 21041, 20001, aClass, aMat.mToolQuality, 16, aMachine     , UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS,   4.0F, NBT_RESISTANCE,   4.0F, NBT_COLOR, UT.Code.getRGBInt(aMat.fRGBaSolid), NBT_INPUT,  V[0], NBT_TEXTURE, "cryomixer", NBT_ENERGY_ACCEPTED, TD.Energy.CU, NBT_RECIPEMAP, RM.CryoMixer, NBT_INV_SIDE_IN, SBIT_L|SBIT_U, NBT_INV_SIDE_AUTO_IN, SIDE_LEFT, NBT_INV_SIDE_OUT, SBIT_R|SBIT_B, NBT_INV_SIDE_AUTO_OUT, SIDE_RIGHT, NBT_TANK_SIDE_IN, SBIT_L|SBIT_U, NBT_TANK_SIDE_AUTO_IN, SIDE_TOP, NBT_TANK_SIDE_OUT, SBIT_R|SBIT_B, NBT_TANK_SIDE_AUTO_OUT, SIDE_BACK, NBT_ENERGY_ACCEPTED_SIDES, SBIT_D), "PMP", "PRP", "hSw", 'M', OP.casingMachine.dat(aMat), 'R', OP.rotor.dat(MT.StainlessSteel), 'S', OP.plate           .dat(MT.Si), 'P', OP.plate          .dat(MT.StainlessSteel));
		aMat = MT.DATA.Electric_T[1];   aRegistry.add("Cryo Mixer (T1)"                                     , "Basic Machines"                      , 21042, 20001, aClass, aMat.mToolQuality, 16, aMachine     , UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS,   4.0F, NBT_RESISTANCE,   4.0F, NBT_COLOR, UT.Code.getRGBInt(aMat.fRGBaSolid), NBT_INPUT,  V[1], NBT_TEXTURE, "cryomixer", NBT_ENERGY_ACCEPTED, TD.Energy.CU, NBT_RECIPEMAP, RM.CryoMixer, NBT_INV_SIDE_IN, SBIT_L|SBIT_U, NBT_INV_SIDE_AUTO_IN, SIDE_LEFT, NBT_INV_SIDE_OUT, SBIT_R|SBIT_B, NBT_INV_SIDE_AUTO_OUT, SIDE_RIGHT, NBT_TANK_SIDE_IN, SBIT_L|SBIT_U, NBT_TANK_SIDE_AUTO_IN, SIDE_TOP, NBT_TANK_SIDE_OUT, SBIT_R|SBIT_B, NBT_TANK_SIDE_AUTO_OUT, SIDE_BACK, NBT_ENERGY_ACCEPTED_SIDES, SBIT_D), "PMP", "PRP", "hSw", 'M', OP.casingMachine.dat(aMat), 'R', OP.rotor.dat(MT.StainlessSteel), 'S', OP.plate           .dat(MT.Si), 'P', OP.plate          .dat(MT.StainlessSteel));
		aMat = MT.DATA.Electric_T[2];   aRegistry.add("Cryo Mixer (T2)"                                     , "Basic Machines"                      , 21043, 20001, aClass, aMat.mToolQuality, 16, aMachine     , UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS,   4.0F, NBT_RESISTANCE,   4.0F, NBT_COLOR, UT.Code.getRGBInt(aMat.fRGBaSolid), NBT_INPUT,  V[2], NBT_TEXTURE, "cryomixer", NBT_ENERGY_ACCEPTED, TD.Energy.CU, NBT_RECIPEMAP, RM.CryoMixer, NBT_INV_SIDE_IN, SBIT_L|SBIT_U, NBT_INV_SIDE_AUTO_IN, SIDE_LEFT, NBT_INV_SIDE_OUT, SBIT_R|SBIT_B, NBT_INV_SIDE_AUTO_OUT, SIDE_RIGHT, NBT_TANK_SIDE_IN, SBIT_L|SBIT_U, NBT_TANK_SIDE_AUTO_IN, SIDE_TOP, NBT_TANK_SIDE_OUT, SBIT_R|SBIT_B, NBT_TANK_SIDE_AUTO_OUT, SIDE_BACK, NBT_ENERGY_ACCEPTED_SIDES, SBIT_D), "PMP", "PRP", "hSw", 'M', OP.casingMachine.dat(aMat), 'R', OP.rotor.dat(MT.StainlessSteel), 'S', OP.plateDouble     .dat(MT.Si), 'P', OP.plateDouble    .dat(MT.StainlessSteel));
		aMat = MT.DATA.Electric_T[3];   aRegistry.add("Cryo Mixer (T3)"                                     , "Basic Machines"                      , 21044, 20001, aClass, aMat.mToolQuality, 16, aMachine     , UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS,   4.0F, NBT_RESISTANCE,   4.0F, NBT_COLOR, UT.Code.getRGBInt(aMat.fRGBaSolid), NBT_INPUT,  V[3], NBT_TEXTURE, "cryomixer", NBT_ENERGY_ACCEPTED, TD.Energy.CU, NBT_RECIPEMAP, RM.CryoMixer, NBT_INV_SIDE_IN, SBIT_L|SBIT_U, NBT_INV_SIDE_AUTO_IN, SIDE_LEFT, NBT_INV_SIDE_OUT, SBIT_R|SBIT_B, NBT_INV_SIDE_AUTO_OUT, SIDE_RIGHT, NBT_TANK_SIDE_IN, SBIT_L|SBIT_U, NBT_TANK_SIDE_AUTO_IN, SIDE_TOP, NBT_TANK_SIDE_OUT, SBIT_R|SBIT_B, NBT_TANK_SIDE_AUTO_OUT, SIDE_BACK, NBT_ENERGY_ACCEPTED_SIDES, SBIT_D), "PMP", "PRP", "hSw", 'M', OP.casingMachine.dat(aMat), 'R', OP.rotor.dat(MT.StainlessSteel), 'S', OP.plateTriple     .dat(MT.Si), 'P', OP.plateTriple    .dat(MT.StainlessSteel));
		aMat = MT.DATA.Electric_T[4];   aRegistry.add("Cryo Mixer (T4)"                                     , "Basic Machines"                      , 21045, 20001, aClass, aMat.mToolQuality, 16, aMachine     , UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS,   4.0F, NBT_RESISTANCE,   4.0F, NBT_COLOR, UT.Code.getRGBInt(aMat.fRGBaSolid), NBT_INPUT,  V[4], NBT_TEXTURE, "cryomixer", NBT_ENERGY_ACCEPTED, TD.Energy.CU, NBT_RECIPEMAP, RM.CryoMixer, NBT_INV_SIDE_IN, SBIT_L|SBIT_U, NBT_INV_SIDE_AUTO_IN, SIDE_LEFT, NBT_INV_SIDE_OUT, SBIT_R|SBIT_B, NBT_INV_SIDE_AUTO_OUT, SIDE_RIGHT, NBT_TANK_SIDE_IN, SBIT_L|SBIT_U, NBT_TANK_SIDE_AUTO_IN, SIDE_TOP, NBT_TANK_SIDE_OUT, SBIT_R|SBIT_B, NBT_TANK_SIDE_AUTO_OUT, SIDE_BACK, NBT_ENERGY_ACCEPTED_SIDES, SBIT_D), "PMP", "PRP", "hSw", 'M', OP.casingMachine.dat(aMat), 'R', OP.rotor.dat(MT.StainlessSteel), 'S', OP.plateQuadruple  .dat(MT.Si), 'P', OP.plateQuadruple .dat(MT.StainlessSteel));
		aMat = MT.DATA.Electric_T[5];   aRegistry.add("Cryo Mixer (T5)"                                     , "Basic Machines"                      , 21046, 20001, aClass, aMat.mToolQuality, 16, aMachine     , UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS,   4.0F, NBT_RESISTANCE,   4.0F, NBT_COLOR, UT.Code.getRGBInt(aMat.fRGBaSolid), NBT_INPUT,  V[5], NBT_TEXTURE, "cryomixer", NBT_ENERGY_ACCEPTED, TD.Energy.CU, NBT_RECIPEMAP, RM.CryoMixer, NBT_INV_SIDE_IN, SBIT_L|SBIT_U, NBT_INV_SIDE_AUTO_IN, SIDE_LEFT, NBT_INV_SIDE_OUT, SBIT_R|SBIT_B, NBT_INV_SIDE_AUTO_OUT, SIDE_RIGHT, NBT_TANK_SIDE_IN, SBIT_L|SBIT_U, NBT_TANK_SIDE_AUTO_IN, SIDE_TOP, NBT_TANK_SIDE_OUT, SBIT_R|SBIT_B, NBT_TANK_SIDE_AUTO_OUT, SIDE_BACK, NBT_ENERGY_ACCEPTED_SIDES, SBIT_D), "PMP", "PRP", "hSw", 'M', OP.casingMachine.dat(aMat), 'R', OP.rotor.dat(MT.StainlessSteel), 'S', OP.plateQuintuple  .dat(MT.Si), 'P', OP.plateQuadruple .dat(MT.StainlessSteel));
		aMat = MT.DATA.Electric_T[6];   aRegistry.add("Cryo Mixer (T6)"                                     , "Basic Machines"                      , 21047, 20001, aClass, aMat.mToolQuality, 16, aMachine     , UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS,   4.0F, NBT_RESISTANCE,   4.0F, NBT_COLOR, UT.Code.getRGBInt(aMat.fRGBaSolid), NBT_INPUT,  V[6], NBT_TEXTURE, "cryomixer", NBT_ENERGY_ACCEPTED, TD.Energy.CU, NBT_RECIPEMAP, RM.CryoMixer, NBT_INV_SIDE_IN, SBIT_L|SBIT_U, NBT_INV_SIDE_AUTO_IN, SIDE_LEFT, NBT_INV_SIDE_OUT, SBIT_R|SBIT_B, NBT_INV_SIDE_AUTO_OUT, SIDE_RIGHT, NBT_TANK_SIDE_IN, SBIT_L|SBIT_U, NBT_TANK_SIDE_AUTO_IN, SIDE_TOP, NBT_TANK_SIDE_OUT, SBIT_R|SBIT_B, NBT_TANK_SIDE_AUTO_OUT, SIDE_BACK, NBT_ENERGY_ACCEPTED_SIDES, SBIT_D), "PMP", "PRP", "hSw", 'M', OP.casingMachine.dat(aMat), 'R', OP.rotor.dat(MT.StainlessSteel), 'S', OP.plate           .dat(MT.Si), 'P', OP.plate          .dat(MT.StainlessSteel));
		aMat = MT.DATA.Electric_T[7];   aRegistry.add("Cryo Mixer (T7)"                                     , "Basic Machines"                      , 21048, 20001, aClass, aMat.mToolQuality, 16, aMachine     , UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS,   4.0F, NBT_RESISTANCE,   4.0F, NBT_COLOR, UT.Code.getRGBInt(aMat.fRGBaSolid), NBT_INPUT,  V[7], NBT_TEXTURE, "cryomixer", NBT_ENERGY_ACCEPTED, TD.Energy.CU, NBT_RECIPEMAP, RM.CryoMixer, NBT_INV_SIDE_IN, SBIT_L|SBIT_U, NBT_INV_SIDE_AUTO_IN, SIDE_LEFT, NBT_INV_SIDE_OUT, SBIT_R|SBIT_B, NBT_INV_SIDE_AUTO_OUT, SIDE_RIGHT, NBT_TANK_SIDE_IN, SBIT_L|SBIT_U, NBT_TANK_SIDE_AUTO_IN, SIDE_TOP, NBT_TANK_SIDE_OUT, SBIT_R|SBIT_B, NBT_TANK_SIDE_AUTO_OUT, SIDE_BACK, NBT_ENERGY_ACCEPTED_SIDES, SBIT_D), "PMP", "PRP", "hSw", 'M', OP.casingMachine.dat(aMat), 'R', OP.rotor.dat(MT.StainlessSteel), 'S', OP.plate           .dat(MT.Si), 'P', OP.plate          .dat(MT.StainlessSteel));
		aMat = MT.DATA.Electric_T[8];   aRegistry.add("Cryo Mixer (T8)"                                     , "Basic Machines"                      , 21049, 20001, aClass, aMat.mToolQuality, 16, aMachine     , UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS,   4.0F, NBT_RESISTANCE,   4.0F, NBT_COLOR, UT.Code.getRGBInt(aMat.fRGBaSolid), NBT_INPUT,  V[8], NBT_TEXTURE, "cryomixer", NBT_ENERGY_ACCEPTED, TD.Energy.CU, NBT_RECIPEMAP, RM.CryoMixer, NBT_INV_SIDE_IN, SBIT_L|SBIT_U, NBT_INV_SIDE_AUTO_IN, SIDE_LEFT, NBT_INV_SIDE_OUT, SBIT_R|SBIT_B, NBT_INV_SIDE_AUTO_OUT, SIDE_RIGHT, NBT_TANK_SIDE_IN, SBIT_L|SBIT_U, NBT_TANK_SIDE_AUTO_IN, SIDE_TOP, NBT_TANK_SIDE_OUT, SBIT_R|SBIT_B, NBT_TANK_SIDE_AUTO_OUT, SIDE_BACK, NBT_ENERGY_ACCEPTED_SIDES, SBIT_D), "PMP", "PRP", "hSw", 'M', OP.casingMachine.dat(aMat), 'R', OP.rotor.dat(MT.StainlessSteel), 'S', OP.plateDouble     .dat(MT.Si), 'P', OP.plateDouble    .dat(MT.StainlessSteel));
		aMat = MT.DATA.Electric_T[9];   aRegistry.add("Cryo Mixer (T9)"                                     , "Basic Machines"                      , 21050, 20001, aClass, aMat.mToolQuality, 16, aMachine     , UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS,   4.0F, NBT_RESISTANCE,   4.0F, NBT_COLOR, UT.Code.getRGBInt(aMat.fRGBaSolid), NBT_INPUT,  V[9], NBT_TEXTURE, "cryomixer", NBT_ENERGY_ACCEPTED, TD.Energy.CU, NBT_RECIPEMAP, RM.CryoMixer, NBT_INV_SIDE_IN, SBIT_L|SBIT_U, NBT_INV_SIDE_AUTO_IN, SIDE_LEFT, NBT_INV_SIDE_OUT, SBIT_R|SBIT_B, NBT_INV_SIDE_AUTO_OUT, SIDE_RIGHT, NBT_TANK_SIDE_IN, SBIT_L|SBIT_U, NBT_TANK_SIDE_AUTO_IN, SIDE_TOP, NBT_TANK_SIDE_OUT, SBIT_R|SBIT_B, NBT_TANK_SIDE_AUTO_OUT, SIDE_BACK, NBT_ENERGY_ACCEPTED_SIDES, SBIT_D), "PMP", "PRP", "hSw", 'M', OP.casingMachine.dat(aMat), 'R', OP.rotor.dat(MT.StainlessSteel), 'S', OP.plateTriple     .dat(MT.Si), 'P', OP.plateTriple    .dat(MT.StainlessSteel));
		aMat = MT.DATA.Electric_T[10];   aRegistry.add("Cryo Mixer (T10)"                                     , "Basic Machines"                      , 21051, 20001, aClass, aMat.mToolQuality, 16, aMachine     , UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS,   4.0F, NBT_RESISTANCE,   4.0F, NBT_COLOR, UT.Code.getRGBInt(aMat.fRGBaSolid), NBT_INPUT,  V[10], NBT_TEXTURE, "cryomixer", NBT_ENERGY_ACCEPTED, TD.Energy.CU, NBT_RECIPEMAP, RM.CryoMixer, NBT_INV_SIDE_IN, SBIT_L|SBIT_U, NBT_INV_SIDE_AUTO_IN, SIDE_LEFT, NBT_INV_SIDE_OUT, SBIT_R|SBIT_B, NBT_INV_SIDE_AUTO_OUT, SIDE_RIGHT, NBT_TANK_SIDE_IN, SBIT_L|SBIT_U, NBT_TANK_SIDE_AUTO_IN, SIDE_TOP, NBT_TANK_SIDE_OUT, SBIT_R|SBIT_B, NBT_TANK_SIDE_AUTO_OUT, SIDE_BACK, NBT_ENERGY_ACCEPTED_SIDES, SBIT_D), "PMP", "PRP", "hSw", 'M', OP.casingMachine.dat(aMat), 'R', OP.rotor.dat(MT.StainlessSteel), 'S', OP.plateQuadruple  .dat(MT.Si), 'P', OP.plateQuadruple .dat(MT.StainlessSteel));
		aMat = MT.DATA.Electric_T[11];   aRegistry.add("Cryo Mixer (T11)"                                     , "Basic Machines"                      , 21052, 20001, aClass, aMat.mToolQuality, 16, aMachine     , UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS,   4.0F, NBT_RESISTANCE,   4.0F, NBT_COLOR, UT.Code.getRGBInt(aMat.fRGBaSolid), NBT_INPUT,  V[11], NBT_TEXTURE, "cryomixer", NBT_ENERGY_ACCEPTED, TD.Energy.CU, NBT_RECIPEMAP, RM.CryoMixer, NBT_INV_SIDE_IN, SBIT_L|SBIT_U, NBT_INV_SIDE_AUTO_IN, SIDE_LEFT, NBT_INV_SIDE_OUT, SBIT_R|SBIT_B, NBT_INV_SIDE_AUTO_OUT, SIDE_RIGHT, NBT_TANK_SIDE_IN, SBIT_L|SBIT_U, NBT_TANK_SIDE_AUTO_IN, SIDE_TOP, NBT_TANK_SIDE_OUT, SBIT_R|SBIT_B, NBT_TANK_SIDE_AUTO_OUT, SIDE_BACK, NBT_ENERGY_ACCEPTED_SIDES, SBIT_D), "PMP", "PRP", "hSw", 'M', OP.casingMachine.dat(aMat), 'R', OP.rotor.dat(MT.StainlessSteel), 'S', OP.plateQuintuple  .dat(MT.Si), 'P', OP.plateQuadruple .dat(MT.StainlessSteel));
		aMat = MT.DATA.Electric_T[12];   aRegistry.add("Cryo Mixer (T12)"                                     , "Basic Machines"                      , 21053, 20001, aClass, aMat.mToolQuality, 16, aMachine     , UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS,   4.0F, NBT_RESISTANCE,   4.0F, NBT_COLOR, UT.Code.getRGBInt(aMat.fRGBaSolid), NBT_INPUT,  V[12], NBT_TEXTURE, "cryomixer", NBT_ENERGY_ACCEPTED, TD.Energy.CU, NBT_RECIPEMAP, RM.CryoMixer, NBT_INV_SIDE_IN, SBIT_L|SBIT_U, NBT_INV_SIDE_AUTO_IN, SIDE_LEFT, NBT_INV_SIDE_OUT, SBIT_R|SBIT_B, NBT_INV_SIDE_AUTO_OUT, SIDE_RIGHT, NBT_TANK_SIDE_IN, SBIT_L|SBIT_U, NBT_TANK_SIDE_AUTO_IN, SIDE_TOP, NBT_TANK_SIDE_OUT, SBIT_R|SBIT_B, NBT_TANK_SIDE_AUTO_OUT, SIDE_BACK, NBT_ENERGY_ACCEPTED_SIDES, SBIT_D), "PMP", "PRP", "hSw", 'M', OP.casingMachine.dat(aMat), 'R', OP.rotor.dat(MT.StainlessSteel), 'S', OP.plate           .dat(MT.Si), 'P', OP.plate          .dat(MT.StainlessSteel));
		aMat = MT.DATA.Electric_T[13];   aRegistry.add("Cryo Mixer (T13)"                                     , "Basic Machines"                      , 21054, 20001, aClass, aMat.mToolQuality, 16, aMachine     , UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS,   4.0F, NBT_RESISTANCE,   4.0F, NBT_COLOR, UT.Code.getRGBInt(aMat.fRGBaSolid), NBT_INPUT,  V[13], NBT_TEXTURE, "cryomixer", NBT_ENERGY_ACCEPTED, TD.Energy.CU, NBT_RECIPEMAP, RM.CryoMixer, NBT_INV_SIDE_IN, SBIT_L|SBIT_U, NBT_INV_SIDE_AUTO_IN, SIDE_LEFT, NBT_INV_SIDE_OUT, SBIT_R|SBIT_B, NBT_INV_SIDE_AUTO_OUT, SIDE_RIGHT, NBT_TANK_SIDE_IN, SBIT_L|SBIT_U, NBT_TANK_SIDE_AUTO_IN, SIDE_TOP, NBT_TANK_SIDE_OUT, SBIT_R|SBIT_B, NBT_TANK_SIDE_AUTO_OUT, SIDE_BACK, NBT_ENERGY_ACCEPTED_SIDES, SBIT_D), "PMP", "PRP", "hSw", 'M', OP.casingMachine.dat(aMat), 'R', OP.rotor.dat(MT.StainlessSteel), 'S', OP.plate           .dat(MT.Si), 'P', OP.plate          .dat(MT.StainlessSteel));
		aMat = MT.DATA.Electric_T[14];   aRegistry.add("Cryo Mixer (T14)"                                     , "Basic Machines"                      , 21055, 20001, aClass, aMat.mToolQuality, 16, aMachine     , UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS,   4.0F, NBT_RESISTANCE,   4.0F, NBT_COLOR, UT.Code.getRGBInt(aMat.fRGBaSolid), NBT_INPUT,  V[14], NBT_TEXTURE, "cryomixer", NBT_ENERGY_ACCEPTED, TD.Energy.CU, NBT_RECIPEMAP, RM.CryoMixer, NBT_INV_SIDE_IN, SBIT_L|SBIT_U, NBT_INV_SIDE_AUTO_IN, SIDE_LEFT, NBT_INV_SIDE_OUT, SBIT_R|SBIT_B, NBT_INV_SIDE_AUTO_OUT, SIDE_RIGHT, NBT_TANK_SIDE_IN, SBIT_L|SBIT_U, NBT_TANK_SIDE_AUTO_IN, SIDE_TOP, NBT_TANK_SIDE_OUT, SBIT_R|SBIT_B, NBT_TANK_SIDE_AUTO_OUT, SIDE_BACK, NBT_ENERGY_ACCEPTED_SIDES, SBIT_D), "PMP", "PRP", "hSw", 'M', OP.casingMachine.dat(aMat), 'R', OP.rotor.dat(MT.StainlessSteel), 'S', OP.plateDouble     .dat(MT.Si), 'P', OP.plateDouble    .dat(MT.StainlessSteel));
		aMat = MT.DATA.Electric_T[15];   aRegistry.add("Cryo Mixer (T15)"                                     , "Basic Machines"                      , 21056, 20001, aClass, aMat.mToolQuality, 16, aMachine     , UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS,   4.0F, NBT_RESISTANCE,   4.0F, NBT_COLOR, UT.Code.getRGBInt(aMat.fRGBaSolid), NBT_INPUT,  V[15], NBT_TEXTURE, "cryomixer", NBT_ENERGY_ACCEPTED, TD.Energy.CU, NBT_RECIPEMAP, RM.CryoMixer, NBT_INV_SIDE_IN, SBIT_L|SBIT_U, NBT_INV_SIDE_AUTO_IN, SIDE_LEFT, NBT_INV_SIDE_OUT, SBIT_R|SBIT_B, NBT_INV_SIDE_AUTO_OUT, SIDE_RIGHT, NBT_TANK_SIDE_IN, SBIT_L|SBIT_U, NBT_TANK_SIDE_AUTO_IN, SIDE_TOP, NBT_TANK_SIDE_OUT, SBIT_R|SBIT_B, NBT_TANK_SIDE_AUTO_OUT, SIDE_BACK, NBT_ENERGY_ACCEPTED_SIDES, SBIT_D), "PMP", "PRP", "hSw", 'M', OP.casingMachine.dat(aMat), 'R', OP.rotor.dat(MT.StainlessSteel), 'S', OP.plateTriple     .dat(MT.Si), 'P', OP.plateTriple    .dat(MT.StainlessSteel));

		aClass = MultiTileEntityBasicMachineElectric.class;
		aMat = MT.DATA.Electric_T[0];   aRegistry.add("Boxinator ("+VN[0]+")"                               , "Basic Machines"                      , 21061, 20001, aClass, aMat.mToolQuality, 16, aMachine     , UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS,   4.0F, NBT_RESISTANCE,   4.0F, NBT_COLOR, UT.Code.getRGBInt(aMat.fRGBaSolid), NBT_INPUT, V[0], NBT_TEXTURE, "boxinator", NBT_ENERGY_ACCEPTED, TD.Energy.EU, NBT_RECIPEMAP, RM.Boxinator, NBT_INV_SIDE_IN, SBIT_L|SBIT_U, NBT_INV_SIDE_AUTO_IN, SIDE_LEFT, NBT_INV_SIDE_OUT, SBIT_R, NBT_INV_SIDE_AUTO_OUT, SIDE_RIGHT, NBT_ENERGY_ACCEPTED_SIDES, SBIT_D), "wP", "CY", "CM", 'M', OP.casingMachine.dat(aMat), 'P', IL.PISTONS[1], 'Y', IL.CONVEYERS[0], 'C', OD_CIRCUITS[0]);
		aMat = MT.DATA.Electric_T[1];   aRegistry.add("Boxinator ("+VN[1]+")"                               , "Basic Machines"                      , 21062, 20001, aClass, aMat.mToolQuality, 16, aMachine     , UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS,   4.0F, NBT_RESISTANCE,   4.0F, NBT_COLOR, UT.Code.getRGBInt(aMat.fRGBaSolid), NBT_INPUT, V[1], NBT_TEXTURE, "boxinator", NBT_ENERGY_ACCEPTED, TD.Energy.EU, NBT_RECIPEMAP, RM.Boxinator, NBT_INV_SIDE_IN, SBIT_L|SBIT_U, NBT_INV_SIDE_AUTO_IN, SIDE_LEFT, NBT_INV_SIDE_OUT, SBIT_R, NBT_INV_SIDE_AUTO_OUT, SIDE_RIGHT, NBT_ENERGY_ACCEPTED_SIDES, SBIT_D), "wP", "CY", "CM", 'M', OP.casingMachine.dat(aMat), 'P', IL.PISTONS[1], 'Y', IL.CONVEYERS[1], 'C', OD_CIRCUITS[1]);
		aMat = MT.DATA.Electric_T[2];   aRegistry.add("Boxinator ("+VN[2]+")"                               , "Basic Machines"                      , 21063, 20001, aClass, aMat.mToolQuality, 16, aMachine     , UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS,   4.0F, NBT_RESISTANCE,   4.0F, NBT_COLOR, UT.Code.getRGBInt(aMat.fRGBaSolid), NBT_INPUT, V[2], NBT_TEXTURE, "boxinator", NBT_ENERGY_ACCEPTED, TD.Energy.EU, NBT_RECIPEMAP, RM.Boxinator, NBT_INV_SIDE_IN, SBIT_L|SBIT_U, NBT_INV_SIDE_AUTO_IN, SIDE_LEFT, NBT_INV_SIDE_OUT, SBIT_R, NBT_INV_SIDE_AUTO_OUT, SIDE_RIGHT, NBT_ENERGY_ACCEPTED_SIDES, SBIT_D), "wP", "CY", "CM", 'M', OP.casingMachine.dat(aMat), 'P', IL.PISTONS[2], 'Y', IL.CONVEYERS[2], 'C', OD_CIRCUITS[2]);
		aMat = MT.DATA.Electric_T[3];   aRegistry.add("Boxinator ("+VN[3]+")"                               , "Basic Machines"                      , 21064, 20001, aClass, aMat.mToolQuality, 16, aMachine     , UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS,   4.0F, NBT_RESISTANCE,   4.0F, NBT_COLOR, UT.Code.getRGBInt(aMat.fRGBaSolid), NBT_INPUT, V[3], NBT_TEXTURE, "boxinator", NBT_ENERGY_ACCEPTED, TD.Energy.EU, NBT_RECIPEMAP, RM.Boxinator, NBT_INV_SIDE_IN, SBIT_L|SBIT_U, NBT_INV_SIDE_AUTO_IN, SIDE_LEFT, NBT_INV_SIDE_OUT, SBIT_R, NBT_INV_SIDE_AUTO_OUT, SIDE_RIGHT, NBT_ENERGY_ACCEPTED_SIDES, SBIT_D), "wP", "CY", "CM", 'M', OP.casingMachine.dat(aMat), 'P', IL.PISTONS[3], 'Y', IL.CONVEYERS[3], 'C', OD_CIRCUITS[3]);
		aMat = MT.DATA.Electric_T[4];   aRegistry.add("Boxinator ("+VN[4]+")"                               , "Basic Machines"                      , 21065, 20001, aClass, aMat.mToolQuality, 16, aMachine     , UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS,   4.0F, NBT_RESISTANCE,   4.0F, NBT_COLOR, UT.Code.getRGBInt(aMat.fRGBaSolid), NBT_INPUT, V[4], NBT_TEXTURE, "boxinator", NBT_ENERGY_ACCEPTED, TD.Energy.EU, NBT_RECIPEMAP, RM.Boxinator, NBT_INV_SIDE_IN, SBIT_L|SBIT_U, NBT_INV_SIDE_AUTO_IN, SIDE_LEFT, NBT_INV_SIDE_OUT, SBIT_R, NBT_INV_SIDE_AUTO_OUT, SIDE_RIGHT, NBT_ENERGY_ACCEPTED_SIDES, SBIT_D), "wP", "CY", "CM", 'M', OP.casingMachine.dat(aMat), 'P', IL.PISTONS[4], 'Y', IL.CONVEYERS[4], 'C', OD_CIRCUITS[4]);
		aMat = MT.DATA.Electric_T[5];   aRegistry.add("Boxinator ("+VN[5]+")"                               , "Basic Machines"                      , 21066, 20001, aClass, aMat.mToolQuality, 16, aMachine     , UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS,   4.0F, NBT_RESISTANCE,   4.0F, NBT_COLOR, UT.Code.getRGBInt(aMat.fRGBaSolid), NBT_INPUT, V[5], NBT_TEXTURE, "boxinator", NBT_ENERGY_ACCEPTED, TD.Energy.EU, NBT_RECIPEMAP, RM.Boxinator, NBT_INV_SIDE_IN, SBIT_L|SBIT_U, NBT_INV_SIDE_AUTO_IN, SIDE_LEFT, NBT_INV_SIDE_OUT, SBIT_R, NBT_INV_SIDE_AUTO_OUT, SIDE_RIGHT, NBT_ENERGY_ACCEPTED_SIDES, SBIT_D), "wP", "CY", "CM", 'M', OP.casingMachine.dat(aMat), 'P', IL.PISTONS[5], 'Y', IL.CONVEYERS[5], 'C', OD_CIRCUITS[5]);
		aMat = MT.DATA.Electric_T[6];   aRegistry.add("Boxinator ("+VN[6]+")"                               , "Basic Machines"                      , 21067, 20001, aClass, aMat.mToolQuality, 16, aMachine     , UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS,   4.0F, NBT_RESISTANCE,   4.0F, NBT_COLOR, UT.Code.getRGBInt(aMat.fRGBaSolid), NBT_INPUT, V[6], NBT_TEXTURE, "boxinator", NBT_ENERGY_ACCEPTED, TD.Energy.EU, NBT_RECIPEMAP, RM.Boxinator, NBT_INV_SIDE_IN, SBIT_L|SBIT_U, NBT_INV_SIDE_AUTO_IN, SIDE_LEFT, NBT_INV_SIDE_OUT, SBIT_R, NBT_INV_SIDE_AUTO_OUT, SIDE_RIGHT, NBT_ENERGY_ACCEPTED_SIDES, SBIT_D), "wP", "CY", "CM", 'M', OP.casingMachine.dat(aMat), 'P', IL.PISTONS[6], 'Y', IL.CONVEYERS[6], 'C', OD_CIRCUITS[6]);
		aMat = MT.DATA.Electric_T[7];   aRegistry.add("Boxinator ("+VN[7]+")"                               , "Basic Machines"                      , 21068, 20001, aClass, aMat.mToolQuality, 16, aMachine     , UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS,   4.0F, NBT_RESISTANCE,   4.0F, NBT_COLOR, UT.Code.getRGBInt(aMat.fRGBaSolid), NBT_INPUT, V[7], NBT_TEXTURE, "boxinator", NBT_ENERGY_ACCEPTED, TD.Energy.EU, NBT_RECIPEMAP, RM.Boxinator, NBT_INV_SIDE_IN, SBIT_L|SBIT_U, NBT_INV_SIDE_AUTO_IN, SIDE_LEFT, NBT_INV_SIDE_OUT, SBIT_R, NBT_INV_SIDE_AUTO_OUT, SIDE_RIGHT, NBT_ENERGY_ACCEPTED_SIDES, SBIT_D), "wP", "CY", "CM", 'M', OP.casingMachine.dat(aMat), 'P', IL.PISTONS[7], 'Y', IL.CONVEYERS[7], 'C', OD_CIRCUITS[7]);
		aMat = MT.DATA.Electric_T[8];   aRegistry.add("Boxinator ("+VN[8]+")"                               , "Basic Machines"                      , 21069, 20001, aClass, aMat.mToolQuality, 16, aMachine     , UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS,   4.0F, NBT_RESISTANCE,   4.0F, NBT_COLOR, UT.Code.getRGBInt(aMat.fRGBaSolid), NBT_INPUT, V[8], NBT_TEXTURE, "boxinator", NBT_ENERGY_ACCEPTED, TD.Energy.EU, NBT_RECIPEMAP, RM.Boxinator, NBT_INV_SIDE_IN, SBIT_L|SBIT_U, NBT_INV_SIDE_AUTO_IN, SIDE_LEFT, NBT_INV_SIDE_OUT, SBIT_R, NBT_INV_SIDE_AUTO_OUT, SIDE_RIGHT, NBT_ENERGY_ACCEPTED_SIDES, SBIT_D), "wP", "CY", "CM", 'M', OP.casingMachine.dat(aMat), 'P', IL.PISTONS[8], 'Y', IL.CONVEYERS[8], 'C', OD_CIRCUITS[8]);
		aMat = MT.DATA.Electric_T[9];   aRegistry.add("Boxinator ("+VN[9]+")"                               , "Basic Machines"                      , 21070, 20001, aClass, aMat.mToolQuality, 16, aMachine     , UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS,   4.0F, NBT_RESISTANCE,   4.0F, NBT_COLOR, UT.Code.getRGBInt(aMat.fRGBaSolid), NBT_INPUT, V[9], NBT_TEXTURE, "boxinator", NBT_ENERGY_ACCEPTED, TD.Energy.EU, NBT_RECIPEMAP, RM.Boxinator, NBT_INV_SIDE_IN, SBIT_L|SBIT_U, NBT_INV_SIDE_AUTO_IN, SIDE_LEFT, NBT_INV_SIDE_OUT, SBIT_R, NBT_INV_SIDE_AUTO_OUT, SIDE_RIGHT, NBT_ENERGY_ACCEPTED_SIDES, SBIT_D), "wP", "CY", "CM", 'M', OP.casingMachine.dat(aMat), 'P', IL.PISTONS[9], 'Y', IL.CONVEYERS[9], 'C', OD_CIRCUITS[9]);
		aMat = MT.DATA.Electric_T[10];   aRegistry.add("Boxinator ("+VN[10]+")"                               , "Basic Machines"                      , 21071, 20001, aClass, aMat.mToolQuality, 16, aMachine     , UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS,   4.0F, NBT_RESISTANCE,   4.0F, NBT_COLOR, UT.Code.getRGBInt(aMat.fRGBaSolid), NBT_INPUT, V[10], NBT_TEXTURE, "boxinator", NBT_ENERGY_ACCEPTED, TD.Energy.EU, NBT_RECIPEMAP, RM.Boxinator, NBT_INV_SIDE_IN, SBIT_L|SBIT_U, NBT_INV_SIDE_AUTO_IN, SIDE_LEFT, NBT_INV_SIDE_OUT, SBIT_R, NBT_INV_SIDE_AUTO_OUT, SIDE_RIGHT, NBT_ENERGY_ACCEPTED_SIDES, SBIT_D), "wP", "CY", "CM", 'M', OP.casingMachine.dat(aMat), 'P', IL.PISTONS[10], 'Y', IL.CONVEYERS[10], 'C', OD_CIRCUITS[10]);
		aMat = MT.DATA.Electric_T[11];   aRegistry.add("Boxinator ("+VN[11]+")"                               , "Basic Machines"                      , 21072, 20001, aClass, aMat.mToolQuality, 16, aMachine     , UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS,   4.0F, NBT_RESISTANCE,   4.0F, NBT_COLOR, UT.Code.getRGBInt(aMat.fRGBaSolid), NBT_INPUT, V[11], NBT_TEXTURE, "boxinator", NBT_ENERGY_ACCEPTED, TD.Energy.EU, NBT_RECIPEMAP, RM.Boxinator, NBT_INV_SIDE_IN, SBIT_L|SBIT_U, NBT_INV_SIDE_AUTO_IN, SIDE_LEFT, NBT_INV_SIDE_OUT, SBIT_R, NBT_INV_SIDE_AUTO_OUT, SIDE_RIGHT, NBT_ENERGY_ACCEPTED_SIDES, SBIT_D), "wP", "CY", "CM", 'M', OP.casingMachine.dat(aMat), 'P', IL.PISTONS[11], 'Y', IL.CONVEYERS[11], 'C', OD_CIRCUITS[11]);
		aMat = MT.DATA.Electric_T[12];   aRegistry.add("Boxinator ("+VN[12]+")"                               , "Basic Machines"                      , 21073, 20001, aClass, aMat.mToolQuality, 16, aMachine     , UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS,   4.0F, NBT_RESISTANCE,   4.0F, NBT_COLOR, UT.Code.getRGBInt(aMat.fRGBaSolid), NBT_INPUT, V[12], NBT_TEXTURE, "boxinator", NBT_ENERGY_ACCEPTED, TD.Energy.EU, NBT_RECIPEMAP, RM.Boxinator, NBT_INV_SIDE_IN, SBIT_L|SBIT_U, NBT_INV_SIDE_AUTO_IN, SIDE_LEFT, NBT_INV_SIDE_OUT, SBIT_R, NBT_INV_SIDE_AUTO_OUT, SIDE_RIGHT, NBT_ENERGY_ACCEPTED_SIDES, SBIT_D), "wP", "CY", "CM", 'M', OP.casingMachine.dat(aMat), 'P', IL.PISTONS[12], 'Y', IL.CONVEYERS[12], 'C', OD_CIRCUITS[12]);
		aMat = MT.DATA.Electric_T[13];   aRegistry.add("Boxinator ("+VN[13]+")"                               , "Basic Machines"                      , 21074, 20001, aClass, aMat.mToolQuality, 16, aMachine     , UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS,   4.0F, NBT_RESISTANCE,   4.0F, NBT_COLOR, UT.Code.getRGBInt(aMat.fRGBaSolid), NBT_INPUT, V[13], NBT_TEXTURE, "boxinator", NBT_ENERGY_ACCEPTED, TD.Energy.EU, NBT_RECIPEMAP, RM.Boxinator, NBT_INV_SIDE_IN, SBIT_L|SBIT_U, NBT_INV_SIDE_AUTO_IN, SIDE_LEFT, NBT_INV_SIDE_OUT, SBIT_R, NBT_INV_SIDE_AUTO_OUT, SIDE_RIGHT, NBT_ENERGY_ACCEPTED_SIDES, SBIT_D), "wP", "CY", "CM", 'M', OP.casingMachine.dat(aMat), 'P', IL.PISTONS[13], 'Y', IL.CONVEYERS[13], 'C', OD_CIRCUITS[13]);
		aMat = MT.DATA.Electric_T[14];   aRegistry.add("Boxinator ("+VN[14]+")"                               , "Basic Machines"                      , 21075, 20001, aClass, aMat.mToolQuality, 16, aMachine     , UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS,   4.0F, NBT_RESISTANCE,   4.0F, NBT_COLOR, UT.Code.getRGBInt(aMat.fRGBaSolid), NBT_INPUT, V[14], NBT_TEXTURE, "boxinator", NBT_ENERGY_ACCEPTED, TD.Energy.EU, NBT_RECIPEMAP, RM.Boxinator, NBT_INV_SIDE_IN, SBIT_L|SBIT_U, NBT_INV_SIDE_AUTO_IN, SIDE_LEFT, NBT_INV_SIDE_OUT, SBIT_R, NBT_INV_SIDE_AUTO_OUT, SIDE_RIGHT, NBT_ENERGY_ACCEPTED_SIDES, SBIT_D), "wP", "CY", "CM", 'M', OP.casingMachine.dat(aMat), 'P', IL.PISTONS[14], 'Y', IL.CONVEYERS[14], 'C', OD_CIRCUITS[14]);
		aMat = MT.DATA.Electric_T[15];   aRegistry.add("Boxinator ("+VN[15]+")"                               , "Basic Machines"                      , 21076, 20001, aClass, aMat.mToolQuality, 16, aMachine     , UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS,   4.0F, NBT_RESISTANCE,   4.0F, NBT_COLOR, UT.Code.getRGBInt(aMat.fRGBaSolid), NBT_INPUT, V[15], NBT_TEXTURE, "boxinator", NBT_ENERGY_ACCEPTED, TD.Energy.EU, NBT_RECIPEMAP, RM.Boxinator, NBT_INV_SIDE_IN, SBIT_L|SBIT_U, NBT_INV_SIDE_AUTO_IN, SIDE_LEFT, NBT_INV_SIDE_OUT, SBIT_R, NBT_INV_SIDE_AUTO_OUT, SIDE_RIGHT, NBT_ENERGY_ACCEPTED_SIDES, SBIT_D), "wP", "CY", "CM", 'M', OP.casingMachine.dat(aMat), 'P', IL.PISTONS[15], 'Y', IL.CONVEYERS[15], 'C', OD_CIRCUITS[15]);

		aClass = MultiTileEntityBasicMachineElectric.class;
		aMat = MT.DATA.Electric_T[0];   aRegistry.add("Unboxinator ("+VN[0]+")"                             , "Basic Machines"                      , 21081, 20001, aClass, aMat.mToolQuality, 16, aMachine     , UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS,   4.0F, NBT_RESISTANCE,   4.0F, NBT_COLOR, UT.Code.getRGBInt(aMat.fRGBaSolid), NBT_INPUT,  V[0], NBT_TEXTURE, "unboxinator", NBT_ENERGY_ACCEPTED, TD.Energy.EU, NBT_RECIPEMAP, RM.Unboxinator, NBT_INV_SIDE_IN, SBIT_L|SBIT_U, NBT_INV_SIDE_AUTO_IN, SIDE_LEFT, NBT_INV_SIDE_OUT, SBIT_R, NBT_INV_SIDE_AUTO_OUT, SIDE_RIGHT, NBT_ENERGY_ACCEPTED_SIDES, SBIT_D), "Pw", "YC", "MC", 'M', OP.casingMachine.dat(aMat), 'P', IL.PISTONS[0], 'Y', IL.CONVEYERS[0], 'C', OD_CIRCUITS[0]);
		aMat = MT.DATA.Electric_T[1];   aRegistry.add("Unboxinator ("+VN[1]+")"                             , "Basic Machines"                      , 21082, 20001, aClass, aMat.mToolQuality, 16, aMachine     , UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS,   4.0F, NBT_RESISTANCE,   4.0F, NBT_COLOR, UT.Code.getRGBInt(aMat.fRGBaSolid), NBT_INPUT,  V[1], NBT_TEXTURE, "unboxinator", NBT_ENERGY_ACCEPTED, TD.Energy.EU, NBT_RECIPEMAP, RM.Unboxinator, NBT_INV_SIDE_IN, SBIT_L|SBIT_U, NBT_INV_SIDE_AUTO_IN, SIDE_LEFT, NBT_INV_SIDE_OUT, SBIT_R, NBT_INV_SIDE_AUTO_OUT, SIDE_RIGHT, NBT_ENERGY_ACCEPTED_SIDES, SBIT_D), "Pw", "YC", "MC", 'M', OP.casingMachine.dat(aMat), 'P', IL.PISTONS[1], 'Y', IL.CONVEYERS[1], 'C', OD_CIRCUITS[1]);
		aMat = MT.DATA.Electric_T[2];   aRegistry.add("Unboxinator ("+VN[2]+")"                             , "Basic Machines"                      , 21083, 20001, aClass, aMat.mToolQuality, 16, aMachine     , UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS,   4.0F, NBT_RESISTANCE,   4.0F, NBT_COLOR, UT.Code.getRGBInt(aMat.fRGBaSolid), NBT_INPUT,  V[2], NBT_TEXTURE, "unboxinator", NBT_ENERGY_ACCEPTED, TD.Energy.EU, NBT_RECIPEMAP, RM.Unboxinator, NBT_INV_SIDE_IN, SBIT_L|SBIT_U, NBT_INV_SIDE_AUTO_IN, SIDE_LEFT, NBT_INV_SIDE_OUT, SBIT_R, NBT_INV_SIDE_AUTO_OUT, SIDE_RIGHT, NBT_ENERGY_ACCEPTED_SIDES, SBIT_D), "Pw", "YC", "MC", 'M', OP.casingMachine.dat(aMat), 'P', IL.PISTONS[2], 'Y', IL.CONVEYERS[2], 'C', OD_CIRCUITS[2]);
		aMat = MT.DATA.Electric_T[3];   aRegistry.add("Unboxinator ("+VN[3]+")"                             , "Basic Machines"                      , 21084, 20001, aClass, aMat.mToolQuality, 16, aMachine     , UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS,   4.0F, NBT_RESISTANCE,   4.0F, NBT_COLOR, UT.Code.getRGBInt(aMat.fRGBaSolid), NBT_INPUT,  V[3], NBT_TEXTURE, "unboxinator", NBT_ENERGY_ACCEPTED, TD.Energy.EU, NBT_RECIPEMAP, RM.Unboxinator, NBT_INV_SIDE_IN, SBIT_L|SBIT_U, NBT_INV_SIDE_AUTO_IN, SIDE_LEFT, NBT_INV_SIDE_OUT, SBIT_R, NBT_INV_SIDE_AUTO_OUT, SIDE_RIGHT, NBT_ENERGY_ACCEPTED_SIDES, SBIT_D), "Pw", "YC", "MC", 'M', OP.casingMachine.dat(aMat), 'P', IL.PISTONS[3], 'Y', IL.CONVEYERS[3], 'C', OD_CIRCUITS[3]);
		aMat = MT.DATA.Electric_T[4];   aRegistry.add("Unboxinator ("+VN[4]+")"                             , "Basic Machines"                      , 21085, 20001, aClass, aMat.mToolQuality, 16, aMachine     , UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS,   4.0F, NBT_RESISTANCE,   4.0F, NBT_COLOR, UT.Code.getRGBInt(aMat.fRGBaSolid), NBT_INPUT,  V[4], NBT_TEXTURE, "unboxinator", NBT_ENERGY_ACCEPTED, TD.Energy.EU, NBT_RECIPEMAP, RM.Unboxinator, NBT_INV_SIDE_IN, SBIT_L|SBIT_U, NBT_INV_SIDE_AUTO_IN, SIDE_LEFT, NBT_INV_SIDE_OUT, SBIT_R, NBT_INV_SIDE_AUTO_OUT, SIDE_RIGHT, NBT_ENERGY_ACCEPTED_SIDES, SBIT_D), "Pw", "YC", "MC", 'M', OP.casingMachine.dat(aMat), 'P', IL.PISTONS[4], 'Y', IL.CONVEYERS[4], 'C', OD_CIRCUITS[4]);
		aMat = MT.DATA.Electric_T[5];   aRegistry.add("Unboxinator ("+VN[5]+")"                             , "Basic Machines"                      , 21086, 20001, aClass, aMat.mToolQuality, 16, aMachine     , UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS,   4.0F, NBT_RESISTANCE,   4.0F, NBT_COLOR, UT.Code.getRGBInt(aMat.fRGBaSolid), NBT_INPUT,  V[5], NBT_TEXTURE, "unboxinator", NBT_ENERGY_ACCEPTED, TD.Energy.EU, NBT_RECIPEMAP, RM.Unboxinator, NBT_INV_SIDE_IN, SBIT_L|SBIT_U, NBT_INV_SIDE_AUTO_IN, SIDE_LEFT, NBT_INV_SIDE_OUT, SBIT_R, NBT_INV_SIDE_AUTO_OUT, SIDE_RIGHT, NBT_ENERGY_ACCEPTED_SIDES, SBIT_D), "Pw", "YC", "MC", 'M', OP.casingMachine.dat(aMat), 'P', IL.PISTONS[5], 'Y', IL.CONVEYERS[5], 'C', OD_CIRCUITS[5]);
		aMat = MT.DATA.Electric_T[6];   aRegistry.add("Unboxinator ("+VN[6]+")"                             , "Basic Machines"                      , 21087, 20001, aClass, aMat.mToolQuality, 16, aMachine     , UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS,   4.0F, NBT_RESISTANCE,   4.0F, NBT_COLOR, UT.Code.getRGBInt(aMat.fRGBaSolid), NBT_INPUT,  V[6], NBT_TEXTURE, "unboxinator", NBT_ENERGY_ACCEPTED, TD.Energy.EU, NBT_RECIPEMAP, RM.Unboxinator, NBT_INV_SIDE_IN, SBIT_L|SBIT_U, NBT_INV_SIDE_AUTO_IN, SIDE_LEFT, NBT_INV_SIDE_OUT, SBIT_R, NBT_INV_SIDE_AUTO_OUT, SIDE_RIGHT, NBT_ENERGY_ACCEPTED_SIDES, SBIT_D), "Pw", "YC", "MC", 'M', OP.casingMachine.dat(aMat), 'P', IL.PISTONS[6], 'Y', IL.CONVEYERS[6], 'C', OD_CIRCUITS[6]);
		aMat = MT.DATA.Electric_T[7];   aRegistry.add("Unboxinator ("+VN[7]+")"                             , "Basic Machines"                      , 21088, 20001, aClass, aMat.mToolQuality, 16, aMachine     , UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS,   4.0F, NBT_RESISTANCE,   4.0F, NBT_COLOR, UT.Code.getRGBInt(aMat.fRGBaSolid), NBT_INPUT,  V[7], NBT_TEXTURE, "unboxinator", NBT_ENERGY_ACCEPTED, TD.Energy.EU, NBT_RECIPEMAP, RM.Unboxinator, NBT_INV_SIDE_IN, SBIT_L|SBIT_U, NBT_INV_SIDE_AUTO_IN, SIDE_LEFT, NBT_INV_SIDE_OUT, SBIT_R, NBT_INV_SIDE_AUTO_OUT, SIDE_RIGHT, NBT_ENERGY_ACCEPTED_SIDES, SBIT_D), "Pw", "YC", "MC", 'M', OP.casingMachine.dat(aMat), 'P', IL.PISTONS[7], 'Y', IL.CONVEYERS[7], 'C', OD_CIRCUITS[7]);
		aMat = MT.DATA.Electric_T[8];   aRegistry.add("Unboxinator ("+VN[8]+")"                             , "Basic Machines"                      , 21089, 20001, aClass, aMat.mToolQuality, 16, aMachine     , UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS,   4.0F, NBT_RESISTANCE,   4.0F, NBT_COLOR, UT.Code.getRGBInt(aMat.fRGBaSolid), NBT_INPUT,  V[8], NBT_TEXTURE, "unboxinator", NBT_ENERGY_ACCEPTED, TD.Energy.EU, NBT_RECIPEMAP, RM.Unboxinator, NBT_INV_SIDE_IN, SBIT_L|SBIT_U, NBT_INV_SIDE_AUTO_IN, SIDE_LEFT, NBT_INV_SIDE_OUT, SBIT_R, NBT_INV_SIDE_AUTO_OUT, SIDE_RIGHT, NBT_ENERGY_ACCEPTED_SIDES, SBIT_D), "Pw", "YC", "MC", 'M', OP.casingMachine.dat(aMat), 'P', IL.PISTONS[8], 'Y', IL.CONVEYERS[8], 'C', OD_CIRCUITS[8]);
		aMat = MT.DATA.Electric_T[9];   aRegistry.add("Unboxinator ("+VN[9]+")"                             , "Basic Machines"                      , 21090, 20001, aClass, aMat.mToolQuality, 16, aMachine     , UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS,   4.0F, NBT_RESISTANCE,   4.0F, NBT_COLOR, UT.Code.getRGBInt(aMat.fRGBaSolid), NBT_INPUT,  V[9], NBT_TEXTURE, "unboxinator", NBT_ENERGY_ACCEPTED, TD.Energy.EU, NBT_RECIPEMAP, RM.Unboxinator, NBT_INV_SIDE_IN, SBIT_L|SBIT_U, NBT_INV_SIDE_AUTO_IN, SIDE_LEFT, NBT_INV_SIDE_OUT, SBIT_R, NBT_INV_SIDE_AUTO_OUT, SIDE_RIGHT, NBT_ENERGY_ACCEPTED_SIDES, SBIT_D), "Pw", "YC", "MC", 'M', OP.casingMachine.dat(aMat), 'P', IL.PISTONS[9], 'Y', IL.CONVEYERS[9], 'C', OD_CIRCUITS[9]);
		aMat = MT.DATA.Electric_T[10];   aRegistry.add("Unboxinator ("+VN[10]+")"                             , "Basic Machines"                      , 21091, 20001, aClass, aMat.mToolQuality, 16, aMachine     , UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS,   4.0F, NBT_RESISTANCE,   4.0F, NBT_COLOR, UT.Code.getRGBInt(aMat.fRGBaSolid), NBT_INPUT,  V[10], NBT_TEXTURE, "unboxinator", NBT_ENERGY_ACCEPTED, TD.Energy.EU, NBT_RECIPEMAP, RM.Unboxinator, NBT_INV_SIDE_IN, SBIT_L|SBIT_U, NBT_INV_SIDE_AUTO_IN, SIDE_LEFT, NBT_INV_SIDE_OUT, SBIT_R, NBT_INV_SIDE_AUTO_OUT, SIDE_RIGHT, NBT_ENERGY_ACCEPTED_SIDES, SBIT_D), "Pw", "YC", "MC", 'M', OP.casingMachine.dat(aMat), 'P', IL.PISTONS[10], 'Y', IL.CONVEYERS[10], 'C', OD_CIRCUITS[10]);
		aMat = MT.DATA.Electric_T[11];   aRegistry.add("Unboxinator ("+VN[11]+")"                             , "Basic Machines"                      , 21092, 20001, aClass, aMat.mToolQuality, 16, aMachine     , UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS,   4.0F, NBT_RESISTANCE,   4.0F, NBT_COLOR, UT.Code.getRGBInt(aMat.fRGBaSolid), NBT_INPUT,  V[11], NBT_TEXTURE, "unboxinator", NBT_ENERGY_ACCEPTED, TD.Energy.EU, NBT_RECIPEMAP, RM.Unboxinator, NBT_INV_SIDE_IN, SBIT_L|SBIT_U, NBT_INV_SIDE_AUTO_IN, SIDE_LEFT, NBT_INV_SIDE_OUT, SBIT_R, NBT_INV_SIDE_AUTO_OUT, SIDE_RIGHT, NBT_ENERGY_ACCEPTED_SIDES, SBIT_D), "Pw", "YC", "MC", 'M', OP.casingMachine.dat(aMat), 'P', IL.PISTONS[11], 'Y', IL.CONVEYERS[11], 'C', OD_CIRCUITS[11]);
		aMat = MT.DATA.Electric_T[12];   aRegistry.add("Unboxinator ("+VN[12]+")"                             , "Basic Machines"                      , 21093, 20001, aClass, aMat.mToolQuality, 16, aMachine     , UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS,   4.0F, NBT_RESISTANCE,   4.0F, NBT_COLOR, UT.Code.getRGBInt(aMat.fRGBaSolid), NBT_INPUT,  V[12], NBT_TEXTURE, "unboxinator", NBT_ENERGY_ACCEPTED, TD.Energy.EU, NBT_RECIPEMAP, RM.Unboxinator, NBT_INV_SIDE_IN, SBIT_L|SBIT_U, NBT_INV_SIDE_AUTO_IN, SIDE_LEFT, NBT_INV_SIDE_OUT, SBIT_R, NBT_INV_SIDE_AUTO_OUT, SIDE_RIGHT, NBT_ENERGY_ACCEPTED_SIDES, SBIT_D), "Pw", "YC", "MC", 'M', OP.casingMachine.dat(aMat), 'P', IL.PISTONS[12], 'Y', IL.CONVEYERS[12], 'C', OD_CIRCUITS[12]);
		aMat = MT.DATA.Electric_T[13];   aRegistry.add("Unboxinator ("+VN[13]+")"                             , "Basic Machines"                      , 21094, 20001, aClass, aMat.mToolQuality, 16, aMachine     , UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS,   4.0F, NBT_RESISTANCE,   4.0F, NBT_COLOR, UT.Code.getRGBInt(aMat.fRGBaSolid), NBT_INPUT,  V[13], NBT_TEXTURE, "unboxinator", NBT_ENERGY_ACCEPTED, TD.Energy.EU, NBT_RECIPEMAP, RM.Unboxinator, NBT_INV_SIDE_IN, SBIT_L|SBIT_U, NBT_INV_SIDE_AUTO_IN, SIDE_LEFT, NBT_INV_SIDE_OUT, SBIT_R, NBT_INV_SIDE_AUTO_OUT, SIDE_RIGHT, NBT_ENERGY_ACCEPTED_SIDES, SBIT_D), "Pw", "YC", "MC", 'M', OP.casingMachine.dat(aMat), 'P', IL.PISTONS[13], 'Y', IL.CONVEYERS[13], 'C', OD_CIRCUITS[13]);
		aMat = MT.DATA.Electric_T[14];   aRegistry.add("Unboxinator ("+VN[14]+")"                             , "Basic Machines"                      , 21095, 20001, aClass, aMat.mToolQuality, 16, aMachine     , UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS,   4.0F, NBT_RESISTANCE,   4.0F, NBT_COLOR, UT.Code.getRGBInt(aMat.fRGBaSolid), NBT_INPUT,  V[14], NBT_TEXTURE, "unboxinator", NBT_ENERGY_ACCEPTED, TD.Energy.EU, NBT_RECIPEMAP, RM.Unboxinator, NBT_INV_SIDE_IN, SBIT_L|SBIT_U, NBT_INV_SIDE_AUTO_IN, SIDE_LEFT, NBT_INV_SIDE_OUT, SBIT_R, NBT_INV_SIDE_AUTO_OUT, SIDE_RIGHT, NBT_ENERGY_ACCEPTED_SIDES, SBIT_D), "Pw", "YC", "MC", 'M', OP.casingMachine.dat(aMat), 'P', IL.PISTONS[14], 'Y', IL.CONVEYERS[14], 'C', OD_CIRCUITS[14]);
		aMat = MT.DATA.Electric_T[15];   aRegistry.add("Unboxinator ("+VN[15]+")"                             , "Basic Machines"                      , 21096, 20001, aClass, aMat.mToolQuality, 16, aMachine     , UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS,   4.0F, NBT_RESISTANCE,   4.0F, NBT_COLOR, UT.Code.getRGBInt(aMat.fRGBaSolid), NBT_INPUT,  V[15], NBT_TEXTURE, "unboxinator", NBT_ENERGY_ACCEPTED, TD.Energy.EU, NBT_RECIPEMAP, RM.Unboxinator, NBT_INV_SIDE_IN, SBIT_L|SBIT_U, NBT_INV_SIDE_AUTO_IN, SIDE_LEFT, NBT_INV_SIDE_OUT, SBIT_R, NBT_INV_SIDE_AUTO_OUT, SIDE_RIGHT, NBT_ENERGY_ACCEPTED_SIDES, SBIT_D), "Pw", "YC", "MC", 'M', OP.casingMachine.dat(aMat), 'P', IL.PISTONS[15], 'Y', IL.CONVEYERS[15], 'C', OD_CIRCUITS[15]);
	}

	private static void machines4(MultiTileEntityRegistry aRegistry, MultiTileEntityBlock aMetal, MultiTileEntityBlock aMetalChips, MultiTileEntityBlock aMetalWires, MultiTileEntityBlock aMachine, MultiTileEntityBlock aWooden, MultiTileEntityBlock aBush, MultiTileEntityBlock aStone, MultiTileEntityBlock aWool, MultiTileEntityBlock aTNT, MultiTileEntityBlock aHive, MultiTileEntityBlock aUtilMetal, MultiTileEntityBlock aUtilStone, MultiTileEntityBlock aUtilWood, MultiTileEntityBlock aUtilWool, OreDictMaterial aMat, Class<? extends TileEntity> aClass) {
		aClass = MultiTileEntityBasicMachine.class;
		aMat = MT.StainlessSteel;       aRegistry.add("Coagulator"                                          , "Basic Machines"                      , 22000, 20001, aClass, aMat.mToolQuality, 16, aMachine     , UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS,   6.0F, NBT_RESISTANCE,   6.0F, NBT_COLOR, UT.Code.getRGBInt(aMat.fRGBaSolid), NBT_INPUT, 1, NBT_TEXTURE, "coagulator"    , NBT_ENERGY_ACCEPTED, TD.Energy.TU, NBT_NO_CONSTANT_POWER, T, NBT_RECIPEMAP, RM.Coagulator                                                                           , NBT_INV_SIDE_OUT, SBIT_D|SBIT_R   , NBT_INV_SIDE_AUTO_OUT, SIDE_BOTTOM    , NBT_TANK_SIDE_IN, SBIT_U|SBIT_L   , NBT_TANK_SIDE_AUTO_IN, SIDE_TOP                                                                               , NBT_ENERGY_ACCEPTED_SIDES, SBIT_B|SBIT_L|SBIT_R                       ), "T T", "hMw", "TdT", 'M', OP.casingMachine.dat(aMat), 'T', OP.screw.dat(aMat));
		aMat = MT.StainlessSteel;       aRegistry.add("Generifier"                                          , "Basic Machines"                      , 22001, 20001, aClass, aMat.mToolQuality, 16, aMachine     , UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS,   6.0F, NBT_RESISTANCE,   6.0F, NBT_COLOR, UT.Code.getRGBInt(aMat.fRGBaSolid), NBT_INPUT, 1, NBT_TEXTURE, "generifier"    , NBT_ENERGY_ACCEPTED, TD.Energy.TU, NBT_NO_CONSTANT_POWER, T, NBT_RECIPEMAP, RM.Generifier   , NBT_INV_SIDE_IN, SBIT_U|SBIT_L    , NBT_INV_SIDE_AUTO_IN, SIDE_LEFT   , NBT_INV_SIDE_OUT, SBIT_D|SBIT_R   , NBT_INV_SIDE_AUTO_OUT, SIDE_RIGHT     , NBT_TANK_SIDE_IN, SBIT_U|SBIT_L   , NBT_TANK_SIDE_AUTO_IN, SIDE_TOP   , NBT_TANK_SIDE_OUT, SBIT_D|SBIT_R  , NBT_TANK_SIDE_AUTO_OUT, SIDE_BOTTOM   , NBT_ENERGY_ACCEPTED_SIDES, SBIT_B                 , NBT_PARALLEL,  100), "ChC", "CMC", "CwC", 'M', OP.casingMachine.dat(aMat), 'C', OP.casingSmall.dat(aMat));
		aMat = MT.StainlessSteel;       aRegistry.add("Bath"                                                , "Basic Machines"                      , 22002, 20001, aClass, aMat.mToolQuality, 16, aMachine     , UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS,   6.0F, NBT_RESISTANCE,   6.0F, NBT_COLOR, UT.Code.getRGBInt(aMat.fRGBaSolid), NBT_INPUT, 1, NBT_TEXTURE, "bath"          , NBT_ENERGY_ACCEPTED, TD.Energy.TU, NBT_NO_CONSTANT_POWER, T, NBT_RECIPEMAP, RM.Bath         , NBT_INV_SIDE_IN, SBIT_U|SBIT_L    , NBT_INV_SIDE_AUTO_IN, SIDE_LEFT   , NBT_INV_SIDE_OUT, SBIT_D|SBIT_R   , NBT_INV_SIDE_AUTO_OUT, SIDE_RIGHT     , NBT_TANK_SIDE_IN, SBIT_U|SBIT_L   , NBT_TANK_SIDE_AUTO_IN, SIDE_TOP   , NBT_TANK_SIDE_OUT, SBIT_D|SBIT_R  , NBT_TANK_SIDE_AUTO_OUT, SIDE_BOTTOM   , NBT_ENERGY_ACCEPTED_SIDES, SBIT_B                                     ), "CwC", "PMP", "PPP", 'M', OP.casingMachine.dat(aMat), 'C', OP.casingSmall.dat(aMat), 'P', OP.plate.dat(aMat));
		aMat = MT.StainlessSteel;       aRegistry.add("Fermenter"                                           , "Basic Machines"                      , 22003, 20001, aClass, aMat.mToolQuality, 16, aMachine     , UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS,   6.0F, NBT_RESISTANCE,   6.0F, NBT_COLOR, UT.Code.getRGBInt(aMat.fRGBaSolid), NBT_INPUT,32, NBT_TEXTURE, "fermenter"     , NBT_ENERGY_ACCEPTED, TD.Energy.HU                          , NBT_RECIPEMAP, RM.Fermenter    , NBT_INV_SIDE_IN, SBIT_B|SBIT_L    , NBT_INV_SIDE_AUTO_IN, SIDE_LEFT   , NBT_INV_SIDE_OUT, SBIT_R          , NBT_INV_SIDE_AUTO_OUT, SIDE_RIGHT     , NBT_TANK_SIDE_IN, SBIT_B|SBIT_L   , NBT_TANK_SIDE_AUTO_IN, SIDE_BACK  , NBT_TANK_SIDE_OUT, SBIT_U         , NBT_TANK_SIDE_AUTO_OUT, SIDE_TOP      , NBT_ENERGY_ACCEPTED_SIDES, SBIT_D                                     ), "wMh", "PPP", "BCB", 'M', OP.casingMachine.dat(aMat), 'C', OP.plateDouble.dat(ANY.Cu), 'B', Blocks.brick_block, 'P', OP.pipeLarge.dat(aMat));
		aMat = MT.StainlessSteel;       aRegistry.add("Autoclave"                                           , "Basic Machines"                      , 22004, 20001, aClass, aMat.mToolQuality, 16, aMachine     , UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS,   6.0F, NBT_RESISTANCE,   6.0F, NBT_COLOR, UT.Code.getRGBInt(aMat.fRGBaSolid), NBT_INPUT, 1, NBT_TEXTURE, "autoclave"     , NBT_ENERGY_ACCEPTED, TD.Energy.TU, NBT_NO_CONSTANT_POWER, T, NBT_RECIPEMAP, RM.Autoclave    , NBT_INV_SIDE_IN, SBIT_U|SBIT_L    , NBT_INV_SIDE_AUTO_IN, SIDE_LEFT   , NBT_INV_SIDE_OUT, SBIT_B|SBIT_R   , NBT_INV_SIDE_AUTO_OUT, SIDE_RIGHT     , NBT_TANK_SIDE_IN, SBIT_D|SBIT_L   , NBT_TANK_SIDE_AUTO_IN, SIDE_BOTTOM, NBT_TANK_SIDE_OUT, SBIT_B|SBIT_R  , NBT_TANK_SIDE_AUTO_OUT, SIDE_BACK     , NBT_ENERGY_ACCEPTED_SIDES, SBIT_B                                     ), "CwC", "PMP", "GPG", 'M', OP.casingMachineQuadruple.dat(aMat), 'C', OP.casingSmall.dat(aMat), 'G', OP.gearGtSmall.dat(aMat), 'P', OP.pipeSmall.dat(aMat));
	}

	private static void kinetic(MultiTileEntityRegistry aRegistry, MultiTileEntityBlock aMetal, MultiTileEntityBlock aMetalChips, MultiTileEntityBlock aMetalWires, MultiTileEntityBlock aMachine, MultiTileEntityBlock aWooden, MultiTileEntityBlock aBush, MultiTileEntityBlock aStone, MultiTileEntityBlock aWool, MultiTileEntityBlock aTNT, MultiTileEntityBlock aHive, MultiTileEntityBlock aUtilMetal, MultiTileEntityBlock aUtilStone, MultiTileEntityBlock aUtilWood, MultiTileEntityBlock aUtilWool, OreDictMaterial aMat, Class<? extends TileEntity> aClass) {
		aClass = MultiTileEntityAxle.class;
		aMat = MT.WoodSealed;
		aRegistry.add(                     "Small Wooden Axle", "Axles and Gearboxes", 24800, 24819, aClass                                  , aMat.mToolQuality, 64, aWooden , UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS, 6.0F, NBT_RESISTANCE, 6.0F, NBT_COLOR, UT.Code.getRGBInt(aMat.fRGBaSolid), NBT_FLAMMABILITY, 150, NBT_PIPESIZE, VMAX[0], NBT_PIPEBANDWIDTH,  1, NBT_DIAMETER, PX_P[ 6]), "  S", " r ", "S f", 'S', OP.stick.dat(aMat));
		aRegistry.add(                    "Medium Wooden Axle", "Axles and Gearboxes", 24801, 24819, aClass                                  , aMat.mToolQuality, 64, aWooden , UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS, 6.0F, NBT_RESISTANCE, 6.0F, NBT_COLOR, UT.Code.getRGBInt(aMat.fRGBaSolid), NBT_FLAMMABILITY, 150, NBT_PIPESIZE, VMAX[0], NBT_PIPEBANDWIDTH,  2, NBT_DIAMETER, PX_P[ 9]), "  S", " r ", "S f", 'S', OP.stickLong.dat(aMat));
		aRegistry.add(                     "Large Wooden Axle", "Axles and Gearboxes", 24802, 24819, aClass                                  , aMat.mToolQuality, 32, aWooden , UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS, 6.0F, NBT_RESISTANCE, 6.0F, NBT_COLOR, UT.Code.getRGBInt(aMat.fRGBaSolid), NBT_FLAMMABILITY, 150, NBT_PIPESIZE, VMAX[0], NBT_PIPEBANDWIDTH,  3, NBT_DIAMETER, PX_P[12]), "  S", "SrS", "S f", 'S', OP.stickLong.dat(aMat));
		aRegistry.add(                      "Huge Wooden Axle", "Axles and Gearboxes", 24803, 24819, aClass                                  , aMat.mToolQuality, 16, aWooden , UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS, 6.0F, NBT_RESISTANCE, 6.0F, NBT_COLOR, UT.Code.getRGBInt(aMat.fRGBaSolid), NBT_FLAMMABILITY, 150, NBT_PIPESIZE, VMAX[0], NBT_PIPEBANDWIDTH,  4, NBT_DIAMETER, PX_P[16]), "rS" ,  "Bf", 'S', OD.beamWood, 'B', OD.container1000creosote);
		aRegistry.add(                "Wooden Rotation Engine", "Axles and Gearboxes", 24807, 24819, MultiTileEntityEngineRotation.class     , aMat.mToolQuality, 16, aWooden , UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS, 6.0F, NBT_RESISTANCE, 6.0F, NBT_COLOR, UT.Code.getRGBInt(aMat.fRGBaSolid), NBT_FLAMMABILITY, 150, NBT_INPUT   , V   [0], NBT_OUTPUT, V[0]/2                   , NBT_WASTE_ENERGY, T, NBT_ENERGY_ACCEPTED, TD.Energy.RU, NBT_ENERGY_EMITTED, TD.Energy.KU), "PSP", "wAL", "GAG", 'S', OP.gearGtSmall.dat(aMat), 'G', OP.gearGt.dat(aMat), 'P', OP.plate.dat(aMat), 'L', OD.itemLubricantEarly, 'A', aRegistry.getItem(24801));
		aRegistry.add(            "Wooden Transformer Gearbox", "Axles and Gearboxes", 24808, 24819, MultiTileEntityTransformerRotation.class, aMat.mToolQuality, 16, aWooden , UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS, 6.0F, NBT_RESISTANCE, 6.0F, NBT_COLOR, UT.Code.getRGBInt(aMat.fRGBaSolid), NBT_FLAMMABILITY, 150, NBT_INPUT   , V   [0], NBT_OUTPUT,      2, NBT_MULTIPLIER, 4, NBT_WASTE_ENERGY, T, NBT_ENERGY_ACCEPTED, TD.Energy.RU, NBT_ENERGY_EMITTED, TD.Energy.RU), "ASL", "SGS", "PSA", 'S', OP.gearGtSmall.dat(aMat), 'G', OP.gearGt.dat(aMat), 'P', OP.plate.dat(aMat), 'L', OD.itemLubricantEarly, 'A', aRegistry.getItem(24801));
		aRegistry.add(                 "Custom Wooden Gearbox", "Axles and Gearboxes", 24809, 24819, MultiTileEntityGearBox.class            , aMat.mToolQuality, 16, aWooden , UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS, 6.0F, NBT_RESISTANCE, 6.0F, NBT_COLOR, UT.Code.getRGBInt(aMat.fRGBaSolid), NBT_FLAMMABILITY, 150, NBT_INPUT   , VMAX[0]), "PsP", "ALA", "PAP", 'P', OP.plate.dat(aMat), 'L', OD.itemLubricantEarly, 'A', aRegistry.getItem(24801));
		OM.data(aRegistry.getItem(24803), MT.WoodSealed, U*8);
		aMat = MT.Bronze;
		aRegistry.add("Small "  + aMat.mNameLocal +    " Axle", "Axles and Gearboxes", 24810, 24819, aClass                                  , aMat.mToolQuality, 64, aMachine, UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS, 6.0F, NBT_RESISTANCE, 6.0F, NBT_COLOR, UT.Code.getRGBInt(aMat.fRGBaSolid), NBT_PIPESIZE, VMAX[ 1], NBT_PIPEBANDWIDTH,     2, NBT_DIAMETER, PX_P[ 6]), "  S", " h ", "S f", 'S', OP.stick.dat(aMat));
		aRegistry.add("Medium " + aMat.mNameLocal +    " Axle", "Axles and Gearboxes", 24811, 24819, aClass                                  , aMat.mToolQuality, 64, aMachine, UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS, 6.0F, NBT_RESISTANCE, 6.0F, NBT_COLOR, UT.Code.getRGBInt(aMat.fRGBaSolid), NBT_PIPESIZE, VMAX[ 1], NBT_PIPEBANDWIDTH,     4, NBT_DIAMETER, PX_P[ 9]), "  S", " h ", "S f", 'S', OP.stickLong.dat(aMat));
		aRegistry.add("Large "  + aMat.mNameLocal +    " Axle", "Axles and Gearboxes", 24812, 24819, aClass                                  , aMat.mToolQuality, 32, aMachine, UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS, 6.0F, NBT_RESISTANCE, 6.0F, NBT_COLOR, UT.Code.getRGBInt(aMat.fRGBaSolid), NBT_PIPESIZE, VMAX[ 1], NBT_PIPEBANDWIDTH,     6, NBT_DIAMETER, PX_P[12]), "  S", " h ", "S f", 'S', OP.ingotDouble.dat(aMat));
		aRegistry.add("Huge "   + aMat.mNameLocal +    " Axle", "Axles and Gearboxes", 24813, 24819, aClass                                  , aMat.mToolQuality, 16, aMachine, UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS, 6.0F, NBT_RESISTANCE, 6.0F, NBT_COLOR, UT.Code.getRGBInt(aMat.fRGBaSolid), NBT_PIPESIZE, VMAX[ 1], NBT_PIPEBANDWIDTH,     8, NBT_DIAMETER, PX_P[16]), "  S", " h ", "S f", 'S', OP.ingotQuadruple.dat(aMat));
		aRegistry.add(aMat.mNameLocal +     " Rotation Engine", "Axles and Gearboxes", 24817, 24819, MultiTileEntityEngineRotation.class     , aMat.mToolQuality, 16, aMachine, UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS, 6.0F, NBT_RESISTANCE, 6.0F, NBT_COLOR, UT.Code.getRGBInt(aMat.fRGBaSolid), NBT_INPUT   , V   [ 1], NBT_OUTPUT, V[ 1]/2                   , NBT_WASTE_ENERGY, T, NBT_ENERGY_ACCEPTED, TD.Energy.RU, NBT_ENERGY_EMITTED, TD.Energy.KU), "SAS", "wML", "GAG", 'S', OP.gearGtSmall.dat(aMat), 'G', OP.gearGt.dat(aMat), 'M', OP.casingMachine      .dat(aMat), 'L', OD.itemLubricantEarly, 'A', aRegistry.getItem(24811));
		aRegistry.add(aMat.mNameLocal + " Transformer Gearbox", "Axles and Gearboxes", 24818, 24819, MultiTileEntityTransformerRotation.class, aMat.mToolQuality, 16, aMachine, UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS, 6.0F, NBT_RESISTANCE, 6.0F, NBT_COLOR, UT.Code.getRGBInt(aMat.fRGBaSolid), NBT_INPUT   , V   [ 1], NBT_OUTPUT, V[ 0]  , NBT_MULTIPLIER, 4, NBT_WASTE_ENERGY, T, NBT_ENERGY_ACCEPTED, TD.Energy.RU, NBT_ENERGY_EMITTED, TD.Energy.RU), "ASL", "SGS", "MSA", 'S', OP.gearGtSmall.dat(aMat), 'G', OP.gearGt.dat(aMat), 'M', OP.casingMachineDouble.dat(aMat), 'L', OD.itemLubricantEarly, 'A', aRegistry.getItem(24811));
		aRegistry.add("Custom " + aMat.mNameLocal + " Gearbox", "Axles and Gearboxes", 24819, 24819, MultiTileEntityGearBox.class            , aMat.mToolQuality, 16, aMachine, UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS, 6.0F, NBT_RESISTANCE, 6.0F, NBT_COLOR, UT.Code.getRGBInt(aMat.fRGBaSolid), NBT_INPUT   , VMAX[ 1]), "wAL", "AMA", 'M', OP.casingMachine.dat(aMat), 'L', OD.itemLubricantEarly, 'A', aRegistry.getItem(24811));
		aMat = MT.Steel;
		aRegistry.add("Small "  + aMat.mNameLocal +    " Axle", "Axles and Gearboxes", 24820, 24819, aClass                                  , aMat.mToolQuality, 64, aMachine, UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS, 6.0F, NBT_RESISTANCE, 6.0F, NBT_COLOR, UT.Code.getRGBInt(aMat.fRGBaSolid), NBT_PIPESIZE, VMAX[ 2], NBT_PIPEBANDWIDTH,     4, NBT_DIAMETER, PX_P[ 6]), "  S", " h ", "S f", 'S', OP.stick.dat(ANY.Steel));
		aRegistry.add("Medium " + aMat.mNameLocal +    " Axle", "Axles and Gearboxes", 24821, 24819, aClass                                  , aMat.mToolQuality, 64, aMachine, UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS, 6.0F, NBT_RESISTANCE, 6.0F, NBT_COLOR, UT.Code.getRGBInt(aMat.fRGBaSolid), NBT_PIPESIZE, VMAX[ 2], NBT_PIPEBANDWIDTH,     8, NBT_DIAMETER, PX_P[ 9]), "  S", " h ", "S f", 'S', OP.stickLong.dat(ANY.Steel));
		aRegistry.add("Large "  + aMat.mNameLocal +    " Axle", "Axles and Gearboxes", 24822, 24819, aClass                                  , aMat.mToolQuality, 32, aMachine, UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS, 6.0F, NBT_RESISTANCE, 6.0F, NBT_COLOR, UT.Code.getRGBInt(aMat.fRGBaSolid), NBT_PIPESIZE, VMAX[ 2], NBT_PIPEBANDWIDTH,    12, NBT_DIAMETER, PX_P[12]), "  S", " h ", "S f", 'S', OP.ingotDouble.dat(ANY.Steel));
		aRegistry.add("Huge "   + aMat.mNameLocal +    " Axle", "Axles and Gearboxes", 24823, 24819, aClass                                  , aMat.mToolQuality, 16, aMachine, UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS, 6.0F, NBT_RESISTANCE, 6.0F, NBT_COLOR, UT.Code.getRGBInt(aMat.fRGBaSolid), NBT_PIPESIZE, VMAX[ 2], NBT_PIPEBANDWIDTH,    16, NBT_DIAMETER, PX_P[16]), "  S", " h ", "S f", 'S', OP.ingotQuadruple.dat(ANY.Steel));
		aRegistry.add(aMat.mNameLocal +     " Rotation Engine", "Axles and Gearboxes", 24827, 24819, MultiTileEntityEngineRotation.class     , aMat.mToolQuality, 16, aMachine, UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS, 6.0F, NBT_RESISTANCE, 6.0F, NBT_COLOR, UT.Code.getRGBInt(aMat.fRGBaSolid), NBT_INPUT   , V   [ 2], NBT_OUTPUT, V[ 2]/2                   , NBT_WASTE_ENERGY, T, NBT_ENERGY_ACCEPTED, TD.Energy.RU, NBT_ENERGY_EMITTED, TD.Energy.KU), "SAS", "wML", "GAG", 'S', OP.gearGtSmall.dat(ANY.Steel), 'G', OP.gearGt.dat(ANY.Steel), 'M', OP.casingMachine      .dat(ANY.Steel), 'L', OD.itemLubricant, 'A', aRegistry.getItem(24821));
		aRegistry.add(aMat.mNameLocal + " Transformer Gearbox", "Axles and Gearboxes", 24828, 24819, MultiTileEntityTransformerRotation.class, aMat.mToolQuality, 16, aMachine, UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS, 6.0F, NBT_RESISTANCE, 6.0F, NBT_COLOR, UT.Code.getRGBInt(aMat.fRGBaSolid), NBT_INPUT   , V   [ 2], NBT_OUTPUT, V[ 1]  , NBT_MULTIPLIER, 4, NBT_WASTE_ENERGY, T, NBT_ENERGY_ACCEPTED, TD.Energy.RU, NBT_ENERGY_EMITTED, TD.Energy.RU), "ASL", "SGS", "MSA", 'S', OP.gearGtSmall.dat(ANY.Steel), 'G', OP.gearGt.dat(ANY.Steel), 'M', OP.casingMachineDouble.dat(ANY.Steel), 'L', OD.itemLubricant, 'A', aRegistry.getItem(24821));
		aRegistry.add("Custom " + aMat.mNameLocal + " Gearbox", "Axles and Gearboxes", 24829, 24819, MultiTileEntityGearBox.class            , aMat.mToolQuality, 16, aMachine, UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS, 6.0F, NBT_RESISTANCE, 6.0F, NBT_COLOR, UT.Code.getRGBInt(aMat.fRGBaSolid), NBT_INPUT   , VMAX[ 2]), "wAL", "AMA", 'M', OP.casingMachine.dat(ANY.Steel), 'L', OD.itemLubricant, 'A', aRegistry.getItem(24821));
		aMat = MT.Ti;
		aRegistry.add("Small "  + aMat.mNameLocal +    " Axle", "Axles and Gearboxes", 24830, 24819, aClass                                  , aMat.mToolQuality, 64, aMachine, UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS, 6.0F, NBT_RESISTANCE, 6.0F, NBT_COLOR, UT.Code.getRGBInt(aMat.fRGBaSolid), NBT_PIPESIZE, VMAX[ 3], NBT_PIPEBANDWIDTH,     8, NBT_DIAMETER, PX_P[ 6]), "  S", " h ", "S f", 'S', OP.stick.dat(aMat));
		aRegistry.add("Medium " + aMat.mNameLocal +    " Axle", "Axles and Gearboxes", 24831, 24819, aClass                                  , aMat.mToolQuality, 64, aMachine, UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS, 6.0F, NBT_RESISTANCE, 6.0F, NBT_COLOR, UT.Code.getRGBInt(aMat.fRGBaSolid), NBT_PIPESIZE, VMAX[ 3], NBT_PIPEBANDWIDTH,    16, NBT_DIAMETER, PX_P[ 9]), "  S", " h ", "S f", 'S', OP.stickLong.dat(aMat));
		aRegistry.add("Large "  + aMat.mNameLocal +    " Axle", "Axles and Gearboxes", 24832, 24819, aClass                                  , aMat.mToolQuality, 32, aMachine, UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS, 6.0F, NBT_RESISTANCE, 6.0F, NBT_COLOR, UT.Code.getRGBInt(aMat.fRGBaSolid), NBT_PIPESIZE, VMAX[ 3], NBT_PIPEBANDWIDTH,    32, NBT_DIAMETER, PX_P[12]), "  S", " h ", "S f", 'S', OP.ingotDouble.dat(aMat));
		aRegistry.add("Huge "   + aMat.mNameLocal +    " Axle", "Axles and Gearboxes", 24833, 24819, aClass                                  , aMat.mToolQuality, 16, aMachine, UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS, 6.0F, NBT_RESISTANCE, 6.0F, NBT_COLOR, UT.Code.getRGBInt(aMat.fRGBaSolid), NBT_PIPESIZE, VMAX[ 3], NBT_PIPEBANDWIDTH,    64, NBT_DIAMETER, PX_P[16]), "  S", " h ", "S f", 'S', OP.ingotQuadruple.dat(aMat));
		aRegistry.add(aMat.mNameLocal +     " Rotation Engine", "Axles and Gearboxes", 24837, 24819, MultiTileEntityEngineRotation.class     , aMat.mToolQuality, 16, aMachine, UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS, 6.0F, NBT_RESISTANCE, 6.0F, NBT_COLOR, UT.Code.getRGBInt(aMat.fRGBaSolid), NBT_INPUT   , V   [ 3], NBT_OUTPUT, V[ 3]/2                   , NBT_WASTE_ENERGY, T, NBT_ENERGY_ACCEPTED, TD.Energy.RU, NBT_ENERGY_EMITTED, TD.Energy.KU), "SAS", "wML", "GAG", 'S', OP.gearGtSmall.dat(aMat), 'G', OP.gearGt.dat(aMat), 'M', OP.casingMachine      .dat(aMat), 'L', OD.itemLubricant, 'A', aRegistry.getItem(24831));
		aRegistry.add(aMat.mNameLocal + " Transformer Gearbox", "Axles and Gearboxes", 24838, 24819, MultiTileEntityTransformerRotation.class, aMat.mToolQuality, 16, aMachine, UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS, 6.0F, NBT_RESISTANCE, 6.0F, NBT_COLOR, UT.Code.getRGBInt(aMat.fRGBaSolid), NBT_INPUT   , V   [ 3], NBT_OUTPUT, V[ 2]  , NBT_MULTIPLIER, 4, NBT_WASTE_ENERGY, T, NBT_ENERGY_ACCEPTED, TD.Energy.RU, NBT_ENERGY_EMITTED, TD.Energy.RU), "ASL", "SGS", "MSA", 'S', OP.gearGtSmall.dat(aMat), 'G', OP.gearGt.dat(aMat), 'M', OP.casingMachineDouble.dat(aMat), 'L', OD.itemLubricant, 'A', aRegistry.getItem(24831));
		aRegistry.add("Custom " + aMat.mNameLocal + " Gearbox", "Axles and Gearboxes", 24839, 24819, MultiTileEntityGearBox.class            , aMat.mToolQuality, 16, aMachine, UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS, 6.0F, NBT_RESISTANCE, 6.0F, NBT_COLOR, UT.Code.getRGBInt(aMat.fRGBaSolid), NBT_INPUT   , VMAX[ 3]), "wAL", "AMA", 'M', OP.casingMachine.dat(aMat), 'L', OD.itemLubricant, 'A', aRegistry.getItem(24831));
		aMat = MT.TungstenSteel;
		aRegistry.add("Small "  + aMat.mNameLocal +    " Axle", "Axles and Gearboxes", 24840, 24819, aClass                                  , aMat.mToolQuality, 64, aMachine, UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS, 6.0F, NBT_RESISTANCE, 6.0F, NBT_COLOR, UT.Code.getRGBInt(aMat.fRGBaSolid), NBT_PIPESIZE, VMAX[ 4], NBT_PIPEBANDWIDTH,    16, NBT_DIAMETER, PX_P[ 6]), "  S", " h ", "S f", 'S', OP.stick.dat(aMat));
		aRegistry.add("Medium " + aMat.mNameLocal +    " Axle", "Axles and Gearboxes", 24841, 24819, aClass                                  , aMat.mToolQuality, 64, aMachine, UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS, 6.0F, NBT_RESISTANCE, 6.0F, NBT_COLOR, UT.Code.getRGBInt(aMat.fRGBaSolid), NBT_PIPESIZE, VMAX[ 4], NBT_PIPEBANDWIDTH,    32, NBT_DIAMETER, PX_P[ 9]), "  S", " h ", "S f", 'S', OP.stickLong.dat(aMat));
		aRegistry.add("Large "  + aMat.mNameLocal +    " Axle", "Axles and Gearboxes", 24842, 24819, aClass                                  , aMat.mToolQuality, 32, aMachine, UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS, 6.0F, NBT_RESISTANCE, 6.0F, NBT_COLOR, UT.Code.getRGBInt(aMat.fRGBaSolid), NBT_PIPESIZE, VMAX[ 4], NBT_PIPEBANDWIDTH,    64, NBT_DIAMETER, PX_P[12]), "  S", " h ", "S f", 'S', OP.ingotDouble.dat(aMat));
		aRegistry.add("Huge "   + aMat.mNameLocal +    " Axle", "Axles and Gearboxes", 24843, 24819, aClass                                  , aMat.mToolQuality, 16, aMachine, UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS, 6.0F, NBT_RESISTANCE, 6.0F, NBT_COLOR, UT.Code.getRGBInt(aMat.fRGBaSolid), NBT_PIPESIZE, VMAX[ 4], NBT_PIPEBANDWIDTH,   128, NBT_DIAMETER, PX_P[16]), "  S", " h ", "S f", 'S', OP.ingotQuadruple.dat(aMat));
		aRegistry.add(aMat.mNameLocal +     " Rotation Engine", "Axles and Gearboxes", 24847, 24819, MultiTileEntityEngineRotation.class     , aMat.mToolQuality, 16, aMachine, UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS, 6.0F, NBT_RESISTANCE, 6.0F, NBT_COLOR, UT.Code.getRGBInt(aMat.fRGBaSolid), NBT_INPUT   , V   [ 4], NBT_OUTPUT, V[ 4]/2                   , NBT_WASTE_ENERGY, T, NBT_ENERGY_ACCEPTED, TD.Energy.RU, NBT_ENERGY_EMITTED, TD.Energy.KU), "SAS", "wML", "GAG", 'S', OP.gearGtSmall.dat(aMat), 'G', OP.gearGt.dat(aMat), 'M', OP.casingMachine      .dat(aMat), 'L', OD.itemLubricant, 'A', aRegistry.getItem(24841));
		aRegistry.add(aMat.mNameLocal + " Transformer Gearbox", "Axles and Gearboxes", 24848, 24819, MultiTileEntityTransformerRotation.class, aMat.mToolQuality, 16, aMachine, UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS, 6.0F, NBT_RESISTANCE, 6.0F, NBT_COLOR, UT.Code.getRGBInt(aMat.fRGBaSolid), NBT_INPUT   , V   [ 4], NBT_OUTPUT, V[ 3]  , NBT_MULTIPLIER, 4, NBT_WASTE_ENERGY, T, NBT_ENERGY_ACCEPTED, TD.Energy.RU, NBT_ENERGY_EMITTED, TD.Energy.RU), "ASL", "SGS", "MSA", 'S', OP.gearGtSmall.dat(aMat), 'G', OP.gearGt.dat(aMat), 'M', OP.casingMachineDouble.dat(aMat), 'L', OD.itemLubricant, 'A', aRegistry.getItem(24841));
		aRegistry.add("Custom " + aMat.mNameLocal + " Gearbox", "Axles and Gearboxes", 24849, 24819, MultiTileEntityGearBox.class            , aMat.mToolQuality, 16, aMachine, UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS, 6.0F, NBT_RESISTANCE, 6.0F, NBT_COLOR, UT.Code.getRGBInt(aMat.fRGBaSolid), NBT_INPUT   , VMAX[ 4]), "wAL", "AMA", 'M', OP.casingMachine.dat(aMat), 'L', OD.itemLubricant, 'A', aRegistry.getItem(24841));
		aMat = MT.Ir;
		aRegistry.add("Small "  + aMat.mNameLocal +    " Axle", "Axles and Gearboxes", 24850, 24819, aClass                                  , aMat.mToolQuality, 64, aMachine, UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS, 6.0F, NBT_RESISTANCE, 6.0F, NBT_COLOR, UT.Code.getRGBInt(aMat.fRGBaSolid), NBT_PIPESIZE, VMAX[ 5], NBT_PIPEBANDWIDTH,    32, NBT_DIAMETER, PX_P[ 6]), "  S", " h ", "S f", 'S', OP.stick.dat(aMat));
		aRegistry.add("Medium " + aMat.mNameLocal +    " Axle", "Axles and Gearboxes", 24851, 24819, aClass                                  , aMat.mToolQuality, 64, aMachine, UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS, 6.0F, NBT_RESISTANCE, 6.0F, NBT_COLOR, UT.Code.getRGBInt(aMat.fRGBaSolid), NBT_PIPESIZE, VMAX[ 5], NBT_PIPEBANDWIDTH,    64, NBT_DIAMETER, PX_P[ 9]), "  S", " h ", "S f", 'S', OP.stickLong.dat(aMat));
		aRegistry.add("Large "  + aMat.mNameLocal +    " Axle", "Axles and Gearboxes", 24852, 24819, aClass                                  , aMat.mToolQuality, 32, aMachine, UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS, 6.0F, NBT_RESISTANCE, 6.0F, NBT_COLOR, UT.Code.getRGBInt(aMat.fRGBaSolid), NBT_PIPESIZE, VMAX[ 5], NBT_PIPEBANDWIDTH,   128, NBT_DIAMETER, PX_P[12]), "  S", " h ", "S f", 'S', OP.ingotDouble.dat(aMat));
		aRegistry.add("Huge "   + aMat.mNameLocal +    " Axle", "Axles and Gearboxes", 24853, 24819, aClass                                  , aMat.mToolQuality, 16, aMachine, UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS, 6.0F, NBT_RESISTANCE, 6.0F, NBT_COLOR, UT.Code.getRGBInt(aMat.fRGBaSolid), NBT_PIPESIZE, VMAX[ 5], NBT_PIPEBANDWIDTH,   256, NBT_DIAMETER, PX_P[16]), "  S", " h ", "S f", 'S', OP.ingotQuadruple.dat(aMat));
		aRegistry.add(aMat.mNameLocal +     " Rotation Engine", "Axles and Gearboxes", 24857, 24819, MultiTileEntityEngineRotation.class     , aMat.mToolQuality, 16, aMachine, UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS, 6.0F, NBT_RESISTANCE, 6.0F, NBT_COLOR, UT.Code.getRGBInt(aMat.fRGBaSolid), NBT_INPUT   , V   [ 5], NBT_OUTPUT, V[ 5]/2                   , NBT_WASTE_ENERGY, T, NBT_ENERGY_ACCEPTED, TD.Energy.RU, NBT_ENERGY_EMITTED, TD.Energy.KU), "SAS", "wML", "GAG", 'S', OP.gearGtSmall.dat(aMat), 'G', OP.gearGt.dat(aMat), 'M', OP.casingMachine      .dat(aMat), 'L', OD.itemLubricant, 'A', aRegistry.getItem(24851));
		aRegistry.add(aMat.mNameLocal + " Transformer Gearbox", "Axles and Gearboxes", 24858, 24819, MultiTileEntityTransformerRotation.class, aMat.mToolQuality, 16, aMachine, UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS, 6.0F, NBT_RESISTANCE, 6.0F, NBT_COLOR, UT.Code.getRGBInt(aMat.fRGBaSolid), NBT_INPUT   , V   [ 5], NBT_OUTPUT, V[ 4]  , NBT_MULTIPLIER, 4, NBT_WASTE_ENERGY, T, NBT_ENERGY_ACCEPTED, TD.Energy.RU, NBT_ENERGY_EMITTED, TD.Energy.RU), "ASL", "SGS", "MSA", 'S', OP.gearGtSmall.dat(aMat), 'G', OP.gearGt.dat(aMat), 'M', OP.casingMachineDouble.dat(aMat), 'L', OD.itemLubricant, 'A', aRegistry.getItem(24851));
		aRegistry.add("Custom " + aMat.mNameLocal + " Gearbox", "Axles and Gearboxes", 24859, 24819, MultiTileEntityGearBox.class            , aMat.mToolQuality, 16, aMachine, UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS, 6.0F, NBT_RESISTANCE, 6.0F, NBT_COLOR, UT.Code.getRGBInt(aMat.fRGBaSolid), NBT_INPUT   , VMAX[ 5]), "wAL", "AMA", 'M', OP.casingMachine.dat(aMat), 'L', OD.itemLubricant, 'A', aRegistry.getItem(24851));
		aMat = MT.Ad;
		aRegistry.add("Small "  + aMat.mNameLocal +    " Axle", "Axles and Gearboxes", 24890, 24819, aClass                                  , aMat.mToolQuality, 64, aMachine, UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS, 6.0F, NBT_RESISTANCE, 6.0F, NBT_COLOR, UT.Code.getRGBInt(aMat.fRGBaSolid), NBT_PIPESIZE, VMAX[ 9], NBT_PIPEBANDWIDTH,   512, NBT_DIAMETER, PX_P[ 6]), "  S", " h ", "S f", 'S', OP.stick.dat(aMat));
		aRegistry.add("Medium " + aMat.mNameLocal +    " Axle", "Axles and Gearboxes", 24891, 24819, aClass                                  , aMat.mToolQuality, 64, aMachine, UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS, 6.0F, NBT_RESISTANCE, 6.0F, NBT_COLOR, UT.Code.getRGBInt(aMat.fRGBaSolid), NBT_PIPESIZE, VMAX[ 9], NBT_PIPEBANDWIDTH,  1024, NBT_DIAMETER, PX_P[ 9]), "  S", " h ", "S f", 'S', OP.stickLong.dat(aMat));
		aRegistry.add("Large "  + aMat.mNameLocal +    " Axle", "Axles and Gearboxes", 24892, 24819, aClass                                  , aMat.mToolQuality, 32, aMachine, UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS, 6.0F, NBT_RESISTANCE, 6.0F, NBT_COLOR, UT.Code.getRGBInt(aMat.fRGBaSolid), NBT_PIPESIZE, VMAX[ 9], NBT_PIPEBANDWIDTH,  2048, NBT_DIAMETER, PX_P[12]), "  S", " h ", "S f", 'S', OP.ingotDouble.dat(aMat));
		aRegistry.add("Huge "   + aMat.mNameLocal +    " Axle", "Axles and Gearboxes", 24893, 24819, aClass                                  , aMat.mToolQuality, 16, aMachine, UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS, 6.0F, NBT_RESISTANCE, 6.0F, NBT_COLOR, UT.Code.getRGBInt(aMat.fRGBaSolid), NBT_PIPESIZE, VMAX[ 9], NBT_PIPEBANDWIDTH,  4096, NBT_DIAMETER, PX_P[16]), "  S", " h ", "S f", 'S', OP.ingotQuadruple.dat(aMat));
		aRegistry.add(aMat.mNameLocal +     " Rotation Engine", "Axles and Gearboxes", 24897, 24819, MultiTileEntityEngineRotation.class     , aMat.mToolQuality, 16, aMachine, UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS, 6.0F, NBT_RESISTANCE, 6.0F, NBT_COLOR, UT.Code.getRGBInt(aMat.fRGBaSolid), NBT_INPUT   , V   [ 9], NBT_OUTPUT, V[ 9]/2                   , NBT_WASTE_ENERGY, T, NBT_ENERGY_ACCEPTED, TD.Energy.RU, NBT_ENERGY_EMITTED, TD.Energy.KU), "SAS", "wML", "GAG", 'S', OP.gearGtSmall.dat(aMat), 'G', OP.gearGt.dat(aMat), 'M', OP.casingMachine      .dat(aMat), 'L', OD.itemLubricant, 'A', aRegistry.getItem(24891));
		aRegistry.add(aMat.mNameLocal + " Transformer Gearbox", "Axles and Gearboxes", 24898, 24819, MultiTileEntityTransformerRotation.class, aMat.mToolQuality, 16, aMachine, UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS, 6.0F, NBT_RESISTANCE, 6.0F, NBT_COLOR, UT.Code.getRGBInt(aMat.fRGBaSolid), NBT_INPUT   , V   [ 9], NBT_OUTPUT, V[ 8]  , NBT_MULTIPLIER, 4, NBT_WASTE_ENERGY, T, NBT_ENERGY_ACCEPTED, TD.Energy.RU, NBT_ENERGY_EMITTED, TD.Energy.RU), "ASL", "SGS", "MSA", 'S', OP.gearGtSmall.dat(aMat), 'G', OP.gearGt.dat(aMat), 'M', OP.casingMachineDouble.dat(aMat), 'L', OD.itemLubricant, 'A', aRegistry.getItem(24891));
		aRegistry.add("Custom " + aMat.mNameLocal + " Gearbox", "Axles and Gearboxes", 24899, 24819, MultiTileEntityGearBox.class            , aMat.mToolQuality, 16, aMachine, UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS, 6.0F, NBT_RESISTANCE, 6.0F, NBT_COLOR, UT.Code.getRGBInt(aMat.fRGBaSolid), NBT_INPUT   , VMAX[ 9]), "wAL", "AMA", 'M', OP.casingMachine.dat(aMat), 'L', OD.itemLubricant, 'A', aRegistry.getItem(24891));
	}

	private static void connectors(MultiTileEntityRegistry aRegistry, MultiTileEntityBlock aMetal, MultiTileEntityBlock aMetalChips, MultiTileEntityBlock aMetalWires, MultiTileEntityBlock aMachine, MultiTileEntityBlock aWooden, MultiTileEntityBlock aBush, MultiTileEntityBlock aStone, MultiTileEntityBlock aWool, MultiTileEntityBlock aTNT, MultiTileEntityBlock aHive, MultiTileEntityBlock aUtilMetal, MultiTileEntityBlock aUtilStone, MultiTileEntityBlock aUtilWood, MultiTileEntityBlock aUtilWool, OreDictMaterial aMat, Class<? extends TileEntity> aClass) {
		aMat = MT.Wax;               OreDictManager.INSTANCE.setTarget_(OP.capcellcon, aMat, aRegistry.add("Capsule-Cell-Container ("+aMat.getLocal()+")", "Fluid Containers", 32600, 32719, MultiTileEntityCell.class, 0, 64, aUtilWood    , UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS,   0.5F, NBT_RESISTANCE,   6.0F, NBT_COLOR, UT.Code.getRGBInt(aMat.fRGBaSolid), NBT_TANK_CAPACITY, 1000, NBT_PLASMAPROOF, F, NBT_GASPROOF, T, NBT_ACIDPROOF, F, NBT_TEMPERATURE, aMat.mMeltingPoint-10 )), T, F, T);
		aMat = MT.WaxBee;            OreDictManager.INSTANCE.setTarget_(OP.capcellcon, aMat, aRegistry.add("Capsule-Cell-Container ("+aMat.getLocal()+")", "Fluid Containers", 32601, 32719, MultiTileEntityCell.class, 0, 64, aUtilWood    , UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS,   0.5F, NBT_RESISTANCE,   6.0F, NBT_COLOR, UT.Code.getRGBInt(aMat.fRGBaSolid), NBT_TANK_CAPACITY, 1000, NBT_PLASMAPROOF, F, NBT_GASPROOF, T, NBT_ACIDPROOF, F, NBT_TEMPERATURE, aMat.mMeltingPoint-10 )), T, F, T);
		aMat = MT.WaxPlant;          OreDictManager.INSTANCE.setTarget_(OP.capcellcon, aMat, aRegistry.add("Capsule-Cell-Container ("+aMat.getLocal()+")", "Fluid Containers", 32602, 32719, MultiTileEntityCell.class, 0, 64, aUtilWood    , UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS,   0.5F, NBT_RESISTANCE,   6.0F, NBT_COLOR, UT.Code.getRGBInt(aMat.fRGBaSolid), NBT_TANK_CAPACITY, 1000, NBT_PLASMAPROOF, F, NBT_GASPROOF, T, NBT_ACIDPROOF, F, NBT_TEMPERATURE, aMat.mMeltingPoint-10 )), T, F, T);
		aMat = MT.WaxParaffin;       OreDictManager.INSTANCE.setTarget_(OP.capcellcon, aMat, aRegistry.add("Capsule-Cell-Container ("+aMat.getLocal()+")", "Fluid Containers", 32603, 32719, MultiTileEntityCell.class, 0, 64, aUtilWood    , UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS,   0.5F, NBT_RESISTANCE,   6.0F, NBT_COLOR, UT.Code.getRGBInt(aMat.fRGBaSolid), NBT_TANK_CAPACITY, 1000, NBT_PLASMAPROOF, F, NBT_GASPROOF, T, NBT_ACIDPROOF, F, NBT_TEMPERATURE, aMat.mMeltingPoint-10 )), T, F, T);
		aMat = MT.WaxRefractory;     OreDictManager.INSTANCE.setTarget_(OP.capcellcon, aMat, aRegistry.add("Capsule-Cell-Container ("+aMat.getLocal()+")", "Fluid Containers", 32604, 32719, MultiTileEntityCell.class, 0, 64, aUtilWood    , UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS,   0.5F, NBT_RESISTANCE,   6.0F, NBT_COLOR, UT.Code.getRGBInt(aMat.fRGBaSolid), NBT_TANK_CAPACITY, 1000, NBT_PLASMAPROOF, F, NBT_GASPROOF, T, NBT_ACIDPROOF, T, NBT_TEMPERATURE, aMat.mMeltingPoint-10 )), T, F, T);
		aMat = MT.WaxMagic;          OreDictManager.INSTANCE.setTarget_(OP.capcellcon, aMat, aRegistry.add("Capsule-Cell-Container ("+aMat.getLocal()+")", "Fluid Containers", 32605, 32719, MultiTileEntityCell.class, 0, 64, aUtilWood    , UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS,   0.5F, NBT_RESISTANCE,   6.0F, NBT_COLOR, UT.Code.getRGBInt(aMat.fRGBaSolid), NBT_TANK_CAPACITY, 1000, NBT_PLASMAPROOF, F, NBT_GASPROOF, T, NBT_ACIDPROOF, T, NBT_TEMPERATURE, 2700                  )), T, F, T);
		aMat = MT.WaxAmnesic;        OreDictManager.INSTANCE.setTarget_(OP.capcellcon, aMat, aRegistry.add("Capsule-Cell-Container ("+aMat.getLocal()+")", "Fluid Containers", 32624, 32719, MultiTileEntityCell.class, 0, 64, aUtilWood    , UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS,   0.5F, NBT_RESISTANCE,   6.0F, NBT_COLOR, UT.Code.getRGBInt(aMat.fRGBaSolid), NBT_TANK_CAPACITY, 1000, NBT_PLASMAPROOF, F, NBT_GASPROOF, T, NBT_ACIDPROOF, T, NBT_TEMPERATURE, 2700                  )), T, F, T);
		aMat = MT.WaxSoulful;        OreDictManager.INSTANCE.setTarget_(OP.capcellcon, aMat, aRegistry.add("Capsule-Cell-Container ("+aMat.getLocal()+")", "Fluid Containers", 32625, 32719, MultiTileEntityCell.class, 0, 64, aUtilWood    , UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS,   0.5F, NBT_RESISTANCE,   6.0F, NBT_COLOR, UT.Code.getRGBInt(aMat.fRGBaSolid), NBT_TANK_CAPACITY, 1000, NBT_PLASMAPROOF, F, NBT_GASPROOF, T, NBT_ACIDPROOF, T, NBT_TEMPERATURE, aMat.mMeltingPoint-10 )), T, F, T);
		aMat = MT.Plastic;           OreDictManager.INSTANCE.setTarget_(OP.capcellcon, aMat, aRegistry.add("Capsule-Cell-Container ("+aMat.getLocal()+")", "Fluid Containers", 32606, 32719, MultiTileEntityCell.class, 0, 64, aUtilWood    , UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS,   0.5F, NBT_RESISTANCE,   6.0F, NBT_COLOR, UT.Code.getRGBInt(aMat.fRGBaSolid), NBT_TANK_CAPACITY, 1000, NBT_PLASMAPROOF, F, NBT_GASPROOF, T, NBT_ACIDPROOF, F, NBT_TEMPERATURE, aMat.mMeltingPoint-10 )), T, F, T);
		aMat = MT.Sn;                OreDictManager.INSTANCE.setTarget_(OP.capcellcon, aMat, aRegistry.add("Capsule-Cell-Container ("+aMat.getLocal()+")", "Fluid Containers", 32607, 32719, MultiTileEntityCell.class, 0, 64, aUtilMetal   , UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS,   0.5F, NBT_RESISTANCE,   6.0F, NBT_COLOR, UT.Code.getRGBInt(aMat.fRGBaSolid), NBT_TANK_CAPACITY, 1000, NBT_PLASMAPROOF, F, NBT_GASPROOF, T, NBT_ACIDPROOF, F, NBT_TEMPERATURE, aMat.mMeltingPoint-50 )), T, F, T);
		aMat = MT.TinAlloy;          OreDictManager.INSTANCE.setTarget_(OP.capcellcon, aMat, aRegistry.add("Capsule-Cell-Container ("+aMat.getLocal()+")", "Fluid Containers", 32608, 32719, MultiTileEntityCell.class, 0, 64, aUtilMetal   , UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS,   0.5F, NBT_RESISTANCE,   6.0F, NBT_COLOR, UT.Code.getRGBInt(aMat.fRGBaSolid), NBT_TANK_CAPACITY, 1000, NBT_PLASMAPROOF, F, NBT_GASPROOF, T, NBT_ACIDPROOF, F, NBT_TEMPERATURE, aMat.mMeltingPoint-50 )), T, F, T);
		aMat = MT.Invar;             OreDictManager.INSTANCE.setTarget_(OP.capcellcon, aMat, aRegistry.add("Capsule-Cell-Container ("+aMat.getLocal()+")", "Fluid Containers", 32609, 32719, MultiTileEntityCell.class, 0, 64, aUtilMetal   , UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS,   0.5F, NBT_RESISTANCE,   6.0F, NBT_COLOR, UT.Code.getRGBInt(aMat.fRGBaSolid), NBT_TANK_CAPACITY, 1000, NBT_PLASMAPROOF, F, NBT_GASPROOF, T, NBT_ACIDPROOF, F, NBT_TEMPERATURE, aMat.mMeltingPoint-50 )), T, F, T);
		aMat = MT.Al;                OreDictManager.INSTANCE.setTarget_(OP.capcellcon, aMat, aRegistry.add("Capsule-Cell-Container ("+aMat.getLocal()+")", "Fluid Containers", 32610, 32719, MultiTileEntityCell.class, 0, 64, aUtilMetal   , UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS,   0.5F, NBT_RESISTANCE,   6.0F, NBT_COLOR, UT.Code.getRGBInt(aMat.fRGBaSolid), NBT_TANK_CAPACITY, 1000, NBT_PLASMAPROOF, F, NBT_GASPROOF, T, NBT_ACIDPROOF, F, NBT_TEMPERATURE, aMat.mMeltingPoint-50 )), T, F, T);
		aMat = MT.StainlessSteel;    OreDictManager.INSTANCE.setTarget_(OP.capcellcon, aMat, aRegistry.add("Capsule-Cell-Container ("+aMat.getLocal()+")", "Fluid Containers", 32611, 32719, MultiTileEntityCell.class, 0, 64, aUtilMetal   , UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS,   0.5F, NBT_RESISTANCE,   6.0F, NBT_COLOR, UT.Code.getRGBInt(aMat.fRGBaSolid), NBT_TANK_CAPACITY, 1000, NBT_PLASMAPROOF, F, NBT_GASPROOF, T, NBT_ACIDPROOF, T, NBT_TEMPERATURE, aMat.mMeltingPoint-50 )), T, F, T);
		aMat = MT.Ti;                OreDictManager.INSTANCE.setTarget_(OP.capcellcon, aMat, aRegistry.add("Capsule-Cell-Container ("+aMat.getLocal()+")", "Fluid Containers", 32612, 32719, MultiTileEntityCell.class, 0, 64, aUtilMetal   , UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS,   0.5F, NBT_RESISTANCE,   6.0F, NBT_COLOR, UT.Code.getRGBInt(aMat.fRGBaSolid), NBT_TANK_CAPACITY, 1000, NBT_PLASMAPROOF, F, NBT_GASPROOF, T, NBT_ACIDPROOF, F, NBT_TEMPERATURE, aMat.mMeltingPoint-50 )), T, F, T);
		aMat = MT.TungstenSteel;     OreDictManager.INSTANCE.setTarget_(OP.capcellcon, aMat, aRegistry.add("Capsule-Cell-Container ("+aMat.getLocal()+")", "Fluid Containers", 32613, 32719, MultiTileEntityCell.class, 0, 64, aUtilMetal   , UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS,   0.5F, NBT_RESISTANCE,   6.0F, NBT_COLOR, UT.Code.getRGBInt(aMat.fRGBaSolid), NBT_TANK_CAPACITY, 1000, NBT_PLASMAPROOF, F, NBT_GASPROOF, T, NBT_ACIDPROOF, F, NBT_TEMPERATURE, aMat.mMeltingPoint-50 )), T, F, T);
		aMat = MT.TungstenCarbide;   OreDictManager.INSTANCE.setTarget_(OP.capcellcon, aMat, aRegistry.add("Capsule-Cell-Container ("+aMat.getLocal()+")", "Fluid Containers", 32614, 32719, MultiTileEntityCell.class, 0, 64, aUtilMetal   , UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS,   0.5F, NBT_RESISTANCE,   6.0F, NBT_COLOR, UT.Code.getRGBInt(aMat.fRGBaSolid), NBT_TANK_CAPACITY, 1000, NBT_PLASMAPROOF, F, NBT_GASPROOF, T, NBT_ACIDPROOF, F, NBT_TEMPERATURE, aMat.mMeltingPoint-50 )), T, F, T);
		aMat = MT.W;                 OreDictManager.INSTANCE.setTarget_(OP.capcellcon, aMat, aRegistry.add("Capsule-Cell-Container ("+aMat.getLocal()+")", "Fluid Containers", 32615, 32719, MultiTileEntityCell.class, 0, 64, aUtilMetal   , UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS,   0.5F, NBT_RESISTANCE,   6.0F, NBT_COLOR, UT.Code.getRGBInt(aMat.fRGBaSolid), NBT_TANK_CAPACITY, 1000, NBT_PLASMAPROOF, F, NBT_GASPROOF, T, NBT_ACIDPROOF, T, NBT_TEMPERATURE, aMat.mMeltingPoint-50 )), T, F, T);
		aMat = MT.Ta4HfC5;           OreDictManager.INSTANCE.setTarget_(OP.capcellcon, aMat, aRegistry.add("Capsule-Cell-Container ("+aMat.getLocal()+")", "Fluid Containers", 32633, 32719, MultiTileEntityCell.class, 0, 64, aUtilMetal   , UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS,   0.5F, NBT_RESISTANCE,   6.0F, NBT_COLOR, UT.Code.getRGBInt(aMat.fRGBaSolid), NBT_TANK_CAPACITY, 1000, NBT_PLASMAPROOF, F, NBT_GASPROOF, T, NBT_ACIDPROOF, F, NBT_TEMPERATURE, aMat.mMeltingPoint-50 )), T, F, T);
		aMat = MT.Desh;              OreDictManager.INSTANCE.setTarget_(OP.capcellcon, aMat, aRegistry.add("Capsule-Cell-Container ("+aMat.getLocal()+")", "Fluid Containers", 32632, 32719, MultiTileEntityCell.class, 0, 64, aUtilMetal   , UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS,   0.5F, NBT_RESISTANCE,   6.0F, NBT_COLOR, UT.Code.getRGBInt(aMat.fRGBaSolid), NBT_TANK_CAPACITY, 1000, NBT_PLASMAPROOF, F, NBT_GASPROOF, T, NBT_ACIDPROOF, F, NBT_TEMPERATURE, aMat.mMeltingPoint-50 )), T, F, T);
		aMat = MT.Ke;                OreDictManager.INSTANCE.setTarget_(OP.capcellcon, aMat, aRegistry.add("Capsule-Cell-Container ("+aMat.getLocal()+")", "Fluid Containers", 32616, 32719, MultiTileEntityCell.class, 0, 64, aUtilMetal   , UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS,   0.5F, NBT_RESISTANCE,   6.0F, NBT_COLOR, UT.Code.getRGBInt(aMat.fRGBaSolid), NBT_TANK_CAPACITY, 1000, NBT_PLASMAPROOF, F, NBT_GASPROOF, T, NBT_ACIDPROOF, F, NBT_TEMPERATURE, aMat.mMeltingPoint-50 )), T, F, T);
		aMat = MT.Trinitanium;       OreDictManager.INSTANCE.setTarget_(OP.capcellcon, aMat, aRegistry.add("Capsule-Cell-Container ("+aMat.getLocal()+")", "Fluid Containers", 32617, 32719, MultiTileEntityCell.class, 0, 64, aUtilMetal   , UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS,   0.5F, NBT_RESISTANCE,   6.0F, NBT_COLOR, UT.Code.getRGBInt(aMat.fRGBaSolid), NBT_TANK_CAPACITY, 1000, NBT_PLASMAPROOF, T, NBT_GASPROOF, T, NBT_ACIDPROOF, F, NBT_TEMPERATURE, aMat.mMeltingPoint-50 )), T, F, T);
		aMat = MT.Ad;                OreDictManager.INSTANCE.setTarget_(OP.capcellcon, aMat, aRegistry.add("Capsule-Cell-Container ("+aMat.getLocal()+")", "Fluid Containers", 32618, 32719, MultiTileEntityCell.class, 0, 64, aUtilMetal   , UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS,   0.5F, NBT_RESISTANCE,   6.0F, NBT_COLOR, UT.Code.getRGBInt(aMat.fRGBaSolid), NBT_TANK_CAPACITY, 1000, NBT_PLASMAPROOF, T, NBT_GASPROOF, T, NBT_ACIDPROOF, T, NBT_TEMPERATURE, aMat.mMeltingPoint-50 )), T, F, T);
		aMat = MT.Syrmorite;         OreDictManager.INSTANCE.setTarget_(OP.capcellcon, aMat, aRegistry.add("Capsule-Cell-Container ("+aMat.getLocal()+")", "Fluid Containers", 32626, 32719, MultiTileEntityCell.class, 0, 64, aUtilMetal   , UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS,   0.5F, NBT_RESISTANCE,   6.0F, NBT_COLOR, UT.Code.getRGBInt(aMat.fRGBaSolid), NBT_TANK_CAPACITY, 1000, NBT_PLASMAPROOF, F, NBT_GASPROOF, T, NBT_ACIDPROOF, F, NBT_TEMPERATURE, aMat.mMeltingPoint-50 )), T, F, T);
		aMat = MT.Thaumium;          OreDictManager.INSTANCE.setTarget_(OP.capcellcon, aMat, aRegistry.add("Capsule-Cell-Container ("+aMat.getLocal()+")", "Fluid Containers", 32619, 32719, MultiTileEntityCell.class, 0, 64, aUtilMetal   , UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS,   0.5F, NBT_RESISTANCE,   6.0F, NBT_COLOR, UT.Code.getRGBInt(aMat.fRGBaSolid), NBT_TANK_CAPACITY, 1000, NBT_PLASMAPROOF, F, NBT_GASPROOF, T, NBT_ACIDPROOF, T, NBT_TEMPERATURE, aMat.mMeltingPoint-50 )), T, F, T);
		aMat = MT.VoidMetal;         OreDictManager.INSTANCE.setTarget_(OP.capcellcon, aMat, aRegistry.add("Capsule-Cell-Container ("+aMat.getLocal()+")", "Fluid Containers", 32620, 32719, MultiTileEntityCell.class, 0, 64, aUtilMetal   , UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS,   0.5F, NBT_RESISTANCE,   6.0F, NBT_COLOR, UT.Code.getRGBInt(aMat.fRGBaSolid), NBT_TANK_CAPACITY, 1000, NBT_PLASMAPROOF, T, NBT_GASPROOF, T, NBT_ACIDPROOF, T, NBT_TEMPERATURE, aMat.mMeltingPoint-50 )), T, F, T);
		aMat = MT.Manasteel;         OreDictManager.INSTANCE.setTarget_(OP.capcellcon, aMat, aRegistry.add("Capsule-Cell-Container ("+aMat.getLocal()+")", "Fluid Containers", 32627, 32719, MultiTileEntityCell.class, 0, 64, aUtilMetal   , UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS,   0.5F, NBT_RESISTANCE,   6.0F, NBT_COLOR, UT.Code.getRGBInt(aMat.fRGBaSolid), NBT_TANK_CAPACITY, 1000, NBT_PLASMAPROOF, F, NBT_GASPROOF, T, NBT_ACIDPROOF, T, NBT_TEMPERATURE, aMat.mMeltingPoint-50 )), T, F, T);
		aMat = MT.Terrasteel;        OreDictManager.INSTANCE.setTarget_(OP.capcellcon, aMat, aRegistry.add("Capsule-Cell-Container ("+aMat.getLocal()+")", "Fluid Containers", 32628, 32719, MultiTileEntityCell.class, 0, 64, aUtilMetal   , UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS,   0.5F, NBT_RESISTANCE,   6.0F, NBT_COLOR, UT.Code.getRGBInt(aMat.fRGBaSolid), NBT_TANK_CAPACITY, 1000, NBT_PLASMAPROOF, F, NBT_GASPROOF, T, NBT_ACIDPROOF, T, NBT_TEMPERATURE, aMat.mMeltingPoint-50 )), T, F, T);
		aMat = MT.ElvenElementium;   OreDictManager.INSTANCE.setTarget_(OP.capcellcon, aMat, aRegistry.add("Capsule-Cell-Container ("+aMat.getLocal()+")", "Fluid Containers", 32629, 32719, MultiTileEntityCell.class, 0, 64, aUtilMetal   , UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS,   0.5F, NBT_RESISTANCE,   6.0F, NBT_COLOR, UT.Code.getRGBInt(aMat.fRGBaSolid), NBT_TANK_CAPACITY, 1000, NBT_PLASMAPROOF, F, NBT_GASPROOF, T, NBT_ACIDPROOF, T, NBT_TEMPERATURE, aMat.mMeltingPoint-50 )), T, F, T);
		aMat = MT.GaiaSpirit;        OreDictManager.INSTANCE.setTarget_(OP.capcellcon, aMat, aRegistry.add("Capsule-Cell-Container ("+aMat.getLocal()+")", "Fluid Containers", 32630, 32719, MultiTileEntityCell.class, 0, 64, aUtilMetal   , UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS,   0.5F, NBT_RESISTANCE,   6.0F, NBT_COLOR, UT.Code.getRGBInt(aMat.fRGBaSolid), NBT_TANK_CAPACITY, 1000, NBT_PLASMAPROOF, T, NBT_GASPROOF, T, NBT_ACIDPROOF, T, NBT_TEMPERATURE, aMat.mMeltingPoint-50 )), T, F, T);
		aMat = MT.DuraniumAlloy;     OreDictManager.INSTANCE.setTarget_(OP.capcellcon, aMat, aRegistry.add("Capsule-Cell-Container ("+aMat.getLocal()+")", "Fluid Containers", 32621, 32719, MultiTileEntityCell.class, 0, 64, aUtilMetal   , UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS,   0.5F, NBT_RESISTANCE,   6.0F, NBT_COLOR, UT.Code.getRGBInt(aMat.fRGBaSolid), NBT_TANK_CAPACITY, 1000, NBT_PLASMAPROOF, T, NBT_GASPROOF, T, NBT_ACIDPROOF, T, NBT_TEMPERATURE, aMat.mMeltingPoint-50 )), T, F, T);
		aMat = MT.Draconium;         OreDictManager.INSTANCE.setTarget_(OP.capcellcon, aMat, aRegistry.add("Capsule-Cell-Container ("+aMat.getLocal()+")", "Fluid Containers", 32622, 32719, MultiTileEntityCell.class, 0, 64, aUtilMetal   , UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS,   0.5F, NBT_RESISTANCE,   6.0F, NBT_COLOR, UT.Code.getRGBInt(aMat.fRGBaSolid), NBT_TANK_CAPACITY, 1000, NBT_PLASMAPROOF, T, NBT_GASPROOF, T, NBT_ACIDPROOF, T, NBT_TEMPERATURE, aMat.mMeltingPoint-50 )), T, F, T);
		aMat = MT.DraconiumAwakened; OreDictManager.INSTANCE.setTarget_(OP.capcellcon, aMat, aRegistry.add("Capsule-Cell-Container ("+aMat.getLocal()+")", "Fluid Containers", 32623, 32719, MultiTileEntityCell.class, 0, 64, aUtilMetal   , UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS,   0.5F, NBT_RESISTANCE,   6.0F, NBT_COLOR, UT.Code.getRGBInt(aMat.fRGBaSolid), NBT_TANK_CAPACITY, 1000, NBT_PLASMAPROOF, T, NBT_GASPROOF, T, NBT_ACIDPROOF, T, NBT_TEMPERATURE, aMat.mMeltingPoint-50 )), T, F, T);
		aMat = MT.Infinity;          OreDictManager.INSTANCE.setTarget_(OP.capcellcon, aMat, aRegistry.add("Capsule-Cell-Container ("+aMat.getLocal()+")", "Fluid Containers", 32631, 32719, MultiTileEntityCell.class, 0, 64, aUtilMetal   , UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS,   0.5F, NBT_RESISTANCE,   6.0F, NBT_COLOR, UT.Code.getRGBInt(aMat.fRGBaSolid), NBT_TANK_CAPACITY, 1000, NBT_PLASMAPROOF, T, NBT_GASPROOF, T, NBT_ACIDPROOF, T, NBT_TEMPERATURE, Integer.MAX_VALUE     )), T, F, T);
		// 32634 is next



		aClass = MultiTileEntityWireLaser.class;
		aRegistry.add("Laser Fiber Wire", "Laser Wires", 24900, 24900, aClass, 3, 64, aMetalWires, UT.NBT.make(NBT_MATERIAL, MT.NULL, NBT_HARDNESS, 2.0F, NBT_RESISTANCE, 2.0F, NBT_DIAMETER, PX_P[6], NBT_CONTACTDAMAGE, F), "PGR", "DxD", "RGP", 'P', OP.plate.dat(MT.Ag), 'G', Blocks.glass, 'D', OP.gem.dat(ANY.Diamond), 'R', OD.itemRedstone);


		aClass = MultiTileEntityWireLogistics.class;
		aRegistry.add("Logistics Wire", "Logistics", 24901, 17997, aClass, 3, 64, aMetalWires, UT.NBT.make(NBT_MATERIAL, MT.NULL, NBT_HARDNESS, 2.0F, NBT_RESISTANCE, 2.0F, NBT_DIAMETER, PX_P[6], NBT_CONTACTDAMAGE, F), "PEP", "dFx", "POP", 'F', aRegistry.getItem(24900), 'O', OP.wireFine.dat(MT.Os), 'P', OP.foil.dat(MT.Plastic), 'E', OP.gem.dat(ANY.Emerald));


		aClass = MultiTileEntityPipeItem.class;
		MultiTileEntityPipeItem.addItemPipes(25000, 25202, 32768,   1, T, T, aRegistry, aMachine    , aClass, MT.Brass);
		MultiTileEntityPipeItem.addItemPipes(25025, 25202, 32768,   1, T, T, aRegistry, aMachine    , aClass, MT.Constantan);
		MultiTileEntityPipeItem.addItemPipes(25050, 25202, 32768,   1, T, T, aRegistry, aMachine    , aClass, MT.CobaltBrass);
		MultiTileEntityPipeItem.addItemPipes(25075, 25202, 32768,   1, T, T, aRegistry, aMachine    , aClass, MT.FakeOsmium);
		MultiTileEntityPipeItem.addItemPipes(25100, 25202, 16384,   2, T, T, aRegistry, aMachine    , aClass, MT.Electrum);
		MultiTileEntityPipeItem.addItemPipes(25225, 25202, 16384,   2, T, T, aRegistry, aMachine    , aClass, MT.SterlingSilver);
		MultiTileEntityPipeItem.addItemPipes(25250, 25202, 16384,   2, T, T, aRegistry, aMachine    , aClass, MT.RoseGold);
		MultiTileEntityPipeItem.addItemPipes(25275, 25202, 16384,   2, T, T, aRegistry, aMachine    , aClass, MT.Angmallen);
		MultiTileEntityPipeItem.addItemPipes(25125, 25202, 16384,   2, T, T, aRegistry, aMachine    , aClass, MT.BlackBronze);
		MultiTileEntityPipeItem.addItemPipes(25150, 25202, 16384,   2, T, T, aRegistry, aMachine    , aClass, MT.AluminiumBrass);
		MultiTileEntityPipeItem.addItemPipes(25175, 25202, 16384,   2, T, T, aRegistry, aMachine    , aClass, MT.Manyullyn);
		MultiTileEntityPipeItem.addItemPipes(25325, 25202, 16384,   2, T, T, aRegistry, aMachine    , aClass, MT.Magnalium);
		MultiTileEntityPipeItem.addItemPipes(25200, 25202,  8192,   4, T, T, aRegistry, aMachine    , aClass, MT.Pt);
		MultiTileEntityPipeItem.addItemPipes(25300, 25202,  4096,   8, T, T, aRegistry, aMachine    , aClass, MT.Os);
		MultiTileEntityPipeItem.addItemPipes(25400, 25202,  2048,  16, T, T, aRegistry, aMachine    , aClass, MT.Enderium);
		MultiTileEntityPipeItem.addItemPipes(25425, 25202,  2048,  16, T, T, aRegistry, aMachine    , aClass, MT.Ultimet);
		MultiTileEntityPipeItem.addItemPipes(25475, 25202,  2048,  16, T, T, aRegistry, aMachine    , aClass, MT.ElvenElementium);
		MultiTileEntityPipeItem.addItemPipes(25500, 25202,  1024,  32, T, T, aRegistry, aMachine    , aClass, MT.Osmiridium);
		MultiTileEntityPipeItem.addItemPipes(25900, 25202,    64, 512, T, T, aRegistry, aMachine    , aClass, MT.VibraniumSilver);

		aClass = MultiTileEntityPipeFluid.class;
		for(int i=0;i<MT.DATA.Crucible_T.length;i++) {
			aMat = MT.DATA.Crucible_T[i];
			MultiTileEntityPipeFluid.addFluidPipes(26000 + 20*i, 26142,         V[2], T, CS.ACID_C[i], F, T, F, T, T, aRegistry, aMachine      , aClass, aMat.mMeltingPoint, aMat);
		}

		CR.shaped(OP.pipeTiny   .mat(MT.Wood, 1), CR.DEF_REV_NCC, "  s", " W ", "r  ", 'W', OD.slabWood);
		CR.shaped(OP.pipeSmall  .mat(MT.Wood, 1), CR.DEF_REV_NCC, "  s", " W ", "r  ", 'W', OD.plankWood);
		CR.shaped(OP.pipeMedium .mat(MT.Wood, 1), CR.DEF_REV_NCC, "  s", "WWW", "r  ", 'W', OD.plankWood);
		CR.shaped(OP.pipeLarge  .mat(MT.Wood, 1), CR.DEF_REV_NCC, "WWs", "W W", "rWW", 'W', OD.plankWood);
		CR.shaped(OP.pipeHuge   .mat(MT.Wood, 1), CR.DEF_REV_NCC, "  s", "W W", "r  ", 'W', OD.beamWood);
		CR.shaped(OP.pipeSmall  .mat(MT.Wood, 1), CR.DEF_REV_NCC, "  s", " W ", "r  ", 'W', OD.plankWeedwood);
		CR.shaped(OP.pipeMedium .mat(MT.Wood, 1), CR.DEF_REV_NCC, "  s", "WWW", "r  ", 'W', OD.plankWeedwood);
		CR.shaped(OP.pipeLarge  .mat(MT.Wood, 1), CR.DEF_REV_NCC, "WWs", "W W", "rWW", 'W', OD.plankWeedwood);

		aClass = MultiTileEntityWireRedstone.class;
		aMat = MT.RedAlloy;
		OreDictManager.INSTANCE.setTarget_(OP.wireGt01             , aMat, aRegistry.add(aMat.getLocal() + " Wire"                             , "Redstone Wires"          , 27000, 27050, MultiTileEntityWireRedstone         .class, aMat.mToolQuality, 64, aMetalWires, UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS,   2.0F, NBT_RESISTANCE,   2.0F, NBT_COLOR, UT.Code.getRGBInt(aMat.fRGBaSolid), NBT_PIPERENDER, 0, NBT_DIAMETER, PX_P[ 2], NBT_PIPELOSS, ITileEntityRedstoneWire.MAX_RANGE / 16)), T, F, T);
		OreDictManager.INSTANCE.setTarget_(OP.cableGt01            , aMat, aRegistry.add(aMat.getLocal() + " Cable"                            , "Redstone Wires"          , 27006, 27050, MultiTileEntityWireRedstoneInsulated.class, aMat.mToolQuality, 64, aMetalWires, UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS,   2.0F, NBT_RESISTANCE,   2.0F, NBT_COLOR, UT.Code.getRGBInt(aMat.fRGBaSolid), NBT_PIPERENDER, 0, NBT_DIAMETER, PX_P[ 4], NBT_PIPELOSS, ITileEntityRedstoneWire.MAX_RANGE / 16)), T, F, T);
		aMat = MT.Signalum;
		OreDictManager.INSTANCE.setTarget_(OP.wireGt01             , aMat, aRegistry.add(aMat.getLocal() + " Wire"                             , "Redstone Wires"          , 27050, 27050, MultiTileEntityWireRedstone         .class, aMat.mToolQuality, 64, aMetalWires, UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS,   2.0F, NBT_RESISTANCE,   2.0F, NBT_COLOR, UT.Code.getRGBInt(aMat.fRGBaSolid), NBT_PIPERENDER, 0, NBT_DIAMETER, PX_P[ 2], NBT_PIPELOSS, ITileEntityRedstoneWire.MAX_RANGE / 64)), T, F, T);
		OreDictManager.INSTANCE.setTarget_(OP.cableGt01            , aMat, aRegistry.add(aMat.getLocal() + " Cable"                            , "Redstone Wires"          , 27056, 27050, MultiTileEntityWireRedstoneInsulated.class, aMat.mToolQuality, 64, aMetalWires, UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS,   2.0F, NBT_RESISTANCE,   2.0F, NBT_COLOR, UT.Code.getRGBInt(aMat.fRGBaSolid), NBT_PIPERENDER, 0, NBT_DIAMETER, PX_P[ 4], NBT_PIPELOSS, ITileEntityRedstoneWire.MAX_RANGE / 64)), T, F, T);
		aMat = MT.Lumium;
		OreDictManager.INSTANCE.setTarget_(OP.wireGt01             , aMat, aRegistry.add(aMat.getLocal() + " Wirelamp"                         , "Redstone Wires"          , 27500, 27050, MultiTileEntityWireRedstone         .class, aMat.mToolQuality, 64, aMetalWires, UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS,   2.0F, NBT_RESISTANCE,   2.0F, NBT_COLOR, UT.Code.getRGBInt(aMat.fRGBaSolid), NBT_PIPERENDER, 0, NBT_DIAMETER, PX_P[ 2], NBT_PIPELOSS, ITileEntityRedstoneWire.MAX_RANGE / 16)), T, F, T);
		OreDictManager.INSTANCE.setTarget_(OP.cableGt01            , aMat, aRegistry.add(aMat.getLocal() + " Cable"                            , "Redstone Wires"          , 27506, 27050, MultiTileEntityWireRedstoneInsulated.class, aMat.mToolQuality, 64, aMetalWires, UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS,   2.0F, NBT_RESISTANCE,   2.0F, NBT_COLOR, UT.Code.getRGBInt(aMat.fRGBaSolid), NBT_PIPERENDER, 0, NBT_DIAMETER, PX_P[ 4], NBT_PIPELOSS, ITileEntityRedstoneWire.MAX_RANGE / 16)), T, F, T);

		RM.Laminator.addRecipe2(T, 16, 16, OP.plate.mat(MT.Rubber   , 1), aRegistry.getItem(27000), aRegistry.getItem(27006));
		RM.Laminator.addRecipe2(T, 16, 16, OP.foil .mat(MT.Rubber   , 4), aRegistry.getItem(27000), aRegistry.getItem(27006));
		RM.Laminator.addRecipe2(T, 16, 16, OP.plate.mat(MT.Rubber   , 1), aRegistry.getItem(27050), aRegistry.getItem(27056));
		RM.Laminator.addRecipe2(T, 16, 16, OP.foil .mat(MT.Rubber   , 4), aRegistry.getItem(27050), aRegistry.getItem(27056));
		RM.Laminator.addRecipe2(T, 16, 16, OP.plate.mat(MT.Rubber   , 1), aRegistry.getItem(27500), aRegistry.getItem(27506));
		RM.Laminator.addRecipe2(T, 16, 16, OP.foil .mat(MT.Rubber   , 4), aRegistry.getItem(27500), aRegistry.getItem(27506));



		aClass = MultiTileEntityWireElectric.class;
		MultiTileEntityWireElectric.addElectricWires(28000, 28366, V[0]  , 1, 2, 0, T, F, T, aRegistry, aMetalWires, aClass, MT.RedAlloy);

		MultiTileEntityWireElectric.addElectricWires(28020, 28366, V[1]  , 1, 2, 1, T, F, T, aRegistry, aMetalWires, aClass, MT.Sn);
		MultiTileEntityWireElectric.addElectricWires(28040, 28366, V[1], 1, 2, 1, T, F, T, aRegistry, aMetalWires, aClass, MT.Pb);
		MultiTileEntityWireElectric.addElectricWires(28060, 28366, V[1]  , 1, 2, 0, T, F, T, aRegistry, aMetalWires, aClass, MT.RedAlloy);

		MultiTileEntityWireElectric.addElectricWires(28080, 28366, V[2]  , 4, 4, 3, T, F, T, aRegistry, aMetalWires, aClass, MT.Constantan);
		MultiTileEntityWireElectric.addElectricWires(28100, 28366, V[2], 1, 2, 1, T, F, T, aRegistry, aMetalWires, aClass, MT.Cu);
		MultiTileEntityWireElectric.addElectricWires(28120, 28366, V[2], 1, 1, 0, T, F, T, aRegistry, aMetalWires, aClass, MT.RedstoneAlloy);

		MultiTileEntityWireElectric.addElectricWires(28140, 28366, V[3]  , 4, 4, 3, T, F, T, aRegistry, aMetalWires, aClass, MT.Kanthal);
		MultiTileEntityWireElectric.addElectricWires(28160, 28366, V[3], 1, 2, 1, T, F, T, aRegistry, aMetalWires, aClass, MT.Ag);
		MultiTileEntityWireElectric.addElectricWires(28180, 28366, V[3]  , 3, 2, 1, T, F, T, aRegistry, aMetalWires, aClass, MT.Au);
		MultiTileEntityWireElectric.addElectricWires(28200, 28366, V[3], 2, 2, 1, T, F, T, aRegistry, aMetalWires, aClass, MT.Electrum);
		MultiTileEntityWireElectric.addElectricWires(28220, 28366, V[3], 2, 2, 1, T, F, T, aRegistry, aMetalWires, aClass, MT.BlueAlloy);
		MultiTileEntityWireElectric.addElectricWires(28240, 28366, V[3], 3, 2, 1, T, F, T, aRegistry, aMetalWires, aClass, MT.ElectrotineAlloy);

		MultiTileEntityWireElectric.addElectricWires(28260, 28366, V[4]  , 4, 4, 3, T, F, T, aRegistry, aMetalWires, aClass, MT.Nichrome);
		MultiTileEntityWireElectric.addElectricWires(28280, 28366, V[4]  , 2, 3, 2, T, F, T, aRegistry, aMetalWires, aClass, MT.Steel);
		MultiTileEntityWireElectric.addElectricWires(28300, 28366, V[4]  , 3, 3, 2, T, F, T, aRegistry, aMetalWires, aClass, MT.HSLA);
		MultiTileEntityWireElectric.addElectricWires(29320, 28366, V[4]  , 1, 2, 1, T, F, T, aRegistry, aMetalWires, aClass, MT.Al);
		MultiTileEntityWireElectric.addElectricWires(29340, 28366, V[4]  , 1, 4, 2, T, F, T, aRegistry, aMetalWires, aClass, MT.Ti);

		MultiTileEntityWireElectric.addElectricWires(29360, 28366, V[5], 4, 3, 2, T, F, T, aRegistry, aMetalWires, aClass, MT.TungstenSteel);
		MultiTileEntityWireElectric.addElectricWires(29380, 28366, V[5], 8, 3, 2, T, F, T, aRegistry, aMetalWires, aClass, MT.W);
		MultiTileEntityWireElectric.addElectricWires(29400, 28366, V[5], 4, 4, 3, T, F, T, aRegistry, aMetalWires, aClass, MT.Os);
		MultiTileEntityWireElectric.addElectricWires(29420, 28366, V[5], 2, 2, 1, T, F, T, aRegistry, aMetalWires, aClass, MT.Pt);
		MultiTileEntityWireElectric.addElectricWires(29460, 28366, V[5], 4, 2, 1, T, F, T, aRegistry, aMetalWires, aClass, MT.Osmiridium);
		MultiTileEntityWireElectric.addElectricWires(29480, 28366, V[5]  , 4, 4, 3, T, F, T, aRegistry, aMetalWires, aClass, MT.SiC);
		MultiTileEntityWireElectric.addElectricWires(29500, 28366, V[5], 4, 4, 2, T, F, T, aRegistry, aMetalWires, aClass, MT.Ir);

		MultiTileEntityWireElectric.addElectricWires(29520, 28366, V[6], 4, 4, 3, T, F, T, aRegistry, aMetalWires, aClass, MT.NiobiumTitanium);
		MultiTileEntityWireElectric.addElectricWires(29540, 28366, V[6], 4, 4, 3, T, F, T, aRegistry, aMetalWires, aClass, MT.VanadiumGallium);
		MultiTileEntityWireElectric.addElectricWires(29560, 28366, V[6], 4, 4, 3, T, F, T, aRegistry, aMetalWires, aClass, MT.YttriumBariumCuprate);
		MultiTileEntityWireElectric.addElectricWires(29580, 28366, V[6], 4, 4, 2, T, F, T, aRegistry, aMetalWires, aClass, MT.HSSG);

		MultiTileEntityWireElectric.addElectricWires(29600, 28366, V[6], 4, 2, 1, T, F, T, aRegistry, aMetalWires, aClass, MT.Nq);
		MultiTileEntityWireElectric.addElectricWires(29620, 28366, V[6], 1, 2, 2, F, F, F, aRegistry, aMetalWires, aClass, MT.Graphene);

		MultiTileEntityWireElectric.addElectricWires(29640, 28366, V[7], 4, 2, 1, T, F, T, aRegistry, aMetalWires, aClass, MT.DuraniumAlloy);
		MultiTileEntityWireElectric.addElectricWires(29660, 28366, V[7], 1, 2, 2, T, F, T, aRegistry, aMetalWires, aClass, MT.ElectrumFlux);

		MultiTileEntityWireElectric.addElectricWires(29680, 28366, V[8], 4, 2, 1, T, F, T, aRegistry, aMetalWires, aClass, MT.Bedrockium);

		MultiTileEntityWireElectric.addElectricWires(29700, 28366, V[9], 1, 2, 2, T, F, T, aRegistry, aMetalWires, aClass, MT.Draconium);

		MultiTileEntityWireElectric.addElectricWires(29720, 28366, V[10], 1, 2, 2, T, F, T, aRegistry, aMetalWires, aClass, MT.NetherStar);

		MultiTileEntityWireElectric.addElectricWires(29760, 28366, V[0] , 8, 2, 0, T, F, T, aRegistry, aMetalWires, aClass, MT.SuperconductorULV);
		MultiTileEntityWireElectric.addElectricWires(29780, 28366, V[1] , 8, 2, 0, T, F, T, aRegistry, aMetalWires, aClass, MT.SuperconductorLV);
		MultiTileEntityWireElectric.addElectricWires(29800, 28366, V[2] , 8, 2, 0, T, F, T, aRegistry, aMetalWires, aClass, MT.SuperconductorMV);
		MultiTileEntityWireElectric.addElectricWires(29820, 28366, V[3] , 8, 2, 0, T, F, T, aRegistry, aMetalWires, aClass, MT.SuperconductorHV);
		MultiTileEntityWireElectric.addElectricWires(29840, 28366, V[4] , 8, 2, 0, T, F, T, aRegistry, aMetalWires, aClass, MT.SuperconductorEV);
		MultiTileEntityWireElectric.addElectricWires(29860, 28366, V[5] , 8, 2, 0, T, F, T, aRegistry, aMetalWires, aClass, MT.SuperconductorIV);
		MultiTileEntityWireElectric.addElectricWires(29880, 28366, V[6] , 8, 2, 0, T, F, T, aRegistry, aMetalWires, aClass, MT.SuperconductorLuV);
		MultiTileEntityWireElectric.addElectricWires(29900, 28366, V[7] , 8, 2, 0, T, F, T, aRegistry, aMetalWires, aClass, MT.SuperconductorZPM);
		MultiTileEntityWireElectric.addElectricWires(29920, 28366, V[8] , 8, 2, 0, T, F, T, aRegistry, aMetalWires, aClass, MT.SuperconductorUV);
		MultiTileEntityWireElectric.addElectricWires(29940, 28366, V[9] , 8, 2, 0, T, F, T, aRegistry, aMetalWires, aClass, MT.SuperconductorPUV1);
		MultiTileEntityWireElectric.addElectricWires(29960, 28366, V[10] , 8, 2, 0, T, F, T, aRegistry, aMetalWires, aClass, MT.SuperconductorPUV2);
		MultiTileEntityWireElectric.addElectricWires(29980, 28366, V[11] , 8, 2, 0, T, F, T, aRegistry, aMetalWires, aClass, MT.SuperconductorPUV3);
		MultiTileEntityWireElectric.addElectricWires(30000, 28366, V[12] , 8, 2, 0, T, F, T, aRegistry, aMetalWires, aClass, MT.SuperconductorPUV4);
		MultiTileEntityWireElectric.addElectricWires(30020, 28366, V[13] , 8, 2, 0, T, F, T, aRegistry, aMetalWires, aClass, MT.SuperconductorPUV5);
		MultiTileEntityWireElectric.addElectricWires(30040, 28366, V[14] , 8, 2, 0, T, F, T, aRegistry, aMetalWires, aClass, MT.SuperconductorOmega);
		MultiTileEntityWireElectric.addElectricWires(30060, 28366, V[15] , 8, 2, 0, T, F, T, aRegistry, aMetalWires, aClass, MT.SuperconductorMAX);

		for(int i=0;i<V.length;i++) {
			aClass = MultiTileEntityOpticalFiber.class;
			MultiTileEntityOpticalFiber.addElectricWires(30300 + i*20, 28366, V[i]  , 1, 0, 0, T, F, T, aRegistry, aMetalWires, aClass, MT.DATA.OpticalFiber_T[i]);
		}

	}

	private static void extenders(MultiTileEntityRegistry aRegistry, MultiTileEntityBlock aMetal, MultiTileEntityBlock aMetalChips, MultiTileEntityBlock aMetalWires, MultiTileEntityBlock aMachine, MultiTileEntityBlock aWooden, MultiTileEntityBlock aBush, MultiTileEntityBlock aStone, MultiTileEntityBlock aWool, MultiTileEntityBlock aTNT, MultiTileEntityBlock aHive, MultiTileEntityBlock aUtilMetal, MultiTileEntityBlock aUtilStone, MultiTileEntityBlock aUtilWood, MultiTileEntityBlock aUtilWool, OreDictMaterial aMat, Class<? extends TileEntity> aClass) {
		aClass = MultiTileEntityExtender.class;
		aMat = ANY.Steel;           aRegistry.add("Inventory Extender"                                  , "Extenders"                           , 30200, 30000, aClass, aMat.mToolQuality, 16, aMachine     , UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS,   6.0F, NBT_RESISTANCE,   6.0F, NBT_COLOR, UT.Code.getRGBInt(aMat.fRGBaSolid), NBT_TEXTURE, "inv"                 , NBT_MODE, MultiTileEntityExtender.MODE_INV                                        ), " hY", " M ", "Yw ", 'M', OP.casingMachine           .dat(aMat), 'X', OP.pipeMedium.dat(aMat), 'Y', OP.pipeMedium.dat(MT.Electrum));
		aMat = ANY.Steel;           aRegistry.add("Tank Extender"                                       , "Extenders"                           , 30201, 30000, aClass, aMat.mToolQuality, 16, aMachine     , UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS,   6.0F, NBT_RESISTANCE,   6.0F, NBT_COLOR, UT.Code.getRGBInt(aMat.fRGBaSolid), NBT_TEXTURE, "tank"                , NBT_MODE, MultiTileEntityExtender.MODE_TANK                                       ), "Xh ", " M ", " wX", 'M', OP.casingMachine           .dat(aMat), 'X', OP.pipeMedium.dat(aMat), 'Y', OP.pipeMedium.dat(MT.Electrum));
		aMat = ANY.Steel;           aRegistry.add("Inventory and Tank Extender"                         , "Extenders"                           , 30202, 30000, aClass, aMat.mToolQuality, 16, aMachine     , UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS,   6.0F, NBT_RESISTANCE,   6.0F, NBT_COLOR, UT.Code.getRGBInt(aMat.fRGBaSolid), NBT_TEXTURE, "inv_tank"            , NBT_MODE, MultiTileEntityExtender.MODE_INV | MultiTileEntityExtender.MODE_TANK    ), "XhY", " M ", "YwX", 'M', OP.casingMachineDouble     .dat(aMat), 'X', OP.pipeMedium.dat(aMat), 'Y', OP.pipeMedium.dat(MT.Electrum));

		aClass = MultiTileEntityExtenderController.class;
		aMat = MT.StainlessSteel;   aRegistry.add("Universal Extender"                                  , "Extenders"                           , 30255, 30000, aClass, aMat.mToolQuality, 16, aMachine     , UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS,   6.0F, NBT_RESISTANCE,   6.0F, NBT_COLOR, UT.Code.getRGBInt(aMat.fRGBaSolid), NBT_TEXTURE, "universal"           , NBT_MODE, MultiTileEntityExtender.MODE_ALL                                        ), "XRY", "CMC", "YSX", 'M', OP.casingMachineQuadruple  .dat(aMat), 'S', OP.spring.dat(aMat), 'G', OP.gearGt.dat(aMat), 'R', OP.rotor.dat(aMat), 'X', OP.pipeMedium.dat(MT.StainlessSteel), 'Y', OP.pipeMedium.dat(MT.Pt), 'C', OD_CIRCUITS[3]);

		aClass = MultiTileEntityFilter.class;
		aMat = MT.SteelGalvanized;  aRegistry.add("Filter (Items)"                                      , "Sorting"                             , 30256, 30256, aClass, aMat.mToolQuality, 16, aMachine     , UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS,   6.0F, NBT_RESISTANCE,   6.0F, NBT_COLOR, UT.Code.getRGBInt(aMat.fRGBaSolid), NBT_TEXTURE, "filter_slots"        , NBT_MODE, MultiTileEntityExtender.MODE_INV                                        ), " hY", "ZMZ", "Yw ", 'M', OP.casingMachine           .dat(aMat), 'X', OP.pipeMedium.dat(aMat), 'Y', OP.pipeMedium.dat(MT.Electrum), 'Z', IL.Cover_Filter_Item);
		aMat = MT.SteelGalvanized;  aRegistry.add("Filter (Fluids)"                                     , "Sorting"                             , 30257, 30256, aClass, aMat.mToolQuality, 16, aMachine     , UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS,   6.0F, NBT_RESISTANCE,   6.0F, NBT_COLOR, UT.Code.getRGBInt(aMat.fRGBaSolid), NBT_TEXTURE, "filter_slots"        , NBT_MODE, MultiTileEntityExtender.MODE_TANK                                       ), "Xh ", "ZMZ", " wX", 'M', OP.casingMachine           .dat(aMat), 'X', OP.pipeMedium.dat(aMat), 'Y', OP.pipeMedium.dat(MT.Electrum), 'Z', IL.Cover_Filter_Fluid);
		aMat = MT.SteelGalvanized;  aRegistry.add("Filter (Items & Fluids)"                             , "Sorting"                             , 30258, 30256, aClass, aMat.mToolQuality, 16, aMachine     , UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS,   6.0F, NBT_RESISTANCE,   6.0F, NBT_COLOR, UT.Code.getRGBInt(aMat.fRGBaSolid), NBT_TEXTURE, "filter_slots"        , NBT_MODE, MultiTileEntityExtender.MODE_INV | MultiTileEntityExtender.MODE_TANK    ), "XhY", "ZMF", "YwX", 'M', OP.casingMachineDouble     .dat(aMat), 'X', OP.pipeMedium.dat(aMat), 'Y', OP.pipeMedium.dat(MT.Electrum), 'Z', IL.Cover_Filter_Item, 'F', IL.Cover_Filter_Fluid);
		aClass = MultiTileEntityFilterPrefix.class;
		aMat = MT.SteelGalvanized;  aRegistry.add("Filter (Ore-Dictionary Prefixes)"                    , "Sorting"                             , 30259, 30256, aClass, aMat.mToolQuality, 16, aMachine     , UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS,   6.0F, NBT_RESISTANCE,   6.0F, NBT_COLOR, UT.Code.getRGBInt(aMat.fRGBaSolid), NBT_TEXTURE, "filter_prefix"       , NBT_MODE, MultiTileEntityExtender.MODE_INV | MultiTileEntityExtender.MODE_TANK    ), "XZY", "hMw", "YZX", 'M', OP.casingMachineDouble     .dat(aMat), 'X', OP.pipeMedium.dat(aMat), 'Y', OP.pipeMedium.dat(MT.Electrum), 'Z', IL.Cover_Filter_Item);
	}

	private static void sensors(MultiTileEntityRegistry aRegistry, MultiTileEntityBlock aMetal, MultiTileEntityBlock aMetalChips, MultiTileEntityBlock aMetalWires, MultiTileEntityBlock aMachine, MultiTileEntityBlock aWooden, MultiTileEntityBlock aBush, MultiTileEntityBlock aStone, MultiTileEntityBlock aWool, MultiTileEntityBlock aTNT, MultiTileEntityBlock aHive, MultiTileEntityBlock aUtilMetal, MultiTileEntityBlock aUtilStone, MultiTileEntityBlock aUtilWood, MultiTileEntityBlock aUtilWool, OreDictMaterial aMat, Class<? extends TileEntity> aClass) {
		aRegistry.add("Thermometer Sensor"                                  , "Sensors"                             , 31000, 31015, MultiTileEntityThermometer.class                        ,                 1, 16, aMetal         , null, "WRW", "RXR", "WPW", 'P', OP.plateDouble.dat(MT.TinAlloy), 'W', OP.wireFine.dat(MT.RedAlloy), 'R', OD.itemRedstone, 'G', Blocks.glass, 'B', OP.bolt.dat(ANY.Steel), 'C', Items.comparator, 'X', IL.Thermometer_Quicksilver);
		aRegistry.add("Gibbl-O-Meter Sensor"                                , "Sensors"                             , 31001, 31015, MultiTileEntityGibblometer.class                        ,                 1, 16, aMetal         , null, "WPW", "BXB", "WPW", 'P', OP.plateDouble.dat(MT.TinAlloy), 'W', OP.wireFine.dat(MT.RedAlloy), 'R', OD.itemRedstone, 'G', Blocks.glass, 'B', OP.bolt.dat(ANY.Steel), 'C', Items.comparator, 'X', OP.gem.dat(ANY.SiO2));
		aRegistry.add("Luminometer Sensor"                                  , "Sensors"                             , 31002, 31015, MultiTileEntityLuminometer.class                        ,                 1, 16, aMetal         , null, "WGW", "YXY", "WPW", 'P', OP.plateDouble.dat(MT.TinAlloy), 'W', OP.wireFine.dat(MT.RedAlloy), 'R', OD.itemRedstone, 'G', Blocks.glass, 'B', OP.bolt.dat(ANY.Steel), 'C', Items.comparator, 'X', OP.plate.dat(ANY.Si), 'Y', OP.wireFine.dat(ANY.Cu));
		aRegistry.add("Chronometer Sensor"                                  , "Sensors"                             , 31003, 31015, MultiTileEntityChronometer.class                        ,                 1, 16, aMetal         , null, "WGW", "GXG", "WPW", 'P', OP.plateDouble.dat(MT.TinAlloy), 'W', OP.wireFine.dat(MT.RedAlloy), 'R', OD.itemRedstone, 'G', Blocks.glass, 'B', OP.bolt.dat(ANY.Steel), 'C', Items.comparator, 'X', Items.clock);
		aRegistry.add("Item-O-Meter Sensor"                                 , "Sensors"                             , 31004, 31015, MultiTileEntityItemometer.class                         ,                 1, 16, aMetal         , null, "WYW", "BXB", "WPW", 'P', OP.plateDouble.dat(MT.TinAlloy), 'W', OP.wireFine.dat(MT.RedAlloy), 'R', OD.itemRedstone, 'G', Blocks.glass, 'B', OP.bolt.dat(ANY.Steel), 'C', Items.comparator, 'X', Blocks.light_weighted_pressure_plate, 'Y', OD.craftingChest);
		aRegistry.add("Stack-O-Meter Sensor"                                , "Sensors"                             , 31005, 31015, MultiTileEntityStackometer.class                        ,                 1, 16, aMetal         , null, "WYW", "BXB", "WPW", 'P', OP.plateDouble.dat(MT.TinAlloy), 'W', OP.wireFine.dat(MT.RedAlloy), 'R', OD.itemRedstone, 'G', Blocks.glass, 'B', OP.bolt.dat(ANY.Steel), 'C', Items.comparator, 'X', Blocks.heavy_weighted_pressure_plate, 'Y', OD.craftingChest);
		aRegistry.add("Fluid-O-Meter Sensor"                                , "Sensors"                             , 31006, 31015, MultiTileEntityFluidometer.class                        ,                 1, 16, aMetal         , null, "WYW", "BXB", "WPW", 'P', OP.plateDouble.dat(MT.TinAlloy), 'W', OP.wireFine.dat(MT.RedAlloy), 'R', OD.itemRedstone, 'G', Blocks.glass, 'B', OP.bolt.dat(ANY.Steel), 'C', Items.comparator, 'X', Blocks.light_weighted_pressure_plate, 'Y', Items.bucket);
		aRegistry.add("Bucket-O-Meter Sensor"                               , "Sensors"                             , 31007, 31015, MultiTileEntityBucketometer.class                       ,                 1, 16, aMetal         , null, "WYW", "BXB", "WPW", 'P', OP.plateDouble.dat(MT.TinAlloy), 'W', OP.wireFine.dat(MT.RedAlloy), 'R', OD.itemRedstone, 'G', Blocks.glass, 'B', OP.bolt.dat(ANY.Steel), 'C', Items.comparator, 'X', Blocks.heavy_weighted_pressure_plate, 'Y', Items.bucket);
		aRegistry.add("Light Weight-O-Meter Sensor"                         , "Sensors"                             , 31010, 31015, MultiTileEntityWeightometerLight.class                  ,                 1, 16, aMetal         , null, "WPW", "BXB", "WPW", 'P', OP.plateDouble.dat(MT.TinAlloy), 'W', OP.wireFine.dat(MT.RedAlloy), 'R', OD.itemRedstone, 'G', Blocks.glass, 'B', OP.bolt.dat(ANY.Steel), 'C', Items.comparator, 'X', Blocks.wooden_pressure_plate);
		aRegistry.add("Medium Weight-O-Meter Sensor"                        , "Sensors"                             , 31011, 31015, MultiTileEntityWeightometerMedium.class                 ,                 1, 16, aMetal         , null, "WPW", "BXB", "WPW", 'P', OP.plateDouble.dat(MT.TinAlloy), 'W', OP.wireFine.dat(MT.RedAlloy), 'R', OD.itemRedstone, 'G', Blocks.glass, 'B', OP.bolt.dat(ANY.Steel), 'C', Items.comparator, 'X', Blocks.stone_pressure_plate);
		aRegistry.add("Heavy Weight-O-Meter Sensor"                         , "Sensors"                             , 31012, 31015, MultiTileEntityWeightometerHeavy.class                  ,                 1, 16, aMetal         , null, "WPW", "BXB", "WPW", 'P', OP.plateDouble.dat(MT.TinAlloy), 'W', OP.wireFine.dat(MT.RedAlloy), 'R', OD.itemRedstone, 'G', Blocks.glass, 'B', OP.bolt.dat(ANY.Steel), 'C', Items.comparator, 'X', Blocks.light_weighted_pressure_plate);
		aRegistry.add("Super Heavy Weight-O-Meter Sensor"                   , "Sensors"                             , 31013, 31015, MultiTileEntityWeightometerSuperHeavy.class             ,                 1, 16, aMetal         , null, "WPW", "BXB", "WPW", 'P', OP.plateDouble.dat(MT.TinAlloy), 'W', OP.wireFine.dat(MT.RedAlloy), 'R', OD.itemRedstone, 'G', Blocks.glass, 'B', OP.bolt.dat(ANY.Steel), 'C', Items.comparator, 'X', Blocks.heavy_weighted_pressure_plate);
		aRegistry.add("Electrometer Sensor"                                 , "Sensors"                             , 31015, 31015, MultiTileEntityElectrometer.class                       ,                 1, 16, aMetal         , null, "WGW", "YXY", "WPW", 'P', OP.plateDouble.dat(MT.TinAlloy), 'W', OP.wireFine.dat(MT.RedAlloy), 'R', OD.itemRedstone, 'G', Blocks.glass, 'B', OP.bolt.dat(ANY.Steel), 'C', Items.comparator, 'X', ST.mkic("ecMeter", 1, ST.make(Blocks.lever, 1, W)), 'Y', OP.wireFine.dat(ANY.Cu));
		aRegistry.add("TPS Sensor"                                          , "Sensors"                             , 31016, 31015, MultiTileEntityTPSmeter.class                           ,                 1, 16, aMetal         , null, "WGW", "XXX", "WPW", 'P', OP.plateDouble.dat(MT.TinAlloy), 'W', OP.wireFine.dat(MT.RedAlloy), 'R', OD.itemRedstone, 'G', Blocks.glass, 'B', OP.bolt.dat(ANY.Steel), 'C', Items.comparator, 'X', Items.clock);
		aRegistry.add("Player Counter Sensor"                               , "Sensors"                             , 31017, 31015, MultiTileEntityPlayerCounter.class                      ,                 1, 16, aMetal         , null, "WGW", "CXC", "WPW", 'P', OP.plateDouble.dat(MT.TinAlloy), 'W', OP.wireFine.dat(MT.RedAlloy), 'R', OD.itemRedstone, 'G', Blocks.glass, 'B', OP.bolt.dat(ANY.Steel), 'C', Items.comparator, 'X', Blocks.stone_pressure_plate);
		aRegistry.add("Progress Sensor"                                     , "Sensors"                             , 31018, 31015, MultiTileEntityProgressmeter.class                      ,                 1, 16, aMetal         , null, "WGW", "CXC", "WPW", 'P', OP.plateDouble.dat(MT.TinAlloy), 'W', OP.wireFine.dat(MT.RedAlloy), 'R', OD.itemRedstone, 'G', Blocks.glass, 'B', OP.bolt.dat(ANY.Steel), 'C', Items.comparator, 'X', OP.gearGtSmall.dat(MT.Brass));
		aRegistry.add("Tachometer Sensor"                                   , "Sensors"                             , 31019, 31015, MultiTileEntityTachometer.class                         ,                 1, 16, aMetal         , null, "WGW", "YXY", "WPW", 'P', OP.plateDouble.dat(MT.TinAlloy), 'W', OP.wireFine.dat(MT.RedAlloy), 'R', OD.itemRedstone, 'G', Blocks.glass, 'B', OP.bolt.dat(ANY.Steel), 'C', Items.comparator, 'X', OP.gearGt.dat(MT.Brass), 'Y', OP.gearGtSmall.dat(MT.Brass));
		aRegistry.add("Geiger Counter Sensor"                               , "Sensors"                             , 31020, 31015, MultiTileEntityGeigerCounter.class                      ,                 1, 16, aMetal         , null, "WGW", "YXY", "WPW", 'P', OP.plateDouble.dat(MT.TinAlloy), 'W', OP.wireFine.dat(MT.RedAlloy), 'R', OD.itemRedstone, 'G', Blocks.glass, 'B', OP.bolt.dat(ANY.Steel), 'C', Items.comparator, 'X', IL.Geiger_Counter, 'Y', OP.plateDouble.dat(MT.Pb));
	}

	private static void misc(MultiTileEntityRegistry aRegistry, MultiTileEntityBlock aMetal, MultiTileEntityBlock aMetalChips, MultiTileEntityBlock aMetalWires, MultiTileEntityBlock aMachine, MultiTileEntityBlock aWooden, MultiTileEntityBlock aBush, MultiTileEntityBlock aStone, MultiTileEntityBlock aWool, MultiTileEntityBlock aTNT, MultiTileEntityBlock aHive, MultiTileEntityBlock aUtilMetal, MultiTileEntityBlock aUtilStone, MultiTileEntityBlock aUtilWood, MultiTileEntityBlock aUtilWool, OreDictMaterial aMat, Class<? extends TileEntity> aClass) {
		aRegistry.add("Miniature Nether Portal"                             , "Portals"                             , 32766, 32766, MultiTileEntityMiniPortalNether.class                   ,                 3, 16, aStone         , null                                                                          ,"SSS", "SsS", "SSS", 'S', OP.stickLong.dat(MT.Obsidian));
		aRegistry.add("Miniature End Portal"                                , "Portals"                             , 32000, 32766, MultiTileEntityMiniPortalEnd.class                      ,                 1, 16, aStone         , null                                                                          ,"ESE", "SGS", "ESE", 'S', OP.stickLong.dat(MT.Endstone), 'E', OP.gem.dat(MT.EnderEye), 'G', Items.ghast_tear);
		aRegistry.add("Miniature Twilight Portal"                           , "Portals"                             , 32001, 32766, MultiTileEntityMiniPortalTwilight.class                 ,                 0, 16, aBush          , UT.NBT.make(NBT_HIDDEN, !MD.TF    .mLoaded), MD.TF    .mLoaded ? new Object[] {"FGF", "GWG", "FGF", 'G', Blocks.grass, 'W', OD.container1000water, 'F', OD.flower} : ZL);
		aRegistry.add("Miniature Erebus Portal"                             , "Portals"                             , 32002, 32766, MultiTileEntityMiniPortalErebus.class                   ,                 0, 16, aStone         , UT.NBT.make(NBT_HIDDEN, !MD.ERE   .mLoaded), MD.ERE   .mLoaded ? new Object[] {"SLS", "LKL", "SLS", 'S', OP.stickLong.dat(MT.Umber), 'L', OP.treeLeaves, 'K', ST.make(MD.ERE, "gaeanKeystone", 1, 0)} : ZL);
		aRegistry.add("Miniature Deep Dark Portal"                          , "Portals"                             , 32003, 32766, MultiTileEntityMiniPortalDeepDark.class                 ,                 2, 16, aStone         , UT.NBT.make(NBT_HIDDEN, !MD.ExU   .mLoaded), MD.ExU   .mLoaded ? new Object[] {"SSS", "SXS", "SSS", 'S', OP.stickLong.dat(MT.Obsidian), 'X', ST.make(MD.ExU, "dark_portal", 1, 0)} : ZL);
		aRegistry.add("Miniature Last Millenium Portal"                     , "Portals"                             , 32004, 32766, MultiTileEntityMiniPortalEndOfTime.class                ,                 2, 16, aStone         , UT.NBT.make(NBT_HIDDEN, !MD.ExU   .mLoaded), MD.ExU   .mLoaded ? new Object[] {"SSS", "SXS", "SSS", 'S', OP.stickLong.dat(MT.Obsidian), 'X', ST.make(MD.ExU, "dark_portal", 1, 2)} : ZL);
		aRegistry.add("Miniature Atum Portal"                               , "Portals"                             , 32005, 32766, MultiTileEntityMiniPortalAtum.class                     ,                 0, 16, aStone         , UT.NBT.make(NBT_HIDDEN, !MD.ATUM  .mLoaded), MD.ATUM  .mLoaded ? new Object[] {"SSS", "SsS", "SSS", 'S', OP.stickLong.dat(MT.Limestone)} : ZL);
		aRegistry.add("Miniature Betweenlands Portal"                       , "Portals"                             , 32006, 32766, MultiTileEntityMiniPortalBetweenlands.class             ,                 0, 16, aWooden        , UT.NBT.make(NBT_HIDDEN, !MD.BTL   .mLoaded), MD.BTL   .mLoaded ? new Object[] {"PsP", "PSP", "PGP", 'P', ST.make(MD.BTL, "portalBark", 1, 0), 'S', OP.treeSapling, 'G', Blocks.grass} : ZL);
		aRegistry.add("Miniature Aether Portal"                             , "Portals"                             , 32015, 32766, MultiTileEntityMiniPortalAether.class                   ,                 0, 16, aStone         , UT.NBT.make(NBT_HIDDEN, !MD.AETHER.mLoaded), MD.AETHER.mLoaded ? new Object[] {"SSS", "SsS", "SSS", 'S', OP.stickLong.dat(ANY.Glowstone)} : ZL);
		aRegistry.add("Miniature Enviromine Portal"                         , "Portals"                             , 32051, 32766, MultiTileEntityMiniPortalEnviromine.class               ,                 0, 16, aStone         , UT.NBT.make(NBT_HIDDEN, !MD.ENVM  .mLoaded), MD.ENVM  .mLoaded ? new Object[] {"SSS", "SsS", "SSS", 'S', OP.stickLong.dat(MT.GraniteBlack)} : ZL);
		aRegistry.add("Miniature Alfheim Portal"                            , "Portals"                             , 32052, 32766, MultiTileEntityMiniPortalAlfheim.class                  ,                 0, 16, aWooden        , UT.NBT.make(NBT_HIDDEN, !MD.ALF   .mLoaded), MD.ALF   .mLoaded ? new Object[] {"SSS", "SXS", "SSS", 'S', OP.stickLong.dat(MT.Dreamwood), 'X', ST.make(MD.ALF, "AlfheimPortal", 1, 0)} : ZL);
		aRegistry.add("Miniature Tropics Portal"                            , "Portals"                             , 32053, 32766, MultiTileEntityMiniPortalTropics.class                  ,                 0, 16, aWooden        , UT.NBT.make(NBT_HIDDEN, !MD.TROPIC.mLoaded), MD.TROPIC.mLoaded ? new Object[] {"SSS", "SXS", "SSS", 'S', OD.bamboo, 'X', ST.item(MD.TROPIC, "bucketTropicsWater")} : ZL);
		aRegistry.add("Miniature Candy Portal"                              , "Portals"                             , 32054, 32766, MultiTileEntityMiniPortalCandyCraft.class               ,                 0, 16, aStone         , UT.NBT.make(NBT_HIDDEN, !MD.CANDY .mLoaded), MD.CANDY .mLoaded ? new Object[] {"SSS", "SsS", "SSS", 'S', ST.item(MD.CANDY, "I12")} : ZL);

		aRegistry.add("C-Foam Block"                                        , "C-Foam"                              , 32765, 32765, MultiTileEntityCFoam.class                              ,                 1, 64, aStone         , null);
		aRegistry.add("Supporter Certificate"                               , "Untyped"                             , 32764, 32764, MultiTileEntityCertificate.class                        ,                 0, 64, aUtilMetal     , UT.NBT.make(NBT_HARDNESS, 0.5F, NBT_RESISTANCE, 0.3F));
		aRegistry.add("Fluid Spring"                                        , "Untyped"                             , 32763, 32764, MultiTileEntityFluidSpring.class                        ,                 0, 64, aStone         , null);
		aRegistry.add("Rubber Resin Hole"                                   , "Untyped"                             , 32762, 32764, MultiTileEntityResinHoleRubber.class                    ,                 0,  1, aWooden        , null);
		aRegistry.add("Tapped Maple"                                        , "Untyped"                             , 32761, 32764, MultiTileEntitySapHoleMaple.class                       ,                 0,  1, aWooden        , null);
		aRegistry.add("Tapped Rainbowood"                                   , "Untyped"                             , 32760, 32764, MultiTileEntitySapHoleRainbowood.class                  ,                 0,  1, aWooden        , null);
		aRegistry.add("Berry Bush"                                          , "Untyped"                             , 32759, 32764, MultiTileEntityBush.class                               ,                 0, 64, aBush          , UT.NBT.make(NBT_HARDNESS, 0.5F, NBT_RESISTANCE, 0.3F));
		aRegistry.add("Greg o'Lantern"                                      , "Untyped"                             , 32758, 32764, MultiTileEntityGregOLantern.class                       ,                 0, 64, aUtilWood      , null, "Pk", "T ", 'P', Blocks.pumpkin, 'T', Blocks.torch);
		aRegistry.add("Rock"                                                , "Untyped"                             , 32757, 32764, MultiTileEntityRock.class                               ,                 0, 64, aUtilStone     , null);
		aRegistry.add("Rock"                                                , "Untyped"                             , 32074, 32764, MultiTileEntityRockPlaced.class                         ,                 0, 64, aUtilStone     , null);
		aRegistry.add("Stick"                                               , "Untyped"                             , 32756, 32764, MultiTileEntityStick.class                              ,                 0, 64, aUtilWood      , null);
		aRegistry.add("Stick"                                               , "Untyped"                             , 32073, 32764, MultiTileEntityStickPlaced.class                        ,                 0, 64, aUtilWood      , null);
		aRegistry.add("Ingots"                                              , "Untyped"                             , 32084, 32764, MultiTileEntityIngot.class                              ,                 0, 64, aUtilMetal     , null);
		aRegistry.add("Plates"                                              , "Untyped"                             , 32085, 32764, MultiTileEntityPlate.class                              ,                 0, 64, aUtilMetal     , null);
		aRegistry.add("Gem Plates"                                          , "Untyped"                             , 32086, 32764, MultiTileEntityPlateGem.class                           ,                 0, 64, aUtilStone     , null);
		aRegistry.add("Bumble Hive"                                         , "Untyped"                             , 32755, 32764, MultiTileEntityBumbleHive.class                         ,                 0, 64, aHive          , null);

		for (int i = 0; i < 16; i++) {
			ItemStack
			tPanel = aRegistry.add("Concrete Panel", "Panels", i+32452, 32500, MultiTileEntityPanelConcrete.class, 0, 16, aStone, UT.NBT.make(NBT_COLOR, i));
			CR.shaped(ST.amount(6, tPanel), CR.DEF_REV_NCC_MIR, "TsT", "TPT", "TdT", 'P', ST.make(BlocksGT.Concrete, 1, i), 'T', OP.screw.dat(ANY.Iron));
			CoverRegistry.put(tPanel, new CoverTextureSimple(BlockTextureDefault.get(Textures.BlockIcons.CONCRETE, DYES[i]), SFX.MC_DIG_ROCK));

			tPanel = aRegistry.add("C-Foam Panel", "Panels", i+32468, 32500, MultiTileEntityPanelCFoam.class, 0, 16, aStone, UT.NBT.make(NBT_COLOR, i));
			CR.shaped(ST.amount(6, tPanel), CR.DEF_REV_NCC_MIR, "TsT", "TPT", "TdT", 'P', ST.make(BlocksGT.CFoam, 1, i), 'T', OP.screw.dat(ANY.Iron));
			CoverRegistry.put(tPanel, new CoverTextureSimple(BlockTextureDefault.get(Textures.BlockIcons.CFOAM_HARDENED, DYES[i]), SFX.MC_DIG_ROCK));

			tPanel = aRegistry.add("Asphalt Panel", "Panels", i+32484, 32500, MultiTileEntityPanelAsphalt.class, 0, 16, aStone, UT.NBT.make(NBT_COLOR, i));
			CR.shaped(ST.amount(6, tPanel), CR.DEF_REV_NCC_MIR, "TsT", "TPT", "TdT", 'P', ST.make(BlocksGT.Asphalt, 1, i), 'T', OP.screw.dat(ANY.Iron));
			CoverRegistry.put(tPanel, new CoverAsphalt(BlockTextureDefault.get(Textures.BlockIcons.ASPHALT, DYES[i])));
		}
		for (int i = 0; i < 100; i++) {
			ItemStack tPanel = aRegistry.add("Wooden Panel", "Panels", i+32500, 32500, MultiTileEntityPanelWood.class, 0, 16, aWooden, UT.NBT.make(NBT_TEXTURE, i, NBT_HIDDEN, ST.invalid(PlankData.PLANKS[i])));
			if (ST.valid(PlankData.PLANKS[i])) {
				CR.shaped(ST.amount(6, tPanel), CR.DEF_REV_NCC_MIR, "TsT", "TPT", "TdT", 'P', PlankData.PLANKS[i], 'T', OP.screw.dat(ANY.Iron));
				CoverRegistry.put(tPanel, new CoverTextureSimple(BlockTextureDefault.get(PlankData.PLANK_ICONS[i]), SFX.MC_DIG_WOOD));
			} else {
				CoverRegistry.put(tPanel, new CoverTextureSimple(BlockTextureCopied.get(Blocks.planks), SFX.MC_DIG_WOOD));
			}
		}
		for (int i = 0; i < 100; i++) {
			ItemStack tPanel = aRegistry.add("Wooden Panel", "Panels", i+32352, 32500, MultiTileEntityPanelWood.class, 0, 16, aWooden, UT.NBT.make(NBT_TEXTURE, i+100, NBT_HIDDEN, ST.invalid(PlankData.PLANKS[i+100])));
			if (ST.valid(PlankData.PLANKS[i+100])) {
				CR.shaped(ST.amount(6, tPanel), CR.DEF_REV_NCC_MIR, "TsT", "TPT", "TdT", 'P', PlankData.PLANKS[i+100], 'T', OP.screw.dat(ANY.Iron));
				CoverRegistry.put(tPanel, new CoverTextureSimple(BlockTextureDefault.get(PlankData.PLANK_ICONS[i+100]), SFX.MC_DIG_WOOD));
			} else {
				CoverRegistry.put(tPanel, new CoverTextureSimple(BlockTextureCopied.get(Blocks.planks), SFX.MC_DIG_WOOD));
			}
		}
		for (int i = 0; i < 100; i++) {
			ItemStack tPanel = aRegistry.add("Wooden Panel", "Panels", i+32252, 32500, MultiTileEntityPanelWood.class, 0, 16, aWooden, UT.NBT.make(NBT_TEXTURE, i+200, NBT_HIDDEN, ST.invalid(PlankData.PLANKS[i+200])));
			if (ST.valid(PlankData.PLANKS[i+200])) {
				CR.shaped(ST.amount(6, tPanel), CR.DEF_REV_NCC_MIR, "TsT", "TPT", "TdT", 'P', PlankData.PLANKS[i+200], 'T', OP.screw.dat(ANY.Iron));
				CoverRegistry.put(tPanel, new CoverTextureSimple(BlockTextureDefault.get(PlankData.PLANK_ICONS[i+200]), SFX.MC_DIG_WOOD));
			} else {
				CoverRegistry.put(tPanel, new CoverTextureSimple(BlockTextureCopied.get(Blocks.planks), SFX.MC_DIG_WOOD));
			}
		}

		// 32087 is next, up to 32251

		aMat = MT.Brown;            aRegistry.add("Rope"                                                , "Ropes"                               , 32011, 32011, MultiTileEntityRope.class                               ,                 0, 64, aUtilWool      , UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS,   0.5F, NBT_RESISTANCE,   1.0F, NBT_COLOR, UT.Code.getRGBInt(aMat.fRGBaSolid), NBT_FLAMMABILITY,100),  " S",  "SS",  "Sq", 'S', "cropHemp");
		aMat = MT.White;            aRegistry.add("Silk Rope"                                           , "Ropes"                               , 32012, 32011, MultiTileEntityRope.class                               ,                 0, 64, aUtilWool      , UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS,   0.5F, NBT_RESISTANCE,   1.0F, NBT_COLOR, UT.Code.getRGBInt(aMat.fRGBaSolid)                      ),  " S",  "SS",  "Sq", 'S', Items.string);
		aMat = MT.Yellow;           aRegistry.add("Grass Rope"                                          , "Ropes"                               , 32013, 32011, MultiTileEntityRope.class                               ,                 0, 64, aUtilWool      , UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS,   0.5F, NBT_RESISTANCE,   1.0F, NBT_COLOR, UT.Code.getRGBInt(aMat.fRGBaSolid), NBT_FLAMMABILITY,100), " GG", "GGG", "GGq", 'G', OD.itemGrassDry);
		aMat = MT.Plastic;          aRegistry.add("Plastic Rope"                                        , "Ropes"                               , 32014, 32011, MultiTileEntityRope.class                               ,                 0, 64, aUtilWool      , UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS,   0.5F, NBT_RESISTANCE,   1.0F, NBT_COLOR, UT.Code.getRGBInt(aMat.fRGBaSolid)                      ),  " P",  "PP",  "Pq", 'P', OP.wireFine.dat(MT.Plastic));

		aMat = MT.Porcelain;        aRegistry.add("Porcelain Cup"                                       , "Fluid Containers"                    , 32739, 32719, MultiTileEntityCup.class                                ,                 0, 16, aUtilStone     , UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS,   0.5F, NBT_RESISTANCE,   6.0F, NBT_COLOR, UT.Code.getRGBInt(aMat.fRGBaSolid), NBT_TANK_CAPACITY,  250, NBT_ACIDPROOF, F, NBT_LIQUIDPROOF, T, NBT_GASPROOF, F, NBT_TEMPERATURE, aMat.mMeltingPoint));
		aMat = MT.Ceramic;          aRegistry.add("Ceramic Jug"                                         , "Fluid Containers"                    , 32740, 32719, MultiTileEntityJug.class                                ,                 0, 16, aUtilStone     , UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS,   0.5F, NBT_RESISTANCE,   6.0F, NBT_COLOR, UT.Code.getRGBInt(aMat.fRGBaSolid), NBT_TANK_CAPACITY, 2000, NBT_ACIDPROOF, F, NBT_LIQUIDPROOF, T, NBT_GASPROOF, F, NBT_TEMPERATURE, aMat.mMeltingPoint));
		aMat = MT.Ceramic;          aRegistry.add("Ceramic Measuring Pot"                               , "Fluid Containers"                    , 32738, 32719, MultiTileEntityMeasuringPot.class                       ,                 0, 16, aUtilStone     , UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS,   0.5F, NBT_RESISTANCE,   6.0F, NBT_COLOR, UT.Code.getRGBInt(aMat.fRGBaSolid), NBT_TANK_CAPACITY, 1000, NBT_ACIDPROOF, F, NBT_LIQUIDPROOF, T, NBT_GASPROOF, F, NBT_TEMPERATURE, aMat.mMeltingPoint));
		aMat = MT.StainlessSteel;   aRegistry.add("Stainless Measuring Pot"                             , "Fluid Containers"                    , 32743, 32719, MultiTileEntityMeasuringPot.class                       ,                 0, 16, aUtilMetal     , UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS,   0.5F, NBT_RESISTANCE,   6.0F, NBT_COLOR, UT.Code.getRGBInt(aMat.fRGBaSolid), NBT_TANK_CAPACITY, 1000, NBT_ACIDPROOF, T, NBT_LIQUIDPROOF, T, NBT_GASPROOF, F, NBT_TEMPERATURE, aMat.mMeltingPoint-50), "Ch", "Pf", 'P', OP.plate.dat(aMat), 'C', OP.plateCurved.dat(aMat));
		aMat = ANY.W;               aRegistry.add("Tungsten Measuring Pot"                              , "Fluid Containers"                    , 32744, 32719, MultiTileEntityMeasuringPot.class                       ,                 0, 16, aUtilMetal     , UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS,   0.5F, NBT_RESISTANCE,  10.0F, NBT_COLOR, UT.Code.getRGBInt(aMat.fRGBaSolid), NBT_TANK_CAPACITY, 1000, NBT_ACIDPROOF, T, NBT_LIQUIDPROOF, T, NBT_GASPROOF, F, NBT_TEMPERATURE, aMat.mMeltingPoint-50), "Ch", "Pf", 'P', OP.plate.dat(aMat), 'C', OP.plateCurved.dat(aMat));
		aMat = MT.Ta4HfC5;          aRegistry.add("Tantalum Hafnium Carbide Measuring Pot"              , "Fluid Containers"                    , 32077, 32719, MultiTileEntityMeasuringPot.class                       ,                 0, 16, aUtilMetal     , UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS,   0.5F, NBT_RESISTANCE,  10.0F, NBT_COLOR, UT.Code.getRGBInt(aMat.fRGBaSolid), NBT_TANK_CAPACITY, 1000, NBT_ACIDPROOF, F, NBT_LIQUIDPROOF, T, NBT_GASPROOF, F, NBT_TEMPERATURE, aMat.mMeltingPoint-50), "Ch", "Pf", 'P', OP.plate.dat(aMat), 'C', OP.plateCurved.dat(aMat));
		aMat = MT.Al;               aRegistry.add("Thermos Can"                                         , "Fluid Containers"                    , 32737, 32719, MultiTileEntityThermos.class                            ,                 0, 16, aUtilMetal     , UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS,   0.5F, NBT_RESISTANCE,   6.0F, NBT_COLOR, UT.Code.getRGBInt(aMat.fRGBaSolid), NBT_TANK_CAPACITY, 4000, NBT_ACIDPROOF, F, NBT_LIQUIDPROOF, T, NBT_GASPROOF, F, NBT_TEMPERATURE, aMat.mMeltingPoint-50), "hPw", "PAP", "SBS", 'A', OP.pipeMedium.dat(aMat), 'B', OP.pipeLarge.dat(aMat), 'S', OP.foil.dat(MT.Ag), 'P', OP.plateCurved.dat(MT.Plastic));
		aMat = ANY.Steel;           aRegistry.add("Steel Barometer Gas Cylinder"                        , "Fluid Containers"                    , 32055, 32719, MultiTileEntityBarometerGasCylinder.class               ,                 0, 16, aUtilMetal     , UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS,   0.5F, NBT_RESISTANCE,   6.0F, NBT_COLOR, UT.Code.getRGBInt(aMat.fRGBaSolid), NBT_TANK_CAPACITY, 8000, NBT_ACIDPROOF, F, NBT_LIQUIDPROOF, F, NBT_GASPROOF, T, NBT_TEMPERATURE, aMat.mMeltingPoint-50), "RCR", "BCh", "TPd", 'P', OP.plate.dat(aMat), 'C', OP.plateCurved.dat(aMat), 'R', OP.ring.dat(aMat), 'B', OP.round.dat(aMat), 'T', OP.screw.dat(aMat));
		aMat = MT.StainlessSteel;   aRegistry.add("Stainless Barometer Gas Cylinder"                    , "Fluid Containers"                    , 32056, 32719, MultiTileEntityBarometerGasCylinder.class               ,                 0, 16, aUtilMetal     , UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS,   0.5F, NBT_RESISTANCE,   6.0F, NBT_COLOR, UT.Code.getRGBInt(aMat.fRGBaSolid), NBT_TANK_CAPACITY, 8000, NBT_ACIDPROOF, T, NBT_LIQUIDPROOF, F, NBT_GASPROOF, T, NBT_TEMPERATURE, aMat.mMeltingPoint-50), "RCR", "BCh", "TPd", 'P', OP.plate.dat(aMat), 'C', OP.plateCurved.dat(aMat), 'R', OP.ring.dat(aMat), 'B', OP.round.dat(aMat), 'T', OP.screw.dat(aMat));
		aMat = ANY.W;               aRegistry.add("Tungsten Barometer Gas Cylinder"                     , "Fluid Containers"                    , 32057, 32719, MultiTileEntityBarometerGasCylinder.class               ,                 0, 16, aUtilMetal     , UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS,   0.5F, NBT_RESISTANCE,  10.0F, NBT_COLOR, UT.Code.getRGBInt(aMat.fRGBaSolid), NBT_TANK_CAPACITY, 8000, NBT_ACIDPROOF, T, NBT_LIQUIDPROOF, F, NBT_GASPROOF, T, NBT_TEMPERATURE, aMat.mMeltingPoint-50), "RCR", "BCh", "TPd", 'P', OP.plate.dat(aMat), 'C', OP.plateCurved.dat(aMat), 'R', OP.ring.dat(aMat), 'B', OP.round.dat(aMat), 'T', OP.screw.dat(aMat));
		aMat = MT.Ta4HfC5;          aRegistry.add("Tantalum Hafnium Carbide Barometer Gas Cylinder"     , "Fluid Containers"                    , 32078, 32719, MultiTileEntityBarometerGasCylinder.class               ,                 0, 16, aUtilMetal     , UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS,   0.5F, NBT_RESISTANCE,  10.0F, NBT_COLOR, UT.Code.getRGBInt(aMat.fRGBaSolid), NBT_TANK_CAPACITY, 8000, NBT_ACIDPROOF, F, NBT_LIQUIDPROOF, F, NBT_GASPROOF, T, NBT_TEMPERATURE, aMat.mMeltingPoint-50), "RCR", "BCh", "TPd", 'P', OP.plate.dat(aMat), 'C', OP.plateCurved.dat(aMat), 'R', OP.ring.dat(aMat), 'B', OP.round.dat(aMat), 'T', OP.screw.dat(aMat));

		aMat = MT.Ceramic;          aRegistry.add("Ceramic Nozzle"                                      , "Misc Tool Blocks"                    , 32746, 32720, MultiTileEntityFluidNozzle.class                        ,                 0, 64, aUtilStone     , UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS,   0.5F, NBT_RESISTANCE,   5.0F, NBT_COLOR, UT.Code.getRGBInt(aMat.fRGBaSolid), NBT_ACIDPROOF, F), "  h", "BRB", "y  ", 'R', OP.ring.dat(MT.Rubber), 'B', OD.craftingHardenedClay);
		aMat = MT.Plastic;          aRegistry.add("Plastic Nozzle"                                      , "Misc Tool Blocks"                    , 32747, 32720, MultiTileEntityFluidNozzle.class                        ,                 0, 64, aUtilWood      , UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS,   0.5F, NBT_RESISTANCE,   3.0F, NBT_COLOR, UT.Code.getRGBInt(aMat.fRGBaSolid), NBT_ACIDPROOF, F), "  s", "PRP", "x  ", 'R', OP.ring.dat(MT.Rubber), 'P', OP.plateCurved.dat(aMat));
		aMat = MT.StainlessSteel;   aRegistry.add("Stainless Nozzle"                                    , "Misc Tool Blocks"                    , 32748, 32720, MultiTileEntityFluidNozzle.class                        ,                 0, 64, aUtilMetal     , UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS,   0.5F, NBT_RESISTANCE,   6.0F, NBT_COLOR, UT.Code.getRGBInt(aMat.fRGBaSolid), NBT_ACIDPROOF, T), "  h", "PRP", "o  ", 'R', OP.ring.dat(aMat), 'P', OP.plateCurved.dat(aMat));
		aMat = ANY.W;               aRegistry.add("Tungsten Nozzle"                                     , "Misc Tool Blocks"                    , 32749, 32720, MultiTileEntityFluidNozzle.class                        ,                 0, 64, aUtilMetal     , UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS,   0.5F, NBT_RESISTANCE,  10.0F, NBT_COLOR, UT.Code.getRGBInt(aMat.fRGBaSolid), NBT_ACIDPROOF, T), "  h", "PRP", "o  ", 'R', OP.ring.dat(aMat), 'P', OP.plateCurved.dat(aMat));
		aMat = MT.Ta4HfC5;          aRegistry.add("Tantalum Hafnium Carbide Nozzle"                     , "Misc Tool Blocks"                    , 32079, 32720, MultiTileEntityFluidNozzle.class                        ,                 0, 64, aUtilMetal     , UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS,   0.5F, NBT_RESISTANCE,  10.0F, NBT_COLOR, UT.Code.getRGBInt(aMat.fRGBaSolid), NBT_ACIDPROOF, F), "  h", "PRP", "o  ", 'R', OP.ring.dat(aMat), 'P', OP.plateCurved.dat(aMat));
		aMat = MT.Ad;               aRegistry.add("Adamantium Nozzle"                                   , "Misc Tool Blocks"                    , 32750, 32720, MultiTileEntityFluidNozzle.class                        ,                 0, 64, aUtilMetal     , UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS,   0.5F, NBT_RESISTANCE, 100.0F, NBT_COLOR, UT.Code.getRGBInt(aMat.fRGBaSolid), NBT_ACIDPROOF, T), "  h", "PRP", "o  ", 'R', OP.ring.dat(aMat), 'P', OP.plateCurved.dat(aMat));

		aMat = MT.Ceramic;          aRegistry.add("Ceramic Tap"                                         , "Misc Tool Blocks"                    , 32728, 32720, MultiTileEntityFluidTap.class                           ,                 0, 64, aUtilStone     , UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS,   0.5F, NBT_RESISTANCE,   5.0F, NBT_COLOR, UT.Code.getRGBInt(aMat.fRGBaSolid), NBT_ACIDPROOF, F), "  h", "BB ", "yB ", 'B', OD.craftingHardenedClay);
		aMat = MT.Plastic;          aRegistry.add("Plastic Tap"                                         , "Misc Tool Blocks"                    , 32729, 32720, MultiTileEntityFluidTap.class                           ,                 0, 64, aUtilWood      , UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS,   0.5F, NBT_RESISTANCE,   3.0F, NBT_COLOR, UT.Code.getRGBInt(aMat.fRGBaSolid), NBT_ACIDPROOF, F), "  s", "PP ", "xP ", 'P', OP.plateCurved.dat(aMat));
		aMat = MT.StainlessSteel;   aRegistry.add("Stainless Tap"                                       , "Misc Tool Blocks"                    , 32730, 32720, MultiTileEntityFluidTap.class                           ,                 0, 64, aUtilMetal     , UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS,   0.5F, NBT_RESISTANCE,   6.0F, NBT_COLOR, UT.Code.getRGBInt(aMat.fRGBaSolid), NBT_ACIDPROOF, T), "  h", "PP ", "oP ", 'P', OP.plateCurved.dat(aMat));
		aMat = ANY.W;               aRegistry.add("Tungsten Tap"                                        , "Misc Tool Blocks"                    , 32731, 32720, MultiTileEntityFluidTap.class                           ,                 0, 64, aUtilMetal     , UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS,   0.5F, NBT_RESISTANCE,  10.0F, NBT_COLOR, UT.Code.getRGBInt(aMat.fRGBaSolid), NBT_ACIDPROOF, T), "  h", "PP ", "oP ", 'P', OP.plateCurved.dat(aMat));
		aMat = MT.Ta4HfC5;          aRegistry.add("Tantalum Hafnium Carbide Tap"                        , "Misc Tool Blocks"                    , 32080, 32720, MultiTileEntityFluidTap.class                           ,                 0, 64, aUtilMetal     , UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS,   0.5F, NBT_RESISTANCE,  10.0F, NBT_COLOR, UT.Code.getRGBInt(aMat.fRGBaSolid), NBT_ACIDPROOF, F), "  h", "PP ", "oP ", 'P', OP.plateCurved.dat(aMat));
		aMat = MT.Ad;               aRegistry.add("Adamantium Tap"                                      , "Misc Tool Blocks"                    , 32732, 32720, MultiTileEntityFluidTap.class                           ,                 0, 64, aUtilMetal     , UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS,   0.5F, NBT_RESISTANCE, 100.0F, NBT_COLOR, UT.Code.getRGBInt(aMat.fRGBaSolid), NBT_ACIDPROOF, T), "  h", "PP ", "oP ", 'P', OP.plateCurved.dat(aMat));

		aMat = MT.Ceramic;          aRegistry.add("Ceramic Funnel"                                      , "Misc Tool Blocks"                    , 32723, 32720, MultiTileEntityFluidFunnel.class                        ,                 0, 64, aUtilStone     , UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS,   0.5F, NBT_RESISTANCE,   5.0F, NBT_COLOR, UT.Code.getRGBInt(aMat.fRGBaSolid), NBT_ACIDPROOF, F), " h ", "ByB", " B ", 'B', OD.craftingHardenedClay);
		aMat = MT.Plastic;          aRegistry.add("Plastic Funnel"                                      , "Misc Tool Blocks"                    , 32724, 32720, MultiTileEntityFluidFunnel.class                        ,                 0, 64, aUtilWood      , UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS,   0.5F, NBT_RESISTANCE,   3.0F, NBT_COLOR, UT.Code.getRGBInt(aMat.fRGBaSolid), NBT_ACIDPROOF, F), " s ", "PxP", " P ", 'P', OP.plateCurved.dat(aMat));
		aMat = MT.StainlessSteel;   aRegistry.add("Stainless Funnel"                                    , "Misc Tool Blocks"                    , 32725, 32720, MultiTileEntityFluidFunnel.class                        ,                 0, 64, aUtilMetal     , UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS,   0.5F, NBT_RESISTANCE,   6.0F, NBT_COLOR, UT.Code.getRGBInt(aMat.fRGBaSolid), NBT_ACIDPROOF, T), " h ", "PoP", " P ", 'P', OP.plateCurved.dat(aMat));
		aMat = ANY.W;               aRegistry.add("Tungsten Funnel"                                     , "Misc Tool Blocks"                    , 32726, 32720, MultiTileEntityFluidFunnel.class                        ,                 0, 64, aUtilMetal     , UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS,   0.5F, NBT_RESISTANCE,  10.0F, NBT_COLOR, UT.Code.getRGBInt(aMat.fRGBaSolid), NBT_ACIDPROOF, T), " h ", "PoP", " P ", 'P', OP.plateCurved.dat(aMat));
		aMat = MT.Ta4HfC5;          aRegistry.add("Tantalum Hafnium Carbide Funnel"                     , "Misc Tool Blocks"                    , 32081, 32720, MultiTileEntityFluidFunnel.class                        ,                 0, 64, aUtilMetal     , UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS,   0.5F, NBT_RESISTANCE,  10.0F, NBT_COLOR, UT.Code.getRGBInt(aMat.fRGBaSolid), NBT_ACIDPROOF, F), " h ", "PoP", " P ", 'P', OP.plateCurved.dat(aMat));
		aMat = MT.Ad;               aRegistry.add("Adamantium Funnel"                                   , "Misc Tool Blocks"                    , 32727, 32720, MultiTileEntityFluidFunnel.class                        ,                 0, 64, aUtilMetal     , UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS,   0.5F, NBT_RESISTANCE, 100.0F, NBT_COLOR, UT.Code.getRGBInt(aMat.fRGBaSolid), NBT_ACIDPROOF, T), " h ", "PoP", " P ", 'P', OP.plateCurved.dat(aMat));

		aMat = MT.Ceramic;          aRegistry.add("Ceramic Cap Nozzle"                                  , "Misc Tool Blocks"                    , 32058, 32720, MultiTileEntityFluidCapNozzle.class                     ,                 0, 64, aUtilStone     , UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS,   0.5F, NBT_RESISTANCE,   5.0F, NBT_COLOR, UT.Code.getRGBInt(aMat.fRGBaSolid), NBT_ACIDPROOF, F), "Rw", "BT", "Ny", 'N', aRegistry.getItem(32746), 'R', OP.ring.dat(MT.Rubber), 'B', OP.round.dat(MT.Rubber), 'T', OD.craftingHardenedClay);
		aMat = MT.Plastic;          aRegistry.add("Plastic Cap Nozzle"                                  , "Misc Tool Blocks"                    , 32059, 32720, MultiTileEntityFluidCapNozzle.class                     ,                 0, 64, aUtilWood      , UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS,   0.5F, NBT_RESISTANCE,   3.0F, NBT_COLOR, UT.Code.getRGBInt(aMat.fRGBaSolid), NBT_ACIDPROOF, F), "Rw", "BT", "Nd", 'N', aRegistry.getItem(32747), 'R', OP.ring.dat(MT.Rubber), 'B', OP.round.dat(aMat), 'T', OP.screw.dat(aMat));
		aMat = MT.StainlessSteel;   aRegistry.add("Stainless Cap Nozzle"                                , "Misc Tool Blocks"                    , 32060, 32720, MultiTileEntityFluidCapNozzle.class                     ,                 0, 64, aUtilMetal     , UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS,   0.5F, NBT_RESISTANCE,   6.0F, NBT_COLOR, UT.Code.getRGBInt(aMat.fRGBaSolid), NBT_ACIDPROOF, T), "Rw", "BT", "Nd", 'N', aRegistry.getItem(32748), 'R', OP.ring.dat(aMat), 'B', OP.round.dat(aMat), 'T', OP.screw.dat(aMat));
		aMat = ANY.W;               aRegistry.add("Tungsten Cap Nozzle"                                 , "Misc Tool Blocks"                    , 32061, 32720, MultiTileEntityFluidCapNozzle.class                     ,                 0, 64, aUtilMetal     , UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS,   0.5F, NBT_RESISTANCE,  10.0F, NBT_COLOR, UT.Code.getRGBInt(aMat.fRGBaSolid), NBT_ACIDPROOF, T), "Rw", "BT", "Nd", 'N', aRegistry.getItem(32749), 'R', OP.ring.dat(aMat), 'B', OP.round.dat(aMat), 'T', OP.screw.dat(aMat));
		aMat = MT.Ta4HfC5;          aRegistry.add("Tantalum Hafnium Carbide Cap Nozzle"                 , "Misc Tool Blocks"                    , 32082, 32720, MultiTileEntityFluidCapNozzle.class                     ,                 0, 64, aUtilMetal     , UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS,   0.5F, NBT_RESISTANCE,  10.0F, NBT_COLOR, UT.Code.getRGBInt(aMat.fRGBaSolid), NBT_ACIDPROOF, F), "Rw", "BT", "Nd", 'N', aRegistry.getItem(32749), 'R', OP.ring.dat(aMat), 'B', OP.round.dat(aMat), 'T', OP.screw.dat(aMat));
		aMat = MT.Ad;               aRegistry.add("Adamantium Cap Nozzle"                               , "Misc Tool Blocks"                    , 32062, 32720, MultiTileEntityFluidCapNozzle.class                     ,                 0, 64, aUtilMetal     , UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS,   0.5F, NBT_RESISTANCE, 100.0F, NBT_COLOR, UT.Code.getRGBInt(aMat.fRGBaSolid), NBT_ACIDPROOF, T), "Rw", "BT", "Nd", 'N', aRegistry.getItem(32750), 'R', OP.ring.dat(aMat), 'B', OP.round.dat(aMat), 'T', OP.screw.dat(aMat));

		aMat = ANY.Wood;            aRegistry.add("Wooden Barrel (Cheap)"                               , "Fluid Containers"                    , 32733, 32719, MultiTileEntityBarrelWood.class                         ,                 0, 16, aUtilWood      , UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS,   1.0F, NBT_RESISTANCE,   5.0F, NBT_COLOR, UT.Code.getRGBInt(aMat.fRGBaSolid), NBT_TANK_CAPACITY,       8000, NBT_PLASMAPROOF, F, NBT_GASPROOF, F, NBT_ACIDPROOF, F, NBT_FLAMMABILITY,       100), "rGs", "PSP", "PSP", 'G', OD.itemGlue, 'P', OD.plankAnyWood, 'S', OP.stickLong.dat(MT.Pb));
		aMat = ANY.Wood;            aRegistry.add("Wooden Barrel (Cheap)"                               , "Fluid Containers"                    , 32752, 32719, MultiTileEntityBarrelWood.class                         ,                 0, 16, aUtilWood      , UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS,   1.0F, NBT_RESISTANCE,   5.0F, NBT_COLOR, UT.Code.getRGBInt(aMat.fRGBaSolid), NBT_TANK_CAPACITY,       8000, NBT_PLASMAPROOF, F, NBT_GASPROOF, F, NBT_ACIDPROOF, F, NBT_FLAMMABILITY,       100), "rGs", "PSP", "PSP", 'G', OD.itemGlue, 'P', OD.plankAnyWood, 'S', OP.stickLong.dat(MT.Bi));
		aMat = ANY.Wood;            aRegistry.add("Wooden Barrel (Cheap)"                               , "Fluid Containers"                    , 32753, 32719, MultiTileEntityBarrelWood.class                         ,                 0, 16, aUtilWood      , UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS,   1.0F, NBT_RESISTANCE,   5.0F, NBT_COLOR, UT.Code.getRGBInt(aMat.fRGBaSolid), NBT_TANK_CAPACITY,       8000, NBT_PLASMAPROOF, F, NBT_GASPROOF, F, NBT_ACIDPROOF, F, NBT_FLAMMABILITY,       100), "rGs", "PSP", "PSP", 'G', OD.itemGlue, 'P', OD.plankAnyWood, 'S', OP.stickLong.dat(MT.Bronze));
		aMat = ANY.Wood;            aRegistry.add("Wooden Barrel (Cheap)"                               , "Fluid Containers"                    , 32754, 32719, MultiTileEntityBarrelWood.class                         ,                 0, 16, aUtilWood      , UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS,   1.0F, NBT_RESISTANCE,   5.0F, NBT_COLOR, UT.Code.getRGBInt(aMat.fRGBaSolid), NBT_TANK_CAPACITY,       8000, NBT_PLASMAPROOF, F, NBT_GASPROOF, F, NBT_ACIDPROOF, F, NBT_FLAMMABILITY,       100), "rGs", "PSP", "PSP", 'G', OD.itemGlue, 'P', OD.plankAnyWood, 'S', OP.stickLong.dat(MT.Brass));
		aMat = MT.WoodSealed;       aRegistry.add("Wooden Barrel"                                       , "Fluid Containers"                    , 32714, 32719, MultiTileEntityBarrelWood.class                         ,                 0, 16, aUtilWood      , UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS,   1.0F, NBT_RESISTANCE,   5.0F, NBT_COLOR, UT.Code.getRGBInt(aMat.fRGBaSolid), NBT_TANK_CAPACITY,      16000, NBT_PLASMAPROOF, F, NBT_GASPROOF, F, NBT_ACIDPROOF, F, NBT_FLAMMABILITY,       100), "rGs", "PSP", "PSP", 'G', OD.itemGlue, 'P', OP.plate.dat(aMat), 'S', OP.stickLong.dat(ANY.Iron));
		aMat = MT.Skyroot;          aRegistry.add("Skyroot Barrel"                                      , "Fluid Containers"                    , 32019, 32719, MultiTileEntityBarrelWood.class                         ,                 0, 16, aUtilWood      , UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS,   1.0F, NBT_RESISTANCE,   5.0F, NBT_COLOR, UT.Code.getRGBInt(aMat.fRGBaSolid), NBT_TANK_CAPACITY,      16000, NBT_PLASMAPROOF, F, NBT_GASPROOF, F, NBT_ACIDPROOF, F, NBT_FLAMMABILITY,       100), "rGs", "PSP", "PSP", 'G', OD.itemGlue, 'P', OD.plankSkyroot, 'S', OP.stickLong.dat(ANY.Iron));
		aMat = MT.Weedwood;         aRegistry.add("Weedwood Barrel"                                     , "Fluid Containers"                    , 32008, 32719, MultiTileEntityBarrelWood.class                         ,                 0, 16, aUtilWood      , UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS,   1.0F, NBT_RESISTANCE,   5.0F, NBT_COLOR, UT.Code.getRGBInt(aMat.fRGBaSolid), NBT_TANK_CAPACITY,       8000, NBT_PLASMAPROOF, F, NBT_GASPROOF, F, NBT_ACIDPROOF, F                             ), "rGs", "PSP", "PSP", 'G', OD.itemGlue, 'P', OD.plankWeedwood, 'S', OP.stickLong.dat(MT.Syrmorite));
		aMat = MT.Livingwood;       aRegistry.add("Livingwood Barrel"                                   , "Fluid Containers"                    , 32010, 32719, MultiTileEntityBarrelWood.class                         ,                 0, 16, aUtilWood      , UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS,   1.0F, NBT_RESISTANCE,   5.0F, NBT_COLOR, UT.Code.getRGBInt(aMat.fRGBaSolid), NBT_TANK_CAPACITY,      16000, NBT_PLASMAPROOF, F, NBT_GASPROOF, F, NBT_ACIDPROOF, F, NBT_FLAMMABILITY,       100), "rGs", "PSP", "PSP", 'G', OD.itemGlue, 'P', OP.plate.dat(aMat), 'S', OP.stickLong.dat(ANY.Iron));
		aMat = MT.Dreamwood;        aRegistry.add("Dreamwood Barrel"                                    , "Fluid Containers"                    , 32009, 32719, MultiTileEntityBarrelWood.class                         ,                 0, 16, aUtilWood      , UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS,   1.0F, NBT_RESISTANCE,   5.0F, NBT_COLOR, UT.Code.getRGBInt(aMat.fRGBaSolid), NBT_TANK_CAPACITY,      64000, NBT_PLASMAPROOF, F, NBT_GASPROOF, F, NBT_ACIDPROOF, F                             ), "rGs", "PSP", "PSP", 'G', OD.itemGlue, 'P', OP.plate.dat(aMat), 'S', OP.stickLong.dat(MT.Manasteel));
		aMat = MT.Shimmerwood;      aRegistry.add("Shimmerwood Barrel"                                  , "Fluid Containers"                    , 32016, 32719, MultiTileEntityBarrelWood.class                         ,                 0, 16, aUtilWood      , UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS,   1.0F, NBT_RESISTANCE,   5.0F, NBT_COLOR, UT.Code.getRGBInt(aMat.fRGBaSolid), NBT_TANK_CAPACITY,      64000, NBT_PLASMAPROOF, F, NBT_GASPROOF, F, NBT_ACIDPROOF, F                             ), "rGs", "PSP", "PSP", 'G', OD.itemGlue, 'P', OP.plate.dat(aMat), 'S', OP.stickLong.dat(MT.Manasteel));
		aMat = MT.IronWood;         aRegistry.add("Ironwood Barrel"                                     , "Fluid Containers"                    , 32734, 32719, MultiTileEntityBarrelWood.class                         ,                 0, 16, aUtilWood      , UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS,   1.0F, NBT_RESISTANCE,   5.0F, NBT_COLOR, UT.Code.getRGBInt(aMat.fRGBaSolid), NBT_TANK_CAPACITY,      32000, NBT_PLASMAPROOF, F, NBT_GASPROOF, F, NBT_ACIDPROOF, F                             ), "rGs", "PSP", "PSP", 'G', OD.itemGlue, 'P', OP.plate.dat(aMat), 'S', OP.stickLong.dat(ANY.Iron));
		aMat = MT.Greatwood;        aRegistry.add("Greatwood Barrel"                                    , "Fluid Containers"                    , 32017, 32719, MultiTileEntityBarrelWood.class                         ,                 0, 16, aUtilWood      , UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS,   1.0F, NBT_RESISTANCE,   5.0F, NBT_COLOR, UT.Code.getRGBInt(aMat.fRGBaSolid), NBT_TANK_CAPACITY,      16000, NBT_PLASMAPROOF, F, NBT_GASPROOF, F, NBT_ACIDPROOF, F, NBT_FLAMMABILITY,       100), "rGs", "PSP", "PSP", 'G', OD.itemGlue, 'P', OP.plate.dat(aMat), 'S', OP.stickLong.dat(ANY.Iron));
		aMat = MT.Silverwood;       aRegistry.add("Silverwood Barrel"                                   , "Fluid Containers"                    , 32018, 32719, MultiTileEntityBarrelWood.class                         ,                 0, 16, aUtilWood      , UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS,   1.0F, NBT_RESISTANCE,   5.0F, NBT_COLOR, UT.Code.getRGBInt(aMat.fRGBaSolid), NBT_TANK_CAPACITY,      64000, NBT_PLASMAPROOF, F, NBT_GASPROOF, F, NBT_ACIDPROOF, F                             ), "rGs", "PSP", "PSP", 'G', OD.itemGlue, 'P', OP.plate.dat(aMat), 'S', OP.stickLong.dat(MT.Thaumium));
		aMat = MT.Plastic;          aRegistry.add("Plastic Can"                                         , "Fluid Containers"                    , 32715, 32719, MultiTileEntityBarrelPlastic.class                      ,                 0, 16, aUtilWood      , UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS,   1.0F, NBT_RESISTANCE,   3.0F, NBT_COLOR, UT.Code.getRGBInt(aMat.fRGBaSolid), NBT_TANK_CAPACITY,      32000, NBT_PLASMAPROOF, F, NBT_GASPROOF, T, NBT_ACIDPROOF, F                             ));
		aMat = MT.StainlessSteel;   aRegistry.add("Drum"                                                , "Fluid Containers"                    , 32716, 32719, MultiTileEntityBarrelMetal.class                        ,                 0, 16, aUtilMetal     , UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS,   1.0F, NBT_RESISTANCE,   6.0F, NBT_COLOR, UT.Code.getRGBInt(aMat.fRGBaSolid), NBT_TANK_CAPACITY,      64000, NBT_PLASMAPROOF, F, NBT_GASPROOF, T, NBT_ACIDPROOF, T                             ), " h ", "PSP", "PSP", 'P', OP.plateCurved.dat(aMat), 'S', OP.stickLong.dat(aMat));
		aMat = MT.Invar;            aRegistry.add("Invar Drum"                                          , "Fluid Containers"                    , 32064, 32719, MultiTileEntityBarrelMetal.class                        ,                 0, 16, aUtilMetal     , UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS,   1.0F, NBT_RESISTANCE,   6.0F, NBT_COLOR, UT.Code.getRGBInt(aMat.fRGBaSolid), NBT_TANK_CAPACITY,      64000, NBT_PLASMAPROOF, F, NBT_GASPROOF, T, NBT_ACIDPROOF, F                             ), " h ", "PSP", "PSP", 'P', OP.plateCurved.dat(aMat), 'S', OP.stickLong.dat(aMat));
		aMat = MT.Desh;             aRegistry.add("Desh Drum"                                           , "Fluid Containers"                    , 32070, 32719, MultiTileEntityBarrelMetal.class                        ,                 0, 16, aUtilMetal     , UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS,   1.0F, NBT_RESISTANCE,   6.0F, NBT_COLOR, UT.Code.getRGBInt(aMat.fRGBaSolid), NBT_TANK_CAPACITY,      64000, NBT_PLASMAPROOF, F, NBT_GASPROOF, T, NBT_ACIDPROOF, F                             ), " h ", "PSP", "PSP", 'P', OP.plateCurved.dat(aMat), 'S', OP.stickLong.dat(aMat));
		aMat = MT.Syrmorite;        aRegistry.add("Syrmorite Drum"                                      , "Fluid Containers"                    , 32020, 32719, MultiTileEntityBarrelMetal.class                        ,                 0, 16, aUtilMetal     , UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS,   1.0F, NBT_RESISTANCE,   6.0F, NBT_COLOR, UT.Code.getRGBInt(aMat.fRGBaSolid), NBT_TANK_CAPACITY,      64000, NBT_PLASMAPROOF, F, NBT_GASPROOF, T, NBT_ACIDPROOF, T                             ), " h ", "PSP", "PSP", 'P', OP.plateCurved.dat(aMat), 'S', OP.stickLong.dat(aMat));
		aMat = MT.Thaumium;         aRegistry.add("Thaumium Drum"                                       , "Fluid Containers"                    , 32022, 32719, MultiTileEntityBarrelMetal.class                        ,                 0, 16, aUtilMetal     , UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS,   1.0F, NBT_RESISTANCE,   6.0F, NBT_COLOR, UT.Code.getRGBInt(aMat.fRGBaSolid), NBT_TANK_CAPACITY,      64000, NBT_PLASMAPROOF, F, NBT_GASPROOF, T, NBT_ACIDPROOF, T                             ), " h ", "PSP", "PSP", 'P', OP.plateCurved.dat(aMat), 'S', OP.stickLong.dat(aMat));
		aMat = MT.Manasteel;        aRegistry.add("Manasteel Drum"                                      , "Fluid Containers"                    , 32023, 32719, MultiTileEntityBarrelMetal.class                        ,                 0, 16, aUtilMetal     , UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS,   1.0F, NBT_RESISTANCE,   6.0F, NBT_COLOR, UT.Code.getRGBInt(aMat.fRGBaSolid), NBT_TANK_CAPACITY,      64000, NBT_PLASMAPROOF, F, NBT_GASPROOF, T, NBT_ACIDPROOF, T                             ), " h ", "PSP", "PSP", 'P', OP.plateCurved.dat(aMat), 'S', OP.stickLong.dat(aMat));
		aMat = MT.Ti;               aRegistry.add("Titanium Drum"                                       , "Fluid Containers"                    , 32742, 32719, MultiTileEntityBarrelMetal.class                        ,                 0, 16, aUtilMetal     , UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS,   1.0F, NBT_RESISTANCE,   9.0F, NBT_COLOR, UT.Code.getRGBInt(aMat.fRGBaSolid), NBT_TANK_CAPACITY,     128000, NBT_PLASMAPROOF, F, NBT_GASPROOF, T, NBT_ACIDPROOF, F                             ), " h ", "PSP", "PSP", 'P', OP.plateCurved.dat(aMat), 'S', OP.stickLong.dat(aMat));
		aMat = MT.TungstenSteel;    aRegistry.add("Tungstensteel Drum"                                  , "Fluid Containers"                    , 32717, 32719, MultiTileEntityBarrelMetal.class                        ,                 0, 16, aUtilMetal     , UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS,   1.0F, NBT_RESISTANCE,  12.5F, NBT_COLOR, UT.Code.getRGBInt(aMat.fRGBaSolid), NBT_TANK_CAPACITY,     256000, NBT_PLASMAPROOF, F, NBT_GASPROOF, T, NBT_ACIDPROOF, F                             ), " h ", "PSP", "PSP", 'P', OP.plateCurved.dat(aMat), 'S', OP.stickLong.dat(aMat));
		aMat = ANY.W;               aRegistry.add("Tungsten Drum"                                       , "Fluid Containers"                    , 32718, 32719, MultiTileEntityBarrelMetal.class                        ,                 0, 16, aUtilMetal     , UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS,   1.0F, NBT_RESISTANCE,  10.0F, NBT_COLOR, UT.Code.getRGBInt(aMat.fRGBaSolid), NBT_TANK_CAPACITY,     256000, NBT_PLASMAPROOF, F, NBT_GASPROOF, T, NBT_ACIDPROOF, T                             ), " h ", "PSP", "PSP", 'P', OP.plateCurved.dat(aMat), 'S', OP.stickLong.dat(aMat));
		aMat = MT.Ta4HfC5;          aRegistry.add("Tantalum Hafnium Carbide Drum"                       , "Fluid Containers"                    , 32083, 32719, MultiTileEntityBarrelMetal.class                        ,                 0, 16, aUtilMetal     , UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS,   1.0F, NBT_RESISTANCE,  10.0F, NBT_COLOR, UT.Code.getRGBInt(aMat.fRGBaSolid), NBT_TANK_CAPACITY,     512000, NBT_PLASMAPROOF, F, NBT_GASPROOF, T, NBT_ACIDPROOF, F                             ), " h ", "PSP", "PSP", 'P', OP.plateCurved.dat(aMat), 'S', OP.stickLong.dat(aMat));
		aMat = MT.VoidMetal;        aRegistry.add("Voidmetal Drum"                                      , "Fluid Containers"                    , 32063, 32719, MultiTileEntityBarrelMetal.class                        ,                 0, 16, aUtilMetal     , UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS,   1.0F, NBT_RESISTANCE,  10.0F, NBT_COLOR, UT.Code.getRGBInt(aMat.fRGBaSolid), NBT_TANK_CAPACITY,     256000, NBT_PLASMAPROOF, T, NBT_GASPROOF, T, NBT_ACIDPROOF, T                             ), " h ", "PSP", "PSP", 'P', OP.plateCurved.dat(aMat), 'S', OP.stickLong.dat(aMat));
		aMat = MT.GaiaSpirit;       aRegistry.add("Gaia Drum"                                           , "Fluid Containers"                    , 32024, 32719, MultiTileEntityBarrelMetal.class                        ,                 0, 16, aUtilMetal     , UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS,   1.0F, NBT_RESISTANCE,  25.0F, NBT_COLOR, UT.Code.getRGBInt(aMat.fRGBaSolid), NBT_TANK_CAPACITY,    1024000, NBT_PLASMAPROOF, T, NBT_GASPROOF, T, NBT_ACIDPROOF, T                             ), " h ", "PSP", "PSP", 'P', OP.plateCurved.dat(aMat), 'S', OP.stickLong.dat(aMat));
		aMat = MT.Ad;               aRegistry.add("Adamantium Drum"                                     , "Fluid Containers"                    , 32719, 32719, MultiTileEntityBarrelMetal.class                        ,                 0, 16, aUtilMetal     , UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS,   1.0F, NBT_RESISTANCE, 100.0F, NBT_COLOR, UT.Code.getRGBInt(aMat.fRGBaSolid), NBT_TANK_CAPACITY,    4096000, NBT_PLASMAPROOF, T, NBT_GASPROOF, T, NBT_ACIDPROOF, T                             ), " h ", "PSP", "PSP", 'P', OP.plateCurved.dat(aMat), 'S', OP.stickLong.dat(aMat));
		aMat = MT.Draconium;        aRegistry.add("Draconium Drum"                                      , "Fluid Containers"                    , 32021, 32719, MultiTileEntityBarrelMetal.class                        ,                 0, 16, aUtilMetal     , UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS,   1.0F, NBT_RESISTANCE, 100.0F, NBT_COLOR, UT.Code.getRGBInt(aMat.fRGBaSolid), NBT_TANK_CAPACITY,    4096000, NBT_PLASMAPROOF, T, NBT_GASPROOF, T, NBT_ACIDPROOF, T                             ), " h ", "PSP", "PSP", 'P', OP.plateCurved.dat(aMat), 'S', OP.stickLong.dat(aMat));
		aMat = MT.DraconiumAwakened;aRegistry.add("Awakened Draconium Drum"                             , "Fluid Containers"                    , 32066, 32719, MultiTileEntityBarrelMetal.class                        ,                 0, 16, aUtilMetal     , UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS,   1.0F, NBT_RESISTANCE, 100.0F, NBT_COLOR, UT.Code.getRGBInt(aMat.fRGBaSolid), NBT_TANK_CAPACITY,    8192000, NBT_PLASMAPROOF, T, NBT_GASPROOF, T, NBT_ACIDPROOF, T, NBT_CAPACITY_HU,      10000), " h ", "PSP", "PSP", 'P', OP.plateCurved.dat(aMat), 'S', OP.stickLong.dat(aMat));
		aMat = MT.Infinity;         aRegistry.add("Infinity Drum"                                       , "Fluid Containers"                    , 32067, 32719, MultiTileEntityBarrelMetal.class                        ,                 0, 16, aUtilMetal     , UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS,   1.0F, NBT_RESISTANCE, 100.0F, NBT_COLOR, UT.Code.getRGBInt(aMat.fRGBaSolid), NBT_TANK_CAPACITY, 1000000000, NBT_PLASMAPROOF, T, NBT_GASPROOF, T, NBT_ACIDPROOF, T, NBT_CAPACITY_HU, 1000000000), " h ", "PSP", "PSP", 'P', OP.plateCurved.dat(aMat), 'S', OP.stickLong.dat(aMat));
		aMat = ANY.W;               aRegistry.add("Logistics Tank"                                      , "Logistics"                           , 32072, 17997, MultiTileEntityBarrelLogistics.class                    ,                 0, 16, aUtilMetal     , UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS,   1.0F, NBT_RESISTANCE,  10.0F, NBT_COLOR, UT.Code.getRGBInt(aMat.fRGBaSolid), NBT_TANK_CAPACITY,    1000000, NBT_PLASMAPROOF, T, NBT_GASPROOF, T, NBT_ACIDPROOF, T, NBT_CAPACITY_HU,     100000), "TQT", "wFd", "TMT", 'M', aRegistry.getItem(32718), 'T', OP.screw.dat(aMat), 'Q', IL.Cover_Logistics_Generic_Storage, 'F', IL.FIELD_GENERATORS[0]);

		aMat = ANY.Wood;            aRegistry.add("Wooden Bathing Pot"                                  , "Misc Tool Blocks"                    , 32721, 32720, MultiTileEntityBathingPotWood.class                     ,                 0, 16, aUtilWood      , UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS,   1.0F, NBT_RESISTANCE,   5.0F, NBT_COLOR, UT.Code.getRGBInt(aMat.fRGBaSolid), NBT_RECIPEMAP, RM.Bath   , NBT_TANK_CAPACITY,           4000, NBT_FLAMMABILITY, 100), "sGh", "PLP", "PPP", 'P', OD.plankAnyWood, 'L', OP.stickLong.dat(MT.Pb), 'G', OD.itemGlue);
		aMat = ANY.Wood;            aRegistry.add("Wooden Bathing Pot Table"                            , "Misc Tool Blocks"                    , 32720, 32720, MultiTileEntityBathingPotTableWood.class                ,                 0, 16, aUtilWood      , UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS,   1.0F, NBT_RESISTANCE,   5.0F, NBT_COLOR, UT.Code.getRGBInt(aMat.fRGBaSolid), NBT_RECIPEMAP, RM.Bath   , NBT_TANK_CAPACITY,           4000, NBT_FLAMMABILITY, 100), "M", "S", 'M', aRegistry.getItem(32721), 'S', ST.make(Blocks.stone_slab, 1, 4));
		aMat = MT.StainlessSteel;   aRegistry.add("Bathing Pot"                                         , "Misc Tool Blocks"                    , 32708, 32720, MultiTileEntityBathingPot.class                         ,                 0, 16, aUtilMetal     , UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS,   1.0F, NBT_RESISTANCE,   6.0F, NBT_COLOR, UT.Code.getRGBInt(aMat.fRGBaSolid), NBT_RECIPEMAP, RM.Bath   , NBT_TANK_CAPACITY,           8000), " f ", "PhP", "PPP", 'P', OP.plate.dat(aMat));
		aMat = MT.StainlessSteel;   aRegistry.add("Bathing Pot Table"                                   , "Misc Tool Blocks"                    , 32707, 32720, MultiTileEntityBathingPotTable.class                    ,                 0, 16, aUtilMetal     , UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS,   1.0F, NBT_RESISTANCE,   6.0F, NBT_COLOR, UT.Code.getRGBInt(aMat.fRGBaSolid), NBT_RECIPEMAP, RM.Bath   , NBT_TANK_CAPACITY,           8000), "M", "S", 'M', aRegistry.getItem(32708), 'S', ST.make(Blocks.stone_slab, 1, 4));
		aMat = MT.Ceramic;          aRegistry.add("Mixing Bowl"                                         , "Misc Tool Blocks"                    , 32706, 32720, MultiTileEntityMixingBowl.class                         ,                 0, 16, aUtilStone     , UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS,   1.0F, NBT_RESISTANCE,   5.0F, NBT_COLOR, UT.Code.getRGBInt(aMat.fRGBaSolid), NBT_RECIPEMAP, RM.Mixer  , NBT_TANK_CAPACITY,           8000), "DhD", "ByB", "BBB", 'B', OD.craftingHardenedClay, 'D', DYE_OREDICTS[DYE_INDEX_Red]);
		aMat = MT.Ceramic;          aRegistry.add("Mixing Bowl Table"                                   , "Misc Tool Blocks"                    , 32705, 32720, MultiTileEntityMixingBowlTable.class                    ,                 0, 16, aUtilStone     , UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS,   1.0F, NBT_RESISTANCE,   5.0F, NBT_COLOR, UT.Code.getRGBInt(aMat.fRGBaSolid), NBT_RECIPEMAP, RM.Mixer  , NBT_TANK_CAPACITY,           8000), "M", "S", 'M', aRegistry.getItem(32706), 'S', ST.make(Blocks.stone_slab, 1, 4));
		aMat = MT.Ceramic;          aRegistry.add("Juicer"                                              , "Misc Tool Blocks"                    , 32722, 32720, MultiTileEntityJuicer.class                             ,                 0, 16, aUtilStone     , UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS,   1.0F, NBT_RESISTANCE,   5.0F, NBT_COLOR, UT.Code.getRGBInt(aMat.fRGBaSolid), NBT_RECIPEMAP, RM.Juicer                                    ), "yBh", "BBB", 'B', OD.craftingHardenedClay);
		aMat = MT.Ceramic;          aRegistry.add("Mortar"                                              , "Misc Tool Blocks"                    , 32735, 32720, MultiTileEntityMortar.class                             ,                 0, 16, aUtilStone     , UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS,   1.0F, NBT_RESISTANCE,   5.0F, NBT_COLOR, UT.Code.getRGBInt(aMat.fRGBaSolid), NBT_RECIPEMAP, RM.Mortar , NBT_DESIGN, 0                    ), "yPh", "BPB", "BBB", 'B', OD.craftingHardenedClay, 'P', OP.ingot.dat(ANY.Iron));
		aMat = MT.Ceramic;          aRegistry.add("Mortar"                                              , "Misc Tool Blocks"                    , 32075, 32720, MultiTileEntityMortar.class                             ,                 0, 16, aUtilStone     , UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS,   1.0F, NBT_RESISTANCE,   5.0F, NBT_COLOR, UT.Code.getRGBInt(aMat.fRGBaSolid), NBT_RECIPEMAP, RM.Mortar , NBT_DESIGN, 1                    ), "yPh", "BPB", "BBB", 'B', OD.craftingHardenedClay, 'P', OP.gem.dat(ANY.Sapphire));
		aMat = MT.Ceramic;          aRegistry.add("Mortar"                                              , "Misc Tool Blocks"                    , 32076, 32720, MultiTileEntityMortar.class                             ,                 0, 16, aUtilStone     , UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS,   1.0F, NBT_RESISTANCE,   5.0F, NBT_COLOR, UT.Code.getRGBInt(aMat.fRGBaSolid), NBT_RECIPEMAP, RM.Mortar , NBT_DESIGN, 2                    ), "yPh", "BPB", "BBB", 'B', OD.craftingHardenedClay, 'P', OP.gem.dat(ANY.Diamond));
		aMat = MT.Stone;            aRegistry.add(aMat.mNameLocal + " Anvil"                            , "Misc Tool Blocks"                    , 32025, 32720, MultiTileEntityAnvil.class                              ,                 0, 16, aUtilStone     , UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS,   1.0F, NBT_RESISTANCE,   6.0F, NBT_COLOR, UT.Code.getRGBInt(aMat.fRGBaSolid)                           , NBT_DURABILITY,            10000L), "RRR", "hR ", "RRR", 'R', Blocks.stone);
		aMat = MT.GraniteBlack;     aRegistry.add(aMat.mNameLocal + " Anvil"                            , "Misc Tool Blocks"                    , 32026, 32720, MultiTileEntityAnvil.class                              ,                 0, 16, aUtilStone     , UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS,   1.0F, NBT_RESISTANCE,   6.0F, NBT_COLOR, UT.Code.getRGBInt(aMat.fRGBaSolid)                           , NBT_DURABILITY,           100000L), "RRR", "hR ", "RRR", 'R', OP.stone.dat(aMat));
		aMat = MT.GraniteRed;       aRegistry.add(aMat.mNameLocal + " Anvil"                            , "Misc Tool Blocks"                    , 32027, 32720, MultiTileEntityAnvil.class                              ,                 0, 16, aUtilStone     , UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS,   1.0F, NBT_RESISTANCE,   6.0F, NBT_COLOR, UT.Code.getRGBInt(aMat.fRGBaSolid)                           , NBT_DURABILITY,           100000L), "RRR", "hR ", "RRR", 'R', OP.stone.dat(aMat));
		aMat = MT.Pb;               aRegistry.add(aMat.mNameLocal + " Anvil"                            , "Misc Tool Blocks"                    , 32050, 32720, MultiTileEntityAnvil.class                              ,                 0, 16, aUtilMetal     , UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS,   1.0F, NBT_RESISTANCE,   6.0F, NBT_COLOR, UT.Code.getRGBInt(aMat.fRGBaSolid)                           , NBT_DURABILITY,           800000L), "III", "hI ", "III", 'I', OP.ingot.dat(aMat));
		aMat = MT.Bronze;           aRegistry.add(aMat.mNameLocal + " Anvil"                            , "Misc Tool Blocks"                    , 32028, 32720, MultiTileEntityAnvil.class                              ,                 0, 16, aUtilMetal     , UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS,   1.0F, NBT_RESISTANCE,   6.0F, NBT_COLOR, UT.Code.getRGBInt(aMat.fRGBaSolid)                           , NBT_DURABILITY,          1000000L), "III", "hI ", "III", 'I', OP.ingot.dat(aMat));
		aMat = MT.Syrmorite;        aRegistry.add(aMat.mNameLocal + " Anvil"                            , "Misc Tool Blocks"                    , 32029, 32720, MultiTileEntityAnvil.class                              ,                 0, 16, aUtilMetal     , UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS,   1.0F, NBT_RESISTANCE,   6.0F, NBT_COLOR, UT.Code.getRGBInt(aMat.fRGBaSolid)                           , NBT_DURABILITY,          2000000L), "III", "hI ", "III", 'I', OP.ingot.dat(aMat));
		aMat = MT.IronWood;         aRegistry.add(aMat.mNameLocal + " Anvil"                            , "Misc Tool Blocks"                    , 32030, 32720, MultiTileEntityAnvil.class                              ,                 0, 16, aUtilWood      , UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS,   1.0F, NBT_RESISTANCE,   6.0F, NBT_COLOR, UT.Code.getRGBInt(aMat.fRGBaSolid)                           , NBT_DURABILITY,          7500000L), "III", "hI ", "III", 'I', OP.ingot.dat(aMat));
		aMat = ANY.Steel;           aRegistry.add(aMat.mNameLocal + " Anvil"                            , "Misc Tool Blocks"                    , 32031, 32720, MultiTileEntityAnvil.class                              ,                 0, 16, aUtilMetal     , UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS,   1.0F, NBT_RESISTANCE,   6.0F, NBT_COLOR, UT.Code.getRGBInt(aMat.fRGBaSolid)                           , NBT_DURABILITY,         10000000L), "III", "hI ", "III", 'I', OP.ingot.dat(aMat));
		aMat = MT.Desh;             aRegistry.add(aMat.mNameLocal + " Anvil"                            , "Misc Tool Blocks"                    , 32071, 32720, MultiTileEntityAnvil.class                              ,                 0, 16, aUtilMetal     , UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS,   1.0F, NBT_RESISTANCE,   6.0F, NBT_COLOR, UT.Code.getRGBInt(aMat.fRGBaSolid)                           , NBT_DURABILITY,         12500000L), "III", "hI ", "III", 'I', OP.ingot.dat(aMat));
		aMat = MT.Thaumium;         aRegistry.add(aMat.mNameLocal + " Anvil"                            , "Misc Tool Blocks"                    , 32032, 32720, MultiTileEntityAnvil.class                              ,                 0, 16, aUtilMetal     , UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS,   1.0F, NBT_RESISTANCE,   6.0F, NBT_COLOR, UT.Code.getRGBInt(aMat.fRGBaSolid)                           , NBT_DURABILITY,         25000000L), "III", "hI ", "III", 'I', OP.ingot.dat(aMat));
		aMat = MT.Manasteel;        aRegistry.add(aMat.mNameLocal + " Anvil"                            , "Misc Tool Blocks"                    , 32033, 32720, MultiTileEntityAnvil.class                              ,                 0, 16, aUtilMetal     , UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS,   1.0F, NBT_RESISTANCE,   6.0F, NBT_COLOR, UT.Code.getRGBInt(aMat.fRGBaSolid)                           , NBT_DURABILITY,         25000000L), "III", "hI ", "III", 'I', OP.ingot.dat(aMat));
		aMat = MT.BlackSteel;       aRegistry.add(aMat.mNameLocal + " Anvil"                            , "Misc Tool Blocks"                    , 32034, 32720, MultiTileEntityAnvil.class                              ,                 0, 16, aUtilMetal     , UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS,   1.0F, NBT_RESISTANCE,   6.0F, NBT_COLOR, UT.Code.getRGBInt(aMat.fRGBaSolid)                           , NBT_DURABILITY,         30000000L), "III", "hI ", "III", 'I', OP.ingot.dat(aMat));
		aMat = MT.RedSteel;         aRegistry.add(aMat.mNameLocal + " Anvil"                            , "Misc Tool Blocks"                    , 32035, 32720, MultiTileEntityAnvil.class                              ,                 0, 16, aUtilMetal     , UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS,   1.0F, NBT_RESISTANCE,   6.0F, NBT_COLOR, UT.Code.getRGBInt(aMat.fRGBaSolid)                           , NBT_DURABILITY,         40000000L), "III", "hI ", "III", 'I', OP.ingot.dat(aMat));
		aMat = MT.BlueSteel;        aRegistry.add(aMat.mNameLocal + " Anvil"                            , "Misc Tool Blocks"                    , 32036, 32720, MultiTileEntityAnvil.class                              ,                 0, 16, aUtilMetal     , UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS,   1.0F, NBT_RESISTANCE,   6.0F, NBT_COLOR, UT.Code.getRGBInt(aMat.fRGBaSolid)                           , NBT_DURABILITY,         50000000L), "III", "hI ", "III", 'I', OP.ingot.dat(aMat));
		aMat = MT.VanadiumSteel;    aRegistry.add(aMat.mNameLocal + " Anvil"                            , "Misc Tool Blocks"                    , 32037, 32720, MultiTileEntityAnvil.class                              ,                 0, 16, aUtilMetal     , UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS,   1.0F, NBT_RESISTANCE,   6.0F, NBT_COLOR, UT.Code.getRGBInt(aMat.fRGBaSolid)                           , NBT_DURABILITY,         70000000L), "III", "hI ", "III", 'I', OP.ingot.dat(aMat));
		aMat = MT.Octine;           aRegistry.add(aMat.mNameLocal + " Anvil"                            , "Misc Tool Blocks"                    , 32038, 32720, MultiTileEntityAnvil.class                              ,                 0, 16, aUtilMetal     , UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS,   1.0F, NBT_RESISTANCE,   6.0F, NBT_COLOR, UT.Code.getRGBInt(aMat.fRGBaSolid)                           , NBT_DURABILITY,         80000000L), "III", "hI ", "III", 'I', OP.ingot.dat(aMat));
		aMat = MT.FierySteel;       aRegistry.add(aMat.mNameLocal + " Anvil"                            , "Misc Tool Blocks"                    , 32039, 32720, MultiTileEntityAnvil.class                              ,                 0, 16, aUtilMetal     , UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS,   1.0F, NBT_RESISTANCE,   6.0F, NBT_COLOR, UT.Code.getRGBInt(aMat.fRGBaSolid)                           , NBT_DURABILITY,         90000000L), "III", "hI ", "III", 'I', OP.ingot.dat(aMat));
		aMat = MT.Ti;               aRegistry.add(aMat.mNameLocal + " Anvil"                            , "Misc Tool Blocks"                    , 32040, 32720, MultiTileEntityAnvil.class                              ,                 0, 16, aUtilMetal     , UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS,   1.0F, NBT_RESISTANCE,   6.0F, NBT_COLOR, UT.Code.getRGBInt(aMat.fRGBaSolid)                           , NBT_DURABILITY,        100000000L), "III", "hI ", "III", 'I', OP.ingot.dat(aMat));
		aMat = MT.Terrasteel;       aRegistry.add(aMat.mNameLocal + " Anvil"                            , "Misc Tool Blocks"                    , 32041, 32720, MultiTileEntityAnvil.class                              ,                 0, 16, aUtilMetal     , UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS,   1.0F, NBT_RESISTANCE,   6.0F, NBT_COLOR, UT.Code.getRGBInt(aMat.fRGBaSolid)                           , NBT_DURABILITY,        200000000L), "III", "hI ", "III", 'I', OP.ingot.dat(aMat));
		aMat = MT.VoidMetal;        aRegistry.add(aMat.mNameLocal + " Anvil"                            , "Misc Tool Blocks"                    , 32042, 32720, MultiTileEntityAnvil.class                              ,                 0, 16, aUtilMetal     , UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS,   1.0F, NBT_RESISTANCE,   6.0F, NBT_COLOR, UT.Code.getRGBInt(aMat.fRGBaSolid)                           , NBT_DURABILITY,        300000000L), "III", "hI ", "III", 'I', OP.ingot.dat(aMat));
		aMat = MT.TitaniumGold;     aRegistry.add(aMat.mNameLocal + " Anvil"                            , "Misc Tool Blocks"                    , 32043, 32720, MultiTileEntityAnvil.class                              ,                 0, 16, aUtilMetal     , UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS,   1.0F, NBT_RESISTANCE,   6.0F, NBT_COLOR, UT.Code.getRGBInt(aMat.fRGBaSolid)                           , NBT_DURABILITY,        400000000L), "III", "hI ", "III", 'I', OP.ingot.dat(aMat));
		aMat = MT.TungstenSteel;    aRegistry.add(aMat.mNameLocal + " Anvil"                            , "Misc Tool Blocks"                    , 32044, 32720, MultiTileEntityAnvil.class                              ,                 0, 16, aUtilMetal     , UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS,   1.0F, NBT_RESISTANCE,   6.0F, NBT_COLOR, UT.Code.getRGBInt(aMat.fRGBaSolid)                           , NBT_DURABILITY,       1000000000L), "III", "hI ", "III", 'I', OP.ingot.dat(aMat));
		aMat = ANY.W;               aRegistry.add(aMat.mNameLocal + " Anvil"                            , "Misc Tool Blocks"                    , 32045, 32720, MultiTileEntityAnvil.class                              ,                 0, 16, aUtilMetal     , UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS,   1.0F, NBT_RESISTANCE,   6.0F, NBT_COLOR, UT.Code.getRGBInt(aMat.fRGBaSolid)                           , NBT_DURABILITY,       2000000000L), "III", "hI ", "III", 'I', OP.ingot.dat(aMat));
		aMat = MT.Ir;               aRegistry.add(aMat.mNameLocal + " Anvil"                            , "Misc Tool Blocks"                    , 32046, 32720, MultiTileEntityAnvil.class                              ,                 0, 16, aUtilMetal     , UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS,   1.0F, NBT_RESISTANCE,   6.0F, NBT_COLOR, UT.Code.getRGBInt(aMat.fRGBaSolid)                           , NBT_DURABILITY,      10000000000L), "III", "hI ", "III", 'I', OP.ingot.dat(aMat));
		aMat = MT.GaiaSpirit;       aRegistry.add(aMat.mNameLocal + " Anvil"                            , "Misc Tool Blocks"                    , 32047, 32720, MultiTileEntityAnvil.class                              ,                 0, 16, aUtilMetal     , UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS,   1.0F, NBT_RESISTANCE,   6.0F, NBT_COLOR, UT.Code.getRGBInt(aMat.fRGBaSolid)                           , NBT_DURABILITY,     100000000000L), "III", "hI ", "III", 'I', OP.ingot.dat(aMat));
		aMat = MT.Ad;               aRegistry.add(aMat.mNameLocal + " Anvil"                            , "Misc Tool Blocks"                    , 32048, 32720, MultiTileEntityAnvil.class                              ,                 0, 16, aUtilMetal     , UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS,   1.0F, NBT_RESISTANCE,   6.0F, NBT_COLOR, UT.Code.getRGBInt(aMat.fRGBaSolid)                           , NBT_DURABILITY,    1000000000000L), "III", "hI ", "III", 'I', OP.ingot.dat(aMat));
		aMat = MT.Draconium;        aRegistry.add(aMat.mNameLocal + " Anvil"                            , "Misc Tool Blocks"                    , 32049, 32720, MultiTileEntityAnvil.class                              ,                 0, 16, aUtilMetal     , UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS,   1.0F, NBT_RESISTANCE,   6.0F, NBT_COLOR, UT.Code.getRGBInt(aMat.fRGBaSolid)                           , NBT_DURABILITY,    1000000000000L), "III", "hI ", "III", 'I', OP.ingot.dat(aMat));
		aMat = MT.DraconiumAwakened;aRegistry.add(aMat.mNameLocal + " Anvil"                            , "Misc Tool Blocks"                    , 32068, 32720, MultiTileEntityAnvil.class                              ,                 0, 16, aUtilMetal     , UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS,   1.0F, NBT_RESISTANCE,   6.0F, NBT_COLOR, UT.Code.getRGBInt(aMat.fRGBaSolid)                           , NBT_DURABILITY,    2000000000000L), "III", "hI ", "III", 'I', OP.ingot.dat(aMat));
		aMat = MT.Infinity;         aRegistry.add(aMat.mNameLocal + " Anvil"                            , "Misc Tool Blocks"                    , 32069, 32720, MultiTileEntityAnvil.class                              ,                 0, 16, aUtilMetal     , UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS,   1.0F, NBT_RESISTANCE,   6.0F, NBT_COLOR, UT.Code.getRGBInt(aMat.fRGBaSolid)                           , NBT_DURABILITY, 1000000000000000L), "III", "hI ", "III", 'I', OP.ingot.dat(aMat));

		aMat = MT.Leather;          aRegistry.add("Resin/Sap Bag"                                       , "Misc Tool Blocks"                    , 32736, 32720, MultiTileEntitySapBag.class                             ,                 0, 64, aUtilWool      , UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS,   0.5F, NBT_RESISTANCE,   3.0F, NBT_COLOR, UT.Code.getRGBInt(aMat.fRGBaSolid), NBT_TANK_CAPACITY, 8000), "SSS", "LsL", "LLL", 'L', OD.itemLeather, 'S', OP.stick.dat(ANY.Wood));
		aMat = ANY.Wood;            aRegistry.add("Bumbliary"                                           , "Misc Tool Blocks"                    , 32741, 32720, MultiTileEntityBumbliary.class                          ,                 0, 16, aWooden        , UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS,   5.0F, NBT_RESISTANCE,   5.0F, NBT_COLOR, UT.Code.getRGBInt(aMat.fRGBaSolid), NBT_RECIPEMAP, RM.BumbleQueens), "PPP", "PBP", "TdT", 'B', aRegistry.getItem(32755), 'P', OP.plate.dat(MT.WoodSealed), 'T', OP.screw.dat(ANY.Iron));
		aMat = MT.StainlessSteel;   aRegistry.add("Advanced Bumbliary"                                  , "Misc Tool Blocks"                    , 32007, 32720, MultiTileEntityBumbliaryAdvanced.class                  ,                 0, 16, aWooden        , UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS,   6.0F, NBT_RESISTANCE,   6.0F, NBT_COLOR, UT.Code.getRGBInt(aMat.fRGBaSolid), NBT_RECIPEMAP, RM.BumbleQueens), "PRP", "HBH", "PCP", 'B', aRegistry.getItem(32741), 'P', OP.plate.dat(aMat), 'C', OD.craftingChest, 'R', OD.beeCombCrossbred, 'H', OD.container1000honey);

		aMat = ANY.Steel;           aRegistry.add("Dust Funnel"                                         , "Misc Tool Blocks"                    , 32704, 32720, MultiTileEntityDustFunnel.class                         ,                 0, 16, aUtilMetal     , UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS,   1.0F, NBT_RESISTANCE,   6.0F, NBT_COLOR, UT.Code.getRGBInt(aMat.fRGBaSolid)                                ), "hws", "PHP", "SPS", 'P', OP.plate.dat(ANY.Iron), 'S', OP.stick.dat(ANY.Iron), 'H', Blocks.hopper);
		aMat = ANY.Steel;           aRegistry.add("Grindstone"                                          , "Misc Tool Blocks"                    , 32703, 32720, MultiTileEntityGrindStone.class                         ,                 0, 16, aUtilMetal     , UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS,   1.0F, NBT_RESISTANCE,   6.0F, NBT_COLOR, UT.Code.getRGBInt(aMat.fRGBaSolid), NBT_RECIPEMAP, RM.Sharpening  ), "SAS", "SwS", "PPP", 'P', OP.plateDouble.dat(ANY.Iron), 'S', OP.stickLong.dat(ANY.Iron), 'A', OP.stick.dat(ANY.Iron));
		aMat = ANY.Steel;           aRegistry.add("Sifting Table"                                       , "Misc Tool Blocks"                    , 32702, 32720, MultiTileEntitySiftingTable.class                       ,                 0, 16, aUtilMetal     , UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS,   1.0F, NBT_RESISTANCE,   6.0F, NBT_COLOR, UT.Code.getRGBInt(aMat.fRGBaSolid), NBT_RECIPEMAP, RM.Sifting     ), "TdT", "WxW", "SPS", 'P', OP.plateDouble.dat(ANY.Iron), 'S', OP.stickLong.dat(ANY.Iron), 'T', OP.screw.dat(ANY.Iron), 'W', OP.wireFine.dat(ANY.Iron));

		aMat = MT.Ceramic;          aRegistry.add("Universal Plant Pot"                                 , "Misc Tool Blocks"                    , 32065, 32720, MultiTileEntityPlantPot.class                           ,                 0, 16, aUtilStone     , UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS,   1.0F, NBT_RESISTANCE,   5.0F, NBT_COLOR, UT.Code.getRGBInt(aMat.fRGBaSolid)), "SEN", "GyC", "MBD", 'B', OD.craftingHardenedClay, 'G', OP.dust.dat(ANY.Stone), 'C', OP.dust.dat(ANY.Clay), 'E', OP.dust.dat(MT.Endstone), 'S', Blocks.sand, 'D', OD.itemMud, 'M', "listAllmushroom", 'N', Blocks.soul_sand);

		aMat = ANY.Steel;           aRegistry.add("Ender Garbage Dump"                                  , "Misc Tool Blocks"                    , 32710, 32720, MultiTileEntityEnderGarbageDump.class                   , aMat.mToolQuality, 16, aMachine       , UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS,   6.0F, NBT_RESISTANCE,   6.0F, NBT_COLOR, UT.Code.getRGBInt(aMat.fRGBaSolid)));
		aMat = ANY.Steel;           aRegistry.add("Ender Garbage Bin"                                   , "Misc Tool Blocks"                    , 32709, 32720, MultiTileEntityEnderGarbageBin.class                    ,                 0, 16, aUtilStone     , UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS,   0.5F, NBT_RESISTANCE,   6.0F, NBT_COLOR, UT.Code.getRGBInt(aMat.fRGBaSolid)), "OOO", "OXO", "PPP", 'O', OP.plate.dat(MT.Obsidian), 'P', OP.plate.dat(ANY.Iron), 'X', OP.gem.dat(MT.EnderEye));

		aMat = MT.TinAlloy;         aRegistry.add("Advanced Button"                                     , "Misc Tool Blocks"                    , 32711, 32720, MultiTileEntityButtonAdvanced.class                     , aMat.mToolQuality, 64, aMachine       , UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS,   6.0F, NBT_RESISTANCE,   6.0F, NBT_COLOR, UT.Code.getRGBInt(aMat.fRGBaSolid)), "dPT", "WLW", "TSw", 'W', OP.wireFine.dat(MT.RedAlloy), 'L', OP.wireFine.dat(MT.Lumium), 'P', OP.plateTiny.dat(aMat), 'T', OP.screw.dat(aMat), 'S', OP.springSmall.dat(aMat));

		aMat = MT.Red;              aRegistry.add("Dynamite"                                            , "Misc Tool Blocks"                    , 32713, 32720, MultiTileEntityDynamite.class                           ,                 0, 64, aTNT           , UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS,   0.0F, NBT_RESISTANCE,   0.0F, NBT_COLOR, UT.Code.getRGBInt(aMat.fRGBaSolid), NBT_QUALITY, 10, NBT_FORTUNE, 2, NBT_FLAMMABILITY, 300));
		aMat = MT.Purple;           aRegistry.add("Strong Dynamite"                                     , "Misc Tool Blocks"                    , 32712, 32720, MultiTileEntityDynamite.class                           ,                 0, 64, aTNT           , UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS,   0.0F, NBT_RESISTANCE,   0.0F, NBT_COLOR, UT.Code.getRGBInt(aMat.fRGBaSolid), NBT_QUALITY, 40, NBT_FORTUNE, 2, NBT_FLAMMABILITY, 300));

		aMat = ANY.Steel;           aRegistry.add("Coinage Mold"                                        , "Misc Tool Blocks"                    , 32701, 32720, MultiTileEntityMoldCoinage.class                        , aMat.mToolQuality, 16, aMetal         , UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS,   6.0F, NBT_RESISTANCE,   6.0F, NBT_COLOR, UT.Code.getRGBInt(aMat.fRGBaSolid)), "yhf", "PPP", "III", 'P', OP.plateDouble.dat(ANY.Iron), 'I', OP.ingot.dat(ANY.Iron));
									aRegistry.add("Coin"                                                , "Coins"                               , 32700, 32700, MultiTileEntityCoin.class                               ,                 0, 64, aMetalChips    , null);

		ItemsGT.DEBUG_ITEMS.add(aRegistry.getItem(32710));
		ItemsGT.ILLEGAL_DROPS.add(aRegistry.getItem(32710));
		GarbageGT.BLACKLIST.add(aRegistry.getItem(32710));

		IL.Rope.set(aRegistry.getItem(32011));
		IL.Rope_Silk.set(aRegistry.getItem(32012));
		IL.Rope_Grass.set(aRegistry.getItem(32013));
		IL.Rope_Plastic.set(aRegistry.getItem(32014));
		IL.Porcelain_Cup.set(aRegistry.getItem(32739), new OreDictItemData(MT.Porcelain, U*1));
		IL.Measuring_Pot.set(aRegistry.getItem(32738), new OreDictItemData(MT.Ceramic, U*4));
		IL.Ceramic_Jug.set(aRegistry.getItem(32740), new OreDictItemData(MT.Ceramic, U*6));
		IL.PlasticCan.set(aRegistry.getItem(32715), new OreDictItemData(MT.Plastic, U*6));
		IL.Dynamite.set(aRegistry.getItem(32713), new OreDictItemData(MT.Dynamite, U));
		IL.Dynamite_Strong.set(aRegistry.getItem(32712), new OreDictItemData(MT.Dynamite, U*2));

		CR.shapeless(aRegistry.getItem(32711), CR.DEF_NCC, new Object[] {aRegistry.getItem(32711)});
		RM.add_smelting(IL.Measuring_Pot_Raw.get(1), IL.Measuring_Pot.get(1));
		RM.add_smelting(IL.Ceramic_Jug_Raw.get(1), IL.Ceramic_Jug.get(1));
	}
}
